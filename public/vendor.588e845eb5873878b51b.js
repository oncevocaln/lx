webpackJsonp([1], [,
    ,
    ,
    function (module, exports, __webpack_require__) {
        __webpack_require__(615),
        module.exports = angular
    },,,,,
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        (function (global) {
            function identity(x) {
                return x
            }
            function noop() {}
            function createProxyFunctions(source, target, bind, fnNames, latebind) {
                void 0 === latebind && (latebind = !1);
                var bindFunction = function (fnName) {
                        return source()[fnName].bind(bind())
                    },
                    makeLateRebindFn = function (fnName) {
                        return function lateRebindFunction() {
                            return target[fnName] = bindFunction(fnName),
                            target[fnName].apply(null, arguments)
                        }
                    };
                return fnNames = fnNames || Object.keys(source()),
                fnNames.reduce(function (acc, name) {
                    return acc[name] = latebind
                        ? makeLateRebindFn(name)
                        : bindFunction(name),
                    acc
                }, target)
            }
            function _inArray(array, obj) {
                return -1 !== array.indexOf(obj)
            }
            function _removeFrom(array, obj) {
                var idx = array.indexOf(obj);
                return idx >= 0 && array.splice(idx, 1),
                array
            }
            function _pushTo(arr, val) {
                return arr.push(val),
                val
            }
            function defaults(opts) {
                for (var defaultsList = [], _i = 1; _i < arguments.length; _i++) 
                    defaultsList[_i - 1] = arguments[_i];
                var defaultVals = extend.apply(void 0, __spreadArrays([
                    {}
                ], defaultsList.reverse()));
                return extend(defaultVals, pick(opts || {}, Object.keys(defaultVals)))
            }
            function ancestors(first, second) {
                var path = [];
                for (var n in first.path) {
                    if (first.path[n] !== second.path[n]) 
                        break;
                    path.push(first.path[n])
                }
                return path
            }
            function pick(obj, propNames) {
                var objCopy = {};
                for (var _prop in obj) 
                    -1 !== propNames.indexOf(_prop) && (objCopy[_prop] = obj[_prop]);
                return objCopy
            }
            function omit(obj, propNames) {
                return Object
                    .keys(obj)
                    .filter(Object(__WEBPACK_IMPORTED_MODULE_1__hof__.i)(inArray(propNames)))
                    .reduce(function (acc, key) {
                        return acc[key] = obj[key],
                        acc
                    }, {})
            }
            function pluck(collection, propName) {
                return map(collection, Object(__WEBPACK_IMPORTED_MODULE_1__hof__.n)(propName))
            }
            function filter(collection, callback) {
                var arr = Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.a)(collection),
                    result = arr
                        ? []
                        : {},
                    accept = arr
                        ? function (x) {
                            return result.push(x)
                        }
                        : function (x, key) {
                            return result[key] = x
                        };
                return forEach(collection, function (item, i) {
                    callback(item, i) && accept(item, i)
                }),
                result
            }
            function find(collection, callback) {
                var result;
                return forEach(collection, function (item, i) {
                    result || callback(item, i) && (result = item)
                }),
                result
            }
            function map(collection, callback, target) {
                return target = target || (
                    Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.a)(
                            collection
                        )
                        ? []
                        : {}
                ),
                forEach(collection, function (item, i) {
                    return target[i] = callback(item, i)
                }),
                target
            }
            function pushR(arr, obj) {
                return arr.push(obj),
                arr
            }
            function assertFn(predicateOrMap, errMsg) {
                return void 0 === errMsg && (errMsg = "assert failure"),
                function (obj) {
                    var result = predicateOrMap(obj);
                    if (!result) 
                        throw new Error(
                            Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.d)(errMsg)
                                ? errMsg(obj)
                                : errMsg
                        );
                    return result
                }
            }
            function arrayTuples() {
                for (var args = [], _i = 0; _i < arguments.length; _i++) 
                    args[_i] = arguments[_i];
                if (0 === args.length) 
                    return [];
                for (
                    var maxArrayLen = args.reduce(function (min, arr) {
                        return Math.min(arr.length, min)
                    }, 9007199254740991),
                    result = [],
                    _loop_1 = function (i) {
                        switch (args.length) {
                            case 1:
                                result.push([args[0][i]]);
                                break;
                            case 2:
                                result.push([
                                    args[0][i],
                                    args[1][i]
                                ]);
                                break;
                            case 3:
                                result.push([
                                    args[0][i],
                                    args[1][i],
                                    args[2][i]
                                ]);
                                break;
                            case 4:
                                result.push([
                                    args[0][i],
                                    args[1][i],
                                    args[2][i],
                                    args[3][i]
                                ]);
                                break;
                            default:
                                result.push(args.map(function (array) {
                                    return array[i]
                                }))
                        }
                    },
                    i = 0; i < maxArrayLen; i++
                ) 
                    _loop_1(i);
                return result
            }
            function applyPairs(memo, keyValTuple) {
                var key,
                    value;
                if (Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.a)(keyValTuple) && (
                    key = keyValTuple[0],
                    value = keyValTuple[1]
                ), !Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.l)(key)) 
                    throw new Error("invalid parameters to applyPairs");
                return memo[key] = value,
                memo
            }
            function tail(arr) {
                return arr.length && arr[arr.length - 1] || void 0
            }
            function copy(src, dest) {
                return dest && Object
                    .keys(dest)
                    .forEach(function (key) {
                        return delete dest[key]
                    }),
                dest || (dest = {}),
                extend(dest, src)
            }
            function _forEach(obj, cb, _this) {
                if (Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.a)(obj)) 
                    return obj.forEach(cb, _this);
                Object
                    .keys(obj)
                    .forEach(function (key) {
                        return cb(obj[key], key)
                    })
            }
            function _extend(toObj) {
                for (var i = 1; i < arguments.length; i++) {
                    var obj = arguments[i];
                    if (obj) 
                        for (var keys = Object.keys(obj), j = 0; j < keys.length; j++) 
                            toObj[keys[j]] = obj[keys[j]]
                }
                return toObj
            }
            function _equals(o1, o2) {
                if (o1 === o2) 
                    return !0;
                if (null === o1 || null === o2) 
                    return !1;
                if (o1 !== o1 && o2 !== o2) 
                    return !0;
                var t1 = typeof o1;
                if (t1 !== typeof o2 || "object" !== t1) 
                    return !1;
                var tup = [o1, o2];
                if (Object(__WEBPACK_IMPORTED_MODULE_1__hof__.a)(
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.a
                )(tup)) 
                    return _arraysEq(o1, o2);
                if (Object(__WEBPACK_IMPORTED_MODULE_1__hof__.a)(
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.b
                )(tup)) 
                    return o1.getTime() === o2.getTime();
                if (Object(__WEBPACK_IMPORTED_MODULE_1__hof__.a)(
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.k
                )(tup)) 
                    return o1.toString() === o2.toString();
                if (Object(__WEBPACK_IMPORTED_MODULE_1__hof__.a)(
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.d
                )(tup)) 
                    return !0;
                if ([__WEBPACK_IMPORTED_MODULE_0__predicates__.d, __WEBPACK_IMPORTED_MODULE_0__predicates__.a, __WEBPACK_IMPORTED_MODULE_0__predicates__.b, __WEBPACK_IMPORTED_MODULE_0__predicates__.k].map(__WEBPACK_IMPORTED_MODULE_1__hof__.c).reduce(function (b, fn) {
                    return b || !!fn(tup)
                }, !1)) 
                    return !1;
                var keys = {};
                for (var key in o1) {
                    if (!_equals(o1[key], o2[key])) 
                        return !1;
                    keys[key] = !0
                }
                for (var key in o2) 
                    if (!keys[key]) 
                        return !1;
            return !0
            }
            function _arraysEq(a1, a2) {
                return a1.length === a2.length && arrayTuples(a1, a2).reduce(function (b, t) {
                    return b && _equals(t[0], t[1])
                }, !0)
            }
            __webpack_require__.d(__webpack_exports__, "M", function () {
                return root
            }),
            __webpack_require__.d(__webpack_exports__, "x", function () {
                return fromJson
            }),
            __webpack_require__.d(__webpack_exports__, "Q", function () {
                return toJson
            }),
            __webpack_require__.d(__webpack_exports__, "w", function () {
                return forEach
            }),
            __webpack_require__.d(__webpack_exports__, "r", function () {
                return extend
            }),
            __webpack_require__.d(__webpack_exports__, "q", function () {
                return equals
            }),
            __webpack_exports__.y = identity,
            __webpack_exports__.E = noop,
            __webpack_exports__.n = createProxyFunctions,
            __webpack_require__.d(__webpack_exports__, "A", function () {
                return inherit
            }),
            __webpack_require__.d(__webpack_exports__, "z", function () {
                return inArray
            }),
            __webpack_exports__.b = _inArray,
            __webpack_require__.d(__webpack_exports__, "L", function () {
                return removeFrom
            }),
            __webpack_exports__.d = _removeFrom,
            __webpack_require__.d(__webpack_exports__, "K", function () {
                return pushTo
            }),
            __webpack_exports__.c = _pushTo,
            __webpack_require__.d(__webpack_exports__, "p", function () {
                return deregAll
            }),
            __webpack_exports__.o = defaults,
            __webpack_require__.d(__webpack_exports__, "D", function () {
                return mergeR
            }),
            __webpack_exports__.f = ancestors,
            __webpack_exports__.H = pick,
            __webpack_exports__.F = omit,
            __webpack_exports__.I = pluck,
            __webpack_exports__.s = filter,
            __webpack_exports__.t = find,
            __webpack_require__.d(__webpack_exports__, "C", function () {
                return mapObj
            }),
            __webpack_exports__.B = map,
            __webpack_require__.d(__webpack_exports__, "U", function () {
                return values
            }),
            __webpack_require__.d(__webpack_exports__, "e", function () {
                return allTrueR
            }),
            __webpack_require__.d(__webpack_exports__, "g", function () {
                return anyTrueR
            }),
            __webpack_require__.d(__webpack_exports__, "T", function () {
                return unnestR
            }),
            __webpack_require__.d(__webpack_exports__, "v", function () {
                return flattenR
            }),
            __webpack_exports__.J = pushR,
            __webpack_require__.d(__webpack_exports__, "R", function () {
                return uniqR
            }),
            __webpack_require__.d(__webpack_exports__, "S", function () {
                return unnest
            }),
            __webpack_require__.d(__webpack_exports__, "u", function () {
                return flatten
            }),
            __webpack_require__.d(__webpack_exports__, "l", function () {
                return assertPredicate
            }),
            __webpack_require__.d(__webpack_exports__, "k", function () {
                return assertMap
            }),
            __webpack_exports__.j = assertFn,
            __webpack_require__.d(__webpack_exports__, "G", function () {
                return pairs
            }),
            __webpack_exports__.i = arrayTuples,
            __webpack_exports__.h = applyPairs,
            __webpack_exports__.P = tail,
            __webpack_exports__.m = copy,
            __webpack_exports__.a = _extend,
            __webpack_require__.d(__webpack_exports__, "N", function () {
                return silenceUncaughtInPromise
            }),
            __webpack_require__.d(__webpack_exports__, "O", function () {
                return silentRejection
            });
            var __WEBPACK_IMPORTED_MODULE_0__predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_1__hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_2__coreservices__ = __webpack_require__(20),
                __spreadArrays = this && this.__spreadArrays || function () {
                    for (var s = 0, i = 0, il = arguments.length; i < il; i++) 
                        s += arguments[i].length;
                    for (var r = Array(s), k = 0, i = 0; i < il; i++) 
                        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) 
                            r[k] = a[j];
                return r
                },
                root = "object" == typeof self && self.self === self && self || "object" == typeof global && global.global === global && global || this,
                angular = root.angular || {},
                fromJson = angular.fromJson || JSON
                    .parse
                    .bind(JSON),
                toJson = angular.toJson || JSON
                    .stringify
                    .bind(JSON),
                forEach = angular.forEach || _forEach,
                extend = Object.assign || _extend,
                equals = angular.equals || _equals,
                inherit = function (parent, extra) {
                    return extend(Object.create(parent), extra)
                },
                inArray = Object(__WEBPACK_IMPORTED_MODULE_1__hof__.e)(_inArray),
                removeFrom = Object(__WEBPACK_IMPORTED_MODULE_1__hof__.e)(_removeFrom),
                pushTo = Object(__WEBPACK_IMPORTED_MODULE_1__hof__.e)(_pushTo),
                deregAll = function (functions) {
                    return functions
                        .slice()
                        .forEach(function (fn) {
                            "function" == typeof fn && fn(),
                            removeFrom(functions, fn)
                        })
                },
                mergeR = function (memo, item) {
                    return extend(memo, item)
                },
                mapObj = map,
                values = function (obj) {
                    return Object
                        .keys(obj)
                        .map(function (key) {
                            return obj[key]
                        })
                },
                allTrueR = function (memo, elem) {
                    return memo && elem
                },
                anyTrueR = function (memo, elem) {
                    return memo || elem
                },
                unnestR = function (memo, elem) {
                    return memo.concat(elem)
                },
                flattenR = function (memo, elem) {
                    return Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.a)(elem)
                        ? memo.concat(elem.reduce(flattenR, []))
                        : pushR(memo, elem)
                },
                uniqR = function (acc, token) {
                    return inArray(acc, token)
                        ? acc
                        : pushR(acc, token)
                },
                unnest = function (arr) {
                    return arr.reduce(unnestR, [])
                },
                flatten = function (arr) {
                    return arr.reduce(flattenR, [])
                },
                assertPredicate = assertFn,
                assertMap = assertFn,
                pairs = function (obj) {
                    return Object
                        .keys(obj)
                        .map(function (key) {
                            return [
                                key, obj[key]
                            ]
                        })
                },
                silenceUncaughtInPromise = function (promise) {
                    return promise.catch(function (e) {
                        return 0
                    }) && promise
                },
                silentRejection = function (error) {
                    return silenceUncaughtInPromise(
                        __WEBPACK_IMPORTED_MODULE_2__coreservices__.b.$q.reject(error)
                    )
                }
        }).call(__webpack_exports__, __webpack_require__(30))
    },,
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function isInjectable(val) {
            if (isArray(val) && val.length) {
                var head = val.slice(0, -1),
                    tail = val.slice(-1);
                return !(
                    head.filter(Object(__WEBPACK_IMPORTED_MODULE_0__hof__.i)(isString)).length || tail.filter(Object(__WEBPACK_IMPORTED_MODULE_0__hof__.i)(
                        isFunction
                    )).length
                )
            }
            return isFunction(val)
        }
        __webpack_require__.d(__webpack_exports__, "m", function () {
            return isUndefined
        }),
        __webpack_require__.d(__webpack_exports__, "c", function () {
            return isDefined
        }),
        __webpack_require__.d(__webpack_exports__, "f", function () {
            return isNull
        }),
        __webpack_require__.d(__webpack_exports__, "g", function () {
            return isNullOrUndefined
        }),
        __webpack_require__.d(__webpack_exports__, "d", function () {
            return isFunction
        }),
        __webpack_require__.d(__webpack_exports__, "h", function () {
            return isNumber
        }),
        __webpack_require__.d(__webpack_exports__, "l", function () {
            return isString
        }),
        __webpack_require__.d(__webpack_exports__, "i", function () {
            return isObject
        }),
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return isArray
        }),
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return isDate
        }),
        __webpack_require__.d(__webpack_exports__, "k", function () {
            return isRegExp
        }),
        __webpack_exports__.e = isInjectable,
        __webpack_require__.d(__webpack_exports__, "j", function () {
            return isPromise
        });
        var __WEBPACK_IMPORTED_MODULE_0__hof__ = __webpack_require__(14),
            toStr = Object.prototype.toString,
            tis = function (t) {
                return function (x) {
                    return typeof x === t
                }
            },
            isUndefined = tis("undefined"),
            isDefined = Object(__WEBPACK_IMPORTED_MODULE_0__hof__.i)(isUndefined),
            isNull = function (o) {
                return null === o
            },
            isNullOrUndefined = Object(__WEBPACK_IMPORTED_MODULE_0__hof__.j)(
                isNull,
                isUndefined
            ),
            isFunction = tis("function"),
            isNumber = tis("number"),
            isString = tis("string"),
            isObject = function (x) {
                return null !== x && "object" == typeof x
            },
            isArray = Array.isArray,
            isDate = function (x) {
                return "[object Date]" === toStr.call(x)
            },
            isRegExp = function (x) {
                return "[object RegExp]" === toStr.call(x)
            },
            isPromise = Object(__WEBPACK_IMPORTED_MODULE_0__hof__.b)(
                isObject,
                Object(__WEBPACK_IMPORTED_MODULE_0__hof__.m)(
                    Object(__WEBPACK_IMPORTED_MODULE_0__hof__.n)(
                        "then"
                    ),
                    isFunction
                )
            )
    },,,,
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function curry(fn) {
            return function curried() {
                if (arguments.length >= fn.length) 
                    return fn.apply(this, arguments);
                var args = Array
                    .prototype
                    .slice
                    .call(arguments);
                return curried
                    .bind
                    .apply(curried, __spreadArrays([this], args))
            }
        }
        function compose() {
            var args = arguments,
                start = args.length - 1;
            return function () {
                for (var i = start, result = args[start].apply(this, arguments); i--;) 
                    result = args[i].call(this, result);
                return result
            }
        }
        function pipe() {
            for (var funcs = [], _i = 0; _i < arguments.length; _i++) 
                funcs[_i] = arguments[_i];
            return compose.apply(null, [].slice.call(arguments).reverse())
        }
        function and(fn1, fn2) {
            return function () {
                for (var args = [], _i = 0; _i < arguments.length; _i++) 
                    args[_i] = arguments[_i];
                return fn1.apply(null, args) && fn2.apply(null, args)
            }
        }
        function or(fn1, fn2) {
            return function () {
                for (var args = [], _i = 0; _i < arguments.length; _i++) 
                    args[_i] = arguments[_i];
                return fn1.apply(null, args) || fn2.apply(null, args)
            }
        }
        function invoke(fnName, args) {
            return function (obj) {
                return obj[fnName].apply(obj, args)
            }
        }
        function pattern(struct) {
            return function (x) {
                for (var i = 0; i < struct.length; i++) 
                    if (struct[i][0](x)) 
                        return struct[i][1](x)
            }
        }
        __webpack_exports__.e = curry,
        __webpack_exports__.d = compose,
        __webpack_exports__.m = pipe,
        __webpack_require__.d(__webpack_exports__, "n", function () {
            return prop
        }),
        __webpack_require__.d(__webpack_exports__, "o", function () {
            return propEq
        }),
        __webpack_require__.d(__webpack_exports__, "k", function () {
            return parse
        }),
        __webpack_require__.d(__webpack_exports__, "i", function () {
            return not
        }),
        __webpack_exports__.b = and,
        __webpack_exports__.j = or,
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return all
        }),
        __webpack_require__.d(__webpack_exports__, "c", function () {
            return any
        }),
        __webpack_require__.d(__webpack_exports__, "h", function () {
            return is
        }),
        __webpack_require__.d(__webpack_exports__, "f", function () {
            return eq
        }),
        __webpack_require__.d(__webpack_exports__, "p", function () {
            return val
        }),
        __webpack_exports__.g = invoke,
        __webpack_exports__.l = pattern;
        var __spreadArrays = this && this.__spreadArrays || function () {
                for (var s = 0, i = 0, il = arguments.length; i < il; i++) 
                    s += arguments[i].length;
                for (var r = Array(s), k = 0, i = 0; i < il; i++) 
                    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) 
                        r[k] = a[j];
            return r
            },
            prop = function (name) {
                return function (obj) {
                    return obj && obj[name]
                }
            },
            propEq = curry(function (name, _val, obj) {
                return obj && obj[name] === _val
            }),
            parse = function (name) {
                return pipe.apply(null, name.split(".").map(prop))
            },
            not = function (fn) {
                return function () {
                    for (var args = [], _i = 0; _i < arguments.length; _i++) 
                        args[_i] = arguments[_i];
                    return !fn.apply(null, args)
                }
            },
            all = function (fn1) {
                return function (arr) {
                    return arr.reduce(function (b, x) {
                        return b && !!fn1(x)
                    }, !0)
                }
            },
            any = function (fn1) {
                return function (arr) {
                    return arr.reduce(function (b, x) {
                        return b || !!fn1(x)
                    }, !1)
                }
            },
            is = function (ctor) {
                return function (obj) {
                    return null != obj && obj.constructor === ctor || obj instanceof ctor
                }
            },
            eq = function (value) {
                return function (other) {
                    return value === other
                }
            },
            val = function (v) {
                return function () {
                    return v
                }
            }
    },,,
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(8);
        __webpack_require__.d(__webpack_exports__, "e", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.a
        }),
        __webpack_require__.d(__webpack_exports__, "f", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.b
        }),
        __webpack_require__.d(__webpack_exports__, "g", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.c
        }),
        __webpack_require__.d(__webpack_exports__, "h", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.d
        }),
        __webpack_require__.d(__webpack_exports__, "j", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.e
        }),
        __webpack_require__.d(__webpack_exports__, "k", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.f
        }),
        __webpack_require__.d(__webpack_exports__, "n", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.g
        }),
        __webpack_require__.d(__webpack_exports__, "o", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.h
        }),
        __webpack_require__.d(__webpack_exports__, "p", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.i
        }),
        __webpack_require__.d(__webpack_exports__, "q", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.j
        }),
        __webpack_require__.d(__webpack_exports__, "r", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.k
        }),
        __webpack_require__.d(__webpack_exports__, "s", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.l
        }),
        __webpack_require__.d(__webpack_exports__, "v", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.m
        }),
        __webpack_require__.d(__webpack_exports__, "w", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.n
        }),
        __webpack_require__.d(__webpack_exports__, "y", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.o
        }),
        __webpack_require__.d(__webpack_exports__, "z", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.p
        }),
        __webpack_require__.d(__webpack_exports__, "B", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.q
        }),
        __webpack_require__.d(__webpack_exports__, "C", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.r
        }),
        __webpack_require__.d(__webpack_exports__, "D", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.s
        }),
        __webpack_require__.d(__webpack_exports__, "E", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.t
        }),
        __webpack_require__.d(__webpack_exports__, "F", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.u
        }),
        __webpack_require__.d(__webpack_exports__, "G", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.v
        }),
        __webpack_require__.d(__webpack_exports__, "I", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.w
        }),
        __webpack_require__.d(__webpack_exports__, "J", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.x
        }),
        __webpack_require__.d(__webpack_exports__, "M", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.y
        }),
        __webpack_require__.d(__webpack_exports__, "N", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.z
        }),
        __webpack_require__.d(__webpack_exports__, "O", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.A
        }),
        __webpack_require__.d(__webpack_exports__, "_7", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.B
        }),
        __webpack_require__.d(__webpack_exports__, "_8", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.C
        }),
        __webpack_require__.d(__webpack_exports__, "_10", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.D
        }),
        __webpack_require__.d(__webpack_exports__, "_11", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.E
        }),
        __webpack_require__.d(__webpack_exports__, "_13", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.F
        }),
        __webpack_require__.d(__webpack_exports__, "_16", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.G
        }),
        __webpack_require__.d(__webpack_exports__, "_19", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.H
        }),
        __webpack_require__.d(__webpack_exports__, "_21", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.I
        }),
        __webpack_require__.d(__webpack_exports__, "_24", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.J
        }),
        __webpack_require__.d(__webpack_exports__, "_25", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.K
        }),
        __webpack_require__.d(__webpack_exports__, "_26", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.L
        }),
        __webpack_require__.d(__webpack_exports__, "_27", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.M
        }),
        __webpack_require__.d(__webpack_exports__, "_29", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.N
        }),
        __webpack_require__.d(__webpack_exports__, "_30", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.O
        }),
        __webpack_require__.d(__webpack_exports__, "_37", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.P
        }),
        __webpack_require__.d(__webpack_exports__, "_38", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.Q
        }),
        __webpack_require__.d(__webpack_exports__, "_41", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.R
        }),
        __webpack_require__.d(__webpack_exports__, "_42", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.S
        }),
        __webpack_require__.d(__webpack_exports__, "_43", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.T
        }),
        __webpack_require__.d(__webpack_exports__, "_45", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common__.U
        });
        var __WEBPACK_IMPORTED_MODULE_1__coreservices__ = __webpack_require__(20);
        __webpack_require__.d(__webpack_exports__, "_6", function () {
            return __WEBPACK_IMPORTED_MODULE_1__coreservices__.a
        }),
        __webpack_require__.d(__webpack_exports__, "_28", function () {
            return __WEBPACK_IMPORTED_MODULE_1__coreservices__.b
        });
        var __WEBPACK_IMPORTED_MODULE_2__glob__ = __webpack_require__(156);
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return __WEBPACK_IMPORTED_MODULE_2__glob__.a
        });
        var __WEBPACK_IMPORTED_MODULE_3__hof__ = __webpack_require__(14);
        __webpack_require__.d(__webpack_exports__, "i", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.a
        }),
        __webpack_require__.d(__webpack_exports__, "l", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.b
        }),
        __webpack_require__.d(__webpack_exports__, "m", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.c
        }),
        __webpack_require__.d(__webpack_exports__, "u", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.d
        }),
        __webpack_require__.d(__webpack_exports__, "x", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.e
        }),
        __webpack_require__.d(__webpack_exports__, "A", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.f
        }),
        __webpack_require__.d(__webpack_exports__, "P", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.g
        }),
        __webpack_require__.d(__webpack_exports__, "Q", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.h
        }),
        __webpack_require__.d(__webpack_exports__, "_12", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.i
        }),
        __webpack_require__.d(__webpack_exports__, "_14", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.j
        }),
        __webpack_require__.d(__webpack_exports__, "_17", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.k
        }),
        __webpack_require__.d(__webpack_exports__, "_18", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.l
        }),
        __webpack_require__.d(__webpack_exports__, "_20", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.m
        }),
        __webpack_require__.d(__webpack_exports__, "_22", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.n
        }),
        __webpack_require__.d(__webpack_exports__, "_23", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.o
        }),
        __webpack_require__.d(__webpack_exports__, "_44", function () {
            return __WEBPACK_IMPORTED_MODULE_3__hof__.p
        });
        var __WEBPACK_IMPORTED_MODULE_4__predicates__ = __webpack_require__(10);
        __webpack_require__.d(__webpack_exports__, "R", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.a
        }),
        __webpack_require__.d(__webpack_exports__, "S", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.b
        }),
        __webpack_require__.d(__webpack_exports__, "T", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.c
        }),
        __webpack_require__.d(__webpack_exports__, "U", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.d
        }),
        __webpack_require__.d(__webpack_exports__, "V", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.e
        }),
        __webpack_require__.d(__webpack_exports__, "W", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.f
        }),
        __webpack_require__.d(__webpack_exports__, "X", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.g
        }),
        __webpack_require__.d(__webpack_exports__, "Y", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.h
        }),
        __webpack_require__.d(__webpack_exports__, "Z", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.i
        }),
        __webpack_require__.d(__webpack_exports__, "_0", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.j
        }),
        __webpack_require__.d(__webpack_exports__, "_1", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.k
        }),
        __webpack_require__.d(__webpack_exports__, "_2", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.l
        }),
        __webpack_require__.d(__webpack_exports__, "_3", function () {
            return __WEBPACK_IMPORTED_MODULE_4__predicates__.m
        });
        var __WEBPACK_IMPORTED_MODULE_5__queue__ = __webpack_require__(157);
        __webpack_require__.d(__webpack_exports__, "c", function () {
            return __WEBPACK_IMPORTED_MODULE_5__queue__.a
        });
        var __WEBPACK_IMPORTED_MODULE_6__strings__ = __webpack_require__(40);
        __webpack_require__.d(__webpack_exports__, "t", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.a
        }),
        __webpack_require__.d(__webpack_exports__, "H", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.b
        }),
        __webpack_require__.d(__webpack_exports__, "K", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.c
        }),
        __webpack_require__.d(__webpack_exports__, "L", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.d
        }),
        __webpack_require__.d(__webpack_exports__, "_4", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.e
        }),
        __webpack_require__.d(__webpack_exports__, "_5", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.f
        }),
        __webpack_require__.d(__webpack_exports__, "_9", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.g
        }),
        __webpack_require__.d(__webpack_exports__, "_15", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.h
        }),
        __webpack_require__.d(__webpack_exports__, "_31", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.i
        }),
        __webpack_require__.d(__webpack_exports__, "_32", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.j
        }),
        __webpack_require__.d(__webpack_exports__, "_33", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.k
        }),
        __webpack_require__.d(__webpack_exports__, "_34", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.l
        }),
        __webpack_require__.d(__webpack_exports__, "_35", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.m
        }),
        __webpack_require__.d(__webpack_exports__, "_36", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.n
        }),
        __webpack_require__.d(__webpack_exports__, "_40", function () {
            return __WEBPACK_IMPORTED_MODULE_6__strings__.o
        });
        var __WEBPACK_IMPORTED_MODULE_7__trace__ = __webpack_require__(47);
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return __WEBPACK_IMPORTED_MODULE_7__trace__.a
        }),
        __webpack_require__.d(__webpack_exports__, "d", function () {
            return __WEBPACK_IMPORTED_MODULE_7__trace__.b
        }),
        __webpack_require__.d(__webpack_exports__, "_39", function () {
            return __WEBPACK_IMPORTED_MODULE_7__trace__.c
        })
    },,,
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return makeStub
        }),
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return services
        });
        var noImpl = function (fnname) {
                return function () {
                    throw new Error(
                        "No implementation for " + fnname + ". The framework specific code did not impl" +
                    "ement this method."
                    )
                }
            },
            makeStub = function (service, methods) {
                return methods.reduce(function (acc, key) {
                    return acc[key] = noImpl(service + "." + key + "()"),
                    acc
                }, {})
            },
            services = {
                $q: void 0,
                $injector: void 0
            }
    },,,,
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
            value: !0
        });
        var __WEBPACK_IMPORTED_MODULE_0__common_index__ = __webpack_require__(17);
        __webpack_require__.d(__webpack_exports__, "root", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._27
        }),
        __webpack_require__.d(__webpack_exports__, "fromJson", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.J
        }),
        __webpack_require__.d(__webpack_exports__, "toJson", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._38
        }),
        __webpack_require__.d(__webpack_exports__, "forEach", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.I
        }),
        __webpack_require__.d(__webpack_exports__, "extend", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.C
        }),
        __webpack_require__.d(__webpack_exports__, "equals", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.B
        }),
        __webpack_require__.d(__webpack_exports__, "identity", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.M
        }),
        __webpack_require__.d(__webpack_exports__, "noop", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._11
        }),
        __webpack_require__.d(
            __webpack_exports__,
            "createProxyFunctions",
            function () {
                return __WEBPACK_IMPORTED_MODULE_0__common_index__.w
            }
        ),
        __webpack_require__.d(__webpack_exports__, "inherit", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.O
        }),
        __webpack_require__.d(__webpack_exports__, "inArray", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.N
        }),
        __webpack_require__.d(__webpack_exports__, "_inArray", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.f
        }),
        __webpack_require__.d(__webpack_exports__, "removeFrom", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._26
        }),
        __webpack_require__.d(__webpack_exports__, "_removeFrom", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.h
        }),
        __webpack_require__.d(__webpack_exports__, "pushTo", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._25
        }),
        __webpack_require__.d(__webpack_exports__, "_pushTo", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.g
        }),
        __webpack_require__.d(__webpack_exports__, "deregAll", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.z
        }),
        __webpack_require__.d(__webpack_exports__, "defaults", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.y
        }),
        __webpack_require__.d(__webpack_exports__, "mergeR", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._10
        }),
        __webpack_require__.d(__webpack_exports__, "ancestors", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.k
        }),
        __webpack_require__.d(__webpack_exports__, "pick", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._19
        }),
        __webpack_require__.d(__webpack_exports__, "omit", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._13
        }),
        __webpack_require__.d(__webpack_exports__, "pluck", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._21
        }),
        __webpack_require__.d(__webpack_exports__, "filter", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.D
        }),
        __webpack_require__.d(__webpack_exports__, "find", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.E
        }),
        __webpack_require__.d(__webpack_exports__, "mapObj", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._8
        }),
        __webpack_require__.d(__webpack_exports__, "map", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._7
        }),
        __webpack_require__.d(__webpack_exports__, "values", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._45
        }),
        __webpack_require__.d(__webpack_exports__, "allTrueR", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.j
        }),
        __webpack_require__.d(__webpack_exports__, "anyTrueR", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.n
        }),
        __webpack_require__.d(__webpack_exports__, "unnestR", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._43
        }),
        __webpack_require__.d(__webpack_exports__, "flattenR", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.G
        }),
        __webpack_require__.d(__webpack_exports__, "pushR", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._24
        }),
        __webpack_require__.d(__webpack_exports__, "uniqR", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._41
        }),
        __webpack_require__.d(__webpack_exports__, "unnest", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._42
        }),
        __webpack_require__.d(__webpack_exports__, "flatten", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.F
        }),
        __webpack_require__.d(__webpack_exports__, "assertPredicate", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.s
        }),
        __webpack_require__.d(__webpack_exports__, "assertMap", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.r
        }),
        __webpack_require__.d(__webpack_exports__, "assertFn", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.q
        }),
        __webpack_require__.d(__webpack_exports__, "pairs", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._16
        }),
        __webpack_require__.d(__webpack_exports__, "arrayTuples", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.p
        }),
        __webpack_require__.d(__webpack_exports__, "applyPairs", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.o
        }),
        __webpack_require__.d(__webpack_exports__, "tail", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._37
        }),
        __webpack_require__.d(__webpack_exports__, "copy", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.v
        }),
        __webpack_require__.d(__webpack_exports__, "_extend", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.e
        }),
        __webpack_require__.d(
            __webpack_exports__,
            "silenceUncaughtInPromise",
            function () {
                return __WEBPACK_IMPORTED_MODULE_0__common_index__._29
            }
        ),
        __webpack_require__.d(__webpack_exports__, "silentRejection", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._30
        }),
        __webpack_require__.d(__webpack_exports__, "makeStub", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._6
        }),
        __webpack_require__.d(__webpack_exports__, "services", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._28
        }),
        __webpack_require__.d(__webpack_exports__, "Glob", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.b
        }),
        __webpack_require__.d(__webpack_exports__, "curry", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.x
        }),
        __webpack_require__.d(__webpack_exports__, "compose", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.u
        }),
        __webpack_require__.d(__webpack_exports__, "pipe", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._20
        }),
        __webpack_require__.d(__webpack_exports__, "prop", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._22
        }),
        __webpack_require__.d(__webpack_exports__, "propEq", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._23
        }),
        __webpack_require__.d(__webpack_exports__, "parse", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._17
        }),
        __webpack_require__.d(__webpack_exports__, "not", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._12
        }),
        __webpack_require__.d(__webpack_exports__, "and", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.l
        }),
        __webpack_require__.d(__webpack_exports__, "or", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._14
        }),
        __webpack_require__.d(__webpack_exports__, "all", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.i
        }),
        __webpack_require__.d(__webpack_exports__, "any", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.m
        }),
        __webpack_require__.d(__webpack_exports__, "is", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.Q
        }),
        __webpack_require__.d(__webpack_exports__, "eq", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.A
        }),
        __webpack_require__.d(__webpack_exports__, "val", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._44
        }),
        __webpack_require__.d(__webpack_exports__, "invoke", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.P
        }),
        __webpack_require__.d(__webpack_exports__, "pattern", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._18
        }),
        __webpack_require__.d(__webpack_exports__, "isUndefined", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._3
        }),
        __webpack_require__.d(__webpack_exports__, "isDefined", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.T
        }),
        __webpack_require__.d(__webpack_exports__, "isNull", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.W
        }),
        __webpack_require__.d(__webpack_exports__, "isNullOrUndefined", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.X
        }),
        __webpack_require__.d(__webpack_exports__, "isFunction", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.U
        }),
        __webpack_require__.d(__webpack_exports__, "isNumber", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.Y
        }),
        __webpack_require__.d(__webpack_exports__, "isString", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._2
        }),
        __webpack_require__.d(__webpack_exports__, "isObject", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.Z
        }),
        __webpack_require__.d(__webpack_exports__, "isArray", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.R
        }),
        __webpack_require__.d(__webpack_exports__, "isDate", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.S
        }),
        __webpack_require__.d(__webpack_exports__, "isRegExp", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._1
        }),
        __webpack_require__.d(__webpack_exports__, "isInjectable", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.V
        }),
        __webpack_require__.d(__webpack_exports__, "isPromise", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._0
        }),
        __webpack_require__.d(__webpack_exports__, "Queue", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.c
        }),
        __webpack_require__.d(__webpack_exports__, "maxLength", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._9
        }),
        __webpack_require__.d(__webpack_exports__, "padString", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._15
        }),
        __webpack_require__.d(__webpack_exports__, "kebobString", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._5
        }),
        __webpack_require__.d(__webpack_exports__, "functionToString", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.K
        }),
        __webpack_require__.d(__webpack_exports__, "fnToString", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.H
        }),
        __webpack_require__.d(__webpack_exports__, "stringify", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._35
        }),
        __webpack_require__.d(__webpack_exports__, "beforeAfterSubstr", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.t
        }),
        __webpack_require__.d(__webpack_exports__, "hostRegex", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.L
        }),
        __webpack_require__.d(
            __webpack_exports__,
            "stripLastPathElement",
            function () {
                return __WEBPACK_IMPORTED_MODULE_0__common_index__._36
            }
        ),
        __webpack_require__.d(__webpack_exports__, "splitHash", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._32
        }),
        __webpack_require__.d(__webpack_exports__, "splitQuery", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._34
        }),
        __webpack_require__.d(__webpack_exports__, "splitEqual", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._31
        }),
        __webpack_require__.d(__webpack_exports__, "trimHashVal", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._40
        }),
        __webpack_require__.d(__webpack_exports__, "splitOnDelim", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._33
        }),
        __webpack_require__.d(__webpack_exports__, "joinNeighborsR", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._4
        }),
        __webpack_require__.d(__webpack_exports__, "Category", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.a
        }),
        __webpack_require__.d(__webpack_exports__, "Trace", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__.d
        }),
        __webpack_require__.d(__webpack_exports__, "trace", function () {
            return __WEBPACK_IMPORTED_MODULE_0__common_index__._39
        });
        var __WEBPACK_IMPORTED_MODULE_1__params_index__ = __webpack_require__(158);
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__params_index__) 
            [
                "root",
                "fromJson",
                "toJson",
                "forEach",
                "extend",
                "equals",
                "identity",
                "noop",
                "createProxyFunctions",
                "inherit",
                "inArray",
                "_inArray",
                "removeFrom",
                "_removeFrom",
                "pushTo",
                "_pushTo",
                "deregAll",
                "defaults",
                "mergeR",
                "ancestors",
                "pick",
                "omit",
                "pluck",
                "filter",
                "find",
                "mapObj",
                "map",
                "values",
                "allTrueR",
                "anyTrueR",
                "unnestR",
                "flattenR",
                "pushR",
                "uniqR",
                "unnest",
                "flatten",
                "assertPredicate",
                "assertMap",
                "assertFn",
                "pairs",
                "arrayTuples",
                "applyPairs",
                "tail",
                "copy",
                "_extend",
                "silenceUncaughtInPromise",
                "silentRejection",
                "makeStub",
                "services",
                "Glob",
                "curry",
                "compose",
                "pipe",
                "prop",
                "propEq",
                "parse",
                "not",
                "and",
                "or",
                "all",
                "any",
                "is",
                "eq",
                "val",
                "invoke",
                "pattern",
                "isUndefined",
                "isDefined",
                "isNull",
                "isNullOrUndefined",
                "isFunction",
                "isNumber",
                "isString",
                "isObject",
                "isArray",
                "isDate",
                "isRegExp",
                "isInjectable",
                "isPromise",
                "Queue",
                "maxLength",
                "padString",
                "kebobString",
                "functionToString",
                "fnToString",
                "stringify",
                "beforeAfterSubstr",
                "hostRegex",
                "stripLastPathElement",
                "splitHash",
                "splitQuery",
                "splitEqual",
                "trimHashVal",
                "splitOnDelim",
                "joinNeighborsR",
                "Category",
                "Trace",
                "trace",
                "default"
            ].indexOf(__WEBPACK_IMPORT_KEY__) < 0 && function (key) {
                __webpack_require__.d(__webpack_exports__, key, function () {
                    return __WEBPACK_IMPORTED_MODULE_1__params_index__[key]
                })
            }
        (__WEBPACK_IMPORT_KEY__);
        var __WEBPACK_IMPORTED_MODULE_2__path_index__ = __webpack_require__(633);
        __webpack_require__.d(__webpack_exports__, "PathNode", function () {
            return __WEBPACK_IMPORTED_MODULE_2__path_index__.a
        }),
        __webpack_require__.d(__webpack_exports__, "PathUtils", function () {
            return __WEBPACK_IMPORTED_MODULE_2__path_index__.b
        });
        var __WEBPACK_IMPORTED_MODULE_3__resolve_index__ = __webpack_require__(250);
        __webpack_require__.d(__webpack_exports__, "resolvePolicies", function () {
            return __WEBPACK_IMPORTED_MODULE_3__resolve_index__.e
        }),
        __webpack_require__.d(
            __webpack_exports__,
            "defaultResolvePolicy",
            function () {
                return __WEBPACK_IMPORTED_MODULE_3__resolve_index__.d
            }
        ),
        __webpack_require__.d(__webpack_exports__, "Resolvable", function () {
            return __WEBPACK_IMPORTED_MODULE_3__resolve_index__.b
        }),
        __webpack_require__.d(
            __webpack_exports__,
            "NATIVE_INJECTOR_TOKEN",
            function () {
                return __WEBPACK_IMPORTED_MODULE_3__resolve_index__.a
            }
        ),
        __webpack_require__.d(__webpack_exports__, "ResolveContext", function () {
            return __WEBPACK_IMPORTED_MODULE_3__resolve_index__.c
        });
        var __WEBPACK_IMPORTED_MODULE_4__state_index__ = __webpack_require__(161);
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_4__state_index__) 
            [
                "root",
                "fromJson",
                "toJson",
                "forEach",
                "extend",
                "equals",
                "identity",
                "noop",
                "createProxyFunctions",
                "inherit",
                "inArray",
                "_inArray",
                "removeFrom",
                "_removeFrom",
                "pushTo",
                "_pushTo",
                "deregAll",
                "defaults",
                "mergeR",
                "ancestors",
                "pick",
                "omit",
                "pluck",
                "filter",
                "find",
                "mapObj",
                "map",
                "values",
                "allTrueR",
                "anyTrueR",
                "unnestR",
                "flattenR",
                "pushR",
                "uniqR",
                "unnest",
                "flatten",
                "assertPredicate",
                "assertMap",
                "assertFn",
                "pairs",
                "arrayTuples",
                "applyPairs",
                "tail",
                "copy",
                "_extend",
                "silenceUncaughtInPromise",
                "silentRejection",
                "makeStub",
                "services",
                "Glob",
                "curry",
                "compose",
                "pipe",
                "prop",
                "propEq",
                "parse",
                "not",
                "and",
                "or",
                "all",
                "any",
                "is",
                "eq",
                "val",
                "invoke",
                "pattern",
                "isUndefined",
                "isDefined",
                "isNull",
                "isNullOrUndefined",
                "isFunction",
                "isNumber",
                "isString",
                "isObject",
                "isArray",
                "isDate",
                "isRegExp",
                "isInjectable",
                "isPromise",
                "Queue",
                "maxLength",
                "padString",
                "kebobString",
                "functionToString",
                "fnToString",
                "stringify",
                "beforeAfterSubstr",
                "hostRegex",
                "stripLastPathElement",
                "splitHash",
                "splitQuery",
                "splitEqual",
                "trimHashVal",
                "splitOnDelim",
                "joinNeighborsR",
                "Category",
                "Trace",
                "trace",
                "PathNode",
                "PathUtils",
                "resolvePolicies",
                "defaultResolvePolicy",
                "Resolvable",
                "NATIVE_INJECTOR_TOKEN",
                "ResolveContext",
                "default"
            ].indexOf(__WEBPACK_IMPORT_KEY__) < 0 && function (key) {
                __webpack_require__.d(__webpack_exports__, key, function () {
                    return __WEBPACK_IMPORTED_MODULE_4__state_index__[key]
                })
            }
        (__WEBPACK_IMPORT_KEY__);
        var __WEBPACK_IMPORTED_MODULE_5__transition_index__ = __webpack_require__(635);
        __webpack_require__.d(__webpack_exports__, "TransitionHookPhase", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.h
        }),
        __webpack_require__.d(__webpack_exports__, "TransitionHookScope", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.i
        }),
        __webpack_require__.d(__webpack_exports__, "HookBuilder", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.a
        }),
        __webpack_require__.d(__webpack_exports__, "matchState", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.m
        }),
        __webpack_require__.d(__webpack_exports__, "RegisteredHook", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.b
        }),
        __webpack_require__.d(__webpack_exports__, "makeEvent", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.l
        }),
        __webpack_require__.d(__webpack_exports__, "RejectType", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.c
        }),
        __webpack_require__.d(__webpack_exports__, "Rejection", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.d
        }),
        __webpack_require__.d(__webpack_exports__, "Transition", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.e
        }),
        __webpack_require__.d(__webpack_exports__, "TransitionHook", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.g
        }),
        __webpack_require__.d(__webpack_exports__, "TransitionEventType", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.f
        }),
        __webpack_require__.d(__webpack_exports__, "defaultTransOpts", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.k
        }),
        __webpack_require__.d(__webpack_exports__, "TransitionService", function () {
            return __WEBPACK_IMPORTED_MODULE_5__transition_index__.j
        });
        var __WEBPACK_IMPORTED_MODULE_6__url_index__ = __webpack_require__(636);
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_6__url_index__) 
            [
                "root",
                "fromJson",
                "toJson",
                "forEach",
                "extend",
                "equals",
                "identity",
                "noop",
                "createProxyFunctions",
                "inherit",
                "inArray",
                "_inArray",
                "removeFrom",
                "_removeFrom",
                "pushTo",
                "_pushTo",
                "deregAll",
                "defaults",
                "mergeR",
                "ancestors",
                "pick",
                "omit",
                "pluck",
                "filter",
                "find",
                "mapObj",
                "map",
                "values",
                "allTrueR",
                "anyTrueR",
                "unnestR",
                "flattenR",
                "pushR",
                "uniqR",
                "unnest",
                "flatten",
                "assertPredicate",
                "assertMap",
                "assertFn",
                "pairs",
                "arrayTuples",
                "applyPairs",
                "tail",
                "copy",
                "_extend",
                "silenceUncaughtInPromise",
                "silentRejection",
                "makeStub",
                "services",
                "Glob",
                "curry",
                "compose",
                "pipe",
                "prop",
                "propEq",
                "parse",
                "not",
                "and",
                "or",
                "all",
                "any",
                "is",
                "eq",
                "val",
                "invoke",
                "pattern",
                "isUndefined",
                "isDefined",
                "isNull",
                "isNullOrUndefined",
                "isFunction",
                "isNumber",
                "isString",
                "isObject",
                "isArray",
                "isDate",
                "isRegExp",
                "isInjectable",
                "isPromise",
                "Queue",
                "maxLength",
                "padString",
                "kebobString",
                "functionToString",
                "fnToString",
                "stringify",
                "beforeAfterSubstr",
                "hostRegex",
                "stripLastPathElement",
                "splitHash",
                "splitQuery",
                "splitEqual",
                "trimHashVal",
                "splitOnDelim",
                "joinNeighborsR",
                "Category",
                "Trace",
                "trace",
                "PathNode",
                "PathUtils",
                "resolvePolicies",
                "defaultResolvePolicy",
                "Resolvable",
                "NATIVE_INJECTOR_TOKEN",
                "ResolveContext",
                "TransitionHookPhase",
                "TransitionHookScope",
                "HookBuilder",
                "matchState",
                "RegisteredHook",
                "makeEvent",
                "RejectType",
                "Rejection",
                "Transition",
                "TransitionHook",
                "TransitionEventType",
                "defaultTransOpts",
                "TransitionService",
                "default"
            ].indexOf(__WEBPACK_IMPORT_KEY__) < 0 && function (key) {
                __webpack_require__.d(__webpack_exports__, key, function () {
                    return __WEBPACK_IMPORTED_MODULE_6__url_index__[key]
                })
            }
        (__WEBPACK_IMPORT_KEY__);
        var __WEBPACK_IMPORTED_MODULE_7__view_index__ = __webpack_require__(638);
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_7__view_index__) 
            [
                "root",
                "fromJson",
                "toJson",
                "forEach",
                "extend",
                "equals",
                "identity",
                "noop",
                "createProxyFunctions",
                "inherit",
                "inArray",
                "_inArray",
                "removeFrom",
                "_removeFrom",
                "pushTo",
                "_pushTo",
                "deregAll",
                "defaults",
                "mergeR",
                "ancestors",
                "pick",
                "omit",
                "pluck",
                "filter",
                "find",
                "mapObj",
                "map",
                "values",
                "allTrueR",
                "anyTrueR",
                "unnestR",
                "flattenR",
                "pushR",
                "uniqR",
                "unnest",
                "flatten",
                "assertPredicate",
                "assertMap",
                "assertFn",
                "pairs",
                "arrayTuples",
                "applyPairs",
                "tail",
                "copy",
                "_extend",
                "silenceUncaughtInPromise",
                "silentRejection",
                "makeStub",
                "services",
                "Glob",
                "curry",
                "compose",
                "pipe",
                "prop",
                "propEq",
                "parse",
                "not",
                "and",
                "or",
                "all",
                "any",
                "is",
                "eq",
                "val",
                "invoke",
                "pattern",
                "isUndefined",
                "isDefined",
                "isNull",
                "isNullOrUndefined",
                "isFunction",
                "isNumber",
                "isString",
                "isObject",
                "isArray",
                "isDate",
                "isRegExp",
                "isInjectable",
                "isPromise",
                "Queue",
                "maxLength",
                "padString",
                "kebobString",
                "functionToString",
                "fnToString",
                "stringify",
                "beforeAfterSubstr",
                "hostRegex",
                "stripLastPathElement",
                "splitHash",
                "splitQuery",
                "splitEqual",
                "trimHashVal",
                "splitOnDelim",
                "joinNeighborsR",
                "Category",
                "Trace",
                "trace",
                "PathNode",
                "PathUtils",
                "resolvePolicies",
                "defaultResolvePolicy",
                "Resolvable",
                "NATIVE_INJECTOR_TOKEN",
                "ResolveContext",
                "TransitionHookPhase",
                "TransitionHookScope",
                "HookBuilder",
                "matchState",
                "RegisteredHook",
                "makeEvent",
                "RejectType",
                "Rejection",
                "Transition",
                "TransitionHook",
                "TransitionEventType",
                "defaultTransOpts",
                "TransitionService",
                "default"
            ].indexOf(__WEBPACK_IMPORT_KEY__) < 0 && function (key) {
                __webpack_require__.d(__webpack_exports__, key, function () {
                    return __WEBPACK_IMPORTED_MODULE_7__view_index__[key]
                })
            }
        (__WEBPACK_IMPORT_KEY__);
        var __WEBPACK_IMPORTED_MODULE_8__globals__ = __webpack_require__(262);
        __webpack_require__.d(__webpack_exports__, "UIRouterGlobals", function () {
            return __WEBPACK_IMPORTED_MODULE_8__globals__.a
        });
        var __WEBPACK_IMPORTED_MODULE_9__router__ = __webpack_require__(258);
        __webpack_require__.d(__webpack_exports__, "UIRouter", function () {
            return __WEBPACK_IMPORTED_MODULE_9__router__.a
        });
        var __WEBPACK_IMPORTED_MODULE_10__vanilla__ = __webpack_require__(640);
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_10__vanilla__) 
            [
                "root",
                "fromJson",
                "toJson",
                "forEach",
                "extend",
                "equals",
                "identity",
                "noop",
                "createProxyFunctions",
                "inherit",
                "inArray",
                "_inArray",
                "removeFrom",
                "_removeFrom",
                "pushTo",
                "_pushTo",
                "deregAll",
                "defaults",
                "mergeR",
                "ancestors",
                "pick",
                "omit",
                "pluck",
                "filter",
                "find",
                "mapObj",
                "map",
                "values",
                "allTrueR",
                "anyTrueR",
                "unnestR",
                "flattenR",
                "pushR",
                "uniqR",
                "unnest",
                "flatten",
                "assertPredicate",
                "assertMap",
                "assertFn",
                "pairs",
                "arrayTuples",
                "applyPairs",
                "tail",
                "copy",
                "_extend",
                "silenceUncaughtInPromise",
                "silentRejection",
                "makeStub",
                "services",
                "Glob",
                "curry",
                "compose",
                "pipe",
                "prop",
                "propEq",
                "parse",
                "not",
                "and",
                "or",
                "all",
                "any",
                "is",
                "eq",
                "val",
                "invoke",
                "pattern",
                "isUndefined",
                "isDefined",
                "isNull",
                "isNullOrUndefined",
                "isFunction",
                "isNumber",
                "isString",
                "isObject",
                "isArray",
                "isDate",
                "isRegExp",
                "isInjectable",
                "isPromise",
                "Queue",
                "maxLength",
                "padString",
                "kebobString",
                "functionToString",
                "fnToString",
                "stringify",
                "beforeAfterSubstr",
                "hostRegex",
                "stripLastPathElement",
                "splitHash",
                "splitQuery",
                "splitEqual",
                "trimHashVal",
                "splitOnDelim",
                "joinNeighborsR",
                "Category",
                "Trace",
                "trace",
                "PathNode",
                "PathUtils",
                "resolvePolicies",
                "defaultResolvePolicy",
                "Resolvable",
                "NATIVE_INJECTOR_TOKEN",
                "ResolveContext",
                "TransitionHookPhase",
                "TransitionHookScope",
                "HookBuilder",
                "matchState",
                "RegisteredHook",
                "makeEvent",
                "RejectType",
                "Rejection",
                "Transition",
                "TransitionHook",
                "TransitionEventType",
                "defaultTransOpts",
                "TransitionService",
                "UIRouterGlobals",
                "UIRouter",
                "default"
            ].indexOf(__WEBPACK_IMPORT_KEY__) < 0 && function (key) {
                __webpack_require__.d(__webpack_exports__, key, function () {
                    return __WEBPACK_IMPORTED_MODULE_10__vanilla__[key]
                })
            }
        (__WEBPACK_IMPORT_KEY__);
        var __WEBPACK_IMPORTED_MODULE_11__interface__ = __webpack_require__(644);
        __webpack_require__.d(__webpack_exports__, "UIRouterPluginBase", function () {
            return __WEBPACK_IMPORTED_MODULE_11__interface__.a
        })
    },,,,,
    function (module, exports, __webpack_require__) {
        "use strict";
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) 
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var Barcode = function Barcode(data, options) {
            _classCallCheck(this, Barcode),
            this.data = data,
            this.text = options.text || data,
            this.options = options
        };
        exports.default = Barcode
    },,,,,,,,,,,
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function maxLength(max, str) {
            return str.length <= max
                ? str
                : str.substr(0, max - 3) + "..."
        }
        function padString(length, str) {
            for (; str.length < length;) 
                str += " ";
            return str
        }
        function kebobString(camelCase) {
            return camelCase
                .replace(/^([A-Z])/, function ($1) {
                    return $1.toLowerCase()
                })
                .replace(/([A-Z])/g, function ($1) {
                    return "-" + $1.toLowerCase()
                })
        }
        function functionToString(fn) {
            var fnStr = fnToString(fn),
                namedFunctionMatch = fnStr.match(/^(function [^ ]+\([^)]*\))/),
                toStr = namedFunctionMatch
                    ? namedFunctionMatch[1]
                    : fnStr,
                fnName = fn.name || "";
            return fnName && toStr.match(/function \(/)
                ? "function " + fnName + toStr.substr(9)
                : toStr
        }
        function fnToString(fn) {
            var _fn = Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.a)(fn)
                ? fn.slice(-1)[0]
                : fn;
            return _fn && _fn.toString() || "undefined"
        }
        function stringify(o) {
            function format(value) {
                if (Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.i)(value)) {
                    if (-1 !== seen.indexOf(value)) 
                        return "[circular ref]";
                    seen.push(value)
                }
                return stringifyPattern(value)
            }
            var seen = [];
            return Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.m)(o)
                ? format(o)
                : JSON
                    .stringify(o, function (key, value) {
                        return format(value)
                    })
                    .replace(/\\"/g, '"')
        }
        function splitOnDelim(delim) {
            var re = new RegExp("(" + delim + ")", "g");
            return function (str) {
                return str
                    .split(re)
                    .filter(__WEBPACK_IMPORTED_MODULE_2__common__.y)
            }
        }
        function joinNeighborsR(acc, x) {
            return Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.l)(
                Object(__WEBPACK_IMPORTED_MODULE_2__common__.P)(
                    acc
                )
            ) && Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.l)(x)
                ? acc
                    .slice(0, -1)
                    .concat(Object(__WEBPACK_IMPORTED_MODULE_2__common__.P)(acc) + x)
                : Object(__WEBPACK_IMPORTED_MODULE_2__common__.J)(acc, x)
        }
        __webpack_exports__.g = maxLength,
        __webpack_exports__.h = padString,
        __webpack_exports__.f = kebobString,
        __webpack_exports__.c = functionToString,
        __webpack_exports__.b = fnToString,
        __webpack_exports__.m = stringify,
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return beforeAfterSubstr
        }),
        __webpack_require__.d(__webpack_exports__, "d", function () {
            return hostRegex
        }),
        __webpack_require__.d(__webpack_exports__, "n", function () {
            return stripLastPathElement
        }),
        __webpack_require__.d(__webpack_exports__, "j", function () {
            return splitHash
        }),
        __webpack_require__.d(__webpack_exports__, "l", function () {
            return splitQuery
        }),
        __webpack_require__.d(__webpack_exports__, "i", function () {
            return splitEqual
        }),
        __webpack_require__.d(__webpack_exports__, "o", function () {
            return trimHashVal
        }),
        __webpack_exports__.k = splitOnDelim,
        __webpack_exports__.e = joinNeighborsR;
        var __WEBPACK_IMPORTED_MODULE_0__predicates__ = __webpack_require__(10),
            __WEBPACK_IMPORTED_MODULE_1__transition_rejectFactory__ = __webpack_require__(
                69
            ),
            __WEBPACK_IMPORTED_MODULE_2__common__ = __webpack_require__(8),
            __WEBPACK_IMPORTED_MODULE_3__hof__ = __webpack_require__(14),
            isRejection = __WEBPACK_IMPORTED_MODULE_1__transition_rejectFactory__.b.isRejectionPromise,
            hasToString = function (obj) {
                return Object(__WEBPACK_IMPORTED_MODULE_0__predicates__.i)(obj) && !Object(
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.a
                )(obj) && obj.constructor !== Object && Object(
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.d
                )(obj.toString)
            },
            stringifyPattern = Object(__WEBPACK_IMPORTED_MODULE_3__hof__.l)([
                [
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.m,
                    Object(__WEBPACK_IMPORTED_MODULE_3__hof__.p)("undefined")
                ],
                [
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.f,
                    Object(__WEBPACK_IMPORTED_MODULE_3__hof__.p)("null")
                ],
                [
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.j,
                    Object(__WEBPACK_IMPORTED_MODULE_3__hof__.p)("[Promise]")
                ],
                [
                    isRejection,
                    function (x) {
                        return x
                            ._transitionRejection
                            .toString()
                    }
                ],
                [
                    hasToString,
                    function (x) {
                        return x.toString()
                    }
                ],
                [
                    __WEBPACK_IMPORTED_MODULE_0__predicates__.e, functionToString
                ],
                [
                    Object(__WEBPACK_IMPORTED_MODULE_3__hof__.p)(!0),
                    __WEBPACK_IMPORTED_MODULE_2__common__.y
                ]
            ]),
            beforeAfterSubstr = function (char) {
                return function (str) {
                    if (!str) 
                        return ["", ""];
                    var idx = str.indexOf(char);
                    return -1 === idx
                        ? [str, ""]
                        : [
                            str.substr(0, idx),
                            str.substr(idx + 1)
                        ]
                }
            },
            hostRegex = new RegExp("^(?:[a-z]+:)?//[^/]+/"),
            stripLastPathElement = function (str) {
                return str.replace(/\/[^\/]*$/, "")
            },
            splitHash = beforeAfterSubstr("#"),
            splitQuery = beforeAfterSubstr("?"),
            splitEqual = beforeAfterSubstr("="),
            trimHashVal = function (str) {
                return str
                    ? str.replace(/^#/, "")
                    : ""
            }
    },,,,,,,
    function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function uiViewString(uiview) {
            if (!uiview) 
                return "ui-view (defunct)";
            var state = uiview.creationContext
                ? uiview.creationContext.name || "(root)"
                : "(none)";
            return "[ui-view#" + uiview.id + " " + uiview.$type + ":" + uiview.fqn + " (" +
                uiview.name + "@" + state + ")]"
        }
        function normalizedCat(input) {
            return Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.h)(input)
                ? Category[input]
                : Category[Category[input]]
        }
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return Category
        }),
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return Trace
        }),
        __webpack_require__.d(__webpack_exports__, "c", function () {
            return trace
        });
        var Category,
            __WEBPACK_IMPORTED_MODULE_0__common_hof__ = __webpack_require__(14),
            __WEBPACK_IMPORTED_MODULE_1__common_predicates__ = __webpack_require__(10),
            __WEBPACK_IMPORTED_MODULE_2__strings__ = __webpack_require__(40),
            __WEBPACK_IMPORTED_MODULE_3__safeConsole__ = __webpack_require__(248),
            viewConfigString = function (viewConfig) {
                var view = viewConfig.viewDecl,
                    state = view.$context.name || "(root)";
                return "[View#" + viewConfig.$id + " from '" + state + "' state]: target ui-vie" +
                    "w: '" + view.$uiViewName + "@" + view.$uiViewContextAnchor + "'"
            };
        (function (Category) {
            Category[Category.RESOLVE = 0] = "RESOLVE",
            Category[Category.TRANSITION = 1] = "TRANSITION",
            Category[Category.HOOK = 2] = "HOOK",
            Category[Category.UIVIEW = 3] = "UIVIEW",
            Category[Category.VIEWCONFIG = 4] = "VIEWCONFIG"
        })(Category || (Category = {}));
        var _tid = Object(__WEBPACK_IMPORTED_MODULE_0__common_hof__.k)("$id"),
            _rid = Object(__WEBPACK_IMPORTED_MODULE_0__common_hof__.k)("router.$id"),
            transLbl = function (trans) {
                return "Transition #" + _tid(trans) + "-" + _rid(trans)
            },
            Trace = function () {
                function Trace() {
                    this._enabled = {},
                    this.approximateDigests = 0
                }
                return Trace.prototype._set = function (enabled, categories) {
                    var _this = this;
                    categories.length || (categories = Object.keys(Category).map(function (k) {
                        return parseInt(k, 10)
                    }).filter(function (k) {
                        return !isNaN(k)
                    }).map(function (key) {
                        return Category[key]
                    })),
                    categories
                        .map(normalizedCat)
                        .forEach(function (category) {
                            return _this._enabled[category] = enabled
                        })
                },
                Trace.prototype.enable = function () {
                    for (var categories = [], _i = 0; _i < arguments.length; _i++) 
                        categories[_i] = arguments[_i];
                    this._set(!0, categories)
                },
                Trace.prototype.disable = function () {
                    for (var categories = [], _i = 0; _i < arguments.length; _i++) 
                        categories[_i] = arguments[_i];
                    this._set(!1, categories)
                },
                Trace.prototype.enabled = function (category) {
                    return !!this._enabled[normalizedCat(category)]
                },
                Trace.prototype.traceTransitionStart = function (trans) {
                    this.enabled(Category.TRANSITION) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log(
                            transLbl(trans) + ": Started  -> " + Object(__WEBPACK_IMPORTED_MODULE_2__strings__.m)(
                                trans
                            )
                        )
                },
                Trace.prototype.traceTransitionIgnored = function (trans) {
                    this.enabled(Category.TRANSITION) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log(
                            transLbl(trans) + ": Ignored  <> " + Object(__WEBPACK_IMPORTED_MODULE_2__strings__.m)(
                                trans
                            )
                        )
                },
                Trace.prototype.traceHookInvocation = function (step, trans, options) {
                    if (this.enabled(Category.HOOK)) {
                        var event = Object(__WEBPACK_IMPORTED_MODULE_0__common_hof__.k)(
                                "traceData.hookType"
                            )(options) || "internal",
                            context = Object(__WEBPACK_IMPORTED_MODULE_0__common_hof__.k)(
                                "traceData.context.state.name"
                            )(options) || Object(__WEBPACK_IMPORTED_MODULE_0__common_hof__.k)(
                                "traceData.context"
                            )(options) || "unknown",
                            name = Object(__WEBPACK_IMPORTED_MODULE_2__strings__.c)(
                                step.registeredHook.callback
                            );
                        __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                            .a
                            .log(
                                transLbl(trans) + ":   Hook -> " + event + " context: " + context + ", " +
                            Object(__WEBPACK_IMPORTED_MODULE_2__strings__.g)(200, name)
                            )
                    }
                },
                Trace.prototype.traceHookResult = function (
                    hookResult,
                    trans,
                    transitionOptions
                ) {
                    this.enabled(Category.HOOK) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log(
                            transLbl(trans) + ":   <- Hook returned: " + Object(__WEBPACK_IMPORTED_MODULE_2__strings__.g)(
                                200,
                                Object(__WEBPACK_IMPORTED_MODULE_2__strings__.m)(
                                    hookResult
                                )
                            )
                        )
                },
                Trace.prototype.traceResolvePath = function (path, when, trans) {
                    this.enabled(Category.RESOLVE) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log(transLbl(trans) + ":         Resolving " + path + " (" + when + ")")
                },
                Trace.prototype.traceResolvableResolved = function (resolvable, trans) {
                    this.enabled(Category.RESOLVE) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log(
                            transLbl(trans) + ":               <- Resolved  " + resolvable + " to: " +
                        Object(__WEBPACK_IMPORTED_MODULE_2__strings__.g)(
                                200,
                                Object(__WEBPACK_IMPORTED_MODULE_2__strings__.m)(
                                    resolvable.data
                                )
                            )
                        )
                },
                Trace.prototype.traceError = function (reason, trans) {
                    this.enabled(Category.TRANSITION) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log(
                            transLbl(trans) + ": <- Rejected " + Object(__WEBPACK_IMPORTED_MODULE_2__strings__.m)(
                                trans
                            ) + ", reason: " + reason
                        )
                },
                Trace.prototype.traceSuccess = function (finalState, trans) {
                    this.enabled(Category.TRANSITION) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log(
                            transLbl(trans) + ": <- Success  " + Object(__WEBPACK_IMPORTED_MODULE_2__strings__.m)(
                                trans
                            ) + ", final state: " + finalState.name
                        )
                },
                Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {
                    void 0 === extra && (extra = ""),
                    this.enabled(Category.UIVIEW) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log(
                            "ui-view: " + Object(__WEBPACK_IMPORTED_MODULE_2__strings__.h)(30, event) +
                        " " + uiViewString(viewData) + extra
                        )
                },
                Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {
                    this.enabled(Category.UIVIEW) && this.traceUIViewEvent(
                        "Updating",
                        viewData,
                        " with ViewConfig from context='" + context + "'"
                    )
                },
                Trace.prototype.traceUIViewFill = function (viewData, html) {
                    this.enabled(Category.UIVIEW) && this.traceUIViewEvent(
                        "Fill",
                        viewData,
                        " with: " + Object(__WEBPACK_IMPORTED_MODULE_2__strings__.g)(
                            200,
                            html
                        )
                    )
                },
                Trace.prototype.traceViewSync = function (pairs) {
                    if (this.enabled(Category.VIEWCONFIG)) {
                        var uivheader = "uiview component fqn",
                            cfgheader = "view config state (view name)",
                            mapping = pairs
                                .map(function (_a) {
                                    var _b,
                                        uiView = _a.uiView,
                                        viewConfig = _a.viewConfig,
                                        uiv = uiView && uiView.fqn,
                                        cfg = viewConfig && viewConfig.viewDecl.$context.name + ": (" + viewConfig.viewDecl.$name + ")";
                                    return _b = {},
                                    _b[uivheader] = uiv,
                                    _b[cfgheader] = cfg,
                                    _b
                                })
                                .sort(function (a, b) {
                                    return (a[uivheader] || "").localeCompare(b[uivheader] || "")
                                });
                        __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                            .a
                            .table(mapping)
                    }
                },
                Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {
                    this.enabled(Category.VIEWCONFIG) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log("VIEWCONFIG: " + event + " " + viewConfigString(viewConfig))
                },
                Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {
                    this.enabled(Category.VIEWCONFIG) && __WEBPACK_IMPORTED_MODULE_3__safeConsole__
                        .a
                        .log("VIEWCONFIG: " + event + " " + uiViewString(viewData))
                },
                Trace
            }(),
            trace = new Trace
    },
    function (module, exports, __webpack_require__) {
        (function (module) {
                var require;
                (function (global, factory) {
                    module.exports = factory()
                })(0, function () {
                        "use strict";
                        function hooks() {
                            return hookCallback.apply(null, arguments)
                        }
                        function setHookCallback(callback) {
                            hookCallback = callback
                        }
                        function isArray(input) {
                            return input instanceof Array || "[object Array]" === Object
                                .prototype
                                .toString
                                .call(input)
                        }
                        function isObject(input) {
                            return null != input && "[object Object]" === Object
                                .prototype
                                .toString
                                .call(input)
                        }
                        function hasOwnProp(a, b) {
                            return Object
                                .prototype
                                .hasOwnProperty
                                .call(a, b)
                        }
                        function isObjectEmpty(obj) {
                            if (Object.getOwnPropertyNames) 
                                return 0 === Object
                                    .getOwnPropertyNames(obj)
                                    .length;
                            var k;
                            for (k in obj) 
                                if (hasOwnProp(obj, k)) 
                                    return !1;
                        return !0
                        }
                        function isUndefined(input) {
                            return void 0 === input
                        }
                        function isNumber(input) {
                            return "number" == typeof input || "[object Number]" === Object
                                .prototype
                                .toString
                                .call(input)
                        }
                        function isDate(input) {
                            return input instanceof Date || "[object Date]" === Object
                                .prototype
                                .toString
                                .call(input)
                        }
                        function map(arr, fn) {
                            var i,
                                res = [];
                            for (i = 0; i < arr.length; ++i) 
                                res.push(fn(arr[i], i));
                            return res
                        }
                        function extend(a, b) {
                            for (var i in b) 
                                hasOwnProp(b, i) && (a[i] = b[i]);
                            return hasOwnProp(b, "toString") && (a.toString = b.toString),
                            hasOwnProp(b, "valueOf") && (a.valueOf = b.valueOf),
                            a
                        }
                        function createUTC(input, format, locale, strict) {
                            return createLocalOrUTC(input, format, locale, strict, !0).utc()
                        }
                        function defaultParsingFlags() {
                            return {
                                empty: !1,
                                unusedTokens: [],
                                unusedInput: [],
                                overflow: -2,
                                charsLeftOver: 0,
                                nullInput: !1,
                                invalidEra: null,
                                invalidMonth: null,
                                invalidFormat: !1,
                                userInvalidated: !1,
                                iso: !1,
                                parsedDateParts: [],
                                era: null,
                                meridiem: null,
                                rfc2822: !1,
                                weekdayMismatch: !1
                            }
                        }
                        function getParsingFlags(m) {
                            return null == m._pf && (m._pf = defaultParsingFlags()),
                            m._pf
                        }
                        function isValid(m) {
                            if (null == m._isValid) {
                                var flags = getParsingFlags(m),
                                    parsedParts = some.call(flags.parsedDateParts, function (i) {
                                        return null != i
                                    }),
                                    isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (
                                        !flags.meridiem || flags.meridiem && parsedParts
                                    );
                                if (
                                    m._strict && (isNowValid = isNowValid && 0 === flags.charsLeftOver && 0 === flags.unusedTokens.length && void 0 === flags.bigHour),
                                    null != Object.isFrozen && Object.isFrozen(m)
                                ) 
                                    return isNowValid;
                                m._isValid = isNowValid
                            }
                            return m._isValid
                        }
                        function createInvalid(flags) {
                            var m = createUTC(NaN);
                            return null != flags
                                ? extend(getParsingFlags(m), flags)
                                : getParsingFlags(m).userInvalidated = !0,
                            m
                        }
                        function copyConfig(to, from) {
                            var i,
                                prop,
                                val;
                            if (
                                isUndefined(from._isAMomentObject) || (to._isAMomentObject = from._isAMomentObject),
                                isUndefined(from._i) || (to._i = from._i),
                                isUndefined(from._f) || (to._f = from._f),
                                isUndefined(from._l) || (to._l = from._l),
                                isUndefined(from._strict) || (to._strict = from._strict),
                                isUndefined(from._tzm) || (to._tzm = from._tzm),
                                isUndefined(from._isUTC) || (to._isUTC = from._isUTC),
                                isUndefined(from._offset) || (to._offset = from._offset),
                                isUndefined(from._pf) || (to._pf = getParsingFlags(from)),
                                isUndefined(from._locale) || (to._locale = from._locale),
                                momentProperties.length > 0
                            ) 
                                for (i = 0; i < momentProperties.length; i++) 
                                    prop = momentProperties[i],
                                    val = from[prop],
                                    isUndefined(val) || (to[prop] = val);
                        return to
                        }
                        function Moment(config) {
                            copyConfig(this, config),
                            this._d = new Date(
                                null != config._d
                                    ? config._d.getTime()
                                    : NaN
                            ),
                            this.isValid() || (this._d = new Date(NaN)),
                            !1 === updateInProgress && (
                                updateInProgress = !0,
                                hooks.updateOffset(this),
                                updateInProgress = !1
                            )
                        }
                        function isMoment(obj) {
                            return obj instanceof Moment || null != obj && null != obj._isAMomentObject
                        }
                        function warn(msg) {
                            !1 === hooks.suppressDeprecationWarnings && "undefined" != typeof console && console.warn && console.warn(
                                "Deprecation warning: " + msg
                            )
                        }
                        function deprecate(msg, fn) {
                            var firstTime = !0;
                            return extend(function () {
                                if (
                                    null != hooks.deprecationHandler && hooks.deprecationHandler(null, msg),
                                    firstTime
                                ) {
                                    var arg,
                                        i,
                                        key,
                                        args = [];
                                    for (i = 0; i < arguments.length; i++) {
                                        if (arg = "", "object" == typeof arguments[i]) {
                                            arg += "\n[" + i + "] ";
                                            for (key in arguments[0]) 
                                                hasOwnProp(arguments[0], key) && (arg += key + ": " + arguments[0][key] + ", ");
                                            arg = arg.slice(0, -2)
                                        } else 
                                            arg = arguments[i];
                                        args.push(arg)
                                    }
                                    warn(
                                        msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + (
                                            new Error
                                        ).stack
                                    ),
                                    firstTime = !1
                                }
                                return fn.apply(this, arguments)
                            }, fn)
                        }
                        function deprecateSimple(name, msg) {
                            null != hooks.deprecationHandler && hooks.deprecationHandler(name, msg),
                            deprecations[name] || (warn(msg), deprecations[name] = !0)
                        }
                        function isFunction(input) {
                            return "undefined" != typeof Function && input instanceof Function || "[object Function]" === Object
                                .prototype
                                .toString
                                .call(input)
                        }
                        function set(config) {
                            var prop,
                                i;
                            for (i in config) 
                                hasOwnProp(config, i) && (
                                    prop = config[i],
                                    isFunction(prop)
                                        ? this[i] = prop
                                        : this["_" + i] = prop
                                );
                            this._config = config,
                            this._dayOfMonthOrdinalParseLenient = new RegExp(
                                (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" +
                            /\d{1,2}/.source
                            )
                        }
                        function mergeConfigs(parentConfig, childConfig) {
                            var prop,
                                res = extend({}, parentConfig);
                            for (prop in childConfig) 
                                hasOwnProp(childConfig, prop) && (
                                    isObject(parentConfig[prop]) && isObject(childConfig[prop])
                                        ? (
                                            res[prop] = {},
                                            extend(res[prop], parentConfig[prop]),
                                            extend(res[prop], childConfig[prop])
                                        )
                                        : null != childConfig[prop]
                                            ? res[prop] = childConfig[prop]
                                            : delete res[prop]
                                );
                            for (prop in parentConfig) 
                                hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(
                                    parentConfig[prop]
                                ) && (res[prop] = extend({}, res[prop]));
                            return res
                        }
                        function Locale(config) {
                            null != config && this.set(config)
                        }
                        function calendar(key, mom, now) {
                            var output = this._calendar[key] || this._calendar.sameElse;
                            return isFunction(output)
                                ? output.call(mom, now)
                                : output
                        }
                        function zeroFill(number, targetLength, forceSign) {
                            var absNumber = "" + Math.abs(number),
                                zerosToFill = targetLength - absNumber.length;
                            return (
                                number >= 0
                                    ? forceSign
                                        ? "+"
                                        : ""
                                    : "-"
                            ) + Math
                                .pow(10, Math.max(0, zerosToFill))
                                .toString()
                                .substr(1) + absNumber
                        }
                        function addFormatToken(token, padded, ordinal, callback) {
                            var func = callback;
                            "string" == typeof callback && (func = function () {
                                return this[callback]()
                            }),
                            token && (formatTokenFunctions[token] = func),
                            padded && (formatTokenFunctions[padded[0]] = function () {
                                return zeroFill(func.apply(this, arguments), padded[1], padded[2])
                            }),
                            ordinal && (formatTokenFunctions[ordinal] = function () {
                                return this
                                    .localeData()
                                    .ordinal(func.apply(this, arguments), token)
                            })
                        }
                        function removeFormattingTokens(input) {
                            return input.match(/\[[\s\S]/)
                                ? input.replace(/^\[|\]$/g, "")
                                : input.replace(/\\/g, "")
                        }
                        function makeFormatFunction(format) {
                            var i,
                                length,
                                array = format.match(formattingTokens);
                            for (i = 0, length = array.length; i < length; i++) 
                                formatTokenFunctions[array[i]]
                                    ? array[i] = formatTokenFunctions[array[i]]
                                    : array[i] = removeFormattingTokens(array[i]);
                            return function (mom) {
                                var i,
                                    output = "";
                                for (i = 0; i < length; i++) 
                                    output += isFunction(array[i])
                                        ? array[i].call(mom, format)
                                        : array[i];
                                return output
                            }
                        }
                        function formatMoment(m, format) {
                            return m.isValid()
                                ? (
                                    format = expandFormat(format, m.localeData()),
                                    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format),
                                    formatFunctions[format](m)
                                )
                                : m
                                    .localeData()
                                    .invalidDate()
                        }
                        function expandFormat(format, locale) {
                            function replaceLongDateFormatTokens(input) {
                                return locale.longDateFormat(input) || input
                            }
                            var i = 5;
                            for (
                                localFormattingTokens.lastIndex = 0;
                                i >= 0 && localFormattingTokens.test(format);
                            ) 
                                format = format.replace(localFormattingTokens, replaceLongDateFormatTokens),
                                localFormattingTokens.lastIndex = 0,
                                i -= 1;
                            return format
                        }
                        function longDateFormat(key) {
                            var format = this._longDateFormat[key],
                                formatUpper = this._longDateFormat[key.toUpperCase()];
                            return format || !formatUpper
                                ? format
                                : (
                                    this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function (tok) {
                                        return "MMMM" === tok || "MM" === tok || "DD" === tok || "dddd" === tok
                                            ? tok.slice(1)
                                            : tok
                                    }).join(""),
                                    this._longDateFormat[key]
                                )
                        }
                        function invalidDate() {
                            return this._invalidDate
                        }
                        function ordinal(number) {
                            return this
                                ._ordinal
                                .replace("%d", number)
                        }
                        function relativeTime(number, withoutSuffix, string, isFuture) {
                            var output = this._relativeTime[string];
                            return isFunction(output)
                                ? output(number, withoutSuffix, string, isFuture)
                                : output.replace(/%d/i, number)
                        }
                        function pastFuture(diff, output) {
                            var format = this._relativeTime[
                                diff > 0
                                    ? "future"
                                    : "past"
                            ];
                            return isFunction(format)
                                ? format(output)
                                : format.replace(/%s/i, output)
                        }
                        function addUnitAlias(unit, shorthand) {
                            var lowerCase = unit.toLowerCase();
                            aliases[lowerCase] = aliases[lowerCase + "s"] = aliases[shorthand] = unit
                        }
                        function normalizeUnits(units) {
                            return "string" == typeof units
                                ? aliases[units] || aliases[units.toLowerCase()]
                                : void 0
                        }
                        function normalizeObjectUnits(inputObject) {
                            var normalizedProp,
                                prop,
                                normalizedInput = {};
                            for (prop in inputObject) 
                                hasOwnProp(inputObject, prop) && (normalizedProp = normalizeUnits(prop)) && (
                                    normalizedInput[normalizedProp] = inputObject[prop]
                                );
                            return normalizedInput
                        }
                        function addUnitPriority(unit, priority) {
                            priorities[unit] = priority
                        }
                        function getPrioritizedUnits(unitsObj) {
                            var u,
                                units = [];
                            for (u in unitsObj) 
                                hasOwnProp(unitsObj, u) && units.push({unit: u, priority: priorities[u]});
                            return units.sort(function (a, b) {
                                return a.priority - b.priority
                            }),
                            units
                        }
                        function isLeapYear(year) {
                            return year % 4 == 0 && year % 100 != 0 || year % 400 == 0
                        }
                        function absFloor(number) {
                            return number < 0
                                ? Math.ceil(number) || 0
                                : Math.floor(number)
                        }
                        function toInt(argumentForCoercion) {
                            var coercedNumber = +argumentForCoercion,
                                value = 0;
                            return 0 !== coercedNumber && isFinite(coercedNumber) && (
                                value = absFloor(coercedNumber)
                            ),
                            value
                        }
                        function makeGetSet(unit, keepTime) {
                            return function (value) {
                                return null != value
                                    ? (set$1(this, unit, value), hooks.updateOffset(this, keepTime), this)
                                    : get(this, unit)
                            }
                        }
                        function get(mom, unit) {
                            return mom.isValid()
                                ? mom._d["get" + (
                                        mom._isUTC
                                            ? "UTC"
                                            : ""
                                    ) + unit]()
                                : NaN
                        }
                        function set$1(mom, unit, value) {
                            mom.isValid() && !isNaN(value) && (
                                "FullYear" === unit && isLeapYear(mom.year()) && 1 === mom.month() && 29 === mom.date()
                                    ? (value = toInt(value), mom._d["set" + (
                                            mom._isUTC
                                                ? "UTC"
                                                : ""
                                        ) + unit](value, mom.month(), daysInMonth(value, mom.month())))
                                    : mom._d["set" + (
                                            mom._isUTC
                                                ? "UTC"
                                                : ""
                                        ) + unit](value)
                            )
                        }
                        function stringGet(units) {
                            return units = normalizeUnits(units),
                            isFunction(this[units])
                                ? this[units]()
                                : this
                        }
                        function stringSet(units, value) {
                            if ("object" == typeof units) {
                                units = normalizeObjectUnits(units);
                                var i,
                                    prioritized = getPrioritizedUnits(units);
                                for (i = 0; i < prioritized.length; i++) 
                                    this[prioritized[i].unit](units[prioritized[i].unit])
                            } else if (units = normalizeUnits(units), isFunction(this[units])) 
                                return this[units](value);
                            return this
                        }
                        function addRegexToken(token, regex, strictRegex) {
                            regexes[token] = isFunction(regex)
                                ? regex
                                : function (isStrict, localeData) {
                                    return isStrict && strictRegex
                                        ? strictRegex
                                        : regex
                                }
                        }
                        function getParseRegexForToken(token, config) {
                            return hasOwnProp(regexes, token)
                                ? regexes[token](config._strict, config._locale)
                                : new RegExp(unescapeFormat(token))
                        }
                        function unescapeFormat(s) {
                            return regexEscape(
                                s.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
                                    return p1 || p2 || p3 || p4
                                })
                            )
                        }
                        function regexEscape(s) {
                            return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
                        }
                        function addParseToken(token, callback) {
                            var i,
                                func = callback;
                            for (
                                "string" == typeof token && (token = [token]),
                                isNumber(callback) && (func = function (input, array) {
                                    array[callback] = toInt(input)
                                }),
                                i = 0;
                                i < token.length;
                                i++
                            ) 
                                tokens[token[i]] = func
                        }
                        function addWeekParseToken(token, callback) {
                            addParseToken(token, function (input, array, config, token) {
                                config._w = config._w || {},
                                callback(input, config._w, config, token)
                            })
                        }
                        function addTimeToArrayFromToken(token, input, config) {
                            null != input && hasOwnProp(tokens, token) && tokens[token](
                                input,
                                config._a,
                                config,
                                token
                            )
                        }
                        function mod(n, x) {
                            return (n % x + x) % x
                        }
                        function daysInMonth(year, month) {
                            if (isNaN(year) || isNaN(month)) 
                                return NaN;
                            var modMonth = mod(month, 12);
                            return year += (month - modMonth) / 12,
                            1 === modMonth
                                ? isLeapYear(year)
                                    ? 29
                                    : 28
                                : 31 - modMonth % 7 % 2
                        }
                        function localeMonths(m, format) {
                            return m
                                ? isArray(this._months)
                                    ? this._months[m.month()]
                                    : this._months[
                                        (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                                            ? "format"
                                            : "standalone"
                                    ][m.month()]
                                : isArray(this._months)
                                    ? this._months
                                    : this._months.standalone
                        }
                        function localeMonthsShort(m, format) {
                            return m
                                ? isArray(this._monthsShort)
                                    ? this._monthsShort[m.month()]
                                    : this._monthsShort[
                                        MONTHS_IN_FORMAT.test(format)
                                            ? "format"
                                            : "standalone"
                                    ][m.month()]
                                : isArray(this._monthsShort)
                                    ? this._monthsShort
                                    : this._monthsShort.standalone
                        }
                        function handleStrictParse(monthName, format, strict) {
                            var i,
                                ii,
                                mom,
                                llc = monthName.toLocaleLowerCase();
                            if (!this._monthsParse) 
                                for (
                                    this._monthsParse = [],
                                    this._longMonthsParse = [],
                                    this._shortMonthsParse = [],
                                    i = 0;
                                    i < 12;
                                    ++i
                                ) 
                                    mom = createUTC([2e3, i]),
                                    this._shortMonthsParse[i] = this
                                        .monthsShort(mom, "")
                                        .toLocaleLowerCase(),
                                    this._longMonthsParse[i] = this
                                        .months(mom, "")
                                        .toLocaleLowerCase();
                            return strict
                                ? "MMM" === format
                                    ? (
                                        ii = indexOf.call(this._shortMonthsParse, llc),
                                        -1 !== ii
                                            ? ii
                                            : null
                                    )
                                    : (
                                        ii = indexOf.call(this._longMonthsParse, llc),
                                        -1 !== ii
                                            ? ii
                                            : null
                                    )
                                : "MMM" === format
                                    ? -1 !== (ii = indexOf.call(this._shortMonthsParse, llc))
                                        ? ii
                                        : (
                                            ii = indexOf.call(this._longMonthsParse, llc),
                                            -1 !== ii
                                                ? ii
                                                : null
                                        )
                                    : -1 !== (ii = indexOf.call(this._longMonthsParse, llc))
                                        ? ii
                                        : (
                                            ii = indexOf.call(this._shortMonthsParse, llc),
                                            -1 !== ii
                                                ? ii
                                                : null
                                        )
                        }
                        function localeMonthsParse(monthName, format, strict) {
                            var i,
                                mom,
                                regex;
                            if (this._monthsParseExact) 
                                return handleStrictParse.call(this, monthName, format, strict);
                            for (this._monthsParse || (
                                this._monthsParse = [],
                                this._longMonthsParse = [],
                                this._shortMonthsParse = []
                            ), i = 0; i < 12; i++) {
                                if (
                                    mom = createUTC([2e3, i]),
                                    strict && !this._longMonthsParse[i] && (this._longMonthsParse[i] = new RegExp(
                                        "^" + this.months(mom, "").replace(".", "") + "$",
                                        "i"
                                    ), this._shortMonthsParse[i] = new RegExp(
                                        "^" + this.monthsShort(mom, "").replace(".", "") + "$",
                                        "i"
                                    )),
                                    strict || this._monthsParse[i] || (
                                        regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, ""),
                                        this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i")
                                    ),
                                    strict && "MMMM" === format && this._longMonthsParse[i].test(monthName)
                                ) 
                                    return i;
                                if (strict && "MMM" === format && this._shortMonthsParse[i].test(monthName)) 
                                    return i;
                                if (!strict && this._monthsParse[i].test(monthName)) 
                                    return i
                            }
                        }
                        function setMonth(mom, value) {
                            var dayOfMonth;
                            if (!mom.isValid()) 
                                return mom;
                            if ("string" == typeof value) 
                                if (/^\d+$/.test(value)) 
                                    value = toInt(value);
                                else if (value = mom.localeData().monthsParse(value), !isNumber(value)) 
                                    return mom;
                        return dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value)),
                            mom._d["set" + (
                                    mom._isUTC
                                        ? "UTC"
                                        : ""
                                ) + "Month"](value, dayOfMonth),
                            mom
                        }
                        function getSetMonth(value) {
                            return null != value
                                ? (setMonth(this, value), hooks.updateOffset(this, !0), this)
                                : get(this, "Month")
                        }
                        function getDaysInMonth() {
                            return daysInMonth(this.year(), this.month())
                        }
                        function monthsShortRegex(isStrict) {
                            return this._monthsParseExact
                                ? (
                                    hasOwnProp(this, "_monthsRegex") || computeMonthsParse.call(this),
                                    isStrict
                                        ? this._monthsShortStrictRegex
                                        : this._monthsShortRegex
                                )
                                : (
                                    hasOwnProp(this, "_monthsShortRegex") || (this._monthsShortRegex = defaultMonthsShortRegex),
                                    this._monthsShortStrictRegex && isStrict
                                        ? this._monthsShortStrictRegex
                                        : this._monthsShortRegex
                                )
                        }
                        function monthsRegex(isStrict) {
                            return this._monthsParseExact
                                ? (
                                    hasOwnProp(this, "_monthsRegex") || computeMonthsParse.call(this),
                                    isStrict
                                        ? this._monthsStrictRegex
                                        : this._monthsRegex
                                )
                                : (
                                    hasOwnProp(this, "_monthsRegex") || (this._monthsRegex = defaultMonthsRegex),
                                    this._monthsStrictRegex && isStrict
                                        ? this._monthsStrictRegex
                                        : this._monthsRegex
                                )
                        }
                        function computeMonthsParse() {
                            function cmpLenRev(a, b) {
                                return b.length - a.length
                            }
                            var i,
                                mom,
                                shortPieces = [],
                                longPieces = [],
                                mixedPieces = [];
                            for (i = 0; i < 12; i++) 
                                mom = createUTC([2e3, i]),
                                shortPieces.push(this.monthsShort(mom, "")),
                                longPieces.push(this.months(mom, "")),
                                mixedPieces.push(this.months(mom, "")),
                                mixedPieces.push(this.monthsShort(mom, ""));
                            for (
                                shortPieces.sort(cmpLenRev),
                                longPieces.sort(cmpLenRev),
                                mixedPieces.sort(cmpLenRev),
                                i = 0;
                                i < 12;
                                i++
                            ) 
                                shortPieces[i] = regexEscape(shortPieces[i]),
                                longPieces[i] = regexEscape(longPieces[i]);
                            for (i = 0; i < 24; i++) 
                                mixedPieces[i] = regexEscape(mixedPieces[i]);
                            this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i"),
                            this._monthsShortRegex = this._monthsRegex,
                            this._monthsStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i"),
                            this._monthsShortStrictRegex = new RegExp(
                                "^(" + shortPieces.join("|") + ")",
                                "i"
                            )
                        }
                        function daysInYear(year) {
                            return isLeapYear(year)
                                ? 366
                                : 365
                        }
                        function getIsLeapYear() {
                            return isLeapYear(this.year())
                        }
                        function createDate(y, m, d, h, M, s, ms) {
                            var date;
                            return y < 100 && y >= 0
                                ? (
                                    date = new Date(y + 400, m, d, h, M, s, ms),
                                    isFinite(date.getFullYear()) && date.setFullYear(y)
                                )
                                : date = new Date(y, m, d, h, M, s, ms),
                            date
                        }
                        function createUTCDate(y) {
                            var date,
                                args;
                            return y < 100 && y >= 0
                                ? (
                                    args = Array.prototype.slice.call(arguments),
                                    args[0] = y + 400,
                                    date = new Date(Date.UTC.apply(null, args)),
                                    isFinite(date.getUTCFullYear()) && date.setUTCFullYear(y)
                                )
                                : date = new Date(Date.UTC.apply(null, arguments)),
                            date
                        }
                        function firstWeekOffset(year, dow, doy) {
                            var fwd = 7 + dow - doy;
                            return -(7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7 + fwd - 1
                        }
                        function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
                            var resYear,
                                resDayOfYear,
                                localWeekday = (7 + weekday - dow) % 7,
                                weekOffset = firstWeekOffset(year, dow, doy),
                                dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;
                            return dayOfYear <= 0
                                ? (resYear = year - 1, resDayOfYear = daysInYear(resYear) + dayOfYear)
                                : dayOfYear > daysInYear(year)
                                    ? (resYear = year + 1, resDayOfYear = dayOfYear - daysInYear(year))
                                    : (resYear = year, resDayOfYear = dayOfYear), {
                                year: resYear,
                                dayOfYear: resDayOfYear
                            }
                        }
                        function weekOfYear(mom, dow, doy) {
                            var resWeek,
                                resYear,
                                weekOffset = firstWeekOffset(mom.year(), dow, doy),
                                week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1;
                            return week < 1
                                ? (resYear = mom.year() - 1, resWeek = week + weeksInYear(resYear, dow, doy))
                                : week > weeksInYear(mom.year(), dow, doy)
                                    ? (
                                        resWeek = week - weeksInYear(mom.year(), dow, doy),
                                        resYear = mom.year() + 1
                                    )
                                    : (resYear = mom.year(), resWeek = week), {
                                week: resWeek,
                                year: resYear
                            }
                        }
                        function weeksInYear(year, dow, doy) {
                            var weekOffset = firstWeekOffset(year, dow, doy),
                                weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
                            return (daysInYear(year) - weekOffset + weekOffsetNext) / 7
                        }
                        function localeWeek(mom) {
                            return weekOfYear(mom, this._week.dow, this._week.doy).week
                        }
                        function localeFirstDayOfWeek() {
                            return this._week.dow
                        }
                        function localeFirstDayOfYear() {
                            return this._week.doy
                        }
                        function getSetWeek(input) {
                            var week = this
                                .localeData()
                                .week(this);
                            return null == input
                                ? week
                                : this.add(7 * (input - week), "d")
                        }
                        function getSetISOWeek(input) {
                            var week = weekOfYear(this, 1, 4).week;
                            return null == input
                                ? week
                                : this.add(7 * (input - week), "d")
                        }
                        function parseWeekday(input, locale) {
                            return "string" != typeof input
                                ? input
                                : isNaN(input)
                                    ? (
                                        input = locale.weekdaysParse(input),
                                        "number" == typeof input
                                            ? input
                                            : null
                                    )
                                    : parseInt(input, 10)
                        }
                        function parseIsoWeekday(input, locale) {
                            return "string" == typeof input
                                ? locale.weekdaysParse(input) % 7 || 7
                                : isNaN(input)
                                    ? null
                                    : input
                        }
                        function shiftWeekdays(ws, n) {
                            return ws
                                .slice(n, 7)
                                .concat(ws.slice(0, n))
                        }
                        function localeWeekdays(m, format) {
                            var weekdays = isArray(this._weekdays)
                                ? this._weekdays
                                : this._weekdays[
                                    m && !0 !== m && this
                                        ._weekdays
                                        .isFormat
                                        .test(format)
                                            ? "format"
                                            : "standalone"
                                ];
                            return !0 === m
                                ? shiftWeekdays(weekdays, this._week.dow)
                                : m
                                    ? weekdays[m.day()]
                                    : weekdays
                        }
                        function localeWeekdaysShort(m) {
                            return !0 === m
                                ? shiftWeekdays(this._weekdaysShort, this._week.dow)
                                : m
                                    ? this._weekdaysShort[m.day()]
                                    : this._weekdaysShort
                        }
                        function localeWeekdaysMin(m) {
                            return !0 === m
                                ? shiftWeekdays(this._weekdaysMin, this._week.dow)
                                : m
                                    ? this._weekdaysMin[m.day()]
                                    : this._weekdaysMin
                        }
                        function handleStrictParse$1(weekdayName, format, strict) {
                            var i,
                                ii,
                                mom,
                                llc = weekdayName.toLocaleLowerCase();
                            if (!this._weekdaysParse) 
                                for (
                                    this._weekdaysParse = [],
                                    this._shortWeekdaysParse = [],
                                    this._minWeekdaysParse = [],
                                    i = 0;
                                    i < 7;
                                    ++i
                                ) 
                                    mom = createUTC([2e3, 1]).day(i),
                                    this._minWeekdaysParse[i] = this
                                        .weekdaysMin(mom, "")
                                        .toLocaleLowerCase(),
                                    this._shortWeekdaysParse[i] = this
                                        .weekdaysShort(mom, "")
                                        .toLocaleLowerCase(),
                                    this._weekdaysParse[i] = this
                                        .weekdays(mom, "")
                                        .toLocaleLowerCase();
                            return strict
                                ? "dddd" === format
                                    ? (
                                        ii = indexOf.call(this._weekdaysParse, llc),
                                        -1 !== ii
                                            ? ii
                                            : null
                                    )
                                    : "ddd" === format
                                        ? (
                                            ii = indexOf.call(this._shortWeekdaysParse, llc),
                                            -1 !== ii
                                                ? ii
                                                : null
                                        )
                                        : (
                                            ii = indexOf.call(this._minWeekdaysParse, llc),
                                            -1 !== ii
                                                ? ii
                                                : null
                                        )
                                : "dddd" === format
                                    ? -1 !== (ii = indexOf.call(this._weekdaysParse, llc))
                                        ? ii
                                        : -1 !== (ii = indexOf.call(this._shortWeekdaysParse, llc))
                                            ? ii
                                            : (
                                                ii = indexOf.call(this._minWeekdaysParse, llc),
                                                -1 !== ii
                                                    ? ii
                                                    : null
                                            )
                                    : "ddd" === format
                                        ? -1 !== (ii = indexOf.call(this._shortWeekdaysParse, llc))
                                            ? ii
                                            : -1 !== (ii = indexOf.call(this._weekdaysParse, llc))
                                                ? ii
                                                : (
                                                    ii = indexOf.call(this._minWeekdaysParse, llc),
                                                    -1 !== ii
                                                        ? ii
                                                        : null
                                                )
                                        : -1 !== (ii = indexOf.call(this._minWeekdaysParse, llc))
                                            ? ii
                                            : -1 !== (ii = indexOf.call(this._weekdaysParse, llc))
                                                ? ii
                                                : (
                                                    ii = indexOf.call(this._shortWeekdaysParse, llc),
                                                    -1 !== ii
                                                        ? ii
                                                        : null
                                                )
                        }
                        function localeWeekdaysParse(weekdayName, format, strict) {
                            var i,
                                mom,
                                regex;
                            if (this._weekdaysParseExact) 
                                return handleStrictParse$1.call(this, weekdayName, format, strict);
                            for (this._weekdaysParse || (
                                this._weekdaysParse = [],
                                this._minWeekdaysParse = [],
                                this._shortWeekdaysParse = [],
                                this._fullWeekdaysParse = []
                            ), i = 0; i < 7; i++) {
                                if (
                                    mom = createUTC([2e3, 1]).day(i),
                                    strict && !this._fullWeekdaysParse[i] && (this._fullWeekdaysParse[i] = new RegExp(
                                        "^" + this.weekdays(mom, "").replace(".", "\\.?") + "$",
                                        "i"
                                    ), this._shortWeekdaysParse[i] = new RegExp(
                                        "^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$",
                                        "i"
                                    ), this._minWeekdaysParse[i] = new RegExp(
                                        "^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$",
                                        "i"
                                    )),
                                    this._weekdaysParse[i] || (
                                        regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") +
                                                "|^" + this.weekdaysMin(mom, ""),
                                        this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i")
                                    ),
                                    strict && "dddd" === format && this._fullWeekdaysParse[i].test(weekdayName)
                                ) 
                                    return i;
                                if (strict && "ddd" === format && this._shortWeekdaysParse[i].test(weekdayName)) 
                                    return i;
                                if (strict && "dd" === format && this._minWeekdaysParse[i].test(weekdayName)) 
                                    return i;
                                if (!strict && this._weekdaysParse[i].test(weekdayName)) 
                                    return i
                            }
                        }
                        function getSetDayOfWeek(input) {
                            if (!this.isValid()) 
                                return null != input
                                    ? this
                                    : NaN;
                            var day = this._isUTC
                                ? this
                                    ._d
                                    .getUTCDay()
                                : this
                                    ._d
                                    .getDay();
                            return null != input
                                ? (input = parseWeekday(input, this.localeData()), this.add(input - day, "d"))
                                : day
                        }
                        function getSetLocaleDayOfWeek(input) {
                            if (!this.isValid()) 
                                return null != input
                                    ? this
                                    : NaN;
                            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
                            return null == input
                                ? weekday
                                : this.add(input - weekday, "d")
                        }
                        function getSetISODayOfWeek(input) {
                            if (!this.isValid()) 
                                return null != input
                                    ? this
                                    : NaN;
                            if (null != input) {
                                var weekday = parseIsoWeekday(input, this.localeData());
                                return this.day(
                                    this.day() % 7
                                        ? weekday
                                        : weekday - 7
                                )
                            }
                            return this.day() || 7
                        }
                        function weekdaysRegex(isStrict) {
                            return this._weekdaysParseExact
                                ? (
                                    hasOwnProp(this, "_weekdaysRegex") || computeWeekdaysParse.call(this),
                                    isStrict
                                        ? this._weekdaysStrictRegex
                                        : this._weekdaysRegex
                                )
                                : (
                                    hasOwnProp(this, "_weekdaysRegex") || (this._weekdaysRegex = defaultWeekdaysRegex),
                                    this._weekdaysStrictRegex && isStrict
                                        ? this._weekdaysStrictRegex
                                        : this._weekdaysRegex
                                )
                        }
                        function weekdaysShortRegex(isStrict) {
                            return this._weekdaysParseExact
                                ? (
                                    hasOwnProp(this, "_weekdaysRegex") || computeWeekdaysParse.call(this),
                                    isStrict
                                        ? this._weekdaysShortStrictRegex
                                        : this._weekdaysShortRegex
                                )
                                : (
                                    hasOwnProp(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = defaultWeekdaysShortRegex),
                                    this._weekdaysShortStrictRegex && isStrict
                                        ? this._weekdaysShortStrictRegex
                                        : this._weekdaysShortRegex
                                )
                        }
                        function weekdaysMinRegex(isStrict) {
                            return this._weekdaysParseExact
                                ? (
                                    hasOwnProp(this, "_weekdaysRegex") || computeWeekdaysParse.call(this),
                                    isStrict
                                        ? this._weekdaysMinStrictRegex
                                        : this._weekdaysMinRegex
                                )
                                : (
                                    hasOwnProp(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = defaultWeekdaysMinRegex),
                                    this._weekdaysMinStrictRegex && isStrict
                                        ? this._weekdaysMinStrictRegex
                                        : this._weekdaysMinRegex
                                )
                        }
                        function computeWeekdaysParse() {
                            function cmpLenRev(a, b) {
                                return b.length - a.length
                            }
                            var i,
                                mom,
                                minp,
                                shortp,
                                longp,
                                minPieces = [],
                                shortPieces = [],
                                longPieces = [],
                                mixedPieces = [];
                            for (i = 0; i < 7; i++) 
                                mom = createUTC([2e3, 1]).day(i),
                                minp = regexEscape(this.weekdaysMin(mom, "")),
                                shortp = regexEscape(this.weekdaysShort(mom, "")),
                                longp = regexEscape(this.weekdays(mom, "")),
                                minPieces.push(minp),
                                shortPieces.push(shortp),
                                longPieces.push(longp),
                                mixedPieces.push(minp),
                                mixedPieces.push(shortp),
                                mixedPieces.push(longp);
                            minPieces.sort(cmpLenRev),
                            shortPieces.sort(cmpLenRev),
                            longPieces.sort(cmpLenRev),
                            mixedPieces.sort(cmpLenRev),
                            this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i"),
                            this._weekdaysShortRegex = this._weekdaysRegex,
                            this._weekdaysMinRegex = this._weekdaysRegex,
                            this._weekdaysStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i"),
                            this._weekdaysShortStrictRegex = new RegExp(
                                "^(" + shortPieces.join("|") + ")",
                                "i"
                            ),
                            this._weekdaysMinStrictRegex = new RegExp(
                                "^(" + minPieces.join("|") + ")",
                                "i"
                            )
                        }
                        function hFormat() {
                            return this.hours() % 12 || 12
                        }
                        function kFormat() {
                            return this.hours() || 24
                        }
                        function meridiem(token, lowercase) {
                            addFormatToken(token, 0, 0, function () {
                                return this
                                    .localeData()
                                    .meridiem(this.hours(), this.minutes(), lowercase)
                            })
                        }
                        function matchMeridiem(isStrict, locale) {
                            return locale._meridiemParse
                        }
                        function localeIsPM(input) {
                            return "p" === (input + "")
                                .toLowerCase()
                                .charAt(0)
                        }
                        function localeMeridiem(hours, minutes, isLower) {
                            return hours > 11
                                ? isLower
                                    ? "pm"
                                    : "PM"
                                : isLower
                                    ? "am"
                                    : "AM"
                        }
                        function commonPrefix(arr1, arr2) {
                            var i,
                                minl = Math.min(arr1.length, arr2.length);
                            for (i = 0; i < minl; i += 1) 
                                if (arr1[i] !== arr2[i]) 
                                    return i;
                        return minl
                        }
                        function normalizeLocale(key) {
                            return key
                                ? key
                                    .toLowerCase()
                                    .replace("_", "-")
                                : key
                        }
                        function chooseLocale(names) {
                            for (var j, next, locale, split, i = 0; i < names.length;) {
                                for (
                                    split = normalizeLocale(names[i]).split("-"),
                                    j = split.length,
                                    next = normalizeLocale(names[i + 1]),
                                    next = next
                                        ? next.split("-")
                                        : null; j > 0;
                                ) {
                                    if (locale = loadLocale(split.slice(0, j).join("-"))) 
                                        return locale;
                                    if (next && next.length >= j && commonPrefix(split, next) >= j - 1) 
                                        break;
                                    j--
                                }
                                i++
                            }
                            return globalLocale
                        }
                        function loadLocale(name) {
                            var oldLocale = null;
                            if (void 0 === locales[name] && void 0 !== module && module && module.exports) 
                                try {
                                    oldLocale = globalLocale._abbr,
                                    require,
                                    function webpackMissingModule() {
                                        var e = new Error('Cannot find module "./locale"');
                                        throw e.code = "MODULE_NOT_FOUND",
                                        e
                                    }(),
                                    getSetGlobalLocale(oldLocale)
                                } catch (e) {
                                    locales[name] = null
                                }
                            return locales[name]
                        }
                        function getSetGlobalLocale(key, values) {
                            var data;
                            return key && (
                                data = isUndefined(values)
                                    ? getLocale(key)
                                    : defineLocale(key, values),
                                data
                                    ? globalLocale = data
                                    : "undefined" != typeof console && console.warn && console.warn(
                                        "Locale " + key + " not found. Did you forget to load it?"
                                    )
                            ),
                            globalLocale._abbr
                        }
                        function defineLocale(name, config) {
                            if (null !== config) {
                                var locale,
                                    parentConfig = baseConfig;
                                if (config.abbr = name, null != locales[name]) 
                                    deprecateSimple(
                                        "defineLocaleOverride",
                                        "use moment.updateLocale(localeName, config) to change an existing locale. mome" +
                                            "nt.defineLocale(localeName, config) should only be used for creating a new loc" +
                                            "ale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
                                    ),
                                    parentConfig = locales[name]._config;
                                else if (null != config.parentLocale) 
                                    if (null != locales[config.parentLocale]) 
                                        parentConfig = locales[config.parentLocale]._config;
                                    else {
                                        if (null == (locale = loadLocale(config.parentLocale))) 
                                            return localeFamilies[config.parentLocale] || (
                                                localeFamilies[config.parentLocale] = []
                                            ),
                                            localeFamilies[config.parentLocale].push({name: name, config: config}),
                                            null;
                                        parentConfig = locale._config
                                    }
                                return locales[name] = new Locale(mergeConfigs(parentConfig, config)),
                                localeFamilies[name] && localeFamilies[name].forEach(function (x) {
                                    defineLocale(x.name, x.config)
                                }),
                                getSetGlobalLocale(name),
                                locales[name]
                            }
                            return delete locales[name],
                            null
                        }
                        function updateLocale(name, config) {
                            if (null != config) {
                                var locale,
                                    tmpLocale,
                                    parentConfig = baseConfig;
                                null != locales[name] && null != locales[name].parentLocale
                                    ? locales[name].set(mergeConfigs(locales[name]._config, config))
                                    : (
                                        tmpLocale = loadLocale(name),
                                        null != tmpLocale && (parentConfig = tmpLocale._config),
                                        config = mergeConfigs(parentConfig, config),
                                        null == tmpLocale && (config.abbr = name),
                                        locale = new Locale(config),
                                        locale.parentLocale = locales[name],
                                        locales[name] = locale
                                    ),
                                getSetGlobalLocale(name)
                            } else 
                                null != locales[name] && (
                                    null != locales[name].parentLocale
                                        ? (
                                            locales[name] = locales[name].parentLocale,
                                            name === getSetGlobalLocale() && getSetGlobalLocale(name)
                                        )
                                        : null != locales[name] && delete locales[name]
                                );
                            return locales[name]
                        }
                        function getLocale(key) {
                            var locale;
                            if (key && key._locale && key._locale._abbr && (key = key._locale._abbr), !key) 
                                return globalLocale;
                            if (!isArray(key)) {
                                if (locale = loadLocale(key)) 
                                    return locale;
                                key = [key]
                            }
                            return chooseLocale(key)
                        }
                        function listLocales() {
                            return keys(locales)
                        }
                        function checkOverflow(m) {
                            var overflow,
                                a = m._a;
                            return a && -2 === getParsingFlags(m).overflow && (
                                overflow = a[MONTH] < 0 || a[MONTH] > 11
                                    ? MONTH
                                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                                        ? DATE
                                        : a[HOUR] < 0 || a[HOUR] > 24 || 24 === a[HOUR] && (
                                            0 !== a[MINUTE] || 0 !== a[SECOND] || 0 !== a[MILLISECOND]
                                        )
                                            ? HOUR
                                            : a[MINUTE] < 0 || a[MINUTE] > 59
                                                ? MINUTE
                                                : a[SECOND] < 0 || a[SECOND] > 59
                                                    ? SECOND
                                                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                                                        ? MILLISECOND
                                                        : -1,
                                getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE) && (
                                    overflow = DATE
                                ),
                                getParsingFlags(m)._overflowWeeks && -1 === overflow && (overflow = WEEK),
                                getParsingFlags(m)._overflowWeekday && -1 === overflow && (overflow = WEEKDAY),
                                getParsingFlags(m).overflow = overflow
                            ),
                            m
                        }
                        function configFromISO(config) {
                            var i,
                                l,
                                allowTime,
                                dateFormat,
                                timeFormat,
                                tzFormat,
                                string = config._i,
                                match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string);
                            if (match) {
                                for (getParsingFlags(config).iso = !0, i = 0, l = isoDates.length; i < l; i++) 
                                    if (isoDates[i][1].exec(match[1])) {
                                        dateFormat = isoDates[i][0],
                                        allowTime = !1 !== isoDates[i][2];
                                        break
                                    }
                                if (null == dateFormat) 
                                    return void(config._isValid = !1);
                                if (match[3]) {
                                    for (i = 0, l = isoTimes.length; i < l; i++) 
                                        if (isoTimes[i][1].exec(match[3])) {
                                            timeFormat = (match[2] || " ") + isoTimes[i][0];
                                            break
                                        }
                                    if (null == timeFormat) 
                                        return void(config._isValid = !1)
                                }
                                if (!allowTime && null != timeFormat) 
                                    return void(config._isValid = !1);
                                if (match[4]) {
                                    if (!tzRegex.exec(match[4])) 
                                        return void(config._isValid = !1);
                                    tzFormat = "Z"
                                }
                                config._f = dateFormat + (timeFormat || "") + (tzFormat || ""),
                                configFromStringAndFormat(config)
                            } else 
                                config._isValid = !1
                        }
                        function extractFromRFC2822Strings(
                            yearStr,
                            monthStr,
                            dayStr,
                            hourStr,
                            minuteStr,
                            secondStr
                        ) {
                            var result = [
                                untruncateYear(yearStr),
                                defaultLocaleMonthsShort.indexOf(monthStr),
                                parseInt(dayStr, 10),
                                parseInt(hourStr, 10),
                                parseInt(minuteStr, 10)
                            ];
                            return secondStr && result.push(parseInt(secondStr, 10)),
                            result
                        }
                        function untruncateYear(yearStr) {
                            var year = parseInt(yearStr, 10);
                            return year <= 49
                                ? 2e3 + year
                                : year <= 999
                                    ? 1900 + year
                                    : year
                        }
                        function preprocessRFC2822(s) {
                            return s
                                .replace(/\([^)]*\)|[\n\t]/g, " ")
                                .replace(/(\s\s+)/g, " ")
                                .replace(/^\s\s*/, "")
                                .replace(/\s\s*$/, "")
                        }
                        function checkWeekday(weekdayStr, parsedInput, config) {
                            if (weekdayStr) {
                                if (defaultLocaleWeekdaysShort.indexOf(weekdayStr) !== new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay()) 
                                    return getParsingFlags(config).weekdayMismatch = !0,
                                    config._isValid = !1,
                                    !1
                            }
                            return !0
                        }
                        function calculateOffset(obsOffset, militaryOffset, numOffset) {
                            if (obsOffset) 
                                return obsOffsets[obsOffset];
                            if (militaryOffset) 
                                return 0;
                            var hm = parseInt(numOffset, 10),
                                m = hm % 100;
                            return (hm - m) / 100 * 60 + m
                        }
                        function configFromRFC2822(config) {
                            var parsedArray,
                                match = rfc2822.exec(preprocessRFC2822(config._i));
                            if (match) {
                                if (
                                    parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]),
                                    !checkWeekday(match[1], parsedArray, config)
                                ) 
                                    return;
                                config._a = parsedArray,
                                config._tzm = calculateOffset(match[8], match[9], match[10]),
                                config._d = createUTCDate.apply(null, config._a),
                                config
                                    ._d
                                    .setUTCMinutes(config._d.getUTCMinutes() - config._tzm),
                                getParsingFlags(config).rfc2822 = !0
                            } else 
                                config._isValid = !1
                        }
                        function configFromString(config) {
                            var matched = aspNetJsonRegex.exec(config._i);
                            if (null !== matched) 
                                return void(config._d = new Date(+matched[1]));
                            configFromISO(config),
                            !1 === config._isValid && (
                                delete config._isValid,
                                configFromRFC2822(config),
                                !1 === config._isValid && (
                                    delete config._isValid,
                                    config._strict
                                        ? config._isValid = !1
                                        : hooks.createFromInputFallback(config)
                                )
                            )
                        }
                        function defaults(a, b, c) {
                            return null != a
                                ? a
                                : null != b
                                    ? b
                                    : c
                        }
                        function currentDateArray(config) {
                            var nowValue = new Date(hooks.now());
                            return config._useUTC
                                ? [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()]
                                : [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()]
                        }
                        function configFromArray(config) {
                            var i,
                                date,
                                currentDate,
                                expectedWeekday,
                                yearToUse,
                                input = [];
                            if (!config._d) {
                                for (
                                    currentDate = currentDateArray(config),
                                    config._w && null == config._a[DATE] && null == config._a[MONTH] && dayOfYearFromWeekInfo(config),
                                    null != config._dayOfYear && (
                                        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]),
                                        (config._dayOfYear > daysInYear(yearToUse) || 0 === config._dayOfYear) && (getParsingFlags(config)._overflowDayOfYear = !0),
                                        date = createUTCDate(yearToUse, 0, config._dayOfYear),
                                        config._a[MONTH] = date.getUTCMonth(),
                                        config._a[DATE] = date.getUTCDate()
                                    ),
                                    i = 0;
                                    i < 3 && null == config._a[i];
                                    ++i
                                ) 
                                    config._a[i] = input[i] = currentDate[i];
                                for (; i < 7; i++) 
                                    config._a[i] = input[i] = null == config._a[i]
                                        ? 2 === i
                                            ? 1
                                            : 0
                                        : config._a[i];
                                
                                24 === config._a[HOUR] && 0 === config._a[MINUTE] && 0 === config._a[SECOND] && 0 === config._a[MILLISECOND] && (
                                    config._nextDay = !0,
                                    config._a[HOUR] = 0
                                ),
                                config._d = (
                                    config._useUTC
                                        ? createUTCDate
                                        : createDate
                                ).apply(null, input),
                                expectedWeekday = config._useUTC
                                    ? config
                                        ._d
                                        .getUTCDay()
                                    : config
                                        ._d
                                        .getDay(),
                                null != config._tzm && config
                                    ._d
                                    .setUTCMinutes(config._d.getUTCMinutes() - config._tzm),
                                config._nextDay && (config._a[HOUR] = 24),
                                config._w && void 0 !== config._w.d && config._w.d !== expectedWeekday && (
                                    getParsingFlags(config).weekdayMismatch = !0
                                )
                            }
                        }
                        function dayOfYearFromWeekInfo(config) {
                            var w,
                                weekYear,
                                week,
                                weekday,
                                dow,
                                doy,
                                temp,
                                weekdayOverflow,
                                curWeek;
                            w = config._w,
                            null != w.GG || null != w.W || null != w.E
                                ? (
                                    dow = 1,
                                    doy = 4,
                                    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year),
                                    week = defaults(w.W, 1),
                                    ((weekday = defaults(w.E, 1)) < 1 || weekday > 7) && (weekdayOverflow = !0)
                                )
                                : (
                                    dow = config._locale._week.dow,
                                    doy = config._locale._week.doy,
                                    curWeek = weekOfYear(createLocal(), dow, doy),
                                    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year),
                                    week = defaults(w.w, curWeek.week),
                                    null != w.d
                                        ? ((weekday = w.d) < 0 || weekday > 6) && (weekdayOverflow = !0)
                                        : null != w.e
                                            ? (weekday = w.e + dow, (w.e < 0 || w.e > 6) && (weekdayOverflow = !0))
                                            : weekday = dow
                                ),
                            week < 1 || week > weeksInYear(weekYear, dow, doy)
                                ? getParsingFlags(config)._overflowWeeks = !0
                                : null != weekdayOverflow
                                    ? getParsingFlags(config)._overflowWeekday = !0
                                    : (
                                        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
                                        config._a[YEAR] = temp.year,
                                        config._dayOfYear = temp.dayOfYear
                                    )
                        }
                        function configFromStringAndFormat(config) {
                            if (config._f === hooks.ISO_8601) 
                                return void configFromISO(config);
                            if (config._f === hooks.RFC_2822) 
                                return void configFromRFC2822(config);
                            config._a = [],
                            getParsingFlags(config).empty = !0;
                            var i,
                                parsedInput,
                                tokens,
                                token,
                                skipped,
                                era,
                                string = "" + config._i,
                                stringLength = string.length,
                                totalParsedInputLength = 0;
                            for (
                                tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [],
                                i = 0;
                                i < tokens.length;
                                i++
                            ) 
                                token = tokens[i],
                                parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0],
                                parsedInput && (
                                    skipped = string.substr(0, string.indexOf(parsedInput)),
                                    skipped.length > 0 && getParsingFlags(config).unusedInput.push(skipped),
                                    string = string.slice(
                                        string.indexOf(parsedInput) + parsedInput.length
                                    ),
                                    totalParsedInputLength += parsedInput.length
                                ),
                                formatTokenFunctions[token]
                                    ? (
                                        parsedInput
                                            ? getParsingFlags(config).empty = !1
                                            : getParsingFlags(config).unusedTokens.push(token),
                                        addTimeToArrayFromToken(token, parsedInput, config)
                                    )
                                    : config._strict && !parsedInput && getParsingFlags(config)
                                        .unusedTokens
                                        .push(token);
                            getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength,
                            string.length > 0 && getParsingFlags(config)
                                .unusedInput
                                .push(string),
                            config._a[HOUR] <= 12 && !0 === getParsingFlags(config).bigHour && config._a[HOUR] > 0 && (
                                getParsingFlags(config).bigHour = void 0
                            ),
                            getParsingFlags(config).parsedDateParts = config
                                ._a
                                .slice(0),
                            getParsingFlags(config).meridiem = config._meridiem,
                            config._a[HOUR] = meridiemFixWrap(
                                config._locale,
                                config._a[HOUR],
                                config._meridiem
                            ),
                            era = getParsingFlags(config).era,
                            null !== era && (
                                config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR])
                            ),
                            configFromArray(config),
                            checkOverflow(config)
                        }
                        function meridiemFixWrap(locale, hour, meridiem) {
                            var isPm;
                            return null == meridiem
                                ? hour
                                : null != locale.meridiemHour
                                    ? locale.meridiemHour(hour, meridiem)
                                    : null != locale.isPM
                                        ? (
                                            isPm = locale.isPM(meridiem),
                                            isPm && hour < 12 && (hour += 12),
                                            isPm || 12 !== hour || (hour = 0),
                                            hour
                                        )
                                        : hour
                        }
                        function configFromStringAndArray(config) {
                            var tempConfig,
                                bestMoment,
                                scoreToBeat,
                                i,
                                currentScore,
                                validFormatFound,
                                bestFormatIsValid = !1;
                            if (0 === config._f.length) 
                                return getParsingFlags(config).invalidFormat = !0,
                                void(config._d = new Date(NaN));
                            for (i = 0; i < config._f.length; i++) 
                                currentScore = 0,
                                validFormatFound = !1,
                                tempConfig = copyConfig({}, config),
                                null != config._useUTC && (tempConfig._useUTC = config._useUTC),
                                tempConfig._f = config._f[i],
                                configFromStringAndFormat(tempConfig),
                                isValid(tempConfig) && (validFormatFound = !0),
                                currentScore += getParsingFlags(tempConfig).charsLeftOver,
                                currentScore += 10 * getParsingFlags(tempConfig).unusedTokens.length,
                                getParsingFlags(tempConfig).score = currentScore,
                                bestFormatIsValid
                                    ? currentScore < scoreToBeat && (
                                        scoreToBeat = currentScore,
                                        bestMoment = tempConfig
                                    )
                                    : (null == scoreToBeat || currentScore < scoreToBeat || validFormatFound) && (
                                        scoreToBeat = currentScore,
                                        bestMoment = tempConfig,
                                        validFormatFound && (bestFormatIsValid = !0)
                                    );
                            extend(config, bestMoment || tempConfig)
                        }
                        function configFromObject(config) {
                            if (!config._d) {
                                var i = normalizeObjectUnits(config._i),
                                    dayOrDate = void 0 === i.day
                                        ? i.date
                                        : i.day;
                                config._a = map([
                                    i.year,
                                    i.month,
                                    dayOrDate,
                                    i.hour,
                                    i.minute,
                                    i.second,
                                    i.millisecond
                                ], function (obj) {
                                    return obj && parseInt(obj, 10)
                                }),
                                configFromArray(config)
                            }
                        }
                        function createFromConfig(config) {
                            var res = new Moment(checkOverflow(prepareConfig(config)));
                            return res._nextDay && (res.add(1, "d"), res._nextDay = void 0),
                            res
                        }
                        function prepareConfig(config) {
                            var input = config._i,
                                format = config._f;
                            return config._locale = config._locale || getLocale(config._l),
                            null === input || void 0 === format && "" === input
                                ? createInvalid({
                                    nullInput: !0
                                })
                                : (
                                    "string" == typeof input && (config._i = input = config._locale.preparse(input)),
                                    isMoment(input)
                                        ? new Moment(checkOverflow(input))
                                        : (
                                            isDate(input)
                                                ? config._d = input
                                                : isArray(format)
                                                    ? configFromStringAndArray(config)
                                                    : format
                                                        ? configFromStringAndFormat(config)
                                                        : configFromInput(config),
                                            isValid(config) || (config._d = null),
                                            config
                                        )
                                )
                        }
                        function configFromInput(config) {
                            var input = config._i;
                            isUndefined(input)
                                ? config._d = new Date(hooks.now())
                                : isDate(input)
                                    ? config._d = new Date(input.valueOf())
                                    : "string" == typeof input
                                        ? configFromString(config)
                                        : isArray(input)
                                            ? (config._a = map(input.slice(0), function (obj) {
                                                return parseInt(obj, 10)
                                            }), configFromArray(config))
                                            : isObject(input)
                                                ? configFromObject(config)
                                                : isNumber(input)
                                                    ? config._d = new Date(input)
                                                    : hooks.createFromInputFallback(config)
                        }
                        function createLocalOrUTC(input, format, locale, strict, isUTC) {
                            var c = {};
                            return !0 !== format && !1 !== format || (strict = format, format = void 0),
                            !0 !== locale && !1 !== locale || (strict = locale, locale = void 0),
                            (
                                isObject(input) && isObjectEmpty(input) || isArray(input) && 0 === input.length
                            ) && (input = void 0),
                            c._isAMomentObject = !0,
                            c._useUTC = c._isUTC = isUTC,
                            c._l = locale,
                            c._i = input,
                            c._f = format,
                            c._strict = strict,
                            createFromConfig(c)
                        }
                        function createLocal(input, format, locale, strict) {
                            return createLocalOrUTC(input, format, locale, strict, !1)
                        }
                        function pickBy(fn, moments) {
                            var res,
                                i;
                            if (
                                1 === moments.length && isArray(moments[0]) && (moments = moments[0]),
                                !moments.length
                            ) 
                                return createLocal();
                            for (res = moments[0], i = 1; i < moments.length; ++i) 
                                moments[i].isValid() && !moments[i][fn](res) || (res = moments[i]);
                            return res
                        }
                        function min() {
                            return pickBy("isBefore", [].slice.call(arguments, 0))
                        }
                        function max() {
                            return pickBy("isAfter", [].slice.call(arguments, 0))
                        }
                        function isDurationValid(m) {
                            var key,
                                i,
                                unitHasDecimal = !1;
                            for (key in m) 
                                if (hasOwnProp(m, key) && (-1 === indexOf.call(ordering, key) || null != m[key] && isNaN(m[key]))) 
                                    return !1;
                        for (i = 0; i < ordering.length; ++i) 
                                if (m[ordering[i]]) {
                                    if (unitHasDecimal) 
                                        return !1;
                                    parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]]) && (unitHasDecimal = !0)
                                }
                            return !0
                        }
                        function isValid$1() {
                            return this._isValid
                        }
                        function createInvalid$1() {
                            return createDuration(NaN)
                        }
                        function Duration(duration) {
                            var normalizedInput = normalizeObjectUnits(duration),
                                years = normalizedInput.year || 0,
                                quarters = normalizedInput.quarter || 0,
                                months = normalizedInput.month || 0,
                                weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
                                days = normalizedInput.day || 0,
                                hours = normalizedInput.hour || 0,
                                minutes = normalizedInput.minute || 0,
                                seconds = normalizedInput.second || 0,
                                milliseconds = normalizedInput.millisecond || 0;
                            this._isValid = isDurationValid(normalizedInput),
                            this._milliseconds = +milliseconds + 1e3 * seconds + 6e4 * minutes + 1e3 * hours * 60 * 60,
                            this._days = +days + 7 * weeks,
                            this._months = +months + 3 * quarters + 12 * years,
                            this._data = {},
                            this._locale = getLocale(),
                            this._bubble()
                        }
                        function isDuration(obj) {
                            return obj instanceof Duration
                        }
                        function absRound(number) {
                            return number < 0
                                ? -1 * Math.round(-1 * number)
                                : Math.round(number)
                        }
                        function compareArrays(array1, array2, dontConvert) {
                            var i,
                                len = Math.min(array1.length, array2.length),
                                lengthDiff = Math.abs(array1.length - array2.length),
                                diffs = 0;
                            for (i = 0; i < len; i++) 
                                (
                                    dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])
                                ) && diffs++;
                            return diffs + lengthDiff
                        }
                        function offset(token, separator) {
                            addFormatToken(token, 0, 0, function () {
                                var offset = this.utcOffset(),
                                    sign = "+";
                                return offset < 0 && (offset = -offset, sign = "-"),
                                sign + zeroFill(~~ (offset / 60), 2) + separator + zeroFill(~~ offset % 60, 2)
                            })
                        }
                        function offsetFromString(matcher, string) {
                            var chunk,
                                parts,
                                minutes,
                                matches = (string || "").match(matcher);
                            return null === matches
                                ? null
                                : (
                                    chunk = matches[matches.length - 1] || [],
                                    parts = (chunk + "").match(chunkOffset) || [
                                        "-", 0, 0
                                    ],
                                    minutes = 60 * parts[1] + toInt(parts[2]),
                                    0 === minutes
                                        ? 0
                                        : "+" === parts[0]
                                            ? minutes
                                            : -minutes
                                )
                        }
                        function cloneWithOffset(input, model) {
                            var res,
                                diff;
                            return model._isUTC
                                ? (
                                    res = model.clone(),
                                    diff = (
                                        isMoment(input) || isDate(input)
                                            ? input.valueOf()
                                            : createLocal(input).valueOf()
                                    ) - res.valueOf(),
                                    res._d.setTime(res._d.valueOf() + diff),
                                    hooks.updateOffset(res, !1),
                                    res
                                )
                                : createLocal(input).local()
                        }
                        function getDateOffset(m) {
                            return -Math.round(m._d.getTimezoneOffset())
                        }
                        function getSetOffset(input, keepLocalTime, keepMinutes) {
                            var localAdjust,
                                offset = this._offset || 0;
                            if (!this.isValid()) 
                                return null != input
                                    ? this
                                    : NaN;
                            if (null != input) {
                                if ("string" == typeof input) {
                                    if (null === (input = offsetFromString(matchShortOffset, input))) 
                                        return this
                                } else 
                                    Math.abs(input) < 16 && !keepMinutes && (input *= 60);
                                return !this._isUTC && keepLocalTime && (localAdjust = getDateOffset(this)),
                                this._offset = input,
                                this._isUTC = !0,
                                null != localAdjust && this.add(localAdjust, "m"),
                                offset !== input && (
                                    !keepLocalTime || this._changeInProgress
                                        ? addSubtract(this, createDuration(input - offset, "m"), 1, !1)
                                        : this._changeInProgress || (
                                            this._changeInProgress = !0,
                                            hooks.updateOffset(this, !0),
                                            this._changeInProgress = null
                                        )
                                ),
                                this
                            }
                            return this._isUTC
                                ? offset
                                : getDateOffset(this)
                        }
                        function getSetZone(input, keepLocalTime) {
                            return null != input
                                ? (
                                    "string" != typeof input && (input = -input),
                                    this.utcOffset(input, keepLocalTime),
                                    this
                                )
                                : -this.utcOffset()
                        }
                        function setOffsetToUTC(keepLocalTime) {
                            return this.utcOffset(0, keepLocalTime)
                        }
                        function setOffsetToLocal(keepLocalTime) {
                            return this._isUTC && (
                                this.utcOffset(0, keepLocalTime),
                                this._isUTC = !1,
                                keepLocalTime && this.subtract(getDateOffset(this), "m")
                            ),
                            this
                        }
                        function setOffsetToParsedOffset() {
                            if (null != this._tzm) 
                                this.utcOffset(this._tzm, !1, !0);
                            else if ("string" == typeof this._i) {
                                var tZone = offsetFromString(matchOffset, this._i);
                                null != tZone
                                    ? this.utcOffset(tZone)
                                    : this.utcOffset(0, !0)
                            }
                            return this
                        }
                        function hasAlignedHourOffset(input) {
                            return !!this.isValid() && (
                                input = input
                                    ? createLocal(input).utcOffset()
                                    : 0,
                                (this.utcOffset() - input) % 60 == 0
                            )
                        }
                        function isDaylightSavingTime() {
                            return this.utcOffset() > this
                                .clone()
                                .month(0)
                                .utcOffset() || this.utcOffset() > this
                                .clone()
                                .month(5)
                                .utcOffset()
                        }
                        function isDaylightSavingTimeShifted() {
                            if (!isUndefined(this._isDSTShifted)) 
                                return this._isDSTShifted;
                            var other,
                                c = {};
                            return copyConfig(c, this),
                            c = prepareConfig(c),
                            c._a
                                ? (
                                    other = c._isUTC
                                        ? createUTC(c._a)
                                        : createLocal(c._a),
                                    this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0
                                )
                                : this._isDSTShifted = !1,
                            this._isDSTShifted
                        }
                        function isLocal() {
                            return !!this.isValid() && !this._isUTC
                        }
                        function isUtcOffset() {
                            return !!this.isValid() && this._isUTC
                        }
                        function isUtc() {
                            return !!this.isValid() && (this._isUTC && 0 === this._offset)
                        }
                        function createDuration(input, key) {
                            var sign,
                                ret,
                                diffRes,
                                duration = input,
                                match = null;
                            return isDuration(input)
                                ? duration = {
                                    ms: input._milliseconds,
                                    d: input._days,
                                    M: input._months
                                }
                                : isNumber(input) || !isNaN(+input)
                                    ? (
                                        duration = {},
                                        key
                                            ? duration[key] = +input
                                            : duration.milliseconds = +input
                                    )
                                    : (match = aspNetRegex.exec(input))
                                        ? (
                                            sign = "-" === match[1]
                                                ? -1
                                                : 1,
                                            duration = {
                                                y: 0,
                                                d: toInt(match[DATE]) * sign,
                                                h: toInt(match[HOUR]) * sign,
                                                m: toInt(match[MINUTE]) * sign,
                                                s: toInt(match[SECOND]) * sign,
                                                ms: toInt(absRound(1e3 * match[MILLISECOND])) * sign
                                            }
                                        )
                                        : (match = isoRegex.exec(input))
                                            ? (
                                                sign = "-" === match[1]
                                                    ? -1
                                                    : 1,
                                                duration = {
                                                    y: parseIso(match[2], sign),
                                                    M: parseIso(match[3], sign),
                                                    w: parseIso(match[4], sign),
                                                    d: parseIso(match[5], sign),
                                                    h: parseIso(match[6], sign),
                                                    m: parseIso(match[7], sign),
                                                    s: parseIso(match[8], sign)
                                                }
                                            )
                                            : null == duration
                                                ? duration = {}
                                                : "object" == typeof duration && ("from" in duration || "to" in duration) && (
                                                    diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to)),
                                                    duration = {},
                                                    duration.ms = diffRes.milliseconds,
                                                    duration.M = diffRes.months
                                                ),
                            ret = new Duration(duration),
                            isDuration(input) && hasOwnProp(input, "_locale") && (
                                ret._locale = input._locale
                            ),
                            isDuration(input) && hasOwnProp(input, "_isValid") && (
                                ret._isValid = input._isValid
                            ),
                            ret
                        }
                        function parseIso(inp, sign) {
                            var res = inp && parseFloat(inp.replace(",", "."));
                            return (
                                isNaN(res)
                                    ? 0
                                    : res
                            ) * sign
                        }
                        function positiveMomentsDifference(base, other) {
                            var res = {};
                            return res.months = other.month() - base.month() + 12 * (
                                other.year() - base.year()
                            ),
                            base
                                .clone()
                                .add(res.months, "M")
                                .isAfter(other) && --res.months,
                            res.milliseconds = +other - +base
                                .clone()
                                .add(res.months, "M"),
                            res
                        }
                        function momentsDifference(base, other) {
                            var res;
                            return base.isValid() && other.isValid()
                                ? (
                                    other = cloneWithOffset(other, base),
                                    base.isBefore(other)
                                        ? res = positiveMomentsDifference(base, other)
                                        : (
                                            res = positiveMomentsDifference(other, base),
                                            res.milliseconds = -res.milliseconds,
                                            res.months = -res.months
                                        ),
                                    res
                                )
                                : {
                                    milliseconds: 0,
                                    months: 0
                                }
                        }
                        function createAdder(direction, name) {
                            return function (val, period) {
                                var dur,
                                    tmp;
                                return null === period || isNaN(+period) || (deprecateSimple(
                                    name,
                                    "moment()." + name + "(period, number) is deprecated. Please use moment()." +
                                        name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverte" +
                                        "d-param/ for more info."
                                ), tmp = val, val = period, period = tmp),
                                dur = createDuration(val, period),
                                addSubtract(this, dur, direction),
                                this
                            }
                        }
                        function addSubtract(mom, duration, isAdding, updateOffset) {
                            var milliseconds = duration._milliseconds,
                                days = absRound(duration._days),
                                months = absRound(duration._months);
                            mom.isValid() && (
                                updateOffset = null == updateOffset || updateOffset,
                                months && setMonth(mom, get(mom, "Month") + months * isAdding),
                                days && set$1(mom, "Date", get(mom, "Date") + days * isAdding),
                                milliseconds && mom._d.setTime(
                                    mom._d.valueOf() + milliseconds * isAdding
                                ),
                                updateOffset && hooks.updateOffset(mom, days || months)
                            )
                        }
                        function isString(input) {
                            return "string" == typeof input || input instanceof String
                        }
                        function isMomentInput(input) {
                            return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(
                                input
                            ) || isMomentInputObject(input) || null === input || void 0 === input
                        }
                        function isMomentInputObject(input) {
                            var i,
                                property,
                                objectTest = isObject(input) && !isObjectEmpty(input),
                                propertyTest = !1,
                                properties = [
                                    "years",
                                    "year",
                                    "y",
                                    "months",
                                    "month",
                                    "M",
                                    "days",
                                    "day",
                                    "d",
                                    "dates",
                                    "date",
                                    "D",
                                    "hours",
                                    "hour",
                                    "h",
                                    "minutes",
                                    "minute",
                                    "m",
                                    "seconds",
                                    "second",
                                    "s",
                                    "milliseconds",
                                    "millisecond",
                                    "ms"
                                ];
                            for (i = 0; i < properties.length; i += 1) 
                                property = properties[i],
                                propertyTest = propertyTest || hasOwnProp(input, property);
                            return objectTest && propertyTest
                        }
                        function isNumberOrStringArray(input) {
                            var arrayTest = isArray(input),
                                dataTypeTest = !1;
                            return arrayTest && (dataTypeTest = 0 === input.filter(function (item) {
                                return !isNumber(item) && isString(input)
                            }).length),
                            arrayTest && dataTypeTest
                        }
                        function isCalendarSpec(input) {
                            var i,
                                property,
                                objectTest = isObject(input) && !isObjectEmpty(input),
                                propertyTest = !1,
                                properties = [
                                    "sameDay",
                                    "nextDay",
                                    "lastDay",
                                    "nextWeek",
                                    "lastWeek",
                                    "sameElse"
                                ];
                            for (i = 0; i < properties.length; i += 1) 
                                property = properties[i],
                                propertyTest = propertyTest || hasOwnProp(input, property);
                            return objectTest && propertyTest
                        }
                        function getCalendarFormat(myMoment, now) {
                            var diff = myMoment.diff(now, "days", !0);
                            return diff < -6
                                ? "sameElse"
                                : diff < -1
                                    ? "lastWeek"
                                    : diff < 0
                                        ? "lastDay"
                                        : diff < 1
                                            ? "sameDay"
                                            : diff < 2
                                                ? "nextDay"
                                                : diff < 7
                                                    ? "nextWeek"
                                                    : "sameElse"
                        }
                        function calendar$1(time, formats) {
                            1 === arguments.length && (
                                isMomentInput(arguments[0])
                                    ? (time = arguments[0], formats = void 0)
                                    : isCalendarSpec(arguments[0]) && (formats = arguments[0], time = void 0)
                            );
                            var now = time || createLocal(),
                                sod = cloneWithOffset(now, this).startOf("day"),
                                format = hooks.calendarFormat(this, sod) || "sameElse",
                                output = formats && (
                                    isFunction(formats[format])
                                        ? formats[format].call(this, now)
                                        : formats[format]
                                );
                            return this.format(
                                output || this.localeData().calendar(format, this, createLocal(now))
                            )
                        }
                        function clone() {
                            return new Moment(this)
                        }
                        function isAfter(input, units) {
                            var localInput = isMoment(input)
                                ? input
                                : createLocal(input);
                            return !(!this.isValid() || !localInput.isValid()) && (
                                units = normalizeUnits(units) || "millisecond",
                                "millisecond" === units
                                    ? this.valueOf() > localInput.valueOf()
                                    : localInput.valueOf() < this.clone().startOf(units).valueOf()
                            )
                        }
                        function isBefore(input, units) {
                            var localInput = isMoment(input)
                                ? input
                                : createLocal(input);
                            return !(!this.isValid() || !localInput.isValid()) && (
                                units = normalizeUnits(units) || "millisecond",
                                "millisecond" === units
                                    ? this.valueOf() < localInput.valueOf()
                                    : this.clone().endOf(units).valueOf() < localInput.valueOf()
                            )
                        }
                        function isBetween(from, to, units, inclusivity) {
                            var localFrom = isMoment(from)
                                    ? from
                                    : createLocal(from),
                                localTo = isMoment(to)
                                    ? to
                                    : createLocal(to);
                            return !!(this.isValid() && localFrom.isValid() && localTo.isValid()) && (
                                inclusivity = inclusivity || "()",
                                (
                                    "(" === inclusivity[0]
                                        ? this.isAfter(localFrom, units)
                                        : !this.isBefore(localFrom, units)
                                ) && (
                                    ")" === inclusivity[1]
                                        ? this.isBefore(localTo, units)
                                        : !this.isAfter(localTo, units)
                                )
                            )
                        }
                        function isSame(input, units) {
                            var inputMs,
                                localInput = isMoment(input)
                                    ? input
                                    : createLocal(input);
                            return !(!this.isValid() || !localInput.isValid()) && (
                                units = normalizeUnits(units) || "millisecond",
                                "millisecond" === units
                                    ? this.valueOf() === localInput.valueOf()
                                    : (
                                        inputMs = localInput.valueOf(),
                                        this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf()
                                    )
                            )
                        }
                        function isSameOrAfter(input, units) {
                            return this.isSame(input, units) || this.isAfter(input, units)
                        }
                        function isSameOrBefore(input, units) {
                            return this.isSame(input, units) || this.isBefore(input, units)
                        }
                        function diff(input, units, asFloat) {
                            var that,
                                zoneDelta,
                                output;
                            if (!this.isValid()) 
                                return NaN;
                            if (that = cloneWithOffset(input, this), !that.isValid()) 
                                return NaN;
                            switch (
                                zoneDelta = 6e4 * (that.utcOffset() - this.utcOffset()),
                                units = normalizeUnits(units)
                            ) {
                                case "year":
                                    output = monthDiff(this, that) / 12;
                                    break;
                                case "month":
                                    output = monthDiff(this, that);
                                    break;
                                case "quarter":
                                    output = monthDiff(this, that) / 3;
                                    break;
                                case "second":
                                    output = (this - that) / 1e3;
                                    break;
                                case "minute":
                                    output = (this - that) / 6e4;
                                    break;
                                case "hour":
                                    output = (this - that) / 36e5;
                                    break;
                                case "day":
                                    output = (this - that - zoneDelta) / 864e5;
                                    break;
                                case "week":
                                    output = (this - that - zoneDelta) / 6048e5;
                                    break;
                                default:
                                    output = this - that
                            }
                            return asFloat
                                ? output
                                : absFloor(output)
                        }
                        function monthDiff(a, b) {
                            if (a.date() < b.date()) 
                                return -monthDiff(b, a);
                            var anchor2,
                                adjust,
                                wholeMonthDiff = 12 * (b.year() - a.year()) + (b.month() - a.month()),
                                anchor = a
                                    .clone()
                                    .add(wholeMonthDiff, "months");
                            return b - anchor < 0
                                ? (
                                    anchor2 = a.clone().add(wholeMonthDiff - 1, "months"),
                                    adjust = (b - anchor) / (anchor - anchor2)
                                )
                                : (
                                    anchor2 = a.clone().add(wholeMonthDiff + 1, "months"),
                                    adjust = (b - anchor) / (anchor2 - anchor)
                                ), -(wholeMonthDiff + adjust) || 0
                        }
                        function toString() {
                            return this
                                .clone()
                                .locale("en")
                                .format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
                        }
                        function toISOString(keepOffset) {
                            if (!this.isValid()) 
                                return null;
                            var utc = !0 !== keepOffset,
                                m = utc
                                    ? this
                                        .clone()
                                        .utc()
                                    : this;
                            return m.year() < 0 || m.year() > 9999
                                ? formatMoment(
                                    m,
                                    utc
                                        ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
                                        : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
                                )
                                : isFunction(Date.prototype.toISOString)
                                    ? utc
                                        ? this
                                            .toDate()
                                            .toISOString()
                                        : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3)
                                            .toISOString()
                                            .replace("Z", formatMoment(m, "Z"))
                                    : formatMoment(
                                        m,
                                        utc
                                            ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
                                            : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
                                    )
                        }
                        function inspect() {
                            if (!this.isValid()) 
                                return "moment.invalid(/* " + this._i + " */)";
                            var prefix,
                                year,
                                datetime,
                                suffix,
                                func = "moment",
                                zone = "";
                            return this.isLocal() || (
                                func = 0 === this.utcOffset()
                                    ? "moment.utc"
                                    : "moment.parseZone",
                                zone = "Z"
                            ),
                            prefix = "[" + func + '("]',
                            year = 0 <= this.year() && this.year() <= 9999
                                ? "YYYY"
                                : "YYYYYY",
                            datetime = "-MM-DD[T]HH:mm:ss.SSS",
                            suffix = zone + '[")]',
                            this.format(prefix + year + datetime + suffix)
                        }
                        function format(inputString) {
                            inputString || (
                                inputString = this.isUtc()
                                    ? hooks.defaultFormatUtc
                                    : hooks.defaultFormat
                            );
                            var output = formatMoment(this, inputString);
                            return this
                                .localeData()
                                .postformat(output)
                        }
                        function from(time, withoutSuffix) {
                            return this.isValid() && (
                                isMoment(time) && time.isValid() || createLocal(time).isValid()
                            )
                                ? createDuration({to: this, from: time})
                                    .locale(this.locale())
                                    .humanize(!withoutSuffix)
                                : this
                                    .localeData()
                                    .invalidDate()
                        }
                        function fromNow(withoutSuffix) {
                            return this.from(createLocal(), withoutSuffix)
                        }
                        function to(time, withoutSuffix) {
                            return this.isValid() && (
                                isMoment(time) && time.isValid() || createLocal(time).isValid()
                            )
                                ? createDuration({from: this, to: time})
                                    .locale(this.locale())
                                    .humanize(!withoutSuffix)
                                : this
                                    .localeData()
                                    .invalidDate()
                        }
                        function toNow(withoutSuffix) {
                            return this.to(createLocal(), withoutSuffix)
                        }
                        function locale(key) {
                            var newLocaleData;
                            return void 0 === key
                                ? this._locale._abbr
                                : (
                                    newLocaleData = getLocale(key),
                                    null != newLocaleData && (this._locale = newLocaleData),
                                    this
                                )
                        }
                        function localeData() {
                            return this._locale
                        }
                        function mod$1(dividend, divisor) {
                            return (dividend % divisor + divisor) % divisor
                        }
                        function localStartOfDate(y, m, d) {
                            return y < 100 && y >= 0
                                ? new Date(y + 400, m, d) - MS_PER_400_YEARS
                                : new Date(y, m, d).valueOf()
                        }
                        function utcStartOfDate(y, m, d) {
                            return y < 100 && y >= 0
                                ? Date.UTC(y + 400, m, d) - MS_PER_400_YEARS
                                : Date.UTC(y, m, d)
                        }
                        function startOf(units) {
                            var time,
                                startOfDate;
                            if (void 0 === (units = normalizeUnits(units)) || "millisecond" === units || !this.isValid()) 
                                return this;
                            switch (
                                startOfDate = this._isUTC
                                    ? utcStartOfDate
                                    : localStartOfDate,
                                units
                            ) {
                                case "year":
                                    time = startOfDate(this.year(), 0, 1);
                                    break;
                                case "quarter":
                                    time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                                    break;
                                case "month":
                                    time = startOfDate(this.year(), this.month(), 1);
                                    break;
                                case "week":
                                    time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                                    break;
                                case "isoWeek":
                                    time = startOfDate(
                                        this.year(),
                                        this.month(),
                                        this.date() - (this.isoWeekday() - 1)
                                    );
                                    break;
                                case "day":
                                case "date":
                                    time = startOfDate(this.year(), this.month(), this.date());
                                    break;
                                case "hour":
                                    time = this
                                        ._d
                                        .valueOf(),
                                    time -= mod$1(time + (
                                        this._isUTC
                                            ? 0
                                            : this.utcOffset() * MS_PER_MINUTE
                                    ), MS_PER_HOUR);
                                    break;
                                case "minute":
                                    time = this
                                        ._d
                                        .valueOf(),
                                    time -= mod$1(time, MS_PER_MINUTE);
                                    break;
                                case "second":
                                    time = this
                                        ._d
                                        .valueOf(),
                                    time -= mod$1(time, MS_PER_SECOND)
                            }
                            return this
                                ._d
                                .setTime(time),
                            hooks.updateOffset(this, !0),
                            this
                        }
                        function endOf(units) {
                            var time,
                                startOfDate;
                            if (void 0 === (units = normalizeUnits(units)) || "millisecond" === units || !this.isValid()) 
                                return this;
                            switch (
                                startOfDate = this._isUTC
                                    ? utcStartOfDate
                                    : localStartOfDate,
                                units
                            ) {
                                case "year":
                                    time = startOfDate(this.year() + 1, 0, 1) - 1;
                                    break;
                                case "quarter":
                                    time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                                    break;
                                case "month":
                                    time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                                    break;
                                case "week":
                                    time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                                    break;
                                case "isoWeek":
                                    time = startOfDate(
                                        this.year(),
                                        this.month(),
                                        this.date() - (this.isoWeekday() - 1) + 7
                                    ) - 1;
                                    break;
                                case "day":
                                case "date":
                                    time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                                    break;
                                case "hour":
                                    time = this
                                        ._d
                                        .valueOf(),
                                    time += MS_PER_HOUR - mod$1(time + (
                                        this._isUTC
                                            ? 0
                                            : this.utcOffset() * MS_PER_MINUTE
                                    ), MS_PER_HOUR) - 1;
                                    break;
                                case "minute":
                                    time = this
                                        ._d
                                        .valueOf(),
                                    time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                                    break;
                                case "second":
                                    time = this
                                        ._d
                                        .valueOf(),
                                    time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1
                            }
                            return this
                                ._d
                                .setTime(time),
                            hooks.updateOffset(this, !0),
                            this
                        }
                        function valueOf() {
                            return this
                                ._d
                                .valueOf() - 6e4 * (this._offset || 0)
                        }
                        function unix() {
                            return Math.floor(this.valueOf() / 1e3)
                        }
                        function toDate() {
                            return new Date(this.valueOf())
                        }
                        function toArray() {
                            var m = this;
                            return [
                                m.year(),
                                m.month(),
                                m.date(),
                                m.hour(),
                                m.minute(),
                                m.second(),
                                m.millisecond()
                            ]
                        }
                        function toObject() {
                            var m = this;
                            return {
                                years: m.year(),
                                months: m.month(),
                                date: m.date(),
                                hours: m.hours(),
                                minutes: m.minutes(),
                                seconds: m.seconds(),
                                milliseconds: m.milliseconds()
                            }
                        }
                        function toJSON() {
                            return this.isValid()
                                ? this.toISOString()
                                : null
                        }
                        function isValid$2() {
                            return isValid(this)
                        }
                        function parsingFlags() {
                            return extend({}, getParsingFlags(this))
                        }
                        function invalidAt() {
                            return getParsingFlags(this).overflow
                        }
                        function creationData() {
                            return {input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict}
                        }
                        function localeEras(m, format) {
                            var i,
                                l,
                                date,
                                eras = this._eras || getLocale("en")._eras;
                            for (i = 0, l = eras.length; i < l; ++i) {
                                switch (typeof eras[i].since) {
                                    case "string":
                                        date = hooks(eras[i].since).startOf("day"),
                                        eras[i].since = date.valueOf()
                                }
                                switch (typeof eras[i].until) {
                                    case "undefined":
                                        eras[i].until = 1 / 0;
                                        break;
                                    case "string":
                                        date = hooks(eras[i].until)
                                            .startOf("day")
                                            .valueOf(),
                                        eras[i].until = date.valueOf()
                                }
                            }
                            return eras
                        }
                        function localeErasParse(eraName, format, strict) {
                            var i,
                                l,
                                name,
                                abbr,
                                narrow,
                                eras = this.eras();
                            for (eraName = eraName.toUpperCase(), i = 0, l = eras.length; i < l; ++i) 
                                if (
                                    name = eras[i].name.toUpperCase(),
                                    abbr = eras[i].abbr.toUpperCase(),
                                    narrow = eras[i].narrow.toUpperCase(),
                                    strict
                                ) 
                                    switch (format) {
                                        case "N":
                                        case "NN":
                                        case "NNN":
                                            if (abbr === eraName) 
                                                return eras[i];
                                            break;
                                        case "NNNN":
                                            if (name === eraName) 
                                                return eras[i];
                                            break;
                                        case "NNNNN":
                                            if (narrow === eraName) 
                                                return eras[i]
                                        }
                                else if ([name, abbr, narrow].indexOf(eraName) >= 0) 
                                return eras[i]
                        }
                        function localeErasConvertYear(era, year) {
                            var dir = era.since <= era.until
                                ? 1
                                : -1;
                            return void 0 === year
                                ? hooks(era.since).year()
                                : hooks(era.since).year() + (year - era.offset) * dir
                        }
                        function getEraName() {
                            var i,
                                l,
                                val,
                                eras = this
                                    .localeData()
                                    .eras();
                            for (i = 0, l = eras.length; i < l; ++i) {
                                if (
                                    val = this.startOf("day").valueOf(),
                                    eras[i].since <= val && val <= eras[i].until
                                ) 
                                    return eras[i].name;
                                if (eras[i].until <= val && val <= eras[i].since) 
                                    return eras[i].name
                            }
                            return ""
                        }
                        function getEraNarrow() {
                            var i,
                                l,
                                val,
                                eras = this
                                    .localeData()
                                    .eras();
                            for (i = 0, l = eras.length; i < l; ++i) {
                                if (
                                    val = this.startOf("day").valueOf(),
                                    eras[i].since <= val && val <= eras[i].until
                                ) 
                                    return eras[i].narrow;
                                if (eras[i].until <= val && val <= eras[i].since) 
                                    return eras[i].narrow
                            }
                            return ""
                        }
                        function getEraAbbr() {
                            var i,
                                l,
                                val,
                                eras = this
                                    .localeData()
                                    .eras();
                            for (i = 0, l = eras.length; i < l; ++i) {
                                if (
                                    val = this.startOf("day").valueOf(),
                                    eras[i].since <= val && val <= eras[i].until
                                ) 
                                    return eras[i].abbr;
                                if (eras[i].until <= val && val <= eras[i].since) 
                                    return eras[i].abbr
                            }
                            return ""
                        }
                        function getEraYear() {
                            var i,
                                l,
                                dir,
                                val,
                                eras = this
                                    .localeData()
                                    .eras();
                            for (i = 0, l = eras.length; i < l; ++i) 
                                if (
                                    dir = eras[i].since <= eras[i].until
                                        ? 1
                                        : -1,
                                    val = this.startOf("day").valueOf(),
                                    eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since
                                ) 
                                    return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;
                        return this.year()
                        }
                        function erasNameRegex(isStrict) {
                            return hasOwnProp(this, "_erasNameRegex") || computeErasParse.call(this),
                            isStrict
                                ? this._erasNameRegex
                                : this._erasRegex
                        }
                        function erasAbbrRegex(isStrict) {
                            return hasOwnProp(this, "_erasAbbrRegex") || computeErasParse.call(this),
                            isStrict
                                ? this._erasAbbrRegex
                                : this._erasRegex
                        }
                        function erasNarrowRegex(isStrict) {
                            return hasOwnProp(this, "_erasNarrowRegex") || computeErasParse.call(this),
                            isStrict
                                ? this._erasNarrowRegex
                                : this._erasRegex
                        }
                        function matchEraAbbr(isStrict, locale) {
                            return locale.erasAbbrRegex(isStrict)
                        }
                        function matchEraName(isStrict, locale) {
                            return locale.erasNameRegex(isStrict)
                        }
                        function matchEraNarrow(isStrict, locale) {
                            return locale.erasNarrowRegex(isStrict)
                        }
                        function matchEraYearOrdinal(isStrict, locale) {
                            return locale._eraYearOrdinalRegex || matchUnsigned
                        }
                        function computeErasParse() {
                            var i,
                                l,
                                abbrPieces = [],
                                namePieces = [],
                                narrowPieces = [],
                                mixedPieces = [],
                                eras = this.eras();
                            for (i = 0, l = eras.length; i < l; ++i) 
                                namePieces.push(regexEscape(eras[i].name)),
                                abbrPieces.push(regexEscape(eras[i].abbr)),
                                narrowPieces.push(regexEscape(eras[i].narrow)),
                                mixedPieces.push(regexEscape(eras[i].name)),
                                mixedPieces.push(regexEscape(eras[i].abbr)),
                                mixedPieces.push(regexEscape(eras[i].narrow));
                            this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i"),
                            this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i"),
                            this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i"),
                            this._erasNarrowRegex = new RegExp("^(" + narrowPieces.join("|") + ")", "i")
                        }
                        function addWeekYearFormatToken(token, getter) {
                            addFormatToken(0, [
                                token, token.length
                            ], 0, getter)
                        }
                        function getSetWeekYear(input) {
                            return getSetWeekYearHelper.call(
                                this,
                                input,
                                this.week(),
                                this.weekday(),
                                this.localeData()._week.dow,
                                this.localeData()._week.doy
                            )
                        }
                        function getSetISOWeekYear(input) {
                            return getSetWeekYearHelper.call(
                                this,
                                input,
                                this.isoWeek(),
                                this.isoWeekday(),
                                1,
                                4
                            )
                        }
                        function getISOWeeksInYear() {
                            return weeksInYear(this.year(), 1, 4)
                        }
                        function getISOWeeksInISOWeekYear() {
                            return weeksInYear(this.isoWeekYear(), 1, 4)
                        }
                        function getWeeksInYear() {
                            var weekInfo = this
                                .localeData()
                                ._week;
                            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy)
                        }
                        function getWeeksInWeekYear() {
                            var weekInfo = this
                                .localeData()
                                ._week;
                            return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy)
                        }
                        function getSetWeekYearHelper(input, week, weekday, dow, doy) {
                            var weeksTarget;
                            return null == input
                                ? weekOfYear(this, dow, doy).year
                                : (
                                    weeksTarget = weeksInYear(input, dow, doy),
                                    week > weeksTarget && (week = weeksTarget),
                                    setWeekAll.call(this, input, week, weekday, dow, doy)
                                )
                        }
                        function setWeekAll(weekYear, week, weekday, dow, doy) {
                            var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
                                date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
                            return this.year(date.getUTCFullYear()),
                            this.month(date.getUTCMonth()),
                            this.date(date.getUTCDate()),
                            this
                        }
                        function getSetQuarter(input) {
                            return null == input
                                ? Math.ceil((this.month() + 1) / 3)
                                : this.month(3 * (input - 1) + this.month() % 3)
                        }
                        function getSetDayOfYear(input) {
                            var dayOfYear = Math.round(
                                (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
                            ) + 1;
                            return null == input
                                ? dayOfYear
                                : this.add(input - dayOfYear, "d")
                        }
                        function parseMs(input, array) {
                            array[MILLISECOND] = toInt(1e3 * ("0." + input))
                        }
                        function getZoneAbbr() {
                            return this._isUTC
                                ? "UTC"
                                : ""
                        }
                        function getZoneName() {
                            return this._isUTC
                                ? "Coordinated Universal Time"
                                : ""
                        }
                        function createUnix(input) {
                            return createLocal(1e3 * input)
                        }
                        function createInZone() {
                            return createLocal
                                .apply(null, arguments)
                                .parseZone()
                        }
                        function preParsePostFormat(string) {
                            return string
                        }
                        function get$1(format, index, field, setter) {
                            var locale = getLocale(),
                                utc = createUTC().set(setter, index);
                            return locale[field](utc, format)
                        }
                        function listMonthsImpl(format, index, field) {
                            if (
                                isNumber(format) && (index = format, format = void 0),
                                format = format || "",
                                null != index
                            ) 
                                return get$1(format, index, field, "month");
                            var i,
                                out = [];
                            for (i = 0; i < 12; i++) 
                                out[i] = get$1(format, i, field, "month");
                            return out
                        }
                        function listWeekdaysImpl(localeSorted, format, index, field) {
                            "boolean" == typeof localeSorted
                                ? (
                                    isNumber(format) && (index = format, format = void 0),
                                    format = format || ""
                                )
                                : (
                                    format = localeSorted,
                                    index = format,
                                    localeSorted = !1,
                                    isNumber(format) && (index = format, format = void 0),
                                    format = format || ""
                                );
                            var i,
                                locale = getLocale(),
                                shift = localeSorted
                                    ? locale._week.dow
                                    : 0,
                                out = [];
                            if (null != index) 
                                return get$1(format, (index + shift) % 7, field, "day");
                            for (i = 0; i < 7; i++) 
                                out[i] = get$1(format, (i + shift) % 7, field, "day");
                            return out
                        }
                        function listMonths(format, index) {
                            return listMonthsImpl(format, index, "months")
                        }
                        function listMonthsShort(format, index) {
                            return listMonthsImpl(format, index, "monthsShort")
                        }
                        function listWeekdays(localeSorted, format, index) {
                            return listWeekdaysImpl(localeSorted, format, index, "weekdays")
                        }
                        function listWeekdaysShort(localeSorted, format, index) {
                            return listWeekdaysImpl(localeSorted, format, index, "weekdaysShort")
                        }
                        function listWeekdaysMin(localeSorted, format, index) {
                            return listWeekdaysImpl(localeSorted, format, index, "weekdaysMin")
                        }
                        function abs() {
                            var data = this._data;
                            return this._milliseconds = mathAbs(this._milliseconds),
                            this._days = mathAbs(this._days),
                            this._months = mathAbs(this._months),
                            data.milliseconds = mathAbs(data.milliseconds),
                            data.seconds = mathAbs(data.seconds),
                            data.minutes = mathAbs(data.minutes),
                            data.hours = mathAbs(data.hours),
                            data.months = mathAbs(data.months),
                            data.years = mathAbs(data.years),
                            this
                        }
                        function addSubtract$1(duration, input, value, direction) {
                            var other = createDuration(input, value);
                            return duration._milliseconds += direction * other._milliseconds,
                            duration._days += direction * other._days,
                            duration._months += direction * other._months,
                            duration._bubble()
                        }
                        function add$1(input, value) {
                            return addSubtract$1(this, input, value, 1)
                        }
                        function subtract$1(input, value) {
                            return addSubtract$1(this, input, value, -1)
                        }
                        function absCeil(number) {
                            return number < 0
                                ? Math.floor(number)
                                : Math.ceil(number)
                        }
                        function bubble() {
                            var seconds,
                                minutes,
                                hours,
                                years,
                                monthsFromDays,
                                milliseconds = this._milliseconds,
                                days = this._days,
                                months = this._months,
                                data = this._data;
                            return milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0 || (
                                milliseconds += 864e5 * absCeil(
                                    monthsToDays(months) + days
                                ),
                                days = 0,
                                months = 0
                            ),
                            data.milliseconds = milliseconds % 1e3,
                            seconds = absFloor(milliseconds / 1e3),
                            data.seconds = seconds % 60,
                            minutes = absFloor(seconds / 60),
                            data.minutes = minutes % 60,
                            hours = absFloor(minutes / 60),
                            data.hours = hours % 24,
                            days += absFloor(hours / 24),
                            monthsFromDays = absFloor(daysToMonths(days)),
                            months += monthsFromDays,
                            days -= absCeil(monthsToDays(monthsFromDays)),
                            years = absFloor(months / 12),
                            months %= 12,
                            data.days = days,
                            data.months = months,
                            data.years = years,
                            this
                        }
                        function daysToMonths(days) {
                            return 4800 * days / 146097
                        }
                        function monthsToDays(months) {
                            return 146097 * months / 4800
                        }
                        function as(units) {
                            if (!this.isValid()) 
                                return NaN;
                            var days,
                                months,
                                milliseconds = this._milliseconds;
                            if ("month" === (units = normalizeUnits(units)) || "quarter" === units || "year" === units) 
                                switch (
                                    days = this._days + milliseconds / 864e5,
                                    months = this._months + daysToMonths(days),
                                    units
                                ) {
                                    case "month":
                                        return months;
                                    case "quarter":
                                        return months / 3;
                                    case "year":
                                        return months / 12
                                }
                            else 
                                switch (days = this._days + Math.round(monthsToDays(this._months)), units) {
                                    case "week":
                                        return days / 7 + milliseconds / 6048e5;
                                    case "day":
                                        return days + milliseconds / 864e5;
                                    case "hour":
                                        return 24 * days + milliseconds / 36e5;
                                    case "minute":
                                        return 1440 * days + milliseconds / 6e4;
                                    case "second":
                                        return 86400 * days + milliseconds / 1e3;
                                    case "millisecond":
                                        return Math.floor(864e5 * days) + milliseconds;
                                    default:
                                        throw new Error("Unknown unit " + units)
                                }
                            }
                        function valueOf$1() {
                            return this.isValid()
                                ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * toInt(
                                    this._months / 12
                                )
                                : NaN
                        }
                        function makeAs(alias) {
                            return function () {
                                return this.as(alias)
                            }
                        }
                        function clone$1() {
                            return createDuration(this)
                        }
                        function get$2(units) {
                            return units = normalizeUnits(units),
                            this.isValid()
                                ? this[units + "s"]()
                                : NaN
                        }
                        function makeGetter(name) {
                            return function () {
                                return this.isValid()
                                    ? this._data[name]
                                    : NaN
                            }
                        }
                        function weeks() {
                            return absFloor(this.days() / 7)
                        }
                        function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
                            return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture)
                        }
                        function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
                            var duration = createDuration(posNegDuration).abs(),
                                seconds = round(duration.as("s")),
                                minutes = round(duration.as("m")),
                                hours = round(duration.as("h")),
                                days = round(duration.as("d")),
                                months = round(duration.as("M")),
                                weeks = round(duration.as("w")),
                                years = round(duration.as("y")),
                                a = seconds <= thresholds.ss && ["s", seconds] || seconds < thresholds.s && ["ss", seconds] || minutes <= 1 && ["m"] || minutes < thresholds.m && ["mm", minutes] || hours <= 1 && ["h"] || hours < thresholds.h && ["hh", hours] || days <= 1 && ["d"] || days < thresholds.d && ["dd", days];
                            return null != thresholds.w && (
                                a = a || weeks <= 1 && ["w"] || weeks < thresholds.w && ["ww", weeks]
                            ),
                            a = a || months <= 1 && ["M"] || months < thresholds.M && ["MM", months] || years <= 1 && ["y"] || [
                                "yy", years
                            ],
                            a[2] = withoutSuffix,
                            a[3] = +posNegDuration > 0,
                            a[4] = locale,
                            substituteTimeAgo.apply(null, a)
                        }
                        function getSetRelativeTimeRounding(roundingFunction) {
                            return void 0 === roundingFunction
                                ? round
                                : "function" == typeof roundingFunction && (round = roundingFunction, !0)
                        }
                        function getSetRelativeTimeThreshold(threshold, limit) {
                            return void 0 !== thresholds[threshold] && (
                                void 0 === limit
                                    ? thresholds[threshold]
                                    : (
                                        thresholds[threshold] = limit,
                                        "s" === threshold && (thresholds.ss = limit - 1),
                                        !0
                                    )
                            )
                        }
                        function humanize(argWithSuffix, argThresholds) {
                            if (!this.isValid()) 
                                return this
                                    .localeData()
                                    .invalidDate();
                            var locale,
                                output,
                                withSuffix = !1,
                                th = thresholds;
                            return "object" == typeof argWithSuffix && (
                                argThresholds = argWithSuffix,
                                argWithSuffix = !1
                            ),
                            "boolean" == typeof argWithSuffix && (withSuffix = argWithSuffix),
                            "object" == typeof argThresholds && (
                                th = Object.assign({}, thresholds, argThresholds),
                                null != argThresholds.s && null == argThresholds.ss && (th.ss = argThresholds.s - 1)
                            ),
                            locale = this.localeData(),
                            output = relativeTime$1(this, !withSuffix, th, locale),
                            withSuffix && (output = locale.pastFuture(+this, output)),
                            locale.postformat(output)
                        }
                        function sign(x) {
                            return (x > 0) - (x < 0) ||+ x
                        }
                        function toISOString$1() {
                            if (!this.isValid()) 
                                return this
                                    .localeData()
                                    .invalidDate();
                            var minutes,
                                hours,
                                years,
                                s,
                                totalSign,
                                ymSign,
                                daysSign,
                                hmsSign,
                                seconds = abs$1(this._milliseconds) / 1e3,
                                days = abs$1(this._days),
                                months = abs$1(this._months),
                                total = this.asSeconds();
                            return total
                                ? (
                                    minutes = absFloor(seconds / 60),
                                    hours = absFloor(minutes / 60),
                                    seconds %= 60,
                                    minutes %= 60,
                                    years = absFloor(months / 12),
                                    months %= 12,
                                    s = seconds
                                        ? seconds.toFixed(3).replace(/\.?0+$/, "")
                                        : "",
                                    totalSign = total < 0
                                        ? "-"
                                        : "",
                                    ymSign = sign(this._months) !== sign(total)
                                        ? "-"
                                        : "",
                                    daysSign = sign(this._days) !== sign(total)
                                        ? "-"
                                        : "",
                                    hmsSign = sign(this._milliseconds) !== sign(total)
                                        ? "-"
                                        : "",
                                    totalSign + "P" + (
                                        years
                                            ? ymSign + years + "Y"
                                            : ""
                                    ) + (
                                        months
                                            ? ymSign + months + "M"
                                            : ""
                                    ) + (
                                        days
                                            ? daysSign + days + "D"
                                            : ""
                                    ) + (
                                        hours || minutes || seconds
                                            ? "T"
                                            : ""
                                    ) + (
                                        hours
                                            ? hmsSign + hours + "H"
                                            : ""
                                    ) + (
                                        minutes
                                            ? hmsSign + minutes + "M"
                                            : ""
                                    ) + (
                                        seconds
                                            ? hmsSign + s + "S"
                                            : ""
                                    )
                                )
                                : "P0D"
                        }
                        var hookCallback,
                        some;
                        some = Array.prototype.some
                            ? Array.prototype.some
                            : function (fun) {
                                var i,
                                    t = Object(this),
                                    len = t.length >>> 0;
                                for (i = 0; i < len; i++) 
                                    if (i in t && fun.call(this, t[i], i, t)) 
                                        return !0;
                            return !1
                            };
                        var momentProperties = hooks.momentProperties = [],
                        updateInProgress = !1,
                        deprecations = {};
                        hooks.suppressDeprecationWarnings = !1,
                        hooks.deprecationHandler = null;
                        var keys;
                        keys = Object.keys
                            ? Object.keys
                            : function (obj) {
                                var i,
                                    res = [];
                                for (i in obj) 
                                    hasOwnProp(obj, i) && res.push(i);
                                return res
                            };
                        var regexes,
                        defaultCalendar = {
                                sameDay: "[Today at] LT",
                                nextDay: "[Tomorrow at] LT",
                                nextWeek: "dddd [at] LT",
                                lastDay: "[Yesterday at] LT",
                                lastWeek: "[Last] dddd [at] LT",
                                sameElse: "L"
                            },
                        formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
                        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
                        formatFunctions = {},
                        formatTokenFunctions = {},
                        defaultLongDateFormat = {
                                LTS: "h:mm:ss A",
                                LT: "h:mm A",
                                L: "MM/DD/YYYY",
                                LL: "MMMM D, YYYY",
                                LLL: "MMMM D, YYYY h:mm A",
                                LLLL: "dddd, MMMM D, YYYY h:mm A"
                            },
                        defaultInvalidDate = "Invalid date",
                        defaultOrdinal = "%d",
                        defaultDayOfMonthOrdinalParse = /\d{1,2}/,
                        defaultRelativeTime = {
                                future: "in %s",
                                past: "%s ago",
                                s: "a few seconds",
                                ss: "%d seconds",
                                m: "a minute",
                                mm: "%d minutes",
                                h: "an hour",
                                hh: "%d hours",
                                d: "a day",
                                dd: "%d days",
                                w: "a week",
                                ww: "%d weeks",
                                M: "a month",
                                MM: "%d months",
                                y: "a year",
                                yy: "%d years"
                            },
                        aliases = {},
                        priorities = {},
                        match1 = /\d/,
                        match2 = /\d\d/,
                        match3 = /\d{3}/,
                        match4 = /\d{4}/,
                        match6 = /[+-]?\d{6}/,
                        match1to2 = /\d\d?/,
                        match3to4 = /\d\d\d\d?/,
                        match5to6 = /\d\d\d\d\d\d?/,
                        match1to3 = /\d{1,3}/,
                        match1to4 = /\d{1,4}/,
                        match1to6 = /[+-]?\d{1,6}/,
                        matchUnsigned = /\d+/,
                        matchSigned = /[+-]?\d+/,
                        matchOffset = /Z|[+-]\d\d:?\d\d/gi,
                        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi,
                        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/,
                        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
                        regexes = {};
                        var indexOf,
                        tokens = {},
                        YEAR = 0,
                        MONTH = 1,
                        DATE = 2,
                        HOUR = 3,
                        MINUTE = 4,
                        SECOND = 5,
                        MILLISECOND = 6,
                        WEEK = 7,
                        WEEKDAY = 8;
                        indexOf = Array.prototype.indexOf
                            ? Array.prototype.indexOf
                            : function (o) {
                                var i;
                                for (i = 0; i < this.length; ++i) 
                                    if (this[i] === o) 
                                        return i;
                            return -1
                            },
                        addFormatToken("M", [
                            "MM", 2
                        ], "Mo", function () {
                            return this.month() + 1
                        }),
                        addFormatToken("MMM", 0, 0, function (format) {
                            return this
                                .localeData()
                                .monthsShort(this, format)
                        }),
                        addFormatToken("MMMM", 0, 0, function (format) {
                            return this
                                .localeData()
                                .months(this, format)
                        }),
                        addUnitAlias("month", "M"),
                        addUnitPriority("month", 8),
                        addRegexToken("M", match1to2),
                        addRegexToken("MM", match1to2, match2),
                        addRegexToken("MMM", function (isStrict, locale) {
                            return locale.monthsShortRegex(isStrict)
                        }),
                        addRegexToken("MMMM", function (isStrict, locale) {
                            return locale.monthsRegex(isStrict)
                        }),
                        addParseToken([
                            "M", "MM"
                        ], function (input, array) {
                            array[MONTH] = toInt(input) - 1
                        }),
                        addParseToken([
                            "MMM", "MMMM"
                        ], function (input, array, config, token) {
                            var month = config
                                ._locale
                                .monthsParse(input, token, config._strict);
                            null != month
                                ? array[MONTH] = month
                                : getParsingFlags(config).invalidMonth = input
                        });
                        var defaultLocaleMonths = (
                                "January_February_March_April_May_June_July_August_September_October_November_D" +
                            "ecember"
                            ).split("_"),
                        defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                                "_"
                            ),
                        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
                        defaultMonthsShortRegex = matchWord,
                        defaultMonthsRegex = matchWord;
                        addFormatToken("Y", 0, 0, function () {
                            var y = this.year();
                            return y <= 9999
                                ? zeroFill(y, 4)
                                : "+" + y
                        }),
                        addFormatToken(0, [
                            "YY", 2
                        ], 0, function () {
                            return this.year() % 100
                        }),
                        addFormatToken(0, [
                            "YYYY", 4
                        ], 0, "year"),
                        addFormatToken(0, [
                            "YYYYY", 5
                        ], 0, "year"),
                        addFormatToken(0, [
                            "YYYYYY", 6, !0
                        ], 0, "year"),
                        addUnitAlias("year", "y"),
                        addUnitPriority("year", 1),
                        addRegexToken("Y", matchSigned),
                        addRegexToken("YY", match1to2, match2),
                        addRegexToken("YYYY", match1to4, match4),
                        addRegexToken("YYYYY", match1to6, match6),
                        addRegexToken("YYYYYY", match1to6, match6),
                        addParseToken([
                            "YYYYY", "YYYYYY"
                        ], YEAR),
                        addParseToken("YYYY", function (input, array) {
                            array[YEAR] = 2 === input.length
                                ? hooks.parseTwoDigitYear(input)
                                : toInt(input)
                        }),
                        addParseToken("YY", function (input, array) {
                            array[YEAR] = hooks.parseTwoDigitYear(input)
                        }),
                        addParseToken("Y", function (input, array) {
                            array[YEAR] = parseInt(input, 10)
                        }),
                        hooks.parseTwoDigitYear = function (input) {
                            return toInt(input) + (
                                toInt(input) > 68
                                    ? 1900
                                    : 2e3
                            )
                        };
                        var getSetYear = makeGetSet("FullYear", !0);
                        addFormatToken("w", [
                            "ww", 2
                        ], "wo", "week"),
                        addFormatToken("W", [
                            "WW", 2
                        ], "Wo", "isoWeek"),
                        addUnitAlias("week", "w"),
                        addUnitAlias("isoWeek", "W"),
                        addUnitPriority("week", 5),
                        addUnitPriority("isoWeek", 5),
                        addRegexToken("w", match1to2),
                        addRegexToken("ww", match1to2, match2),
                        addRegexToken("W", match1to2),
                        addRegexToken("WW", match1to2, match2),
                        addWeekParseToken([
                            "w", "ww", "W", "WW"
                        ], function (input, week, config, token) {
                            week[token.substr(0, 1)] = toInt(input)
                        });
                        var defaultLocaleWeek = {
                            dow: 0,
                            doy: 6
                        };
                        addFormatToken("d", 0, "do", "day"),
                        addFormatToken("dd", 0, 0, function (format) {
                            return this
                                .localeData()
                                .weekdaysMin(this, format)
                        }),
                        addFormatToken("ddd", 0, 0, function (format) {
                            return this
                                .localeData()
                                .weekdaysShort(this, format)
                        }),
                        addFormatToken("dddd", 0, 0, function (format) {
                            return this
                                .localeData()
                                .weekdays(this, format)
                        }),
                        addFormatToken("e", 0, 0, "weekday"),
                        addFormatToken("E", 0, 0, "isoWeekday"),
                        addUnitAlias("day", "d"),
                        addUnitAlias("weekday", "e"),
                        addUnitAlias("isoWeekday", "E"),
                        addUnitPriority("day", 11),
                        addUnitPriority("weekday", 11),
                        addUnitPriority("isoWeekday", 11),
                        addRegexToken("d", match1to2),
                        addRegexToken("e", match1to2),
                        addRegexToken("E", match1to2),
                        addRegexToken("dd", function (isStrict, locale) {
                            return locale.weekdaysMinRegex(isStrict)
                        }),
                        addRegexToken("ddd", function (isStrict, locale) {
                            return locale.weekdaysShortRegex(isStrict)
                        }),
                        addRegexToken("dddd", function (isStrict, locale) {
                            return locale.weekdaysRegex(isStrict)
                        }),
                        addWeekParseToken([
                            "dd", "ddd", "dddd"
                        ], function (input, week, config, token) {
                            var weekday = config
                                ._locale
                                .weekdaysParse(input, token, config._strict);
                            null != weekday
                                ? week.d = weekday
                                : getParsingFlags(config).invalidWeekday = input
                        }),
                        addWeekParseToken([
                            "d", "e", "E"
                        ], function (input, week, config, token) {
                            week[token] = toInt(input)
                        });
                        var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                                "_"
                            ),
                        defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                        defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                        defaultWeekdaysRegex = matchWord,
                        defaultWeekdaysShortRegex = matchWord,
                        defaultWeekdaysMinRegex = matchWord;
                        addFormatToken("H", [
                            "HH", 2
                        ], 0, "hour"),
                        addFormatToken("h", [
                            "hh", 2
                        ], 0, hFormat),
                        addFormatToken("k", [
                            "kk", 2
                        ], 0, kFormat),
                        addFormatToken("hmm", 0, 0, function () {
                            return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2)
                        }),
                        addFormatToken("hmmss", 0, 0, function () {
                            return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(
                                this.seconds(),
                                2
                            )
                        }),
                        addFormatToken("Hmm", 0, 0, function () {
                            return "" + this.hours() + zeroFill(this.minutes(), 2)
                        }),
                        addFormatToken("Hmmss", 0, 0, function () {
                            return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(
                                this.seconds(),
                                2
                            )
                        }),
                        meridiem("a", !0),
                        meridiem("A", !1),
                        addUnitAlias("hour", "h"),
                        addUnitPriority("hour", 13),
                        addRegexToken("a", matchMeridiem),
                        addRegexToken("A", matchMeridiem),
                        addRegexToken("H", match1to2),
                        addRegexToken("h", match1to2),
                        addRegexToken("k", match1to2),
                        addRegexToken("HH", match1to2, match2),
                        addRegexToken("hh", match1to2, match2),
                        addRegexToken("kk", match1to2, match2),
                        addRegexToken("hmm", match3to4),
                        addRegexToken("hmmss", match5to6),
                        addRegexToken("Hmm", match3to4),
                        addRegexToken("Hmmss", match5to6),
                        addParseToken([
                            "H", "HH"
                        ], HOUR),
                        addParseToken([
                            "k", "kk"
                        ], function (input, array, config) {
                            var kInput = toInt(input);
                            array[HOUR] = 24 === kInput
                                ? 0
                                : kInput
                        }),
                        addParseToken([
                            "a", "A"
                        ], function (input, array, config) {
                            config._isPm = config
                                ._locale
                                .isPM(input),
                            config._meridiem = input
                        }),
                        addParseToken([
                            "h", "hh"
                        ], function (input, array, config) {
                            array[HOUR] = toInt(input),
                            getParsingFlags(config).bigHour = !0
                        }),
                        addParseToken("hmm", function (input, array, config) {
                            var pos = input.length - 2;
                            array[HOUR] = toInt(input.substr(0, pos)),
                            array[MINUTE] = toInt(input.substr(pos)),
                            getParsingFlags(config).bigHour = !0
                        }),
                        addParseToken("hmmss", function (input, array, config) {
                            var pos1 = input.length - 4,
                                pos2 = input.length - 2;
                            array[HOUR] = toInt(input.substr(0, pos1)),
                            array[MINUTE] = toInt(input.substr(pos1, 2)),
                            array[SECOND] = toInt(input.substr(pos2)),
                            getParsingFlags(config).bigHour = !0
                        }),
                        addParseToken("Hmm", function (input, array, config) {
                            var pos = input.length - 2;
                            array[HOUR] = toInt(input.substr(0, pos)),
                            array[MINUTE] = toInt(input.substr(pos))
                        }),
                        addParseToken("Hmmss", function (input, array, config) {
                            var pos1 = input.length - 4,
                                pos2 = input.length - 2;
                            array[HOUR] = toInt(input.substr(0, pos1)),
                            array[MINUTE] = toInt(input.substr(pos1, 2)),
                            array[SECOND] = toInt(input.substr(pos2))
                        });
                        var globalLocale,
                        defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
                        getSetHour = makeGetSet("Hours", !0),
                        baseConfig = {
                                calendar: defaultCalendar,
                                longDateFormat: defaultLongDateFormat,
                                invalidDate: defaultInvalidDate,
                                ordinal: defaultOrdinal,
                                dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
                                relativeTime: defaultRelativeTime,
                                months: defaultLocaleMonths,
                                monthsShort: defaultLocaleMonthsShort,
                                week: defaultLocaleWeek,
                                weekdays: defaultLocaleWeekdays,
                                weekdaysMin: defaultLocaleWeekdaysMin,
                                weekdaysShort: defaultLocaleWeekdaysShort,
                                meridiemParse: defaultLocaleMeridiemParse
                            },
                        locales = {},
                        localeFamilies = {},
                        extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
                        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
                        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
                        isoDates = [
                                [
                                    "YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/
                                ],
                                [
                                    "YYYY-MM-DD", /\d{4}-\d\d-\d\d/
                                ],
                                [
                                    "GGGG-[W]WW-E", /\d{4}-W\d\d-\d/
                                ],
                                [
                                    "GGGG-[W]WW", /\d{4}-W\d\d/, !1
                                ],
                                [
                                    "YYYY-DDD", /\d{4}-\d{3}/
                                ],
                                [
                                    "YYYY-MM", /\d{4}-\d\d/, !1
                                ],
                                [
                                    "YYYYYYMMDD", /[+-]\d{10}/
                                ],
                                [
                                    "YYYYMMDD", /\d{8}/
                                ],
                                [
                                    "GGGG[W]WWE", /\d{4}W\d{3}/
                                ],
                                [
                                    "GGGG[W]WW", /\d{4}W\d{2}/, !1
                                ],
                                [
                                    "YYYYDDD", /\d{7}/
                                ],
                                [
                                    "YYYYMM", /\d{6}/, !1
                                ],
                                [
                                    "YYYY", /\d{4}/, !1
                                ]
                            ],
                        isoTimes = [
                                [
                                    "HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/
                                ],
                                [
                                    "HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/
                                ],
                                [
                                    "HH:mm:ss", /\d\d:\d\d:\d\d/
                                ],
                                [
                                    "HH:mm", /\d\d:\d\d/
                                ],
                                [
                                    "HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/
                                ],
                                [
                                    "HHmmss,SSSS", /\d\d\d\d\d\d,\d+/
                                ],
                                [
                                    "HHmmss", /\d\d\d\d\d\d/
                                ],
                                [
                                    "HHmm", /\d\d\d\d/
                                ],
                                [
                                    "HH", /\d\d/
                                ]
                            ],
                        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
                        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
                        obsOffsets = {
                                UT: 0,
                                GMT: 0,
                                EDT: -240,
                                EST: -300,
                                CDT: -300,
                                CST: -360,
                                MDT: -360,
                                MST: -420,
                                PDT: -420,
                                PST: -480
                            };
                        hooks.createFromInputFallback = deprecate(
                            "value provided is not in a recognized RFC2822 or ISO format. moment constructi" +
                                "on falls back to js Date(), which is not reliable across all browsers and vers" +
                                "ions. Non RFC2822/ISO date formats are discouraged and will be removed in an u" +
                                "pcoming major release. Please refer to http://momentjs.com/guides/#/warnings/j" +
                                "s-date/ for more info.",
                            function (config) {
                                config._d = new Date(config._i + (
                                    config._useUTC
                                        ? " UTC"
                                        : ""
                                ))
                            }
                        ),
                        hooks.ISO_8601 = function () {},
                        hooks.RFC_2822 = function () {};
                        var prototypeMin = deprecate(
                                "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides" +
                                    "/#/warnings/min-max/",
                                function () {
                                    var other = createLocal.apply(null, arguments);
                                    return this.isValid() && other.isValid()
                                        ? other < this
                                            ? this
                                            : other
                                        : createInvalid()
                                }
                            ),
                        prototypeMax = deprecate(
                                "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides" +
                                    "/#/warnings/min-max/",
                                function () {
                                    var other = createLocal.apply(null, arguments);
                                    return this.isValid() && other.isValid()
                                        ? other > this
                                            ? this
                                            : other
                                        : createInvalid()
                                }
                            ),
                        now = function () {
                                return Date.now
                                    ? Date.now()
                                    : +new Date
                            },
                        ordering = [
                                "year",
                                "quarter",
                                "month",
                                "week",
                                "day",
                                "hour",
                                "minute",
                                "second",
                                "millisecond"
                            ];
                        offset("Z", ":"),
                        offset("ZZ", ""),
                        addRegexToken("Z", matchShortOffset),
                        addRegexToken("ZZ", matchShortOffset),
                        addParseToken([
                            "Z", "ZZ"
                        ], function (input, array, config) {
                            config._useUTC = !0,
                            config._tzm = offsetFromString(matchShortOffset, input)
                        });
                        var chunkOffset = /([\+\-]|\d\d)/gi;
                        hooks.updateOffset = function () {};
                        var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
                        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
                        createDuration.fn = Duration.prototype,
                        createDuration.invalid = createInvalid$1;
                        var add = createAdder(1, "add"),
                        subtract = createAdder(-1, "subtract");
                        hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ",
                        hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
                        var lang = deprecate(
                                "moment().lang() is deprecated. Instead, use moment().localeData() to get the l" +
                                    "anguage configuration. Use moment().locale() to change languages.",
                                function (key) {
                                    return void 0 === key
                                        ? this.localeData()
                                        : this.locale(key)
                                }
                            ),
                        MS_PER_SECOND = 1e3,
                        MS_PER_MINUTE = 60 * MS_PER_SECOND,
                        MS_PER_HOUR = 60 * MS_PER_MINUTE,
                        MS_PER_400_YEARS = 3506328 * MS_PER_HOUR;
                        addFormatToken("N", 0, 0, "eraAbbr"),
                        addFormatToken("NN", 0, 0, "eraAbbr"),
                        addFormatToken("NNN", 0, 0, "eraAbbr"),
                        addFormatToken("NNNN", 0, 0, "eraName"),
                        addFormatToken("NNNNN", 0, 0, "eraNarrow"),
                        addFormatToken("y", [
                            "y", 1
                        ], "yo", "eraYear"),
                        addFormatToken("y", [
                            "yy", 2
                        ], 0, "eraYear"),
                        addFormatToken("y", [
                            "yyy", 3
                        ], 0, "eraYear"),
                        addFormatToken("y", [
                            "yyyy", 4
                        ], 0, "eraYear"),
                        addRegexToken("N", matchEraAbbr),
                        addRegexToken("NN", matchEraAbbr),
                        addRegexToken("NNN", matchEraAbbr),
                        addRegexToken("NNNN", matchEraName),
                        addRegexToken("NNNNN", matchEraNarrow),
                        addParseToken([
                            "N", "NN", "NNN", "NNNN", "NNNNN"
                        ], function (input, array, config, token) {
                            var era = config
                                ._locale
                                .erasParse(input, token, config._strict);
                            era
                                ? getParsingFlags(config).era = era
                                : getParsingFlags(config).invalidEra = input
                        }),
                        addRegexToken("y", matchUnsigned),
                        addRegexToken("yy", matchUnsigned),
                        addRegexToken("yyy", matchUnsigned),
                        addRegexToken("yyyy", matchUnsigned),
                        addRegexToken("yo", matchEraYearOrdinal),
                        addParseToken([
                            "y", "yy", "yyy", "yyyy"
                        ], YEAR),
                        addParseToken(["yo"], function (input, array, config, token) {
                            var match;
                            config._locale._eraYearOrdinalRegex && (
                                match = input.match(config._locale._eraYearOrdinalRegex)
                            ),
                            config._locale.eraYearOrdinalParse
                                ? array[YEAR] = config
                                    ._locale
                                    .eraYearOrdinalParse(input, match)
                                : array[YEAR] = parseInt(input, 10)
                        }),
                        addFormatToken(0, [
                            "gg", 2
                        ], 0, function () {
                            return this.weekYear() % 100
                        }),
                        addFormatToken(0, [
                            "GG", 2
                        ], 0, function () {
                            return this.isoWeekYear() % 100
                        }),
                        addWeekYearFormatToken("gggg", "weekYear"),
                        addWeekYearFormatToken("ggggg", "weekYear"),
                        addWeekYearFormatToken("GGGG", "isoWeekYear"),
                        addWeekYearFormatToken("GGGGG", "isoWeekYear"),
                        addUnitAlias("weekYear", "gg"),
                        addUnitAlias("isoWeekYear", "GG"),
                        addUnitPriority("weekYear", 1),
                        addUnitPriority("isoWeekYear", 1),
                        addRegexToken("G", matchSigned),
                        addRegexToken("g", matchSigned),
                        addRegexToken("GG", match1to2, match2),
                        addRegexToken("gg", match1to2, match2),
                        addRegexToken("GGGG", match1to4, match4),
                        addRegexToken("gggg", match1to4, match4),
                        addRegexToken("GGGGG", match1to6, match6),
                        addRegexToken("ggggg", match1to6, match6),
                        addWeekParseToken([
                            "gggg", "ggggg", "GGGG", "GGGGG"
                        ], function (input, week, config, token) {
                            week[token.substr(0, 2)] = toInt(input)
                        }),
                        addWeekParseToken([
                            "gg", "GG"
                        ], function (input, week, config, token) {
                            week[token] = hooks.parseTwoDigitYear(input)
                        }),
                        addFormatToken("Q", 0, "Qo", "quarter"),
                        addUnitAlias("quarter", "Q"),
                        addUnitPriority("quarter", 7),
                        addRegexToken("Q", match1),
                        addParseToken("Q", function (input, array) {
                            array[MONTH] = 3 * (toInt(input) - 1)
                        }),
                        addFormatToken("D", [
                            "DD", 2
                        ], "Do", "date"),
                        addUnitAlias("date", "D"),
                        addUnitPriority("date", 9),
                        addRegexToken("D", match1to2),
                        addRegexToken("DD", match1to2, match2),
                        addRegexToken("Do", function (isStrict, locale) {
                            return isStrict
                                ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
                                : locale._dayOfMonthOrdinalParseLenient
                        }),
                        addParseToken([
                            "D", "DD"
                        ], DATE),
                        addParseToken("Do", function (input, array) {
                            array[DATE] = toInt(input.match(match1to2)[0])
                        });
                        var getSetDayOfMonth = makeGetSet("Date", !0);
                        addFormatToken("DDD", [
                            "DDDD", 3
                        ], "DDDo", "dayOfYear"),
                        addUnitAlias("dayOfYear", "DDD"),
                        addUnitPriority("dayOfYear", 4),
                        addRegexToken("DDD", match1to3),
                        addRegexToken("DDDD", match3),
                        addParseToken([
                            "DDD", "DDDD"
                        ], function (input, array, config) {
                            config._dayOfYear = toInt(input)
                        }),
                        addFormatToken("m", [
                            "mm", 2
                        ], 0, "minute"),
                        addUnitAlias("minute", "m"),
                        addUnitPriority("minute", 14),
                        addRegexToken("m", match1to2),
                        addRegexToken("mm", match1to2, match2),
                        addParseToken([
                            "m", "mm"
                        ], MINUTE);
                        var getSetMinute = makeGetSet("Minutes", !1);
                        addFormatToken("s", [
                            "ss", 2
                        ], 0, "second"),
                        addUnitAlias("second", "s"),
                        addUnitPriority("second", 15),
                        addRegexToken("s", match1to2),
                        addRegexToken("ss", match1to2, match2),
                        addParseToken([
                            "s", "ss"
                        ], SECOND);
                        var getSetSecond = makeGetSet("Seconds", !1);
                        addFormatToken("S", 0, 0, function () {
                            return ~~ (this.millisecond() / 100)
                        }),
                        addFormatToken(0, [
                            "SS", 2
                        ], 0, function () {
                            return ~~ (this.millisecond() / 10)
                        }),
                        addFormatToken(0, [
                            "SSS", 3
                        ], 0, "millisecond"),
                        addFormatToken(0, [
                            "SSSS", 4
                        ], 0, function () {
                            return 10 * this.millisecond()
                        }),
                        addFormatToken(0, [
                            "SSSSS", 5
                        ], 0, function () {
                            return 100 * this.millisecond()
                        }),
                        addFormatToken(0, [
                            "SSSSSS", 6
                        ], 0, function () {
                            return 1e3 * this.millisecond()
                        }),
                        addFormatToken(0, [
                            "SSSSSSS", 7
                        ], 0, function () {
                            return 1e4 * this.millisecond()
                        }),
                        addFormatToken(0, [
                            "SSSSSSSS", 8
                        ], 0, function () {
                            return 1e5 * this.millisecond()
                        }),
                        addFormatToken(0, [
                            "SSSSSSSSS", 9
                        ], 0, function () {
                            return 1e6 * this.millisecond()
                        }),
                        addUnitAlias("millisecond", "ms"),
                        addUnitPriority("millisecond", 16),
                        addRegexToken("S", match1to3, match1),
                        addRegexToken("SS", match1to3, match2),
                        addRegexToken("SSS", match1to3, match3);
                        var token,
                        getSetMillisecond;
                        for (token = "SSSS"; token.length <= 9; token += "S") 
                            addRegexToken(token, matchUnsigned);
                        for (token = "S"; token.length <= 9; token += "S") 
                            addParseToken(token, parseMs);
                        getSetMillisecond = makeGetSet("Milliseconds", !1),
                        addFormatToken("z", 0, 0, "zoneAbbr"),
                        addFormatToken("zz", 0, 0, "zoneName");
                        var proto = Moment.prototype;
                        proto.add = add,
                        proto.calendar = calendar$1,
                        proto.clone = clone,
                        proto.diff = diff,
                        proto.endOf = endOf,
                        proto.format = format,
                        proto.from = from,
                        proto.fromNow = fromNow,
                        proto.to = to,
                        proto.toNow = toNow,
                        proto.get = stringGet,
                        proto.invalidAt = invalidAt,
                        proto.isAfter = isAfter,
                        proto.isBefore = isBefore,
                        proto.isBetween = isBetween,
                        proto.isSame = isSame,
                        proto.isSameOrAfter = isSameOrAfter,
                        proto.isSameOrBefore = isSameOrBefore,
                        proto.isValid = isValid$2,
                        proto.lang = lang,
                        proto.locale = locale,
                        proto.localeData = localeData,
                        proto.max = prototypeMax,
                        proto.min = prototypeMin,
                        proto.parsingFlags = parsingFlags,
                        proto.set = stringSet,
                        proto.startOf = startOf,
                        proto.subtract = subtract,
                        proto.toArray = toArray,
                        proto.toObject = toObject,
                        proto.toDate = toDate,
                        proto.toISOString = toISOString,
                        proto.inspect = inspect,
                        "undefined" != typeof Symbol && null != Symbol.for && (proto[Symbol.for ("nodejs.util.inspect.custom") ] = function () {
                                return "Moment<" + this.format() + ">"
                            }), proto.toJSON = toJSON, proto.toString = toString, proto.unix = unix, proto.valueOf = valueOf, proto.creationData = creationData, proto.eraName = getEraName, proto.eraNarrow = getEraNarrow, proto.eraAbbr = getEraAbbr, proto.eraYear = getEraYear, proto.year = getSetYear, proto.isLeapYear = getIsLeapYear, proto.weekYear = getSetWeekYear, proto.isoWeekYear = getSetISOWeekYear, proto.quarter = proto.quarters = getSetQuarter, proto.month = getSetMonth, proto.daysInMonth = getDaysInMonth, proto.week = proto.weeks = getSetWeek, proto.isoWeek = proto.isoWeeks = getSetISOWeek, proto.weeksInYear = getWeeksInYear, proto.weeksInWeekYear = getWeeksInWeekYear, proto.isoWeeksInYear = getISOWeeksInYear, proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear, proto.date = getSetDayOfMonth, proto.day = proto.days = getSetDayOfWeek, proto.weekday = getSetLocaleDayOfWeek, proto.isoWeekday = getSetISODayOfWeek, proto.dayOfYear = getSetDayOfYear, proto.hour = proto.hours = getSetHour, proto.minute = proto.minutes = getSetMinute, proto.second = proto.seconds = getSetSecond, proto.millisecond = proto.milliseconds = getSetMillisecond, proto.utcOffset = getSetOffset, proto.utc = setOffsetToUTC, proto.local = setOffsetToLocal, proto.parseZone = setOffsetToParsedOffset, proto.hasAlignedHourOffset = hasAlignedHourOffset, proto.isDST = isDaylightSavingTime, proto.isLocal = isLocal, proto.isUtcOffset = isUtcOffset, proto.isUtc = isUtc, proto.isUTC = isUtc, proto.zoneAbbr = getZoneAbbr, proto.zoneName = getZoneName, proto.dates = deprecate("dates accessor is deprecated. Use date instead.", getSetDayOfMonth), proto.months = deprecate("months accessor is deprecated. Use month instead", getSetMonth), proto.years = deprecate("years accessor is deprecated. Use year instead", getSetYear), proto.zone = deprecate(
                                "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.c" +
                                    "om/guides/#/warnings/zone/",
                                getSetZone
                            ), proto.isDSTShifted = deprecate(
                                "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shif" +
                                    "ted/ for more information",
                                isDaylightSavingTimeShifted
                            );
                            var proto$1 = Locale.prototype;
                            proto$1.calendar = calendar, proto$1.longDateFormat = longDateFormat, proto$1.invalidDate = invalidDate, proto$1.ordinal = ordinal, proto$1.preparse = preParsePostFormat, proto$1.postformat = preParsePostFormat, proto$1.relativeTime = relativeTime, proto$1.pastFuture = pastFuture, proto$1.set = set, proto$1.eras = localeEras, proto$1.erasParse = localeErasParse, proto$1.erasConvertYear = localeErasConvertYear, proto$1.erasAbbrRegex = erasAbbrRegex, proto$1.erasNameRegex = erasNameRegex, proto$1.erasNarrowRegex = erasNarrowRegex, proto$1.months = localeMonths, proto$1.monthsShort = localeMonthsShort, proto$1.monthsParse = localeMonthsParse, proto$1.monthsRegex = monthsRegex, proto$1.monthsShortRegex = monthsShortRegex, proto$1.week = localeWeek, proto$1.firstDayOfYear = localeFirstDayOfYear, proto$1.firstDayOfWeek = localeFirstDayOfWeek, proto$1.weekdays = localeWeekdays, proto$1.weekdaysMin = localeWeekdaysMin, proto$1.weekdaysShort = localeWeekdaysShort, proto$1.weekdaysParse = localeWeekdaysParse, proto$1.weekdaysRegex = weekdaysRegex, proto$1.weekdaysShortRegex = weekdaysShortRegex, proto$1.weekdaysMinRegex = weekdaysMinRegex, proto$1.isPM = localeIsPM, proto$1.meridiem = localeMeridiem, getSetGlobalLocale(
                                "en",
                                {
                                    eras: [
                                        {
                                            since: "0001-01-01",
                                            until: 1 / 0,
                                            offset: 1,
                                            name: "Anno Domini",
                                            narrow: "AD",
                                            abbr: "AD"
                                        }, {
                                            since: "0000-12-31",
                                            until: -1 / 0,
                                            offset: 1,
                                            name: "Before Christ",
                                            narrow: "BC",
                                            abbr: "BC"
                                        }
                                    ],
                                    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
                                    ordinal: function (number) {
                                        var b = number % 10;
                                        return number + (
                                            1 === toInt(number % 100 / 10)
                                                ? "th"
                                                : 1 === b
                                                    ? "st"
                                                    : 2 === b
                                                        ? "nd"
                                                        : 3 === b
                                                            ? "rd"
                                                            : "th"
                                        )
                                    }
                                }
                            ), hooks.lang = deprecate(
                                "moment.lang is deprecated. Use moment.locale instead.",
                                getSetGlobalLocale
                            ), hooks.langData = deprecate(
                                "moment.langData is deprecated. Use moment.localeData instead.",
                                getLocale
                            );
                            var mathAbs = Math.abs, asMilliseconds = makeAs("ms"), asSeconds = makeAs("s"), asMinutes = makeAs(
                                    "m"
                                ), asHours = makeAs("h"), asDays = makeAs("d"), asWeeks = makeAs("w"), asMonths = makeAs(
                                    "M"
                                ), asQuarters = makeAs("Q"), asYears = makeAs("y"), milliseconds = makeGetter(
                                    "milliseconds"
                                ), seconds = makeGetter("seconds"), minutes = makeGetter("minutes"), hours = makeGetter(
                                    "hours"
                                ), days = makeGetter("days"), months = makeGetter("months"), years = makeGetter(
                                    "years"
                                ), round = Math.round, thresholds = {
                                    ss: 44,
                                    s: 45,
                                    m: 45,
                                    h: 22,
                                    d: 26,
                                    w: null,
                                    M: 11
                                }, abs$1 = Math.abs, proto$2 = Duration.prototype;
                            return proto$2.isValid = isValid$1, proto$2.abs = abs, proto$2.add = add$1, proto$2.subtract = subtract$1, proto$2.as = as, proto$2.asMilliseconds = asMilliseconds, proto$2.asSeconds = asSeconds, proto$2.asMinutes = asMinutes, proto$2.asHours = asHours, proto$2.asDays = asDays, proto$2.asWeeks = asWeeks, proto$2.asMonths = asMonths, proto$2.asQuarters = asQuarters, proto$2.asYears = asYears, proto$2.valueOf = valueOf$1, proto$2._bubble = bubble, proto$2.clone = clone$1, proto$2.get = get$2, proto$2.milliseconds = milliseconds, proto$2.seconds = seconds, proto$2.minutes = minutes, proto$2.hours = hours, proto$2.days = days, proto$2.weeks = weeks, proto$2.months = months, proto$2.years = years, proto$2.humanize = humanize, proto$2.toISOString = toISOString$1, proto$2.toString = toISOString$1, proto$2.toJSON = toISOString$1, proto$2.locale = locale, proto$2.localeData = localeData, proto$2.toIsoString = deprecate(
                                "toIsoString() is deprecated. Please use toISOString() instead (notice the capi" +
                                    "tals)",
                                toISOString$1
                            ), proto$2.lang = lang, addFormatToken("X", 0, 0, "unix"), addFormatToken(
                                "x",
                                0,
                                0,
                                "valueOf"
                            ), addRegexToken("x", matchSigned), addRegexToken("X", matchTimestamp), addParseToken(
                                "X",
                                function (input, array, config) {
                                    config._d = new Date(1e3 * parseFloat(input))
                                }
                            ), addParseToken("x", function (input, array, config) {
                                config._d = new Date(toInt(input))
                            }), hooks.version = "2.27.0", setHookCallback(createLocal), hooks.fn = proto, hooks.min = min, hooks.max = max, hooks.now = now, hooks.utc = createUTC, hooks.unix = createUnix, hooks.months = listMonths, hooks.isDate = isDate, hooks.locale = getSetGlobalLocale, hooks.invalid = createInvalid, hooks.duration = createDuration, hooks.isMoment = isMoment, hooks.weekdays = listWeekdays, hooks.parseZone = createInZone, hooks.localeData = getLocale, hooks.isDuration = isDuration, hooks.monthsShort = listMonthsShort, hooks.weekdaysMin = listWeekdaysMin, hooks.defineLocale = defineLocale, hooks.updateLocale = updateLocale, hooks.locales = listLocales, hooks.weekdaysShort = listWeekdaysShort, hooks.normalizeUnits = normalizeUnits, hooks.relativeTimeRounding = getSetRelativeTimeRounding, hooks.relativeTimeThreshold = getSetRelativeTimeThreshold, hooks.calendarFormat = getCalendarFormat, hooks.prototype = proto, hooks.HTML5_FMT = {
                                DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
                                DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
                                DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
                                DATE: "YYYY-MM-DD",
                                TIME: "HH:mm",
                                TIME_SECONDS: "HH:mm:ss",
                                TIME_MS: "HH:mm:ss.SSS",
                                WEEK: "GGGG-[W]WW",
                                MONTH: "YYYY-MM"
                            }, hooks
                        }
                    )
                }
            ).call(exports, __webpack_require__(169)(module))
        },,,,,,,,,,,,,,,,,,,,
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return ng
            });
            var __WEBPACK_IMPORTED_MODULE_0_angular__ = __webpack_require__(3),
                ng_from_global = (
                    __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_angular__),
                    angular
                ),
                ng = __WEBPACK_IMPORTED_MODULE_0_angular__ && __WEBPACK_IMPORTED_MODULE_0_angular__.module
                    ? __WEBPACK_IMPORTED_MODULE_0_angular__
                    : ng_from_global
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return RejectType
            }),
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return Rejection
            });
            var RejectType,
                __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_strings__ = __webpack_require__(40),
                __WEBPACK_IMPORTED_MODULE_2__common_hof__ = __webpack_require__(14);
            (function (RejectType) {
                RejectType[RejectType.SUPERSEDED = 2] = "SUPERSEDED",
                RejectType[RejectType.ABORTED = 3] = "ABORTED",
                RejectType[RejectType.INVALID = 4] = "INVALID",
                RejectType[RejectType.IGNORED = 5] = "IGNORED",
                RejectType[RejectType.ERROR = 6] = "ERROR"
            })(RejectType || (RejectType = {}));
            var id = 0,
                Rejection = function () {
                    function Rejection(type, message, detail) {
                        this.$id = id++,
                        this.type = type,
                        this.message = message,
                        this.detail = detail
                    }
                    return Rejection.isRejectionPromise = function (obj) {
                        return obj && "function" == typeof obj.then && Object(
                            __WEBPACK_IMPORTED_MODULE_2__common_hof__.h
                        )(Rejection)(obj._transitionRejection)
                    },
                    Rejection.superseded = function (detail, options) {
                        var message = "The transition has been superseded by a different transition",
                            rejection = new Rejection(RejectType.SUPERSEDED, message, detail);
                        return options && options.redirected && (rejection.redirected = !0),
                        rejection
                    },
                    Rejection.redirected = function (detail) {
                        return Rejection.superseded(detail, {
                            redirected: !0
                        })
                    },
                    Rejection.invalid = function (detail) {
                        return new Rejection(RejectType.INVALID, "This transition is invalid", detail)
                    },
                    Rejection.ignored = function (detail) {
                        return new Rejection(RejectType.IGNORED, "The transition was ignored", detail)
                    },
                    Rejection.aborted = function (detail) {
                        return new Rejection(
                            RejectType.ABORTED,
                            "The transition has been aborted",
                            detail
                        )
                    },
                    Rejection.errored = function (detail) {
                        return new Rejection(RejectType.ERROR, "The transition errored", detail)
                    },
                    Rejection.normalize = function (detail) {
                        return Object(__WEBPACK_IMPORTED_MODULE_2__common_hof__.h)(Rejection)(detail)
                            ? detail
                            : Rejection.errored(detail)
                    },
                    Rejection.prototype.toString = function () {
                        var detailString = function (d) {
                                return d && d.toString !== Object.prototype.toString
                                    ? d.toString()
                                    : Object(__WEBPACK_IMPORTED_MODULE_1__common_strings__.m)(d)
                            },
                            detail = detailString(this.detail),
                            _a = this;
                        return "Transition Rejection($id: " + _a.$id + " type: " + _a.type + ", message" +
                            ": " + _a.message + ", detail: " + detail + ")"
                    },
                    Rejection.prototype.toPromise = function () {
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                            Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.O)(
                                this
                            ),
                            {_transitionRejection: this}
                        )
                    },
                    Rejection
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return TransitionHookPhase
            }),
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return TransitionHookScope
            });
            var TransitionHookPhase;
            (function (TransitionHookPhase) {
                TransitionHookPhase[TransitionHookPhase.CREATE = 0] = "CREATE",
                TransitionHookPhase[TransitionHookPhase.BEFORE = 1] = "BEFORE",
                TransitionHookPhase[TransitionHookPhase.RUN = 2] = "RUN",
                TransitionHookPhase[TransitionHookPhase.SUCCESS = 3] = "SUCCESS",
                TransitionHookPhase[TransitionHookPhase.ERROR = 4] = "ERROR"
            })(TransitionHookPhase || (TransitionHookPhase = {}));
            var TransitionHookScope;
            (function (TransitionHookScope) {
                TransitionHookScope[TransitionHookScope.TRANSITION = 0] = "TRANSITION",
                TransitionHookScope[TransitionHookScope.STATE = 1] = "STATE"
            })(TransitionHookScope || (TransitionHookScope = {}))
        },,,,,,,,,,,
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function getParamDeclaration(paramName, location, state) {
                var noReloadOnSearch = !1 === state.reloadOnSearch && location === DefType.SEARCH || void 0,
                    dynamic = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.t)([
                        state.dynamic, noReloadOnSearch
                    ], __WEBPACK_IMPORTED_MODULE_2__common_predicates__.c),
                    defaultConfig = Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.c)(
                        dynamic
                    )
                        ? {
                            dynamic: dynamic
                        }
                        : {},
                    paramConfig = unwrapShorthand(state && state.params && state.params[paramName]);
                return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                    defaultConfig,
                    paramConfig
                )
            }
            function unwrapShorthand(cfg) {
                function getStaticDefaultValue() {
                    return cfg.value
                }
                cfg = isShorthand(cfg)
                    ? {
                        value: cfg
                    }
                    : cfg,
                getStaticDefaultValue.__cacheable = !0;
                var $$fn = Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.e)(
                    cfg.value
                )
                    ? cfg.value
                    : getStaticDefaultValue;
                return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                    cfg,
                    {$$fn: $$fn}
                )
            }
            function getType(cfg, urlType, location, id, paramTypes) {
                if (cfg.type && urlType && "string" !== urlType.name) 
                    throw new Error(
                        "Param '" + id + "' has two type configurations."
                    );
                if (cfg.type && urlType && "string" === urlType.name && paramTypes.type(cfg.type)) 
                    return paramTypes.type(cfg.type);
                if (urlType) 
                    return urlType;
                if (!cfg.type) {
                    var type = location === DefType.CONFIG
                        ? "any"
                        : location === DefType.PATH
                            ? "path"
                            : location === DefType.SEARCH
                                ? "query"
                                : "string";
                    return paramTypes.type(type)
                }
                return cfg.type instanceof __WEBPACK_IMPORTED_MODULE_4__paramType__.a
                    ? cfg.type
                    : paramTypes.type(cfg.type)
            }
            function getSquashPolicy(config, isOptional, defaultPolicy) {
                var squash = config.squash;
                if (!isOptional || !1 === squash) 
                    return !1;
                if (!Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.c)(squash) || null == squash) 
                    return defaultPolicy;
                if (!0 === squash || Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.l)(
                    squash
                )) 
                    return squash;
                throw new Error(
                    "Invalid squash policy: '" + squash + "'. Valid policies: false, true, or arbit" +
                "rary string"
                )
            }
            function getReplace(config, arrayMode, isOptional, squash) {
                var defaultPolicy = [
                        {
                            from: "",
                            to: isOptional || arrayMode
                                ? void 0
                                : ""
                        }, {
                            from: null,
                            to: isOptional || arrayMode
                                ? void 0
                                : ""
                        }
                    ],
                    replace = Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.a)(
                        config.replace
                    )
                        ? config.replace
                        : [];
                Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.l)(squash) && replace.push(
                    {from: squash, to: void 0}
                );
                var configuredKeys = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.B)(
                    replace,
                    Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.n)(
                        "from"
                    )
                );
                return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.s)(
                    defaultPolicy,
                    function (item) {
                        return -1 === configuredKeys.indexOf(item.from)
                    }
                ).concat(replace)
            }
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return DefType
            }),
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return Param
            });
            var DefType,
                __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_2__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_3__common_coreservices__ = __webpack_require__(20),
                __WEBPACK_IMPORTED_MODULE_4__paramType__ = __webpack_require__(159),
                hasOwn = Object.prototype.hasOwnProperty,
                isShorthand = function (cfg) {
                    return 0 === ["value", "type", "squash", "array", "dynamic"]
                        .filter(
                            hasOwn.bind(cfg || {})
                        )
                        .length
                };
            (function (DefType) {
                DefType[DefType.PATH = 0] = "PATH",
                DefType[DefType.SEARCH = 1] = "SEARCH",
                DefType[DefType.CONFIG = 2] = "CONFIG"
            })(DefType || (DefType = {}));
            var Param = function () {
                function Param(id, type, location, urlConfig, state) {
                    function getArrayMode() {
                        var arrayDefaults = {
                                array: location === DefType.SEARCH && "auto"
                            },
                            arrayParamNomenclature = id.match(/\[\]$/)
                                ? {
                                    array: !0
                                }
                                : {};
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                            arrayDefaults,
                            arrayParamNomenclature,
                            config
                        ).array
                    }
                    var config = getParamDeclaration(id, location, state);
                    type = getType(config, type, location, id, urlConfig.paramTypes);
                    var arrayMode = getArrayMode();
                    type = arrayMode
                        ? type.$asArray(arrayMode, location === DefType.SEARCH)
                        : type;
                    var isOptional = void 0 !== config.value || location === DefType.SEARCH,
                        dynamic = Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.c)(
                            config.dynamic
                        )
                            ? !!config.dynamic
                            : !!type.dynamic,
                        raw = Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.c)(config.raw)
                            ? !!config.raw
                            : !!type.raw,
                        squash = getSquashPolicy(config, isOptional, urlConfig.defaultSquashPolicy()),
                        replace = getReplace(config, arrayMode, isOptional, squash),
                        inherit = Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.c)(
                            config.inherit
                        )
                            ? !!config.inherit
                            : !!type.inherit;
                    Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(this, {
                        id: id,
                        type: type,
                        location: location,
                        isOptional: isOptional,
                        dynamic: dynamic,
                        raw: raw,
                        squash: squash,
                        replace: replace,
                        inherit: inherit,
                        array: arrayMode,
                        config: config
                    })
                }
                return Param.values = function (params, values) {
                    void 0 === values && (values = {});
                    for (
                        var paramValues = {},
                        _i = 0,
                        params_1 = params;
                        _i < params_1.length;
                        _i++
                    ) {
                        var param = params_1[_i];
                        paramValues[param.id] = param.value(values[param.id])
                    }
                    return paramValues
                },
                Param.changed = function (params, values1, values2) {
                    return void 0 === values1 && (values1 = {}),
                    void 0 === values2 && (values2 = {}),
                    params.filter(function (param) {
                        return !param
                            .type
                            .equals(values1[param.id], values2[param.id])
                    })
                },
                Param.equals = function (params, values1, values2) {
                    return void 0 === values1 && (values1 = {}),
                    void 0 === values2 && (values2 = {}),
                    0 === Param
                        .changed(params, values1, values2)
                        .length
                },
                Param.validates = function (params, values) {
                    return void 0 === values && (values = {}),
                    params
                        .map(function (param) {
                            return param.validates(values[param.id])
                        })
                        .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.e, !0)
                },
                Param.prototype.isDefaultValue = function (value) {
                    return this.isOptional && this
                        .type
                        .equals(this.value(), value)
                },
                Param.prototype.value = function (value) {
                    var _this = this,
                        getDefaultValue = function () {
                            if (_this._defaultValueCache) 
                                return _this._defaultValueCache.defaultValue;
                            if (!__WEBPACK_IMPORTED_MODULE_3__common_coreservices__.b.$injector) 
                                throw new Error("Injectable functions cannot be called at configuration time");
                            var defaultValue = __WEBPACK_IMPORTED_MODULE_3__common_coreservices__
                                .b
                                .$injector
                                .invoke(_this.config.$$fn);
                            if (null !== defaultValue && void 0 !== defaultValue && !_this.type.is(defaultValue)) 
                                throw new Error(
                                    "Default value (" + defaultValue + ") for parameter '" + _this.id + "' is not a" +
                                "n instance of ParamType (" + _this.type.name + ")"
                                );
                            return _this.config.$$fn.__cacheable && (_this._defaultValueCache = {
                                defaultValue: defaultValue
                            }),
                            defaultValue
                        };
                    return value = function (val) {
                        for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {
                            var tuple = _a[_i];
                            if (tuple.from === val) 
                                return tuple.to
                        }
                        return val
                    }(value),
                    Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.m)(value)
                        ? getDefaultValue()
                        : this
                            .type
                            .$normalize(value)
                },
                Param.prototype.isSearch = function () {
                    return this.location === DefType.SEARCH
                },
                Param.prototype.validates = function (value) {
                    if ((Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.m)(value) || null === value) && this.isOptional) 
                        return !0;
                    var normalized = this
                        .type
                        .$normalize(value);
                    if (!this.type.is(normalized)) 
                        return !1;
                    var encoded = this
                        .type
                        .encode(normalized);
                    return !(
                        Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.l)(encoded) && !this.type.pattern.exec(
                            encoded
                        )
                    )
                },
                Param.prototype.toString = function () {
                    return "{Param:" + this.id + " " + this.type + " squash: '" + this.squash + "' " +
                        "optional: " + this.isOptional + "}"
                },
                Param
            }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return TargetState
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_1__common_strings__ = __webpack_require__(40),
                __WEBPACK_IMPORTED_MODULE_2__common__ = __webpack_require__(17),
                TargetState = function () {
                    function TargetState(_stateRegistry, _identifier, _params, _options) {
                        this._stateRegistry = _stateRegistry,
                        this._identifier = _identifier,
                        this._identifier = _identifier,
                        this._params = Object(__WEBPACK_IMPORTED_MODULE_2__common__.C)(
                            {},
                            _params || {}
                        ),
                        this._options = Object(__WEBPACK_IMPORTED_MODULE_2__common__.C)(
                            {},
                            _options || {}
                        ),
                        this._definition = _stateRegistry
                            .matcher
                            .find(_identifier, this._options.relative)
                    }
                    return TargetState.prototype.name = function () {
                        return this._definition && this._definition.name || this._identifier
                    },
                    TargetState.prototype.identifier = function () {
                        return this._identifier
                    },
                    TargetState.prototype.params = function () {
                        return this._params
                    },
                    TargetState.prototype.$state = function () {
                        return this._definition
                    },
                    TargetState.prototype.state = function () {
                        return this._definition && this._definition.self
                    },
                    TargetState.prototype.options = function () {
                        return this._options
                    },
                    TargetState.prototype.exists = function () {
                        return !(!this._definition || !this._definition.self)
                    },
                    TargetState.prototype.valid = function () {
                        return !this.error()
                    },
                    TargetState.prototype.error = function () {
                        var base = this
                            .options()
                            .relative;
                        if (!this._definition && base) {
                            var stateName = base.name
                                ? base.name
                                : base;
                            return "Could not resolve '" + this.name() + "' from state '" +
                                stateName + "'"
                        }
                        return this._definition
                            ? this._definition.self
                                ? void 0
                                : "State '" + this.name() + "' has an invalid definition"
                            : "No such state '" + this.name() + "'"
                    },
                    TargetState.prototype.toString = function () {
                        return "'" + this.name() + "'" + Object(
                            __WEBPACK_IMPORTED_MODULE_1__common_strings__.m
                        )(this.params())
                    },
                    TargetState.prototype.withState = function (state) {
                        return new TargetState(this._stateRegistry, state, this._params, this._options)
                    },
                    TargetState.prototype.withParams = function (params, replace) {
                        void 0 === replace && (replace = !1);
                        var newParams = replace
                            ? params
                            : Object(__WEBPACK_IMPORTED_MODULE_2__common__.C)({}, this._params, params);
                        return new TargetState(
                            this._stateRegistry,
                            this._identifier,
                            newParams,
                            this._options
                        )
                    },
                    TargetState.prototype.withOptions = function (options, replace) {
                        void 0 === replace && (replace = !1);
                        var newOpts = replace
                            ? options
                            : Object(__WEBPACK_IMPORTED_MODULE_2__common__.C)({}, this._options, options);
                        return new TargetState(
                            this._stateRegistry,
                            this._identifier,
                            this._params,
                            newOpts
                        )
                    },
                    TargetState.isDef = function (obj) {
                        return obj && obj.state && (
                            Object(__WEBPACK_IMPORTED_MODULE_0__common_predicates__.l)(
                                obj.state
                            ) || Object(__WEBPACK_IMPORTED_MODULE_0__common_predicates__.i)(obj.state) && Object(
                                __WEBPACK_IMPORTED_MODULE_0__common_predicates__.l
                            )(obj.state.name)
                        )
                    },
                    TargetState
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return TransitionHook
            });
            var __WEBPACK_IMPORTED_MODULE_0__interface__ = __webpack_require__(70),
                __WEBPACK_IMPORTED_MODULE_1__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_2__common_strings__ = __webpack_require__(40),
                __WEBPACK_IMPORTED_MODULE_3__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_4__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_5__common_trace__ = __webpack_require__(47),
                __WEBPACK_IMPORTED_MODULE_6__common_coreservices__ = __webpack_require__(20),
                __WEBPACK_IMPORTED_MODULE_7__rejectFactory__ = __webpack_require__(69),
                __WEBPACK_IMPORTED_MODULE_8__state_targetState__ = __webpack_require__(82),
                defaultOptions = {
                    current: __WEBPACK_IMPORTED_MODULE_1__common_common__.E,
                    transition: null,
                    traceData: {},
                    bind: null
                },
                TransitionHook = function () {
                    function TransitionHook(transition, stateContext, registeredHook, options) {
                        var _this = this;
                        this.transition = transition,
                        this.stateContext = stateContext,
                        this.registeredHook = registeredHook,
                        this.options = options,
                        this.isSuperseded = function () {
                            return _this.type.hookPhase === __WEBPACK_IMPORTED_MODULE_0__interface__.a.RUN && !_this
                                .options
                                .transition
                                .isActive()
                        },
                        this.options = Object(__WEBPACK_IMPORTED_MODULE_1__common_common__.o)(
                            options,
                            defaultOptions
                        ),
                        this.type = registeredHook.eventType
                    }
                    return TransitionHook.chain = function (hooks, waitFor) {
                        var createHookChainR = function (prev, nextHook) {
                            return prev.then(function () {
                                return nextHook.invokeHook()
                            })
                        };
                        return hooks.reduce(
                            createHookChainR,
                            waitFor || __WEBPACK_IMPORTED_MODULE_6__common_coreservices__.b.$q.when()
                        )
                    },
                    TransitionHook.invokeHooks = function (hooks, doneCallback) {
                        for (var idx = 0; idx < hooks.length; idx++) {
                            var hookResult = hooks[idx].invokeHook();
                            if (Object(__WEBPACK_IMPORTED_MODULE_3__common_predicates__.j)(hookResult)) {
                                var remainingHooks = hooks.slice(idx + 1);
                                return TransitionHook
                                    .chain(remainingHooks, hookResult)
                                    .then(doneCallback)
                            }
                        }
                        return doneCallback()
                    },
                    TransitionHook.runAllHooks = function (hooks) {
                        hooks.forEach(function (hook) {
                            return hook.invokeHook()
                        })
                    },
                    TransitionHook.prototype.logError = function (err) {
                        this
                            .transition
                            .router
                            .stateService
                            .defaultErrorHandler()(err)
                    },
                    TransitionHook.prototype.invokeHook = function () {
                        var _this = this,
                            hook = this.registeredHook;
                        if (!hook._deregistered) {
                            var notCurrent = this.getNotCurrentRejection();
                            if (notCurrent) 
                                return notCurrent;
                            var options = this.options;
                            __WEBPACK_IMPORTED_MODULE_5__common_trace__
                                .c
                                .traceHookInvocation(this, this.transition, options);
                            var invokeCallback = function () {
                                    return hook
                                        .callback
                                        .call(options.bind, _this.transition, _this.stateContext)
                                },
                                normalizeErr = function (err) {
                                    return __WEBPACK_IMPORTED_MODULE_7__rejectFactory__
                                        .b
                                        .normalize(err)
                                        .toPromise()
                                },
                                handleError = function (err) {
                                    return hook
                                        .eventType
                                        .getErrorHandler(_this)(err)
                                },
                                handleResult = function (result) {
                                    return hook
                                        .eventType
                                        .getResultHandler(_this)(result)
                                };
                            try {
                                var result = invokeCallback();
                                return !this.type.synchronous && Object(
                                    __WEBPACK_IMPORTED_MODULE_3__common_predicates__.j
                                )(result)
                                    ? result
                                        .catch(normalizeErr)
                                        .then(handleResult, handleError)
                                    : handleResult(result)
                            } catch (err) {
                                return handleError(
                                    __WEBPACK_IMPORTED_MODULE_7__rejectFactory__.b.normalize(err)
                                )
                            } finally {
                                hook.invokeLimit && ++hook.invokeCount >= hook.invokeLimit && hook.deregister()
                            }
                        }
                    },
                    TransitionHook.prototype.handleHookResult = function (result) {
                        var _this = this,
                            notCurrent = this.getNotCurrentRejection();
                        return notCurrent || (
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_predicates__.j)(
                                    result
                                )
                                ? result.then(function (val) {
                                    return _this.handleHookResult(val)
                                })
                                : (
                                    __WEBPACK_IMPORTED_MODULE_5__common_trace__.c.traceHookResult(result, this.transition, this.options),
                                    !1 === result
                                        ? __WEBPACK_IMPORTED_MODULE_7__rejectFactory__.b.aborted(
                                            "Hook aborted transition"
                                        ).toPromise()
                                        : Object(__WEBPACK_IMPORTED_MODULE_4__common_hof__.h)(
                                            __WEBPACK_IMPORTED_MODULE_8__state_targetState__.a
                                        )(result)
                                            ? __WEBPACK_IMPORTED_MODULE_7__rejectFactory__.b.redirected(result).toPromise()
                                            : void 0
                                )
                        )
                    },
                    TransitionHook.prototype.getNotCurrentRejection = function () {
                        var router = this.transition.router;
                        return router._disposed
                            ? __WEBPACK_IMPORTED_MODULE_7__rejectFactory__
                                .b
                                .aborted(
                                    "UIRouter instance #" + router.$id + " has been stopped (disposed)"
                                )
                                .toPromise()
                            : this.transition._aborted
                                ? __WEBPACK_IMPORTED_MODULE_7__rejectFactory__
                                    .b
                                    .aborted()
                                    .toPromise()
                                : this.isSuperseded()
                                    ? __WEBPACK_IMPORTED_MODULE_7__rejectFactory__
                                        .b
                                        .superseded(this.options.current())
                                        .toPromise()
                                    : void 0
                    },
                    TransitionHook.prototype.toString = function () {
                        var _a = this,
                            options = _a.options,
                            registeredHook = _a.registeredHook,
                            event = Object(__WEBPACK_IMPORTED_MODULE_4__common_hof__.k)(
                                "traceData.hookType"
                            )(options) || "internal",
                            context = Object(__WEBPACK_IMPORTED_MODULE_4__common_hof__.k)(
                                "traceData.context.state.name"
                            )(options) || Object(__WEBPACK_IMPORTED_MODULE_4__common_hof__.k)(
                                "traceData.context"
                            )(options) || "unknown",
                            name = Object(__WEBPACK_IMPORTED_MODULE_2__common_strings__.b)(
                                registeredHook.callback
                            );
                        return event + " context: " + context + ", " + Object(
                            __WEBPACK_IMPORTED_MODULE_2__common_strings__.g
                        )(200, name)
                    },
                    TransitionHook.HANDLE_RESULT = function (hook) {
                        return function (result) {
                            return hook.handleHookResult(result)
                        }
                    },
                    TransitionHook.LOG_REJECTED_RESULT = function (hook) {
                        return function (result) {
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_predicates__.j)(result) && result.catch(
                                function (err) {
                                    return hook.logError(
                                        __WEBPACK_IMPORTED_MODULE_7__rejectFactory__.b.normalize(err)
                                    )
                                }
                            )
                        }
                    },
                    TransitionHook.LOG_ERROR = function (hook) {
                        return function (error) {
                            return hook.logError(error)
                        }
                    },
                    TransitionHook.REJECT_ERROR = function (hook) {
                        return function (error) {
                            return Object(__WEBPACK_IMPORTED_MODULE_1__common_common__.O)(error)
                        }
                    },
                    TransitionHook.THROW_ERROR = function (hook) {
                        return function (error) {
                            throw error
                        }
                    },
                    TransitionHook
                }()
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function _defineProperty(obj, key, value) {
                return key in obj
                    ? Object.defineProperty(obj, key, {
                        value: value,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    })
                    : obj[key] = value,
                obj
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var _SET_BY_CODE,
                SET_A = exports.SET_A = 0,
                SET_B = exports.SET_B = 1,
                SET_C = exports.SET_C = 2,
                START_A = (exports.SHIFT = 98, exports.START_A = 103),
                START_B = exports.START_B = 104,
                START_C = exports.START_C = 105;
            exports.MODULO = 103,
            exports.STOP = 106,
            exports.FNC1 = 207,
            exports.SET_BY_CODE = (
                _SET_BY_CODE = {},
                _defineProperty(_SET_BY_CODE, START_A, SET_A),
                _defineProperty(_SET_BY_CODE, START_B, SET_B),
                _defineProperty(_SET_BY_CODE, START_C, SET_C),
                _SET_BY_CODE
            ),
            exports.SWAP = {
                101: SET_A,
                100: SET_B,
                99: SET_C
            },
            exports.A_START_CHAR = String.fromCharCode(208),
            exports.B_START_CHAR = String.fromCharCode(209),
            exports.C_START_CHAR = String.fromCharCode(210),
            exports.A_CHARS = "[\0-_È-Ï]",
            exports.B_CHARS = "[ -È-Ï]",
            exports.C_CHARS = "(Ï*[0-9]{2}Ï*)",
            exports.BARS = [
                11011001100,
                11001101100,
                11001100110,
                10010011e3,
                10010001100,
                10001001100,
                10011001e3,
                10011000100,
                10001100100,
                11001001e3,
                11001000100,
                11000100100,
                10110011100,
                10011011100,
                10011001110,
                10111001100,
                10011101100,
                10011100110,
                11001110010,
                11001011100,
                11001001110,
                11011100100,
                11001110100,
                11101101110,
                11101001100,
                11100101100,
                11100100110,
                11101100100,
                11100110100,
                11100110010,
                11011011e3,
                11011000110,
                11000110110,
                10100011e3,
                10001011e3,
                10001000110,
                10110001e3,
                10001101e3,
                10001100010,
                11010001e3,
                11000101e3,
                11000100010,
                10110111e3,
                10110001110,
                10001101110,
                10111011e3,
                10111000110,
                10001110110,
                11101110110,
                11010001110,
                11000101110,
                11011101e3,
                11011100010,
                11011101110,
                11101011e3,
                11101000110,
                11100010110,
                11101101e3,
                11101100010,
                11100011010,
                11101111010,
                11001000010,
                11110001010,
                1010011e4,
                10100001100,
                1001011e4,
                10010000110,
                10000101100,
                10000100110,
                1011001e4,
                10110000100,
                1001101e4,
                10011000010,
                10000110100,
                10000110010,
                11000010010,
                1100101e4,
                11110111010,
                11000010100,
                10001111010,
                10100111100,
                10010111100,
                10010011110,
                10111100100,
                10011110100,
                10011110010,
                11110100100,
                11110010100,
                11110010010,
                11011011110,
                11011110110,
                11110110110,
                10101111e3,
                10100011110,
                10001011110,
                10111101e3,
                10111100010,
                11110101e3,
                11110100010,
                10111011110,
                10111101110,
                11101011110,
                11110101110,
                11010000100,
                1101001e4,
                11010011100,
                1100011101011
            ]
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            exports.SIDE_BIN = "101",
            exports.MIDDLE_BIN = "01010",
            exports.BINARIES = {
                L: [
                    "0001101",
                    "0011001",
                    "0010011",
                    "0111101",
                    "0100011",
                    "0110001",
                    "0101111",
                    "0111011",
                    "0110111",
                    "0001011"
                ],
                G: [
                    "0100111",
                    "0110011",
                    "0011011",
                    "0100001",
                    "0011101",
                    "0111001",
                    "0000101",
                    "0010001",
                    "0001001",
                    "0010111"
                ],
                R: [
                    "1110010",
                    "1100110",
                    "1101100",
                    "1000010",
                    "1011100",
                    "1001110",
                    "1010000",
                    "1000100",
                    "1001000",
                    "1110100"
                ],
                O: [
                    "0001101",
                    "0011001",
                    "0010011",
                    "0111101",
                    "0100011",
                    "0110001",
                    "0101111",
                    "0111011",
                    "0110111",
                    "0001011"
                ],
                E: [
                    "0100111",
                    "0110011",
                    "0011011",
                    "0100001",
                    "0011101",
                    "0111001",
                    "0000101",
                    "0010001",
                    "0001001",
                    "0010111"
                ]
            },
            exports.EAN2_STRUCTURE = [
                "LL", "LG", "GL", "GG"
            ],
            exports.EAN5_STRUCTURE = [
                "GGLLL",
                "GLGLL",
                "GLLGL",
                "GLLLG",
                "LGGLL",
                "LLGGL",
                "LLLGG",
                "LGLGL",
                "LGLLG",
                "LLGLG"
            ],
            exports.EAN13_STRUCTURE = [
                "LLLLLL",
                "LLGLGG",
                "LLGGLG",
                "LLGGGL",
                "LGLLGG",
                "LGGLLG",
                "LGGGLL",
                "LGLGLG",
                "LGLGGL",
                "LGGLGL"
            ]
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var _constants = __webpack_require__(85),
                encode = function encode(data, structure, separator) {
                    var encoded = data
                        .split("")
                        .map(function (val, idx) {
                            return _constants.BINARIES[structure[idx]]
                        })
                        .map(function (val, idx) {
                            return val
                                ? val[data[idx]]
                                : ""
                        });
                    if (separator) {
                        var last = data.length - 1;
                        encoded = encoded.map(function (val, idx) {
                            return idx < last
                                ? val + separator
                                : val
                        })
                    }
                    return encoded.join("")
                };
            exports.default = encode
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule
                    ? obj
                    : {
                        default: obj
                    }
            }
            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) 
                    throw new TypeError("Cannot call a class as a function")
            }
            function _possibleConstructorReturn(self, call) {
                if (!self) 
                    throw new ReferenceError(
                        "this hasn't been initialised - super() hasn't been called"
                    );
                return !call || "object" != typeof call && "function" != typeof call
                    ? self
                    : call
            }
            function _inherits(subClass, superClass) {
                if ("function" != typeof superClass && null !== superClass) 
                    throw new TypeError(
                        "Super expression must either be null or a function, not " + typeof superClass
                    );
                subClass.prototype = Object.create(superClass && superClass.prototype, {
                    constructor: {
                        value: subClass,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                superClass && (
                    Object.setPrototypeOf
                        ? Object.setPrototypeOf(subClass, superClass)
                        : subClass.__proto__ = superClass
                )
            }
            function addZeroes(number, n) {
                for (var i = 0; i < n; i++) 
                    number = "0" + number;
                return number
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var _createClass = function () {
                    function defineProperties(target, props) {
                        for (var i = 0; i < props.length; i++) {
                            var descriptor = props[i];
                            descriptor.enumerable = descriptor.enumerable || !1,
                            descriptor.configurable = !0,
                            "value" in descriptor && (descriptor.writable = !0),
                            Object.defineProperty(target, descriptor.key, descriptor)
                        }
                    }
                    return function (Constructor, protoProps, staticProps) {
                        return protoProps && defineProperties(Constructor.prototype, protoProps),
                        staticProps && defineProperties(Constructor, staticProps),
                        Constructor
                    }
                }(),
                _Barcode2 = __webpack_require__(29),
                _Barcode3 = _interopRequireDefault(_Barcode2),
                MSI = function (_Barcode) {
                    function MSI(data, options) {
                        return _classCallCheck(this, MSI),
                        _possibleConstructorReturn(
                            this,
                            (MSI.__proto__ || Object.getPrototypeOf(MSI)).call(this, data, options)
                        )
                    }
                    return _inherits(MSI, _Barcode),
                    _createClass(MSI, [
                        {
                            key: "encode",
                            value: function encode() {
                                for (var ret = "110", i = 0; i < this.data.length; i++) {
                                    var digit = parseInt(this.data[i]),
                                        bin = digit.toString(2);
                                    bin = addZeroes(bin, 4 - bin.length);
                                    for (var b = 0; b < bin.length; b++) 
                                        ret += "0" == bin[b]
                                            ? "100"
                                            : "110"
                                    }
                                return ret += "1001", {
                                    data: ret,
                                    text: this.text
                                }
                            }
                        }, {
                            key: "valid",
                            value: function valid() {
                                return -1 !== this
                                    .data
                                    .search(/^[0-9]+$/)
                            }
                        }
                    ]),
                    MSI
                }(_Barcode3.default);
            exports.default = MSI
        },
        function (module, exports, __webpack_require__) {
            (function (global) {
                var __WEBPACK_AMD_DEFINE_ARRAY__,
                    __WEBPACK_AMD_DEFINE_RESULT__;
                (function (global, factory) {
                    module.exports = factory(global)
                })(
                    "undefined" != typeof self
                        ? self
                        : "undefined" != typeof window
                            ? window
                            : void 0 !== global
                                ? global
                                : this,
                    function (global) {
                        "use strict";
                        global = global || {};
                        var fromUint8Array,
                            _Base64 = global.Base64,
                            version = "2.6.4",
                            b64chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                            b64tab = function (bin) {
                                for (var t = {}, i = 0, l = bin.length; i < l; i++) 
                                    t[bin.charAt(i)] = i;
                                return t
                            }(b64chars),
                            fromCharCode = String.fromCharCode,
                            cb_utob = function (c) {
                                if (c.length < 2) {
                                    var cc = c.charCodeAt(0);
                                    return cc < 128
                                        ? c
                                        : cc < 2048
                                            ? fromCharCode(192 | cc >>> 6) + fromCharCode(128 | 63 & cc)
                                            : fromCharCode(224 | cc >>> 12 & 15) + fromCharCode(128 | cc >>> 6 & 63) +
                                                fromCharCode(128 | 63 & cc)
                                }
                                var cc = 65536 + 1024 * (c.charCodeAt(0) - 55296) + (c.charCodeAt(1) - 56320);
                                return fromCharCode(240 | cc >>> 18 & 7) + fromCharCode(128 | cc >>> 12 & 63) +
                                    fromCharCode(128 | cc >>> 6 & 63) + fromCharCode(128 | 63 & cc)
                            },
                            re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,
                            utob = function (u) {
                                return u.replace(re_utob, cb_utob)
                            },
                            cb_encode = function (ccc) {
                                var padlen = [0, 2, 1][ccc.length % 3],
                                    ord = ccc.charCodeAt(0) << 16 | (
                                        ccc.length > 1
                                            ? ccc.charCodeAt(1)
                                            : 0
                                    ) << 8 | (
                                        ccc.length > 2
                                            ? ccc.charCodeAt(2)
                                            : 0
                                    );
                                return [
                                    b64chars.charAt(ord >>> 18),
                                    b64chars.charAt(ord >>> 12 & 63),
                                    padlen >= 2
                                        ? "="
                                        : b64chars.charAt(ord >>> 6 & 63),
                                    padlen >= 1
                                        ? "="
                                        : b64chars.charAt(63 & ord)
                                ].join("")
                            },
                            btoa = global.btoa && "function" == typeof global.btoa
                                ? function (b) {
                                    return global.btoa(b)
                                }
                                : function (b) {
                                    if (b.match(/[^\x00-\xFF]/)) 
                                        throw new RangeError("The string contains invalid characters.");
                                    return b.replace(/[\s\S]{1,3}/g, cb_encode)
                                },
                            _encode = function (u) {
                                return btoa(utob(String(u)))
                            },
                            mkUriSafe = function (b64) {
                                return b64
                                    .replace(/[+\/]/g, function (m0) {
                                        return "+" == m0
                                            ? "-"
                                            : "_"
                                    })
                                    .replace(/=/g, "")
                            },
                            encode = function (u, urisafe) {
                                return urisafe
                                    ? mkUriSafe(_encode(u))
                                    : _encode(u)
                            },
                            encodeURI = function (u) {
                                return encode(u, !0)
                            };
                        global.Uint8Array && (fromUint8Array = function (a, urisafe) {
                            for (var b64 = "", i = 0, l = a.length; i < l; i += 3) {
                                var a0 = a[i],
                                    a1 = a[i + 1],
                                    a2 = a[i + 2],
                                    ord = a0 << 16 | a1 << 8 | a2;
                                b64 += b64chars.charAt(ord >>> 18) + b64chars.charAt(ord >>> 12 & 63) + (
                                    void 0 !== a1
                                        ? b64chars.charAt(ord >>> 6 & 63)
                                        : "="
                                ) + (
                                    void 0 !== a2
                                        ? b64chars.charAt(63 & ord)
                                        : "="
                                )
                            }
                            return urisafe
                                ? mkUriSafe(b64)
                                : b64
                        });
                        var toUint8Array,
                            re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,
                            cb_btou = function (cccc) {
                                switch (cccc.length) {
                                    case 4:
                                        var cp = (7 & cccc.charCodeAt(0)) << 18 | (63 & cccc.charCodeAt(1)) << 12 | (
                                                63 & cccc.charCodeAt(2)
                                            ) << 6 | 63 & cccc.charCodeAt(3),
                                            offset = cp - 65536;
                                        return fromCharCode(55296 + (offset >>> 10)) + fromCharCode(
                                            56320 + (1023 & offset)
                                        );
                                    case 3:
                                        return fromCharCode(
                                            (15 & cccc.charCodeAt(0)) << 12 | (63 & cccc.charCodeAt(1)) << 6 | 63 & cccc.charCodeAt(2)
                                        );
                                    default:
                                        return fromCharCode((31 & cccc.charCodeAt(0)) << 6 | 63 & cccc.charCodeAt(1))
                                }
                            },
                            btou = function (b) {
                                return b.replace(re_btou, cb_btou)
                            },
                            cb_decode = function (cccc) {
                                var len = cccc.length,
                                    padlen = len % 4,
                                    n = (
                                        len > 0
                                            ? b64tab[cccc.charAt(0)] << 18
                                            : 0
                                    ) | (
                                        len > 1
                                            ? b64tab[cccc.charAt(1)] << 12
                                            : 0
                                    ) | (
                                        len > 2
                                            ? b64tab[cccc.charAt(2)] << 6
                                            : 0
                                    ) | (
                                        len > 3
                                            ? b64tab[cccc.charAt(3)]
                                            : 0
                                    ),
                                    chars = [
                                        fromCharCode(n >>> 16),
                                        fromCharCode(n >>> 8 & 255),
                                        fromCharCode(255 & n)
                                    ];
                                return chars.length -= [0, 0, 2, 1][padlen],
                                chars.join("")
                            },
                            _atob = global.atob && "function" == typeof global.atob
                                ? function (a) {
                                    return global.atob(a)
                                }
                                : function (a) {
                                    return a.replace(/\S{1,4}/g, cb_decode)
                                },
                            atob = function (a) {
                                return _atob(String(a).replace(/[^A-Za-z0-9\+\/]/g, ""))
                            },
                            _decode = function (a) {
                                return btou(_atob(a))
                            },
                            _fromURI = function (a) {
                                return String(a)
                                    .replace(/[-_]/g, function (m0) {
                                        return "-" == m0
                                            ? "+"
                                            : "/"
                                    })
                                    .replace(/[^A-Za-z0-9\+\/]/g, "")
                            },
                            decode = function (a) {
                                return _decode(_fromURI(a))
                            };
                        global.Uint8Array && (toUint8Array = function (a) {
                            return Uint8Array.from(atob(_fromURI(a)), function (c) {
                                return c.charCodeAt(0)
                            })
                        });
                        var noConflict = function () {
                            var Base64 = global.Base64;
                            return global.Base64 = _Base64,
                            Base64
                        };
                        if (global.Base64 = {
                            VERSION: version,
                            atob: atob,
                            btoa: btoa,
                            fromBase64: decode,
                            toBase64: encode,
                            utob: utob,
                            encode: encode,
                            encodeURI: encodeURI,
                            btou: btou,
                            decode: decode,
                            noConflict: noConflict,
                            fromUint8Array: fromUint8Array,
                            toUint8Array: toUint8Array
                        }, "function" == typeof Object.defineProperty) {
                            var noEnum = function (v) {
                                return {
                                    value: v,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            };
                            global.Base64.extendString = function () {
                                Object.defineProperty(String.prototype, "fromBase64", noEnum(function () {
                                    return decode(this)
                                })),
                                Object.defineProperty(String.prototype, "toBase64", noEnum(function (urisafe) {
                                    return encode(this, urisafe)
                                })),
                                Object.defineProperty(String.prototype, "toBase64URI", noEnum(function () {
                                    return encode(this, !0)
                                }))
                            }
                        }
                        return global.Meteor && (Base64 = global.Base64),
                        void 0 !== module && module.exports
                            ? module.exports.Base64 = global.Base64
                            : (
                                __WEBPACK_AMD_DEFINE_ARRAY__ = [],
                                void 0 !== (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                                    return global.Base64
                                }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)
                            ), {Base64: global.Base64}
                    }
                )
            }).call(exports, __webpack_require__(30))
        },,,,,,,,,,,,,,,,,,,,,,
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return PathUtils
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_2__state_targetState__ = __webpack_require__(82),
                __WEBPACK_IMPORTED_MODULE_3__pathNode__ = __webpack_require__(160),
                PathUtils = function () {
                    function PathUtils() {}
                    return PathUtils.makeTargetState = function (registry, path) {
                        var state = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.P)(path).state;
                        return new __WEBPACK_IMPORTED_MODULE_2__state_targetState__.a(
                            registry,
                            state,
                            path.map(Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.n)(
                                "paramValues"
                            )).reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.D, {}),
                            {}
                        )
                    },
                    PathUtils.buildPath = function (targetState) {
                        var toParams = targetState.params();
                        return targetState
                            .$state()
                            .path
                            .map(function (state) {
                                return new __WEBPACK_IMPORTED_MODULE_3__pathNode__
                                    .a(state)
                                    .applyRawParams(toParams)
                            })
                    },
                    PathUtils.buildToPath = function (fromPath, targetState) {
                        var toPath = PathUtils.buildPath(targetState);
                        return targetState
                            .options()
                            .inherit
                                ? PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()))
                                : toPath
                    },
                    PathUtils.applyViewConfigs = function ($view, path, states) {
                        path
                            .filter(function (node) {
                                return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.z)(
                                    states,
                                    node.state
                                )
                            })
                            .forEach(function (node) {
                                var viewDecls = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.U)(
                                        node.state.views || {}
                                    ),
                                    subPath = PathUtils.subPath(path, function (n) {
                                        return n === node
                                    }),
                                    viewConfigs = viewDecls.map(function (view) {
                                        return $view.createViewConfig(subPath, view)
                                    });
                                node.views = viewConfigs.reduce(
                                    __WEBPACK_IMPORTED_MODULE_0__common_common__.T,
                                    []
                                )
                            })
                    },
                    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {
                        function nodeParamVals(path, state) {
                            var node = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.t)(
                                path,
                                Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.o)(
                                    "state",
                                    state
                                )
                            );
                            return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                                {},
                                node && node.paramValues
                            )
                        }
                        function makeInheritedParamsNode(toNode) {
                            var toParamVals = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                                    {},
                                    toNode && toNode.paramValues
                                ),
                                incomingParamVals = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.H)(
                                    toParamVals,
                                    toKeys
                                );
                            toParamVals = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.F)(
                                toParamVals,
                                toKeys
                            );
                            var fromParamVals = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.F)(
                                    nodeParamVals(fromPath, toNode.state) || {},
                                    noInherit
                                ),
                                ownParamVals = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                                    toParamVals,
                                    fromParamVals,
                                    incomingParamVals
                                );
                            return new __WEBPACK_IMPORTED_MODULE_3__pathNode__
                                .a(toNode.state)
                                .applyRawParams(ownParamVals)
                        }
                        void 0 === toKeys && (toKeys = []);
                        var noInherit = fromPath
                            .map(function (node) {
                                return node.paramSchema
                            })
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                            .filter(function (param) {
                                return !param.inherit
                            })
                            .map(Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.n)("id"));
                        return toPath.map(makeInheritedParamsNode)
                    },
                    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {
                        function applyToParams(retainedNode, idx) {
                            var cloned = retainedNode.clone();
                            return cloned.paramValues = toPath[idx].paramValues,
                            cloned
                        }
                        for (
                            var max = Math.min(fromPath.length, toPath.length),
                            keep = 0,
                            nodesMatch = function (node1, node2) {
                                return node1.equals(node2, PathUtils.nonDynamicParams)
                            };
                            keep < max && fromPath[keep].state !== reloadState && nodesMatch(
                                fromPath[keep],
                                toPath[keep]
                            );
                        ) 
                            keep++;
                        var from,
                            retained,
                            exiting,
                            entering,
                            to;
                        from = fromPath,
                        retained = from.slice(0, keep),
                        exiting = from.slice(keep);
                        var retainedWithToParams = retained.map(applyToParams);
                        return entering = toPath.slice(keep),
                        to = retainedWithToParams.concat(entering), {
                            from: from,
                            to: to,
                            retained: retained,
                            retainedWithToParams: retainedWithToParams,
                            exiting: exiting,
                            entering: entering
                        }
                    },
                    PathUtils.matching = function (pathA, pathB, paramsFn) {
                        var done = !1;
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.i)(pathA, pathB).reduce(
                            function (matching, _a) {
                                var nodeA = _a[0],
                                    nodeB = _a[1];
                                return done = done || !nodeA.equals(nodeB, paramsFn),
                                done
                                    ? matching
                                    : matching.concat(nodeA)
                            },
                            []
                        )
                    },
                    PathUtils.equals = function (pathA, pathB, paramsFn) {
                        return pathA.length === pathB.length && PathUtils
                            .matching(
                                pathA,
                                pathB,
                                paramsFn
                            )
                            .length === pathA.length
                    },
                    PathUtils.subPath = function (path, predicate) {
                        var node = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.t)(
                                path,
                                predicate
                            ),
                            elementIdx = path.indexOf(node);
                        return -1 === elementIdx
                            ? void 0
                            : path.slice(0, elementIdx + 1)
                    },
                    PathUtils.nonDynamicParams = function (node) {
                        return node
                            .state
                            .parameters({
                                inherit: !1
                            })
                            .filter(function (param) {
                                return !param.dynamic
                            })
                    },
                    PathUtils.paramValues = function (path) {
                        return path.reduce(function (acc, node) {
                            return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                                acc,
                                node.paramValues
                            )
                        }, {})
                    },
                    PathUtils
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return defaultResolvePolicy
            }),
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return Resolvable
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_coreservices__ = __webpack_require__(20),
                __WEBPACK_IMPORTED_MODULE_2__common_trace__ = __webpack_require__(47),
                __WEBPACK_IMPORTED_MODULE_3__common_strings__ = __webpack_require__(40),
                __WEBPACK_IMPORTED_MODULE_4__common_predicates__ = __webpack_require__(10),
                defaultResolvePolicy = {
                    when: "LAZY",
                    async: "WAIT"
                },
                Resolvable = function () {
                    function Resolvable(arg1, resolveFn, deps, policy, data) {
                        if (this.resolved = !1, this.promise = void 0, arg1 instanceof Resolvable) 
                            Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(this, arg1);
                        else if (Object(__WEBPACK_IMPORTED_MODULE_4__common_predicates__.d)(
                            resolveFn
                        )) {
                            if (Object(__WEBPACK_IMPORTED_MODULE_4__common_predicates__.g)(arg1)) 
                                throw new Error("new Resolvable(): token argument is required");
                            if (!Object(__WEBPACK_IMPORTED_MODULE_4__common_predicates__.d)(resolveFn)) 
                                throw new Error("new Resolvable(): resolveFn argument must be a function");
                            this.token = arg1,
                            this.policy = policy,
                            this.resolveFn = resolveFn,
                            this.deps = deps || [],
                            this.data = data,
                            this.resolved = void 0 !== data,
                            this.promise = this.resolved
                                ? __WEBPACK_IMPORTED_MODULE_1__common_coreservices__
                                    .b
                                    .$q
                                    .when(this.data)
                                : void 0
                        } else if (Object(__WEBPACK_IMPORTED_MODULE_4__common_predicates__.i)(arg1) && arg1.token && (
                            arg1.hasOwnProperty("resolveFn") || arg1.hasOwnProperty("data")
                        )) {
                            var literal = arg1;
                            return new Resolvable(
                                literal.token,
                                literal.resolveFn,
                                literal.deps,
                                literal.policy,
                                literal.data
                            )
                        }
                    }
                    return Resolvable.prototype.getPolicy = function (state) {
                        var thisPolicy = this.policy || {},
                            statePolicy = state && state.resolvePolicy || {};
                        return {
                            when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,
                            async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async
                        }
                    },
                    Resolvable.prototype.resolve = function (resolveContext, trans) {
                        var _this = this,
                            $q = __WEBPACK_IMPORTED_MODULE_1__common_coreservices__.b.$q,
                            getResolvableDependencies = function () {
                                return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) {
                                    return resolvable.get(resolveContext, trans)
                                }))
                            },
                            invokeResolveFn = function (resolvedDeps) {
                                return _this
                                    .resolveFn
                                    .apply(null, resolvedDeps)
                            },
                            node = resolveContext.findNode(this),
                            state = node && node.state,
                            asyncPolicy = this
                                .getPolicy(state)
                                .async,
                            customAsyncPolicy = Object(__WEBPACK_IMPORTED_MODULE_4__common_predicates__.d)(
                                asyncPolicy
                            )
                                ? asyncPolicy
                                : __WEBPACK_IMPORTED_MODULE_0__common_common__.y,
                            applyResolvedValue = function (resolvedValue) {
                                return _this.data = resolvedValue,
                                _this.resolved = !0,
                                _this.resolveFn = null,
                                __WEBPACK_IMPORTED_MODULE_2__common_trace__
                                    .c
                                    .traceResolvableResolved(_this, trans),
                                _this.data
                            };
                        return this.promise = $q
                            .when()
                            .then(getResolvableDependencies)
                            .then(invokeResolveFn)
                            .then(customAsyncPolicy)
                            .then(applyResolvedValue)
                    },
                    Resolvable.prototype.get = function (resolveContext, trans) {
                        return this.promise || this.resolve(resolveContext, trans)
                    },
                    Resolvable.prototype.toString = function () {
                        return "Resolvable(token: " + Object(
                            __WEBPACK_IMPORTED_MODULE_3__common_strings__.m
                        )(this.token) + ", requires: [" + this
                            .deps
                            .map(__WEBPACK_IMPORTED_MODULE_3__common_strings__.m) + "])"
                    },
                    Resolvable.prototype.clone = function () {
                        return new Resolvable(this)
                    },
                    Resolvable.fromData = function (token, data) {
                        return new Resolvable(token, function () {
                            return data
                        }, null, null, data)
                    },
                    Resolvable
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return NATIVE_INJECTOR_TOKEN
            }),
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return ResolveContext
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_2__common_trace__ = __webpack_require__(47),
                __WEBPACK_IMPORTED_MODULE_3__common_coreservices__ = __webpack_require__(20),
                __WEBPACK_IMPORTED_MODULE_4__interface__ = __webpack_require__(251),
                __WEBPACK_IMPORTED_MODULE_5__resolvable__ = __webpack_require__(111),
                __WEBPACK_IMPORTED_MODULE_6__path_pathUtils__ = __webpack_require__(110),
                __WEBPACK_IMPORTED_MODULE_7__common_strings__ = __webpack_require__(40),
                __WEBPACK_IMPORTED_MODULE_8__common__ = __webpack_require__(17),
                whens = __WEBPACK_IMPORTED_MODULE_4__interface__.a.when,
                ALL_WHENS = [
                    whens.EAGER, whens.LAZY
                ],
                EAGER_WHENS = [whens.EAGER],
                NATIVE_INJECTOR_TOKEN = "Native Injector",
                ResolveContext = function () {
                    function ResolveContext(_path) {
                        this._path = _path
                    }
                    return ResolveContext.prototype.getTokens = function () {
                        return this
                            ._path
                            .reduce(function (acc, node) {
                                return acc.concat(node.resolvables.map(function (r) {
                                    return r.token
                                }))
                            }, [])
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.R, [])
                    },
                    ResolveContext.prototype.getResolvable = function (token) {
                        var matching = this
                            ._path
                            .map(function (node) {
                                return node.resolvables
                            })
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                            .filter(function (r) {
                                return r.token === token
                            });
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.P)(matching)
                    },
                    ResolveContext.prototype.getPolicy = function (resolvable) {
                        var node = this.findNode(resolvable);
                        return resolvable.getPolicy(node.state)
                    },
                    ResolveContext.prototype.subContext = function (state) {
                        return new ResolveContext(
                            __WEBPACK_IMPORTED_MODULE_6__path_pathUtils__.a.subPath(this._path, function (node) {
                                return node.state === state
                            })
                        )
                    },
                    ResolveContext.prototype.addResolvables = function (newResolvables, state) {
                        var node = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.t)(
                                this._path,
                                Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.o)(
                                    "state",
                                    state
                                )
                            ),
                            keys = newResolvables.map(function (r) {
                                return r.token
                            });
                        node.resolvables = node
                            .resolvables
                            .filter(function (r) {
                                return -1 === keys.indexOf(r.token)
                            })
                            .concat(newResolvables)
                    },
                    ResolveContext.prototype.resolvePath = function (when, trans) {
                        var _this = this;
                        void 0 === when && (when = "LAZY");
                        var whenOption = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.z)(
                                ALL_WHENS,
                                when
                            )
                                ? when
                                : "LAZY",
                            matchedWhens = whenOption === __WEBPACK_IMPORTED_MODULE_4__interface__.a.when.EAGER
                                ? EAGER_WHENS
                                : ALL_WHENS;
                        __WEBPACK_IMPORTED_MODULE_2__common_trace__
                            .c
                            .traceResolvePath(this._path, when, trans);
                        var matchesPolicy = function (acceptedVals, whenOrAsync) {
                                return function (resolvable) {
                                    return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.z)(
                                        acceptedVals,
                                        _this.getPolicy(resolvable)[whenOrAsync]
                                    )
                                }
                            },
                            promises = this
                                ._path
                                .reduce(function (acc, node) {
                                    var nodeResolvables = node
                                            .resolvables
                                            .filter(matchesPolicy(matchedWhens, "when")),
                                        nowait = nodeResolvables.filter(matchesPolicy(["NOWAIT"], "async")),
                                        wait = nodeResolvables.filter(
                                            Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.i)(
                                                matchesPolicy(["NOWAIT"], "async")
                                            )
                                        ),
                                        subContext = _this.subContext(node.state),
                                        getResult = function (r) {
                                            return r
                                                .get(subContext, trans)
                                                .then(function (value) {
                                                    return {token: r.token, value: value}
                                                })
                                        };
                                    return nowait.forEach(getResult),
                                    acc.concat(wait.map(getResult))
                                }, []);
                        return __WEBPACK_IMPORTED_MODULE_3__common_coreservices__
                            .b
                            .$q
                            .all(promises)
                    },
                    ResolveContext.prototype.injector = function () {
                        return this._injector || (this._injector = new UIInjectorImpl(this))
                    },
                    ResolveContext.prototype.findNode = function (resolvable) {
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.t)(
                            this._path,
                            function (node) {
                                return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.z)(
                                    node.resolvables,
                                    resolvable
                                )
                            }
                        )
                    },
                    ResolveContext.prototype.getDependencies = function (resolvable) {
                        var _this = this,
                            node = this.findNode(resolvable),
                            subPath = __WEBPACK_IMPORTED_MODULE_6__path_pathUtils__
                                .a
                                .subPath(this._path, function (x) {
                                    return x === node
                                }) || this._path,
                            availableResolvables = subPath
                                .reduce(function (acc, _node) {
                                    return acc.concat(_node.resolvables)
                                }, [])
                                .filter(function (res) {
                                    return res !== resolvable
                                }),
                            getDependency = function (token) {
                                var matching = availableResolvables.filter(function (r) {
                                    return r.token === token
                                });
                                if (matching.length) 
                                    return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.P)(matching);
                                var fromInjector = _this
                                    .injector()
                                    .getNative(token);
                                if (Object(__WEBPACK_IMPORTED_MODULE_8__common__._3)(fromInjector)) 
                                    throw new Error(
                                        "Could not find Dependency Injection token: " + Object(__WEBPACK_IMPORTED_MODULE_7__common_strings__.m)(
                                            token
                                        )
                                    );
                                return new __WEBPACK_IMPORTED_MODULE_5__resolvable__.a(token, function () {
                                    return fromInjector
                                }, [], fromInjector)
                            };
                        return resolvable
                            .deps
                            .map(getDependency)
                    },
                    ResolveContext
                }(),
                UIInjectorImpl = function () {
                    function UIInjectorImpl(context) {
                        this.context = context,
                        this.native = this.get(NATIVE_INJECTOR_TOKEN) || __WEBPACK_IMPORTED_MODULE_3__common_coreservices__.b.$injector
                    }
                    return UIInjectorImpl.prototype.get = function (token) {
                        var resolvable = this
                            .context
                            .getResolvable(token);
                        if (resolvable) {
                            if ("NOWAIT" === this.context.getPolicy(resolvable).async) 
                                return resolvable.get(this.context);
                            if (!resolvable.resolved) 
                                throw new Error(
                                    "Resolvable async .get() not complete:" + Object(__WEBPACK_IMPORTED_MODULE_7__common_strings__.m)(
                                        resolvable.token
                                    )
                                );
                            return resolvable.data
                        }
                        return this.getNative(token)
                    },
                    UIInjectorImpl.prototype.getAsync = function (token) {
                        var resolvable = this
                            .context
                            .getResolvable(token);
                        return resolvable
                            ? resolvable.get(this.context)
                            : __WEBPACK_IMPORTED_MODULE_3__common_coreservices__
                                .b
                                .$q
                                .when(this.native.get(token))
                    },
                    UIInjectorImpl.prototype.getNative = function (token) {
                        return this.native && this
                            .native
                            .get(token)
                    },
                    UIInjectorImpl
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function quoteRegExp(str, param) {
                var surroundPattern = [
                        "", ""
                    ],
                    result = str.replace(/[\\\[\]\^$*+?.()|{}]/g, "\\$&");
                if (!param) 
                    return result;
                switch (param.squash) {
                    case !1:
                        surroundPattern = [
                            "(", ")" + (
                                param.isOptional
                                    ? "?"
                                    : ""
                            )
                        ];
                        break;
                    case !0:
                        result = result.replace(/\/$/, ""),
                        surroundPattern = ["(?:/(", ")|/)?"];
                        break;
                    default:
                        surroundPattern = [
                            "(" + param.squash + "|",
                            ")?"
                        ]
                }
                return result + surroundPattern[0] + param.type.pattern.source +
                    surroundPattern[1]
            }
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return UrlMatcher
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_2__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_3__params_param__ = __webpack_require__(81),
                __WEBPACK_IMPORTED_MODULE_4__common_strings__ = __webpack_require__(40),
                __WEBPACK_IMPORTED_MODULE_5__common__ = __webpack_require__(17),
                memoizeTo = function (obj, _prop, fn) {
                    return obj[_prop] = obj[_prop] || fn()
                },
                splitOnSlash = Object(__WEBPACK_IMPORTED_MODULE_4__common_strings__.k)("/"),
                defaultConfig = {
                    state: {
                        params: {}
                    },
                    strict: !0,
                    caseInsensitive: !0,
                    decodeParams: !0
                },
                UrlMatcher = function () {
                    function UrlMatcher(pattern, paramTypes, paramFactory, config) {
                        var _this = this;
                        this._cache = {
                            path: [this]
                        },
                        this._children = [],
                        this._params = [],
                        this._segments = [],
                        this._compiled = [],
                        this.config = config = Object(__WEBPACK_IMPORTED_MODULE_5__common__.y)(
                            config,
                            defaultConfig
                        ),
                        this.pattern = pattern;
                        for (
                            var matchArray,
                            details,
                            segment,
                            placeholder = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
                            searchPlaceholder = /([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
                            patterns = [],
                            last = 0,
                            checkParamErrors = function (id) {
                                if (!UrlMatcher.nameValidator.test(id)) 
                                    throw new Error(
                                        "Invalid parameter name '" + id + "' in pattern '" + pattern + "'"
                                    );
                                if (Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.t)(
                                    _this._params,
                                    Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.o)(
                                        "id",
                                        id
                                    )
                                )) 
                                    throw new Error(
                                        "Duplicate parameter name '" + id + "' in pattern '" + pattern + "'"
                                    )
                            },
                            matchDetails = function (m, isSearch) {
                                var id = m[2] || m[3],
                                    regexp = isSearch
                                        ? m[4]
                                        : m[4] || (
                                            "*" === m[1]
                                                ? "[\\s\\S]*"
                                                : null
                                        ),
                                    makeRegexpType = function (str) {
                                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.A)(paramTypes.type(
                                            isSearch
                                                ? "query"
                                                : "path"
                                        ), {
                                            pattern: new RegExp(
                                                str,
                                                _this.config.caseInsensitive
                                                    ? "i"
                                                    : void 0
                                            )
                                        })
                                    };
                                return {
                                    id: id,
                                    regexp: regexp,
                                    segment: pattern.substring(last, m.index),
                                    type: regexp
                                        ? paramTypes.type(regexp) || makeRegexpType(regexp)
                                        : null
                                }
                            };
                            (matchArray = placeholder.exec(pattern)) && (
                                details = matchDetails(matchArray, !1),
                                !(details.segment.indexOf("?") >= 0)
                            );
                        ) 
                            checkParamErrors(details.id),
                            this
                                ._params
                                .push(paramFactory.fromPath(details.id, details.type, config.state)),
                            this
                                ._segments
                                .push(details.segment),
                            patterns.push([
                                details.segment,
                                Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.P)(this._params)
                            ]),
                            last = placeholder.lastIndex;
                        segment = pattern.substring(last);
                        var i = segment.indexOf("?");
                        if (i >= 0) {
                            var search = segment.substring(i);
                            if (segment = segment.substring(0, i), search.length > 0) 
                                for (last = 0; matchArray = searchPlaceholder.exec(search);) 
                                    details = matchDetails(matchArray, !0),
                                    checkParamErrors(details.id),
                                    this
                                        ._params
                                        .push(paramFactory.fromSearch(details.id, details.type, config.state)),
                                    last = placeholder.lastIndex
                        }
                        this
                            ._segments
                            .push(segment),
                        this._compiled = patterns
                            .map(function (_pattern) {
                                return quoteRegExp.apply(null, _pattern)
                            })
                            .concat(quoteRegExp(segment))
                    }
                    return UrlMatcher.encodeDashes = function (str) {
                        return encodeURIComponent(str).replace(/-/g, function (c) {
                            return "%5C%" + c
                                .charCodeAt(0)
                                .toString(16)
                                .toUpperCase()
                        })
                    },
                    UrlMatcher.pathSegmentsAndParams = function (matcher) {
                        var staticSegments = matcher._segments,
                            pathParams = matcher
                                ._params
                                .filter(function (p) {
                                    return p.location === __WEBPACK_IMPORTED_MODULE_3__params_param__.a.PATH
                                });
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.i)(
                            staticSegments,
                            pathParams.concat(void 0)
                        )
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                            .filter(function (x) {
                                return "" !== x && Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.c)(
                                    x
                                )
                            })
                    },
                    UrlMatcher.queryParams = function (matcher) {
                        return matcher
                            ._params
                            .filter(function (p) {
                                return p.location === __WEBPACK_IMPORTED_MODULE_3__params_param__.a.SEARCH
                            })
                    },
                    UrlMatcher.compare = function (a, b) {
                        var segments = function (matcher) {
                                return matcher._cache.segments = matcher._cache.segments || matcher
                                    ._cache
                                    .path
                                    .map(UrlMatcher.pathSegmentsAndParams)
                                    .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                                    .reduce(__WEBPACK_IMPORTED_MODULE_4__common_strings__.e, [])
                                    .map(function (x) {
                                        return Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.l)(x)
                                            ? splitOnSlash(x)
                                            : x
                                    })
                                    .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                            },
                            weights = function (matcher) {
                                return matcher._cache.weights = matcher._cache.weights || segments(matcher).map(
                                    function (segment) {
                                        return "/" === segment
                                            ? 1
                                            : Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.l)(segment)
                                                ? 2
                                                : segment instanceof __WEBPACK_IMPORTED_MODULE_3__params_param__.b
                                                    ? 3
                                                    : void 0
                                    }
                                )
                            },
                            padArrays = function (l, r, padVal) {
                                for (var len = Math.max(l.length, r.length); l.length < len;) 
                                    l.push(padVal);
                                for (; r.length < len;) 
                                    r.push(padVal)
                            },
                            weightsA = weights(a),
                            weightsB = weights(b);
                        padArrays(weightsA, weightsB, 0);
                        var cmp,
                            i,
                            _pairs = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.i)(
                                weightsA,
                                weightsB
                            );
                        for (i = 0; i < _pairs.length; i++) 
                            if (0 !== (cmp = _pairs[i][0] - _pairs[i][1])) 
                                return cmp;
                    return 0
                    },
                    UrlMatcher.prototype.append = function (url) {
                        return this
                            ._children
                            .push(url),
                        url._cache = {
                            path: this
                                ._cache
                                .path
                                .concat(url),
                            parent: this,
                            pattern: null
                        },
                        url
                    },
                    UrlMatcher.prototype.isRoot = function () {
                        return this
                            ._cache
                            .path[0] === this
                    },
                    UrlMatcher.prototype.toString = function () {
                        return this.pattern
                    },
                    UrlMatcher.prototype._getDecodedParamValue = function (value, param) {
                        return Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.c)(value) && (
                            !this.config.decodeParams || param.type.raw || Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.a)(
                                value
                            ) || (value = decodeURIComponent(value)),
                            value = param.type.decode(value)
                        ),
                        param.value(value)
                    },
                    UrlMatcher.prototype.exec = function (path, search, hash, options) {
                        function decodePathArray(paramVal) {
                            var reverseString = function (str) {
                                    return str
                                        .split("")
                                        .reverse()
                                        .join("")
                                },
                                unquoteDashes = function (str) {
                                    return str.replace(/\\-/g, "-")
                                },
                                split = reverseString(paramVal).split(/-(?!\\)/),
                                allReversed = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.B)(
                                    split,
                                    reverseString
                                );
                            return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.B)(
                                allReversed,
                                unquoteDashes
                            ).reverse()
                        }
                        var _this = this;
                        void 0 === search && (search = {}),
                        void 0 === options && (options = {});
                        var match = memoizeTo(this._cache, "pattern", function () {
                            return new RegExp(
                                [
                                    "^",
                                    Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.S)(
                                        _this._cache.path.map(Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.n)(
                                            "_compiled"
                                        ))
                                    ).join(""),
                                    !1 === _this.config.strict
                                        ? "/?"
                                        : "",
                                    "$"
                                ].join(""),
                                _this.config.caseInsensitive
                                    ? "i"
                                    : void 0
                            )
                        }).exec(path);
                        if (!match) 
                            return null;
                        var allParams = this.parameters(),
                            pathParams = allParams.filter(function (param) {
                                return !param.isSearch()
                            }),
                            searchParams = allParams.filter(function (param) {
                                return param.isSearch()
                            }),
                            nPathSegments = this
                                ._cache
                                .path
                                .map(function (urlm) {
                                    return urlm._segments.length - 1
                                })
                                .reduce(function (a, x) {
                                    return a + x
                                }),
                            values = {};
                        if (nPathSegments !== match.length - 1) 
                            throw new Error("Unbalanced capture group in route '" + this.pattern + "'");
                        for (var i = 0; i < nPathSegments; i++) {
                            for (
                                var param = pathParams[i],
                                value = match[i + 1],
                                j = 0;
                                j < param.replace.length;
                                j++
                            ) 
                                param
                                    .replace[j]
                                    .from === value && (value = param.replace[j].to);
                            value && !0 === param.array && (value = decodePathArray(value)),
                            values[param.id] = this._getDecodedParamValue(value, param)
                        }
                        return searchParams.forEach(function (param) {
                            for (var value = search[param.id], j = 0; j < param.replace.length; j++) 
                                param
                                    .replace[j]
                                    .from === value && (value = param.replace[j].to);
                            values[param.id] = _this._getDecodedParamValue(value, param)
                        }),
                        hash && (values["#"] = hash),
                        values
                    },
                    UrlMatcher.prototype.parameters = function (opts) {
                        return void 0 === opts && (opts = {}),
                        !1 === opts.inherit
                            ? this._params
                            : Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.S)(
                                this._cache.path.map(function (matcher) {
                                    return matcher._params
                                })
                            )
                    },
                    UrlMatcher.prototype.parameter = function (id, opts) {
                        var _this = this;
                        void 0 === opts && (opts = {});
                        var findParam = function () {
                                for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {
                                    var param = _a[_i];
                                    if (param.id === id) 
                                        return param
                                }
                            },
                            parent = this._cache.parent;
                        return findParam() || !1 !== opts.inherit && parent && parent.parameter(
                            id,
                            opts
                        ) || null
                    },
                    UrlMatcher.prototype.validates = function (params) {
                        var validParamVal = function (param, val) {
                            return !param || param.validates(val)
                        };
                        return params = params || {},
                        this
                            .parameters()
                            .filter(function (paramDef) {
                                return params.hasOwnProperty(paramDef.id)
                            })
                            .map(function (paramDef) {
                                return validParamVal(paramDef, params[paramDef.id])
                            })
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.e, !0)
                    },
                    UrlMatcher.prototype.format = function (values) {
                        function getDetails(param) {
                            var value = param.value(values[param.id]),
                                isValid = param.validates(value),
                                isDefaultValue = param.isDefaultValue(value);
                            return {
                                param: param,
                                value: value,
                                isValid: isValid,
                                isDefaultValue: isDefaultValue,
                                squash: !!isDefaultValue && param.squash,
                                encoded: param
                                    .type
                                    .encode(value)
                            }
                        }
                        void 0 === values && (values = {});
                        var urlMatchers = this._cache.path,
                            pathSegmentsAndParams = urlMatchers
                                .map(UrlMatcher.pathSegmentsAndParams)
                                .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                                .map(function (x) {
                                    return Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.l)(x)
                                        ? x
                                        : getDetails(x)
                                }),
                            queryParams = urlMatchers
                                .map(UrlMatcher.queryParams)
                                .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                                .map(getDetails),
                            isInvalid = function (param) {
                                return !1 === param.isValid
                            };
                        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) 
                            return null;
                        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {
                                if (Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.l)(x)) 
                                    return acc + x;
                                var squash = x.squash,
                                    encoded = x.encoded,
                                    param = x.param;
                                return !0 === squash
                                    ? acc.match(/\/$/)
                                        ? acc.slice(0, -1)
                                        : acc
                                    : Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.l)(squash)
                                        ? acc + squash
                                        : !1 !== squash
                                            ? acc
                                            : null == encoded
                                                ? acc
                                                : Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.a)(encoded)
                                                    ? acc + Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.B)(
                                                        encoded,
                                                        UrlMatcher.encodeDashes
                                                    ).join("-")
                                                    : param.raw
                                                        ? acc + encoded
                                                        : acc + encodeURIComponent(encoded)
                            }, ""),
                            queryString = queryParams
                                .map(function (paramDetails) {
                                    var param = paramDetails.param,
                                        squash = paramDetails.squash,
                                        encoded = paramDetails.encoded,
                                        isDefaultValue = paramDetails.isDefaultValue;
                                    if (!(null == encoded || isDefaultValue && !1 !== squash) && (Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.a)(
                                        encoded
                                    ) || (encoded = [encoded]), 0 !== encoded.length)) 
                                        return param.raw || (
                                            encoded = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.B)(
                                                encoded,
                                                encodeURIComponent
                                            )
                                        ),
                                        encoded.map(function (val) {
                                            return param.id + "=" + val
                                        })
                                })
                                .filter(__WEBPACK_IMPORTED_MODULE_0__common_common__.y)
                                .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                                .join("&");
                        return pathString + (
                            queryString
                                ? "?" + queryString
                                : ""
                        ) + (
                            values["#"]
                                ? "#" + values["#"]
                                : ""
                        )
                    },
                    UrlMatcher.nameValidator = /^\w+([-.]+\w+)*(?:\[\])?$/,
                    UrlMatcher
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return BaseLocationServices
            });
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17),
                __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(167),
                BaseLocationServices = function () {
                    function BaseLocationServices(router, fireAfterUpdate) {
                        var _this = this;
                        this.fireAfterUpdate = fireAfterUpdate,
                        this._listeners = [],
                        this._listener = function (evt) {
                            return _this
                                ._listeners
                                .forEach(function (cb) {
                                    return cb(evt)
                                })
                        },
                        this.hash = function () {
                            return Object(__WEBPACK_IMPORTED_MODULE_1__utils__.e)(_this._get()).hash
                        },
                        this.path = function () {
                            return Object(__WEBPACK_IMPORTED_MODULE_1__utils__.e)(_this._get()).path
                        },
                        this.search = function () {
                            return Object(__WEBPACK_IMPORTED_MODULE_1__utils__.b)(
                                Object(__WEBPACK_IMPORTED_MODULE_1__utils__.e)(
                                    _this._get()
                                ).search
                            )
                        },
                        this._location = __WEBPACK_IMPORTED_MODULE_0__common__._27.location,
                        this._history = __WEBPACK_IMPORTED_MODULE_0__common__._27.history
                    }
                    return BaseLocationServices.prototype.url = function (url, replace) {
                        return void 0 === replace && (replace = !0),
                        Object(__WEBPACK_IMPORTED_MODULE_0__common__.T)(url) && url !== this._get() && (
                            this._set(null, null, url, replace),
                            this.fireAfterUpdate && this._listeners.forEach(function (cb) {
                                return cb({url: url})
                            })
                        ),
                        Object(__WEBPACK_IMPORTED_MODULE_1__utils__.a)(this)
                    },
                    BaseLocationServices.prototype.onChange = function (cb) {
                        var _this = this;
                        return this
                            ._listeners
                            .push(cb),
                        function () {
                            return Object(__WEBPACK_IMPORTED_MODULE_0__common__._26)(_this._listeners, cb)
                        }
                    },
                    BaseLocationServices.prototype.dispose = function (router) {
                        Object(__WEBPACK_IMPORTED_MODULE_0__common__.z)(this._listeners)
                    },
                    BaseLocationServices
                }()
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule
                    ? obj
                    : {
                        default: obj
                    }
            }
            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) 
                    throw new TypeError("Cannot call a class as a function")
            }
            function _possibleConstructorReturn(self, call) {
                if (!self) 
                    throw new ReferenceError(
                        "this hasn't been initialised - super() hasn't been called"
                    );
                return !call || "object" != typeof call && "function" != typeof call
                    ? self
                    : call
            }
            function _inherits(subClass, superClass) {
                if ("function" != typeof superClass && null !== superClass) 
                    throw new TypeError(
                        "Super expression must either be null or a function, not " + typeof superClass
                    );
                subClass.prototype = Object.create(superClass && superClass.prototype, {
                    constructor: {
                        value: subClass,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                superClass && (
                    Object.setPrototypeOf
                        ? Object.setPrototypeOf(subClass, superClass)
                        : subClass.__proto__ = superClass
                )
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var _createClass = function () {
                    function defineProperties(target, props) {
                        for (var i = 0; i < props.length; i++) {
                            var descriptor = props[i];
                            descriptor.enumerable = descriptor.enumerable || !1,
                            descriptor.configurable = !0,
                            "value" in descriptor && (descriptor.writable = !0),
                            Object.defineProperty(target, descriptor.key, descriptor)
                        }
                    }
                    return function (Constructor, protoProps, staticProps) {
                        return protoProps && defineProperties(Constructor.prototype, protoProps),
                        staticProps && defineProperties(Constructor, staticProps),
                        Constructor
                    }
                }(),
                _Barcode2 = __webpack_require__(29),
                _Barcode3 = _interopRequireDefault(_Barcode2),
                _constants = __webpack_require__(84),
                CODE128 = function (_Barcode) {
                    function CODE128(data, options) {
                        _classCallCheck(this, CODE128);
                        var _this = _possibleConstructorReturn(
                            this,
                            (CODE128.__proto__ || Object.getPrototypeOf(CODE128)).call(this, data.substring(1), options)
                        );
                        return _this.bytes = data
                            .split("")
                            .map(function (char) {
                                return char.charCodeAt(0)
                            }),
                        _this
                    }
                    return _inherits(CODE128, _Barcode),
                    _createClass(CODE128, [
                        {
                            key: "valid",
                            value: function valid() {
                                return /^[\x00-\x7F\xC8-\xD3]+$/.test(this.data)
                            }
                        }, {
                            key: "encode",
                            value: function encode() {
                                var bytes = this.bytes,
                                    startIndex = bytes.shift() - 105,
                                    startSet = _constants.SET_BY_CODE[startIndex];
                                if (void 0 === startSet) 
                                    throw new RangeError("The encoding does not start with a start character.");
                                
                                !0 === this.shouldEncodeAsEan128() && bytes.unshift(_constants.FNC1);
                                var encodingResult = CODE128.next(bytes, 1, startSet);
                                return {
                                    text: this.text === this.data
                                        ? this
                                            .text
                                            .replace(/[^\x20-\x7E]/g, "")
                                        : this.text,
                                    data: CODE128.getBar(startIndex) + encodingResult.result + CODE128.getBar(
                                        (encodingResult.checksum + startIndex) % _constants.MODULO
                                    ) + CODE128.getBar(_constants.STOP)
                                }
                            }
                        }, {
                            key: "shouldEncodeAsEan128",
                            value: function shouldEncodeAsEan128() {
                                var isEAN128 = this.options.ean128 || !1;
                                return "string" == typeof isEAN128 && (
                                    isEAN128 = "true" === isEAN128.toLowerCase()
                                ),
                                isEAN128
                            }
                        }
                    ], [
                        {
                            key: "getBar",
                            value: function getBar(index) {
                                return _constants.BARS[index]
                                    ? _constants
                                        .BARS[index]
                                        .toString()
                                    : ""
                            }
                        }, {
                            key: "correctIndex",
                            value: function correctIndex(bytes, set) {
                                if (set === _constants.SET_A) {
                                    var charCode = bytes.shift();
                                    return charCode < 32
                                        ? charCode + 64
                                        : charCode - 32
                                }
                                return set === _constants.SET_B
                                    ? bytes.shift() - 32
                                    : 10 * (bytes.shift() - 48) + bytes.shift() - 48
                            }
                        }, {
                            key: "next",
                            value: function next(bytes, pos, set) {
                                if (!bytes.length) 
                                    return {result: "", checksum: 0};
                                var nextCode = void 0,
                                    index = void 0;
                                if (bytes[0] >= 200) {
                                    index = bytes.shift() - 105;
                                    var nextSet = _constants.SWAP[index];
                                    void 0 !== nextSet
                                        ? nextCode = CODE128.next(bytes, pos + 1, nextSet)
                                        : (
                                            set !== _constants.SET_A && set !== _constants.SET_B || index !== _constants.SHIFT || (
                                                bytes[0] = set === _constants.SET_A
                                                    ? bytes[0] > 95
                                                        ? bytes[0] - 96
                                                        : bytes[0]
                                                    : bytes[0] < 32
                                                        ? bytes[0] + 96
                                                        : bytes[0]
                                            ),
                                            nextCode = CODE128.next(bytes, pos + 1, set)
                                        )
                                } else 
                                    index = CODE128.correctIndex(bytes, set),
                                    nextCode = CODE128.next(bytes, pos + 1, set);
                                var enc = CODE128.getBar(index),
                                    weight = index * pos;
                                return {
                                    result: enc + nextCode.result,
                                    checksum: weight + nextCode.checksum
                                }
                            }
                        }
                    ]),
                    CODE128
                }(_Barcode3.default);
            exports.default = CODE128
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function mod10(number) {
                for (var sum = 0, i = 0; i < number.length; i++) {
                    var n = parseInt(number[i]);
                    (i + number.length) % 2 == 0
                        ? sum += n
                        : sum += 2 * n % 10 + Math.floor(2 * n / 10)
                }
                return (10 - sum % 10) % 10
            }
            function mod11(number) {
                for (var sum = 0, weights = [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ], i = 0; i < number.length; i++) {
                    var n = parseInt(number[number.length - 1 - i]);
                    sum += weights[i % weights.length] * n
                }
                return (11 - sum % 11) % 11
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            }),
            exports.mod10 = mod10,
            exports.mod11 = mod11
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var _extends = Object.assign || function (target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source) 
                        Object
                            .prototype
                            .hasOwnProperty
                            .call(source, key) && (target[key] = source[key])
                    }
                return target
            };
            exports.default = function (old, replaceObj) {
                return _extends({}, old, replaceObj)
            }
        },,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return Glob
            });
            var Glob = function () {
                function Glob(text) {
                    this.text = text,
                    this.glob = text.split(".");
                    var regexpString = this
                        .text
                        .split(".")
                        .map(function (seg) {
                            return "**" === seg
                                ? "(?:|(?:\\.[^.]*)*)"
                                : "*" === seg
                                    ? "\\.[^.]*"
                                    : "\\." + seg
                        })
                        .join("");
                    this.regexp = new RegExp("^" + regexpString + "$")
                }
                return Glob.is = function (text) {
                    return !!/[!,*]+/.exec(text)
                },
                Glob.fromString = function (text) {
                    return Glob.is(text)
                        ? new Glob(text)
                        : null
                },
                Glob.prototype.matches = function (name) {
                    return this
                        .regexp
                        .test("." + name)
                },
                Glob
            }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return Queue
            });
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(8),
                Queue = function () {
                    function Queue(_items, _limit) {
                        void 0 === _items && (_items = []),
                        void 0 === _limit && (_limit = null),
                        this._items = _items,
                        this._limit = _limit,
                        this._evictListeners = [],
                        this.onEvict = Object(__WEBPACK_IMPORTED_MODULE_0__common__.K)(
                            this._evictListeners
                        )
                    }
                    return Queue.prototype.enqueue = function (item) {
                        var items = this._items;
                        return items.push(item),
                        this._limit && items.length > this._limit && this.evict(),
                        item
                    },
                    Queue.prototype.evict = function () {
                        var item = this
                            ._items
                            .shift();
                        return this
                            ._evictListeners
                            .forEach(function (fn) {
                                return fn(item)
                            }),
                        item
                    },
                    Queue.prototype.dequeue = function () {
                        if (this.size()) 
                            return this
                                ._items
                                .splice(0, 1)[0]
                        },
                    Queue.prototype.clear = function () {
                        var current = this._items;
                        return this._items = [],
                        current
                    },
                    Queue.prototype.size = function () {
                        return this._items.length
                    },
                    Queue.prototype.remove = function (item) {
                        var idx = this
                            ._items
                            .indexOf(item);
                        return idx > -1 && this
                            ._items
                            .splice(idx, 1)[0]
                    },
                    Queue.prototype.peekTail = function () {
                        return this._items[this._items.length - 1]
                    },
                    Queue.prototype.peekHead = function () {
                        if (this.size()) 
                            return this._items[0]
                    },
                    Queue
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", {
                value: !0
            });
            var __WEBPACK_IMPORTED_MODULE_0__interface__ = __webpack_require__(631);
            __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__interface__);
            for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__interface__) 
                "default" !== __WEBPACK_IMPORT_KEY__ && function (key) {
                    __webpack_require__.d(__webpack_exports__, key, function () {
                        return __WEBPACK_IMPORTED_MODULE_0__interface__[key]
                    })
                }
            (__WEBPACK_IMPORT_KEY__);
            var __WEBPACK_IMPORTED_MODULE_1__param__ = __webpack_require__(81);
            __webpack_require__.d(__webpack_exports__, "DefType", function () {
                return __WEBPACK_IMPORTED_MODULE_1__param__.a
            }),
            __webpack_require__.d(__webpack_exports__, "Param", function () {
                return __WEBPACK_IMPORTED_MODULE_1__param__.b
            });
            var __WEBPACK_IMPORTED_MODULE_2__paramTypes__ = __webpack_require__(632);
            __webpack_require__.d(__webpack_exports__, "ParamTypes", function () {
                return __WEBPACK_IMPORTED_MODULE_2__paramTypes__.a
            });
            var __WEBPACK_IMPORTED_MODULE_3__stateParams__ = __webpack_require__(249);
            __webpack_require__.d(__webpack_exports__, "StateParams", function () {
                return __WEBPACK_IMPORTED_MODULE_3__stateParams__.a
            });
            var __WEBPACK_IMPORTED_MODULE_4__paramType__ = __webpack_require__(159);
            __webpack_require__.d(__webpack_exports__, "ParamType", function () {
                return __WEBPACK_IMPORTED_MODULE_4__paramType__.a
            })
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function ArrayType(type, mode) {
                function arrayWrap(val) {
                    return Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.a)(val)
                        ? val
                        : Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.c)(val)
                            ? [val]
                            : []
                }
                function arrayUnwrap(val) {
                    switch (val.length) {
                        case 0:
                            return;
                        case 1:
                            return "auto" === mode
                                ? val[0]
                                : val;
                        default:
                            return val
                    }
                }
                function arrayHandler(callback, allTruthyMode) {
                    return function handleArray(val) {
                        if (Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.a)(val) && 0 === val.length) 
                            return val;
                        var arr = arrayWrap(val),
                            result = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.B)(arr, callback);
                        return !0 === allTruthyMode
                            ? 0 === Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.s)(
                                result,
                                function (x) {
                                    return !x
                                }
                            ).length
                            : arrayUnwrap(result)
                    }
                }
                function arrayEqualsHandler(callback) {
                    return function handleArray(val1, val2) {
                        var left = arrayWrap(val1),
                            right = arrayWrap(val2);
                        if (left.length !== right.length) 
                            return !1;
                        for (var i = 0; i < left.length; i++) 
                            if (!callback(left[i], right[i])) 
                                return !1;
                    return !0
                    }
                }
                var _this = this;
                ["encode", "decode", "equals", "$normalize"].forEach(function (name) {
                    var paramTypeFn = type[name].bind(type),
                        wrapperFn = "equals" === name
                            ? arrayEqualsHandler
                            : arrayHandler;
                    _this[name] = wrapperFn(paramTypeFn)
                }),
                Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(this, {
                    dynamic: type.dynamic,
                    name: type.name,
                    pattern: type.pattern,
                    inherit: type.inherit,
                    raw: type.raw,
                    is: arrayHandler(type.is.bind(type), !0),
                    $arrayMode: mode
                })
            }
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return ParamType
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_predicates__ = __webpack_require__(10),
                ParamType = function () {
                    function ParamType(def) {
                        this.pattern = /.*/,
                        this.inherit = !0,
                        Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(this, def)
                    }
                    return ParamType.prototype.is = function (val, key) {
                        return !0
                    },
                    ParamType.prototype.encode = function (val, key) {
                        return val
                    },
                    ParamType.prototype.decode = function (val, key) {
                        return val
                    },
                    ParamType.prototype.equals = function (a, b) {
                        return a == b
                    },
                    ParamType.prototype.$subPattern = function () {
                        var sub = this
                            .pattern
                            .toString();
                        return sub.substr(1, sub.length - 2)
                    },
                    ParamType.prototype.toString = function () {
                        return "{ParamType:" + this.name + "}"
                    },
                    ParamType.prototype.$normalize = function (val) {
                        return this.is(val)
                            ? val
                            : this.decode(val)
                    },
                    ParamType.prototype.$asArray = function (mode, isSearch) {
                        if (!mode) 
                            return this;
                        if ("auto" === mode && !isSearch) 
                            throw new Error("'auto' array mode is for query parameters only");
                        return new ArrayType(this, mode)
                    },
                    ParamType
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return PathNode
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_2__params_param__ = __webpack_require__(81),
                PathNode = function () {
                    function PathNode(stateOrNode) {
                        if (stateOrNode instanceof PathNode) {
                            var node = stateOrNode;
                            this.state = node.state,
                            this.paramSchema = node
                                .paramSchema
                                .slice(),
                            this.paramValues = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                                {},
                                node.paramValues
                            ),
                            this.resolvables = node
                                .resolvables
                                .slice(),
                            this.views = node.views && node
                                .views
                                .slice()
                        } else {
                            var state = stateOrNode;
                            this.state = state,
                            this.paramSchema = state.parameters({
                                inherit: !1
                            }),
                            this.paramValues = {},
                            this.resolvables = state
                                .resolvables
                                .map(function (res) {
                                    return res.clone()
                                })
                        }
                    }
                    return PathNode.prototype.clone = function () {
                        return new PathNode(this)
                    },
                    PathNode.prototype.applyRawParams = function (params) {
                        var getParamVal = function (paramDef) {
                            return [
                                paramDef.id,
                                paramDef.value(params[paramDef.id])
                            ]
                        };
                        return this.paramValues = this
                            .paramSchema
                            .reduce(function (memo, pDef) {
                                return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.h)(
                                    memo,
                                    getParamVal(pDef)
                                )
                            }, {}),
                        this
                    },
                    PathNode.prototype.parameter = function (name) {
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.t)(
                            this.paramSchema,
                            Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.o)(
                                "id",
                                name
                            )
                        )
                    },
                    PathNode.prototype.equals = function (node, paramsFn) {
                        var diff = this.diff(node, paramsFn);
                        return diff && 0 === diff.length
                    },
                    PathNode.prototype.diff = function (node, paramsFn) {
                        if (this.state !== node.state) 
                            return !1;
                        var params = paramsFn
                            ? paramsFn(this)
                            : this.paramSchema;
                        return __WEBPACK_IMPORTED_MODULE_2__params_param__
                            .b
                            .changed(params, this.paramValues, node.paramValues)
                    },
                    PathNode.clone = function (node) {
                        return node.clone()
                    },
                    PathNode
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            Object.defineProperty(__webpack_exports__, "__esModule", {
                value: !0
            });
            var __WEBPACK_IMPORTED_MODULE_0__interface__ = __webpack_require__(634);
            __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__interface__);
            for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__interface__) 
                "default" !== __WEBPACK_IMPORT_KEY__ && function (key) {
                    __webpack_require__.d(__webpack_exports__, key, function () {
                        return __WEBPACK_IMPORTED_MODULE_0__interface__[key]
                    })
                }
            (__WEBPACK_IMPORT_KEY__);
            var __WEBPACK_IMPORTED_MODULE_1__stateBuilder__ = __webpack_require__(252);
            __webpack_require__.d(__webpack_exports__, "resolvablesBuilder", function () {
                return __WEBPACK_IMPORTED_MODULE_1__stateBuilder__.b
            }),
            __webpack_require__.d(__webpack_exports__, "StateBuilder", function () {
                return __WEBPACK_IMPORTED_MODULE_1__stateBuilder__.a
            });
            var __WEBPACK_IMPORTED_MODULE_2__stateObject__ = __webpack_require__(162);
            __webpack_require__.d(__webpack_exports__, "StateObject", function () {
                return __WEBPACK_IMPORTED_MODULE_2__stateObject__.a
            });
            var __WEBPACK_IMPORTED_MODULE_3__stateMatcher__ = __webpack_require__(253);
            __webpack_require__.d(__webpack_exports__, "StateMatcher", function () {
                return __WEBPACK_IMPORTED_MODULE_3__stateMatcher__.a
            });
            var __WEBPACK_IMPORTED_MODULE_4__stateQueueManager__ = __webpack_require__(254);
            __webpack_require__.d(__webpack_exports__, "StateQueueManager", function () {
                return __WEBPACK_IMPORTED_MODULE_4__stateQueueManager__.a
            });
            var __WEBPACK_IMPORTED_MODULE_5__stateRegistry__ = __webpack_require__(255);
            __webpack_require__.d(__webpack_exports__, "StateRegistry", function () {
                return __WEBPACK_IMPORTED_MODULE_5__stateRegistry__.a
            });
            var __WEBPACK_IMPORTED_MODULE_6__stateService__ = __webpack_require__(256);
            __webpack_require__.d(__webpack_exports__, "StateService", function () {
                return __WEBPACK_IMPORTED_MODULE_6__stateService__.a
            });
            var __WEBPACK_IMPORTED_MODULE_7__targetState__ = __webpack_require__(82);
            __webpack_require__.d(__webpack_exports__, "TargetState", function () {
                return __WEBPACK_IMPORTED_MODULE_7__targetState__.a
            })
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return StateObject
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_2__common_glob__ = __webpack_require__(156),
                __WEBPACK_IMPORTED_MODULE_3__common_predicates__ = __webpack_require__(10),
                StateObject = function () {
                    function StateObject(config) {
                        return StateObject.create(config || {})
                    }
                    return StateObject.create = function (stateDecl) {
                        stateDecl = StateObject.isStateClass(stateDecl)
                            ? new stateDecl
                            : stateDecl;
                        var state = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.A)(
                            Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.A)(
                                stateDecl,
                                StateObject.prototype
                            )
                        );
                        return stateDecl.$$state = function () {
                            return state
                        },
                        state.self = stateDecl,
                        state.__stateObjectCache = {
                            nameGlob: __WEBPACK_IMPORTED_MODULE_2__common_glob__
                                .a
                                .fromString(state.name)
                        },
                        state
                    },
                    StateObject.prototype.is = function (ref) {
                        return this === ref || this.self === ref || this.fqn() === ref
                    },
                    StateObject.prototype.fqn = function () {
                        if (!(this.parent && this.parent instanceof this.constructor)) 
                            return this.name;
                        var name = this
                            .parent
                            .fqn();
                        return name
                            ? name + "." + this.name
                            : this.name
                    },
                    StateObject.prototype.root = function () {
                        return this.parent && this
                            .parent
                            .root() || this
                    },
                    StateObject.prototype.parameters = function (opts) {
                        return opts = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.o)(opts, {
                            inherit: !0,
                            matchingKeys: null
                        }),
                        (opts.inherit && this.parent && this.parent.parameters() || [])
                            .concat(
                                Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.U)(
                                    this.params
                                )
                            )
                            .filter(function (param) {
                                return !opts.matchingKeys || opts
                                    .matchingKeys
                                    .hasOwnProperty(param.id)
                            })
                    },
                    StateObject.prototype.parameter = function (id, opts) {
                        return void 0 === opts && (opts = {}),
                        this.url && this
                            .url
                            .parameter(id, opts) || Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.t)(
                                Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.U)(
                                    this.params
                                ),
                                Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.o)("id", id)
                            ) || opts.inherit && this.parent && this
                            .parent
                            .parameter(id)
                    },
                    StateObject.prototype.toString = function () {
                        return this.fqn()
                    },
                    StateObject.isStateClass = function (stateDecl) {
                        return Object(__WEBPACK_IMPORTED_MODULE_3__common_predicates__.d)(stateDecl) && !0 === stateDecl.__uiRouterState
                    },
                    StateObject.isStateDeclaration = function (obj) {
                        return Object(__WEBPACK_IMPORTED_MODULE_3__common_predicates__.d)(obj.$$state)
                    },
                    StateObject.isState = function (obj) {
                        return Object(__WEBPACK_IMPORTED_MODULE_3__common_predicates__.i)(
                            obj.__stateObjectCache
                        )
                    },
                    StateObject
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function addCoreResolvables(trans) {
                trans.addResolvable(resolve.b.fromData(lib_esm_router.a, trans.router), ""),
                trans.addResolvable(resolve.b.fromData(transition_transition.a, trans), ""),
                trans.addResolvable(resolve.b.fromData("$transition$", trans), ""),
                trans.addResolvable(resolve.b.fromData("$stateParams", trans.params()), ""),
                trans
                    .entering()
                    .forEach(function (state) {
                        trans.addResolvable(resolve.b.fromData("$state$", state), state)
                    })
            }
            function makeEnterExitRetainHook(hookName) {
                return function (transition, state) {
                    return (0, state.$$state()[hookName])(transition, state)
                }
            }
            function ignoredHook(trans) {
                var ignoredReason = trans._ignoredReason();
                if (ignoredReason) {
                    trace
                        .c
                        .traceTransitionIgnored(trans);
                    var pending = trans.router.globals.transition;
                    return "SameAsCurrent" === ignoredReason && pending && pending.abort(),
                    rejectFactory
                        .b
                        .ignored()
                        .toPromise()
                }
            }
            function invalidTransitionHook(trans) {
                if (!trans.valid()) 
                    throw new Error(trans.error().toString())
            }
            var transition_interface = __webpack_require__(70),
                transition_transition = __webpack_require__(164),
                hookRegistry = __webpack_require__(165),
                lib_esm_router = __webpack_require__(258),
                resolve = __webpack_require__(250),
                common = __webpack_require__(17),
                registerAddCoreResolvables = function (transitionService) {
                    return transitionService.onCreate({}, addCoreResolvables)
                },
                TRANSITION_TOKENS = [
                    "$transition$", transition_transition.a
                ],
                isTransition = Object(common.N)(TRANSITION_TOKENS),
                treeChangesCleanup = function (trans) {
                    var replaceTransitionWithNull = function (r) {
                        return isTransition(r.token)
                            ? resolve
                                .b
                                .fromData(r.token, null)
                            : r
                    };
                    Object(common._45)(trans.treeChanges())
                        .reduce(common._43, [])
                        .reduce(common._41, [])
                        .forEach(function (node) {
                            node.resolvables = node
                                .resolvables
                                .map(replaceTransitionWithNull)
                        })
                },
                predicates = __webpack_require__(10),
                coreservices = __webpack_require__(20),
                state_targetState = __webpack_require__(82),
                redirectToHook = function (trans) {
                    function handleResult(result) {
                        if (result) 
                            return result instanceof state_targetState.a
                                ? result
                                : Object(predicates.l)(result)
                                    ? $state.target(result, trans.params(), trans.options())
                                    : result.state || result.params
                                        ? $state.target(
                                            result.state || trans.to(),
                                            result.params || trans.params(),
                                            trans.options()
                                        )
                                        : void 0
                                }
                    var redirect = trans
                        .to()
                        .redirectTo;
                    if (redirect) {
                        var $state = trans.router.stateService;
                        return Object(predicates.d)(redirect)
                            ? coreservices
                                .b
                                .$q
                                .when(redirect(trans))
                                .then(handleResult)
                            : handleResult(redirect)
                    }
                },
                registerRedirectToHook = function (transitionService) {
                    return transitionService.onStart({
                        to: function (state) {
                            return !!state.redirectTo
                        }
                    }, redirectToHook)
                },
                onExitHook = makeEnterExitRetainHook("onExit"),
                registerOnExitHook = function (transitionService) {
                    return transitionService.onExit({
                        exiting: function (state) {
                            return !!state.onExit
                        }
                    }, onExitHook)
                },
                onRetainHook = makeEnterExitRetainHook("onRetain"),
                registerOnRetainHook = function (transitionService) {
                    return transitionService.onRetain({
                        retained: function (state) {
                            return !!state.onRetain
                        }
                    }, onRetainHook)
                },
                onEnterHook = makeEnterExitRetainHook("onEnter"),
                registerOnEnterHook = function (transitionService) {
                    return transitionService.onEnter({
                        entering: function (state) {
                            return !!state.onEnter
                        }
                    }, onEnterHook)
                },
                common_common = __webpack_require__(8),
                resolveContext = __webpack_require__(112),
                hof = __webpack_require__(14),
                RESOLVE_HOOK_PRIORITY = 1e3,
                eagerResolvePath = function (trans) {
                    return new resolveContext
                        .b(trans.treeChanges().to)
                        .resolvePath("EAGER", trans)
                        .then(common_common.E)
                },
                registerEagerResolvePath = function (transitionService) {
                    return transitionService.onStart(
                        {},
                        eagerResolvePath,
                        {priority: RESOLVE_HOOK_PRIORITY}
                    )
                },
                lazyResolveState = function (trans, state) {
                    return new resolveContext
                        .b(trans.treeChanges().to)
                        .subContext(state.$$state())
                        .resolvePath("LAZY", trans)
                        .then(common_common.E)
                },
                registerLazyResolveState = function (transitionService) {
                    return transitionService.onEnter({
                        entering: Object(hof.p)(!0)
                    }, lazyResolveState, {priority: RESOLVE_HOOK_PRIORITY})
                },
                resolveRemaining = function (trans) {
                    return new resolveContext
                        .b(trans.treeChanges().to)
                        .resolvePath("LAZY", trans)
                        .then(common_common.E)
                },
                registerResolveRemaining = function (transitionService) {
                    return transitionService.onFinish(
                        {},
                        resolveRemaining,
                        {priority: RESOLVE_HOOK_PRIORITY}
                    )
                },
                loadEnteringViews = function (transition) {
                    var $q = coreservices.b.$q,
                        enteringViews = transition.views("entering");
                    if (enteringViews.length) 
                        return $q
                            .all(enteringViews.map(function (view) {
                                return $q.when(view.load())
                            }))
                            .then(common_common.E)
                    },
                registerLoadEnteringViews = function (transitionService) {
                    return transitionService.onFinish({}, loadEnteringViews)
                },
                activateViews = function (transition) {
                    var enteringViews = transition.views("entering"),
                        exitingViews = transition.views("exiting");
                    if (enteringViews.length || exitingViews.length) {
                        var $view = transition.router.viewService;
                        exitingViews.forEach(function (vc) {
                            return $view.deactivateViewConfig(vc)
                        }),
                        enteringViews.forEach(function (vc) {
                            return $view.activateViewConfig(vc)
                        }),
                        $view.sync()
                    }
                },
                registerActivateViews = function (transitionService) {
                    return transitionService.onSuccess({}, activateViews)
                },
                updateGlobalState = function (trans) {
                    var globals = trans.router.globals,
                        transitionSuccessful = function () {
                            globals
                                .successfulTransitions
                                .enqueue(trans),
                            globals.$current = trans.$to(),
                            globals.current = globals.$current.self,
                            Object(common_common.m)(trans.params(), globals.params)
                        },
                        clearCurrentTransition = function () {
                            globals.transition === trans && (globals.transition = null)
                        };
                    trans.onSuccess({}, transitionSuccessful, {priority: 1e4}),
                    trans
                        .promise
                        .then(clearCurrentTransition, clearCurrentTransition)
                },
                registerUpdateGlobalState = function (transitionService) {
                    return transitionService.onCreate({}, updateGlobalState)
                },
                updateUrl = function (transition) {
                    var options = transition.options(),
                        $state = transition.router.stateService,
                        $urlRouter = transition.router.urlRouter;
                    if ("url" !== options.source && options.location && $state.$current.navigable) {
                        var urlOptions = {
                            replace: "replace" === options.location
                        };
                        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions)
                    }
                    $urlRouter.update(!0)
                },
                registerUpdateUrl = function (transitionService) {
                    return transitionService.onSuccess({}, updateUrl, {priority: 9999})
                },
                lazyLoad = __webpack_require__(266),
                transitionEventType = __webpack_require__(267),
                transitionHook = __webpack_require__(83),
                trace = __webpack_require__(47),
                rejectFactory = __webpack_require__(69),
                registerIgnoredTransitionHook = function (transitionService) {
                    return transitionService.onBefore({}, ignoredHook, {priority: -9999})
                },
                registerInvalidTransitionHook = function (transitionService) {
                    return transitionService.onBefore({}, invalidTransitionHook, {priority: -1e4})
                };
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return defaultTransOpts
            }),
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return transitionService_TransitionService
            });
            var defaultTransOpts = {
                    location: !0,
                    relative: null,
                    inherit: !1,
                    notify: !0,
                    reload: !1,
                    supercede: !0,
                    custom: {},
                    current: function () {
                        return null
                    },
                    source: "unknown"
                },
                transitionService_TransitionService = function () {
                    function TransitionService(_router) {
                        this._transitionCount = 0,
                        this._eventTypes = [],
                        this._registeredHooks = {},
                        this._criteriaPaths = {},
                        this._router = _router,
                        this.$view = _router.viewService,
                        this._deregisterHookFns = {},
                        this._pluginapi = Object(common_common.n)(
                            Object(hof.p)(this),
                            {},
                            Object(
                                hof.p
                            )(this),
                            ["_definePathType", "_defineEvent", "_getPathTypes", "_getEvents", "getHooks"]
                        ),
                        this._defineCorePaths(),
                        this._defineCoreEvents(),
                        this._registerCoreTransitionHooks(),
                        _router
                            .globals
                            .successfulTransitions
                            .onEvict(treeChangesCleanup)
                    }
                    return TransitionService.prototype.onCreate = function (
                        criteria,
                        callback,
                        options
                    ) {},
                    TransitionService.prototype.onBefore = function (criteria, callback, options) {},
                    TransitionService.prototype.onStart = function (criteria, callback, options) {},
                    TransitionService.prototype.onExit = function (criteria, callback, options) {},
                    TransitionService.prototype.onRetain = function (criteria, callback, options) {},
                    TransitionService.prototype.onEnter = function (criteria, callback, options) {},
                    TransitionService.prototype.onFinish = function (criteria, callback, options) {},
                    TransitionService.prototype.onSuccess = function (criteria, callback, options) {},
                    TransitionService.prototype.onError = function (criteria, callback, options) {},
                    TransitionService.prototype.dispose = function (router) {
                        Object(common_common.U)(this._registeredHooks).forEach(function (hooksArray) {
                            return hooksArray.forEach(function (hook) {
                                hook._deregistered = !0,
                                Object(common_common.L)(hooksArray, hook)
                            })
                        })
                    },
                    TransitionService.prototype.create = function (fromPath, targetState) {
                        return new transition_transition.a(fromPath, targetState, this._router)
                    },
                    TransitionService.prototype._defineCoreEvents = function () {
                        var Phase = transition_interface.a,
                            TH = transitionHook.a,
                            paths = this._criteriaPaths,
                            NORMAL_SORT = !1,
                            SYNCHRONOUS = !0;
                        this._defineEvent(
                            "onCreate",
                            Phase.CREATE,
                            0,
                            paths.to,
                            NORMAL_SORT,
                            TH.LOG_REJECTED_RESULT,
                            TH.THROW_ERROR,
                            SYNCHRONOUS
                        ),
                        this._defineEvent("onBefore", Phase.BEFORE, 0, paths.to),
                        this._defineEvent("onStart", Phase.RUN, 0, paths.to),
                        this._defineEvent("onExit", Phase.RUN, 100, paths.exiting, !0),
                        this._defineEvent("onRetain", Phase.RUN, 200, paths.retained),
                        this._defineEvent("onEnter", Phase.RUN, 300, paths.entering),
                        this._defineEvent("onFinish", Phase.RUN, 400, paths.to),
                        this._defineEvent(
                            "onSuccess",
                            Phase.SUCCESS,
                            0,
                            paths.to,
                            NORMAL_SORT,
                            TH.LOG_REJECTED_RESULT,
                            TH.LOG_ERROR,
                            SYNCHRONOUS
                        ),
                        this._defineEvent(
                            "onError",
                            Phase.ERROR,
                            0,
                            paths.to,
                            NORMAL_SORT,
                            TH.LOG_REJECTED_RESULT,
                            TH.LOG_ERROR,
                            SYNCHRONOUS
                        )
                    },
                    TransitionService.prototype._defineCorePaths = function () {
                        var STATE = transition_interface.b.STATE,
                            TRANSITION = transition_interface.b.TRANSITION;
                        this._definePathType("to", TRANSITION),
                        this._definePathType("from", TRANSITION),
                        this._definePathType("exiting", STATE),
                        this._definePathType("retained", STATE),
                        this._definePathType("entering", STATE)
                    },
                    TransitionService.prototype._defineEvent = function (
                        name,
                        hookPhase,
                        hookOrder,
                        criteriaMatchPath,
                        reverseSort,
                        getResultHandler,
                        getErrorHandler,
                        synchronous
                    ) {
                        void 0 === reverseSort && (reverseSort = !1),
                        void 0 === getResultHandler && (
                            getResultHandler = transitionHook.a.HANDLE_RESULT
                        ),
                        void 0 === getErrorHandler && (getErrorHandler = transitionHook.a.REJECT_ERROR),
                        void 0 === synchronous && (synchronous = !1);
                        var eventType = new transitionEventType.a(
                            name,
                            hookPhase,
                            hookOrder,
                            criteriaMatchPath,
                            reverseSort,
                            getResultHandler,
                            getErrorHandler,
                            synchronous
                        );
                        this
                            ._eventTypes
                            .push(eventType),
                        Object(hookRegistry.b)(this, this, eventType)
                    },
                    TransitionService.prototype._getEvents = function (phase) {
                        return (
                            Object(predicates.c)(phase)
                                ? this._eventTypes.filter(function (type) {
                                    return type.hookPhase === phase
                                })
                                : this._eventTypes.slice()
                        ).sort(function (l, r) {
                            var cmpByPhase = l.hookPhase - r.hookPhase;
                            return 0 === cmpByPhase
                                ? l.hookOrder - r.hookOrder
                                : cmpByPhase
                        })
                    },
                    TransitionService.prototype._definePathType = function (name, hookScope) {
                        this._criteriaPaths[name] = {
                            name: name,
                            scope: hookScope
                        }
                    },
                    TransitionService.prototype._getPathTypes = function () {
                        return this._criteriaPaths
                    },
                    TransitionService.prototype.getHooks = function (hookName) {
                        return this._registeredHooks[hookName]
                    },
                    TransitionService.prototype._registerCoreTransitionHooks = function () {
                        var fns = this._deregisterHookFns;
                        fns.addCoreResolves = registerAddCoreResolvables(this),
                        fns.ignored = registerIgnoredTransitionHook(this),
                        fns.invalid = registerInvalidTransitionHook(this),
                        fns.redirectTo = registerRedirectToHook(this),
                        fns.onExit = registerOnExitHook(this),
                        fns.onRetain = registerOnRetainHook(this),
                        fns.onEnter = registerOnEnterHook(this),
                        fns.eagerResolve = registerEagerResolvePath(this),
                        fns.lazyResolve = registerLazyResolveState(this),
                        fns.resolveAll = registerResolveRemaining(this),
                        fns.loadViews = registerLoadEnteringViews(this),
                        fns.activateViews = registerActivateViews(this),
                        fns.updateGlobals = registerUpdateGlobalState(this),
                        fns.updateUrl = registerUpdateUrl(this),
                        fns.lazyLoad = Object(lazyLoad.b)(this)
                    },
                    TransitionService
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return Transition
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_trace__ = __webpack_require__(47),
                __WEBPACK_IMPORTED_MODULE_1__common_coreservices__ = __webpack_require__(20),
                __WEBPACK_IMPORTED_MODULE_2__common_strings__ = __webpack_require__(40),
                __WEBPACK_IMPORTED_MODULE_3__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_4__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_5__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_6__interface__ = __webpack_require__(70),
                __WEBPACK_IMPORTED_MODULE_7__transitionHook__ = __webpack_require__(83),
                __WEBPACK_IMPORTED_MODULE_8__hookRegistry__ = __webpack_require__(165),
                __WEBPACK_IMPORTED_MODULE_9__hookBuilder__ = __webpack_require__(257),
                __WEBPACK_IMPORTED_MODULE_10__path_pathUtils__ = __webpack_require__(110),
                __WEBPACK_IMPORTED_MODULE_11__params_param__ = __webpack_require__(81),
                __WEBPACK_IMPORTED_MODULE_12__resolve_resolvable__ = __webpack_require__(111),
                __WEBPACK_IMPORTED_MODULE_13__resolve_resolveContext__ = __webpack_require__(
                    112
                ),
                __WEBPACK_IMPORTED_MODULE_14__rejectFactory__ = __webpack_require__(69),
                __WEBPACK_IMPORTED_MODULE_15__common__ = __webpack_require__(17),
                stateSelf = Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.n)("self"),
                Transition = function () {
                    function Transition(fromPath, targetState, router) {
                        var _this = this;
                        if (
                            this._deferred = __WEBPACK_IMPORTED_MODULE_1__common_coreservices__.b.$q.defer(),
                            this.promise = this._deferred.promise,
                            this._registeredHooks = {},
                            this._hookBuilder = new __WEBPACK_IMPORTED_MODULE_9__hookBuilder__.a(this),
                            this.isActive = function () {
                                return _this.router.globals.transition === _this
                            },
                            this.router = router,
                            this._targetState = targetState,
                            !targetState.valid()
                        ) 
                            throw new Error(targetState.error());
                        this._options = Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.r)({
                            current: Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.p)(this)
                        }, targetState.options()),
                        this.$id = router.transitionService._transitionCount++;
                        var toPath = __WEBPACK_IMPORTED_MODULE_10__path_pathUtils__
                            .a
                            .buildToPath(fromPath, targetState);
                        this._treeChanges = __WEBPACK_IMPORTED_MODULE_10__path_pathUtils__
                            .a
                            .treeChanges(fromPath, toPath, this._options.reloadState),
                        this.createTransitionHookRegFns();
                        var onCreateHooks = this
                            ._hookBuilder
                            .buildHooksForPhase(__WEBPACK_IMPORTED_MODULE_6__interface__.a.CREATE);
                        __WEBPACK_IMPORTED_MODULE_7__transitionHook__
                            .a
                            .invokeHooks(onCreateHooks, function () {
                                return null
                            }),
                        this.applyViewConfigs(router)
                    }
                    return Transition.prototype.onBefore = function (criteria, callback, options) {},
                    Transition.prototype.onStart = function (criteria, callback, options) {},
                    Transition.prototype.onExit = function (criteria, callback, options) {},
                    Transition.prototype.onRetain = function (criteria, callback, options) {},
                    Transition.prototype.onEnter = function (criteria, callback, options) {},
                    Transition.prototype.onFinish = function (criteria, callback, options) {},
                    Transition.prototype.onSuccess = function (criteria, callback, options) {},
                    Transition.prototype.onError = function (criteria, callback, options) {},
                    Transition.prototype.createTransitionHookRegFns = function () {
                        var _this = this;
                        this
                            .router
                            .transitionService
                            ._pluginapi
                            ._getEvents()
                            .filter(function (type) {
                                return type.hookPhase !== __WEBPACK_IMPORTED_MODULE_6__interface__.a.CREATE
                            })
                            .forEach(function (type) {
                                return Object(__WEBPACK_IMPORTED_MODULE_8__hookRegistry__.b)(
                                    _this,
                                    _this.router.transitionService,
                                    type
                                )
                            })
                    },
                    Transition.prototype.getHooks = function (hookName) {
                        return this._registeredHooks[hookName]
                    },
                    Transition.prototype.applyViewConfigs = function (router) {
                        var enteringStates = this
                            ._treeChanges
                            .entering
                            .map(function (node) {
                                return node.state
                            });
                        __WEBPACK_IMPORTED_MODULE_10__path_pathUtils__
                            .a
                            .applyViewConfigs(
                                router.transitionService.$view,
                                this._treeChanges.to,
                                enteringStates
                            )
                    },
                    Transition.prototype.$from = function () {
                        return Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.P)(
                            this._treeChanges.from
                        ).state
                    },
                    Transition.prototype.$to = function () {
                        return Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.P)(
                            this._treeChanges.to
                        ).state
                    },
                    Transition.prototype.from = function () {
                        return this
                            .$from()
                            .self
                    },
                    Transition.prototype.to = function () {
                        return this
                            .$to()
                            .self
                    },
                    Transition.prototype.targetState = function () {
                        return this._targetState
                    },
                    Transition.prototype.is = function (compare) {
                        return compare instanceof Transition
                            ? this.is({
                                to: compare
                                    .$to()
                                    .name,
                                from: compare
                                    .$from()
                                    .name
                            })
                            : !(compare.to && !Object(__WEBPACK_IMPORTED_MODULE_8__hookRegistry__.c)(
                                this.$to(),
                                compare.to,
                                this
                            ) || compare.from && !Object(__WEBPACK_IMPORTED_MODULE_8__hookRegistry__.c)(
                                this.$from(),
                                compare.from,
                                this
                            ))
                    },
                    Transition.prototype.params = function (pathname) {
                        return void 0 === pathname && (pathname = "to"),
                        Object.freeze(
                            this._treeChanges[pathname].map(Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.n)(
                                "paramValues"
                            )).reduce(__WEBPACK_IMPORTED_MODULE_3__common_common__.D, {})
                        )
                    },
                    Transition.prototype.paramsChanged = function () {
                        var fromParams = this.params("from"),
                            toParams = this.params("to"),
                            allParamDescriptors = []
                                .concat(this._treeChanges.to)
                                .concat(this._treeChanges.from)
                                .map(function (pathNode) {
                                    return pathNode.paramSchema
                                })
                                .reduce(__WEBPACK_IMPORTED_MODULE_15__common__.G, [])
                                .reduce(__WEBPACK_IMPORTED_MODULE_15__common__._41, []);
                        return __WEBPACK_IMPORTED_MODULE_11__params_param__
                            .b
                            .changed(allParamDescriptors, fromParams, toParams)
                            .reduce(function (changedValues, descriptor) {
                                return changedValues[descriptor.id] = toParams[descriptor.id],
                                changedValues
                            }, {})
                    },
                    Transition.prototype.injector = function (state, pathName) {
                        void 0 === pathName && (pathName = "to");
                        var path = this._treeChanges[pathName];
                        return state && (
                            path = __WEBPACK_IMPORTED_MODULE_10__path_pathUtils__.a.subPath(path, function (node) {
                                return node.state === state || node.state.name === state
                            })
                        ),
                        new __WEBPACK_IMPORTED_MODULE_13__resolve_resolveContext__
                            .b(path)
                            .injector()
                    },
                    Transition.prototype.getResolveTokens = function (pathname) {
                        return void 0 === pathname && (pathname = "to"),
                        new __WEBPACK_IMPORTED_MODULE_13__resolve_resolveContext__
                            .b(
                                this._treeChanges[pathname]
                            )
                            .getTokens()
                    },
                    Transition.prototype.addResolvable = function (resolvable, state) {
                        void 0 === state && (state = ""),
                        resolvable = Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.h)(
                            __WEBPACK_IMPORTED_MODULE_12__resolve_resolvable__.a
                        )(resolvable)
                            ? resolvable
                            : new __WEBPACK_IMPORTED_MODULE_12__resolve_resolvable__.a(resolvable);
                        var stateName = "string" == typeof state
                                ? state
                                : state.name,
                            topath = this._treeChanges.to,
                            targetNode = Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.t)(
                                topath,
                                function (node) {
                                    return node.state.name === stateName
                                }
                            );
                        new __WEBPACK_IMPORTED_MODULE_13__resolve_resolveContext__
                            .b(topath)
                            .addResolvables([resolvable], targetNode.state)
                    },
                    Transition.prototype.redirectedFrom = function () {
                        return this._options.redirectedFrom || null
                    },
                    Transition.prototype.originalTransition = function () {
                        var rf = this.redirectedFrom();
                        return rf && rf.originalTransition() || this
                    },
                    Transition.prototype.options = function () {
                        return this._options
                    },
                    Transition.prototype.entering = function () {
                        return Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.B)(
                            this._treeChanges.entering,
                            Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.n)(
                                "state"
                            )
                        ).map(stateSelf)
                    },
                    Transition.prototype.exiting = function () {
                        return Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.B)(
                            this._treeChanges.exiting,
                            Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.n)(
                                "state"
                            )
                        )
                            .map(stateSelf)
                            .reverse()
                    },
                    Transition.prototype.retained = function () {
                        return Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.B)(
                            this._treeChanges.retained,
                            Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.n)(
                                "state"
                            )
                        ).map(stateSelf)
                    },
                    Transition.prototype.views = function (pathname, state) {
                        void 0 === pathname && (pathname = "entering");
                        var path = this._treeChanges[pathname];
                        return path = state
                            ? path.filter(Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.o)(
                                "state",
                                state
                            ))
                            : path,
                        path
                            .map(Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.n)("views"))
                            .filter(__WEBPACK_IMPORTED_MODULE_3__common_common__.y)
                            .reduce(__WEBPACK_IMPORTED_MODULE_3__common_common__.T, [])
                    },
                    Transition.prototype.treeChanges = function (pathname) {
                        return pathname
                            ? this._treeChanges[pathname]
                            : this._treeChanges
                    },
                    Transition.prototype.redirect = function (targetState) {
                        for (
                            var redirects = 1,
                            trans = this;
                            null != (trans = trans.redirectedFrom());
                        ) 
                            if (++redirects > 20) 
                                throw new Error("Too many consecutive Transition redirects (20+)");
                    var redirectOpts = {
                            redirectedFrom: this,
                            source: "redirect"
                        };
                        "url" === this
                            .options()
                            .source && !1 !== targetState
                            .options()
                            .location && (redirectOpts.location = "replace");
                        var newOptions = Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.r)(
                            {},
                            this.options(),
                            targetState.options(),
                            redirectOpts
                        );
                        targetState = targetState.withOptions(newOptions, !0);
                        var newTransition = this
                                .router
                                .transitionService
                                .create(this._treeChanges.from, targetState),
                            originalEnteringNodes = this._treeChanges.entering,
                            redirectEnteringNodes = newTransition._treeChanges.entering,
                            nodeIsReloading = function (reloadState) {
                                return function (node) {
                                    return reloadState && node
                                        .state
                                        .includes[reloadState.name]
                                }
                            };
                        return __WEBPACK_IMPORTED_MODULE_10__path_pathUtils__
                            .a
                            .matching(
                                redirectEnteringNodes,
                                originalEnteringNodes,
                                __WEBPACK_IMPORTED_MODULE_10__path_pathUtils__.a.nonDynamicParams
                            )
                            .filter(Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.i)(
                                nodeIsReloading(targetState.options().reloadState)
                            ))
                            .forEach(function (node, idx) {
                                node.resolvables = originalEnteringNodes[idx].resolvables
                            }),
                        newTransition
                    },
                    Transition.prototype._changedParams = function () {
                        var tc = this._treeChanges;
                        if (!this._options.reload && !tc.exiting.length && !tc.entering.length && tc.to.length === tc.from.length) {
                            if (!Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.i)(tc.to, tc.from).map(
                                function (tuple) {
                                    return tuple[0].state !== tuple[1].state
                                }
                            ).reduce(__WEBPACK_IMPORTED_MODULE_3__common_common__.g, !1)) {
                                var nodeSchemas = tc
                                        .to
                                        .map(function (node) {
                                            return node.paramSchema
                                        }),
                                    _a = [tc.to, tc.from].map(function (path) {
                                        return path.map(function (x) {
                                            return x.paramValues
                                        })
                                    }),
                                    toValues = _a[0],
                                    fromValues = _a[1];
                                return Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.i)(
                                    nodeSchemas,
                                    toValues,
                                    fromValues
                                )
                                    .map(function (_a) {
                                        var schema = _a[0],
                                            toVals = _a[1],
                                            fromVals = _a[2];
                                        return __WEBPACK_IMPORTED_MODULE_11__params_param__
                                            .b
                                            .changed(schema, toVals, fromVals)
                                    })
                                    .reduce(__WEBPACK_IMPORTED_MODULE_3__common_common__.T, [])
                            }
                        }
                    },
                    Transition.prototype.dynamic = function () {
                        var changes = this._changedParams();
                        return !!changes && changes
                            .map(function (x) {
                                return x.dynamic
                            })
                            .reduce(__WEBPACK_IMPORTED_MODULE_3__common_common__.g, !1)
                    },
                    Transition.prototype.ignored = function () {
                        return !!this._ignoredReason()
                    },
                    Transition.prototype._ignoredReason = function () {
                        var pending = this.router.globals.transition,
                            reloadState = this._options.reloadState,
                            same = function (pathA, pathB) {
                                if (pathA.length !== pathB.length) 
                                    return !1;
                                var matching = __WEBPACK_IMPORTED_MODULE_10__path_pathUtils__
                                    .a
                                    .matching(pathA, pathB);
                                return pathA.length === matching
                                    .filter(function (node) {
                                        return !reloadState || !node
                                            .state
                                            .includes[reloadState.name]
                                    })
                                    .length
                            },
                            newTC = this.treeChanges(),
                            pendTC = pending && pending.treeChanges();
                        return pendTC && same(pendTC.to, newTC.to) && same(
                            pendTC.exiting,
                            newTC.exiting
                        )
                            ? "SameAsPending"
                            : 0 === newTC.exiting.length && 0 === newTC.entering.length && same(
                                newTC.from,
                                newTC.to
                            )
                                ? "SameAsCurrent"
                                : void 0
                    },
                    Transition.prototype.run = function () {
                        var _this = this,
                            runAllHooks = __WEBPACK_IMPORTED_MODULE_7__transitionHook__.a.runAllHooks,
                            getHooksFor = function (phase) {
                                return _this
                                    ._hookBuilder
                                    .buildHooksForPhase(phase)
                            },
                            transitionSuccess = function () {
                                __WEBPACK_IMPORTED_MODULE_0__common_trace__
                                    .c
                                    .traceSuccess(_this.$to(), _this),
                                _this.success = !0,
                                _this
                                    ._deferred
                                    .resolve(_this.to()),
                                runAllHooks(getHooksFor(__WEBPACK_IMPORTED_MODULE_6__interface__.a.SUCCESS))
                            },
                            transitionError = function (reason) {
                                __WEBPACK_IMPORTED_MODULE_0__common_trace__
                                    .c
                                    .traceError(reason, _this),
                                _this.success = !1,
                                _this
                                    ._deferred
                                    .reject(reason),
                                _this._error = reason,
                                runAllHooks(getHooksFor(__WEBPACK_IMPORTED_MODULE_6__interface__.a.ERROR))
                            },
                            runTransition = function () {
                                var allRunHooks = getHooksFor(__WEBPACK_IMPORTED_MODULE_6__interface__.a.RUN),
                                    done = function () {
                                        return __WEBPACK_IMPORTED_MODULE_1__common_coreservices__
                                            .b
                                            .$q
                                            .when(void 0)
                                    };
                                return __WEBPACK_IMPORTED_MODULE_7__transitionHook__
                                    .a
                                    .invokeHooks(allRunHooks, done)
                            },
                            startTransition = function () {
                                var globals = _this.router.globals;
                                return globals.lastStartedTransitionId = _this.$id,
                                globals.transition = _this,
                                globals
                                    .transitionHistory
                                    .enqueue(_this),
                                __WEBPACK_IMPORTED_MODULE_0__common_trace__
                                    .c
                                    .traceTransitionStart(_this),
                                __WEBPACK_IMPORTED_MODULE_1__common_coreservices__
                                    .b
                                    .$q
                                    .when(void 0)
                            },
                            allBeforeHooks = getHooksFor(__WEBPACK_IMPORTED_MODULE_6__interface__.a.BEFORE);
                        return __WEBPACK_IMPORTED_MODULE_7__transitionHook__
                            .a
                            .invokeHooks(allBeforeHooks, startTransition)
                            .then(runTransition)
                            .then(transitionSuccess, transitionError),
                        this.promise
                    },
                    Transition.prototype.valid = function () {
                        return !this.error() || void 0 !== this.success
                    },
                    Transition.prototype.abort = function () {
                        Object(__WEBPACK_IMPORTED_MODULE_4__common_predicates__.m)(this.success) && (
                            this._aborted = !0
                        )
                    },
                    Transition.prototype.error = function () {
                        var state = this.$to();
                        if (state.self.abstract) 
                            return __WEBPACK_IMPORTED_MODULE_14__rejectFactory__
                                .b
                                .invalid("Cannot transition to abstract state '" + state.name + "'");
                        var paramDefs = state.parameters(),
                            values = this.params(),
                            invalidParams = paramDefs.filter(function (param) {
                                return !param.validates(values[param.id])
                            });
                        if (invalidParams.length) {
                            var invalidValues = invalidParams
                                    .map(function (param) {
                                        return "[" + param.id + ":" + Object(
                                            __WEBPACK_IMPORTED_MODULE_2__common_strings__.m
                                        )(values[param.id]) + "]"
                                    })
                                    .join(", "),
                                detail = "The following parameter values are not valid for state '" + state.name +
                                    "': " + invalidValues;
                            return __WEBPACK_IMPORTED_MODULE_14__rejectFactory__
                                .b
                                .invalid(detail)
                        }
                        return !1 === this.success
                            ? this._error
                            : void 0
                    },
                    Transition.prototype.toString = function () {
                        var fromStateOrName = this.from(),
                            toStateOrName = this.to(),
                            avoidEmptyHash = function (params) {
                                return null !== params["#"] && void 0 !== params["#"]
                                    ? params
                                    : Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.F)(params, ["#"])
                            };
                        return "Transition#" + this.$id + "( '" + (
                            Object(__WEBPACK_IMPORTED_MODULE_4__common_predicates__.i)(fromStateOrName)
                                ? fromStateOrName.name
                                : fromStateOrName
                        ) + "'" + Object(__WEBPACK_IMPORTED_MODULE_2__common_strings__.m)(
                            avoidEmptyHash(this._treeChanges.from.map(Object(__WEBPACK_IMPORTED_MODULE_5__common_hof__.n)(
                                "paramValues"
                            )).reduce(__WEBPACK_IMPORTED_MODULE_3__common_common__.D, {}))
                        ) + " -> " + (
                            this.valid()
                                ? ""
                                : "(X) "
                        ) + "'" + (
                            Object(__WEBPACK_IMPORTED_MODULE_4__common_predicates__.i)(toStateOrName)
                                ? toStateOrName.name
                                : toStateOrName
                        ) + "'" + Object(__WEBPACK_IMPORTED_MODULE_2__common_strings__.m)(
                            avoidEmptyHash(this.params())
                        ) + " )"
                    },
                    Transition.diToken = Transition,
                    Transition
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function matchState(state, criterion, transition) {
                function matchGlobs(_state) {
                    for (var globStrings = toMatch, i = 0; i < globStrings.length; i++) {
                        var glob = new __WEBPACK_IMPORTED_MODULE_0__common__.b(globStrings[i]);
                        if (glob && glob.matches(_state.name) || !glob && globStrings[i] === _state.name) 
                            return !0
                    }
                    return !1
                }
                var toMatch = Object(__WEBPACK_IMPORTED_MODULE_0__common__._2)(criterion)
                    ? [criterion]
                    : criterion;
                return !!(
                    Object(__WEBPACK_IMPORTED_MODULE_0__common__.U)(toMatch)
                        ? toMatch
                        : matchGlobs
                )(state, transition)
            }
            function makeEvent(registry, transitionService, eventType) {
                function hookRegistrationFn(matchObject, callback, options) {
                    void 0 === options && (options = {});
                    var registeredHook = new RegisteredHook(
                        transitionService,
                        eventType,
                        callback,
                        matchObject,
                        removeHookFn,
                        options
                    );
                    return hooks.push(registeredHook),
                    registeredHook
                        .deregister
                        .bind(registeredHook)
                }
                var _registeredHooks = registry._registeredHooks = registry._registeredHooks || {},
                    hooks = _registeredHooks[eventType.name] = [],
                    removeHookFn = Object(__WEBPACK_IMPORTED_MODULE_0__common__._26)(hooks);
                return registry[eventType.name] = hookRegistrationFn,
                hookRegistrationFn
            }
            __webpack_exports__.c = matchState,
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return RegisteredHook
            }),
            __webpack_exports__.b = makeEvent;
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17),
                __WEBPACK_IMPORTED_MODULE_1__interface__ = __webpack_require__(70),
                RegisteredHook = function () {
                    function RegisteredHook(
                        tranSvc,
                        eventType,
                        callback,
                        matchCriteria,
                        removeHookFromRegistry,
                        options
                    ) {
                        void 0 === options && (options = {}),
                        this.tranSvc = tranSvc,
                        this.eventType = eventType,
                        this.callback = callback,
                        this.matchCriteria = matchCriteria,
                        this.removeHookFromRegistry = removeHookFromRegistry,
                        this.invokeCount = 0,
                        this._deregistered = !1,
                        this.priority = options.priority || 0,
                        this.bind = options.bind || null,
                        this.invokeLimit = options.invokeLimit
                    }
                    return RegisteredHook.prototype._matchingNodes = function (
                        nodes,
                        criterion,
                        transition
                    ) {
                        if (!0 === criterion) 
                            return nodes;
                        var matching = nodes.filter(function (node) {
                            return matchState(node.state, criterion, transition)
                        });
                        return matching.length
                            ? matching
                            : null
                    },
                    RegisteredHook.prototype._getDefaultMatchCriteria = function () {
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common__._8)(
                            this.tranSvc._pluginapi._getPathTypes(),
                            function () {
                                return !0
                            }
                        )
                    },
                    RegisteredHook.prototype._getMatchingNodes = function (treeChanges, transition) {
                        var _this = this,
                            criteria = Object(__WEBPACK_IMPORTED_MODULE_0__common__.C)(
                                this._getDefaultMatchCriteria(),
                                this.matchCriteria
                            );
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common__._45)(
                            this.tranSvc._pluginapi._getPathTypes()
                        ).reduce(function (mn, pathtype) {
                            var isStateHook = pathtype.scope === __WEBPACK_IMPORTED_MODULE_1__interface__.b.STATE,
                                path = treeChanges[pathtype.name] || [],
                                nodes = isStateHook
                                    ? path
                                    : [Object(__WEBPACK_IMPORTED_MODULE_0__common__._37)(path)];
                            return mn[pathtype.name] = _this._matchingNodes(
                                nodes,
                                criteria[pathtype.name],
                                transition
                            ),
                            mn
                        }, {})
                    },
                    RegisteredHook.prototype.matches = function (treeChanges, transition) {
                        var matches = this._getMatchingNodes(treeChanges, transition);
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common__._45)(matches).every(
                            __WEBPACK_IMPORTED_MODULE_0__common__.M
                        )
                            ? matches
                            : null
                    },
                    RegisteredHook.prototype.deregister = function () {
                        this.removeHookFromRegistry(this),
                        this._deregistered = !0
                    },
                    RegisteredHook
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return UrlRuleFactory
            }),
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return BaseUrlRule
            });
            var __WEBPACK_IMPORTED_MODULE_0__urlMatcher__ = __webpack_require__(113),
                __WEBPACK_IMPORTED_MODULE_1__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_2__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_3__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_4__state_stateObject__ = __webpack_require__(162),
                UrlRuleFactory = function () {
                    function UrlRuleFactory(router) {
                        this.router = router
                    }
                    return UrlRuleFactory.prototype.compile = function (str) {
                        return this
                            .router
                            .urlMatcherFactory
                            .compile(str)
                    },
                    UrlRuleFactory.prototype.create = function (what, handler) {
                        var _this = this,
                            isState = __WEBPACK_IMPORTED_MODULE_4__state_stateObject__.a.isState,
                            isStateDeclaration = __WEBPACK_IMPORTED_MODULE_4__state_stateObject__.a.isStateDeclaration,
                            makeRule = Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.l)([
                                [
                                    __WEBPACK_IMPORTED_MODULE_1__common_predicates__.l,
                                    function (_what) {
                                        return makeRule(_this.compile(_what))
                                    }
                                ],
                                [
                                    Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.h)(
                                        __WEBPACK_IMPORTED_MODULE_0__urlMatcher__.a
                                    ),
                                    function (_what) {
                                        return _this.fromUrlMatcher(_what, handler)
                                    }
                                ],
                                [
                                    Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.j)(
                                        isState,
                                        isStateDeclaration
                                    ),
                                    function (_what) {
                                        return _this.fromState(_what, _this.router)
                                    }
                                ],
                                [
                                    Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.h)(RegExp),
                                    function (_what) {
                                        return _this.fromRegExp(_what, handler)
                                    }
                                ],
                                [
                                    __WEBPACK_IMPORTED_MODULE_1__common_predicates__.d,
                                    function (_what) {
                                        return new BaseUrlRule(_what, handler)
                                    }
                                ]
                            ]),
                            rule = makeRule(what);
                        if (!rule) 
                            throw new Error("invalid 'what' in when()");
                        return rule
                    },
                    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {
                        function matchUrlParamters(url) {
                            var params = urlMatcher.exec(url.path, url.search, url.hash);
                            return urlMatcher.validates(params) && params
                        }
                        function matchPriority(params) {
                            var optional = urlMatcher
                                .parameters()
                                .filter(function (param) {
                                    return param.isOptional
                                });
                            return optional.length
                                ? optional
                                    .filter(function (param) {
                                        return params[param.id]
                                    })
                                    .length / optional.length
                                : 1e-6
                        }
                        var _handler = handler;
                        Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(handler) && (
                            handler = this.router.urlMatcherFactory.compile(handler)
                        ),
                        Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.h)(
                            __WEBPACK_IMPORTED_MODULE_0__urlMatcher__.a
                        )(handler) && (_handler = function (match) {
                            return handler.format(match)
                        });
                        var details = {
                            urlMatcher: urlMatcher,
                            matchPriority: matchPriority,
                            type: "URLMATCHER"
                        };
                        return Object(__WEBPACK_IMPORTED_MODULE_2__common_common__.r)(
                            new BaseUrlRule(matchUrlParamters, _handler),
                            details
                        )
                    },
                    UrlRuleFactory.prototype.fromState = function (stateOrDecl, router) {
                        var state = __WEBPACK_IMPORTED_MODULE_4__state_stateObject__
                                .a
                                .isStateDeclaration(stateOrDecl)
                                    ? stateOrDecl.$$state()
                                    : stateOrDecl,
                            handler = function (match) {
                                var $state = router.stateService,
                                    globals = router.globals;
                                $state.href(state, match) !== $state.href(globals.current, globals.params) && $state.transitionTo(
                                    state,
                                    match,
                                    {
                                        inherit: !0,
                                        source: "url"
                                    }
                                )
                            },
                            details = {
                                state: state,
                                type: "STATE"
                            };
                        return Object(__WEBPACK_IMPORTED_MODULE_2__common_common__.r)(
                            this.fromUrlMatcher(state.url, handler),
                            details
                        )
                    },
                    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {
                        if (regexp.global || regexp.sticky) 
                            throw new Error("Rule RegExp must not be global or sticky");
                        var redirectUrlTo = function (match) {
                                return handler.replace(/\$(\$|\d{1,2})/, function (m, what) {
                                    return match[
                                        "$" === what
                                            ? 0
                                            : Number(what)
                                    ]
                                })
                            },
                            _handler = Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(handler)
                                ? redirectUrlTo
                                : handler,
                            matchParamsFromRegexp = function (url) {
                                return regexp.exec(url.path)
                            },
                            details = {
                                regexp: regexp,
                                type: "REGEXP"
                            };
                        return Object(__WEBPACK_IMPORTED_MODULE_2__common_common__.r)(
                            new BaseUrlRule(matchParamsFromRegexp, _handler),
                            details
                        )
                    },
                    UrlRuleFactory.isUrlRule = function (obj) {
                        return obj && ["type", "match", "handler"].every(function (key) {
                            return Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.c)(obj[key])
                        })
                    },
                    UrlRuleFactory
                }(),
                BaseUrlRule = function () {
                    function BaseUrlRule(match, handler) {
                        var _this = this;
                        this.match = match,
                        this.type = "RAW",
                        this.matchPriority = function (match) {
                            return 0 - _this.$id
                        },
                        this.handler = handler || __WEBPACK_IMPORTED_MODULE_2__common_common__.y
                    }
                    return BaseUrlRule
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function parseUrl(url) {
                var orEmptyString = function (x) {
                        return x || ""
                    },
                    _a = Object(__WEBPACK_IMPORTED_MODULE_0__common__._32)(url).map(orEmptyString),
                    beforehash = _a[0],
                    hash = _a[1],
                    _b = Object(__WEBPACK_IMPORTED_MODULE_0__common__._34)(beforehash).map(
                        orEmptyString
                    );
                return {path: _b[0], search: _b[1], hash: hash, url: url}
            }
            function locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {
                return function (uiRouter) {
                    function dispose(router) {
                        router.dispose(service),
                        router.dispose(configuration)
                    }
                    var service = uiRouter.locationService = new serviceClass(uiRouter),
                        configuration = uiRouter.locationConfig = new configurationClass(
                            uiRouter,
                            isHtml5
                        );
                    return {name: name, service: service, configuration: configuration, dispose: dispose}
                }
            }
            __webpack_require__.d(__webpack_exports__, "c", function () {
                return keyValsToObjectR
            }),
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return getParams
            }),
            __webpack_exports__.e = parseUrl,
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return buildUrl
            }),
            __webpack_exports__.d = locationPluginFactory;
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17),
                keyValsToObjectR = function (accum, _a) {
                    var key = _a[0],
                        val = _a[1];
                    return accum.hasOwnProperty(key)
                        ? Object(__WEBPACK_IMPORTED_MODULE_0__common__.R)(accum[key])
                            ? accum[key].push(val)
                            : accum[key] = [accum[key], val]
                        : accum[key] = val,
                    accum
                },
                getParams = function (queryString) {
                    return queryString
                        .split("&")
                        .filter(__WEBPACK_IMPORTED_MODULE_0__common__.M)
                        .map(__WEBPACK_IMPORTED_MODULE_0__common__._31)
                        .reduce(keyValsToObjectR, {})
                },
                buildUrl = function (loc) {
                    var path = loc.path(),
                        searchObject = loc.search(),
                        hash = loc.hash(),
                        search = Object
                            .keys(searchObject)
                            .map(function (key) {
                                var param = searchObject[key];
                                return (
                                    Object(__WEBPACK_IMPORTED_MODULE_0__common__.R)(param)
                                        ? param
                                        : [param]
                                ).map(function (val) {
                                    return key + "=" + val
                                })
                            })
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common__._43, [])
                            .join("&");
                    return path + (
                        search
                            ? "?" + search
                            : ""
                    ) + (
                        hash
                            ? "#" + hash
                            : ""
                    )
                }
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function getNg1ViewConfigFactory() {
                var templateFactory = null;
                return function (path, view) {
                    return templateFactory = templateFactory || __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                        .services
                        .$injector
                        .get("$templateFactory"),
                    [new Ng1ViewConfig(path, view, templateFactory)]
                }
            }
            function ng1ViewsBuilder(state) {
                if (!state.parent) 
                    return {};
                var tplKeys = [
                        "templateProvider", "templateUrl", "template", "notify", "async"
                    ],
                    ctrlKeys = [
                        "controller", "controllerProvider", "controllerAs", "resolveAs"
                    ],
                    compKeys = [
                        "component", "bindings", "componentProvider"
                    ],
                    nonCompKeys = tplKeys.concat(ctrlKeys),
                    allViewKeys = compKeys.concat(nonCompKeys);
                if (Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isDefined)(state.views) && hasAnyKey(
                    allViewKeys,
                    state
                )) 
                    throw new Error(
                        "State '" + state.name + "' has a 'views' object. It cannot also have \"view pr" +
                    "operties\" at the state level.  Move the following properties into a view (in " +
                    "the 'views' object):  " + allViewKeys.filter(function (key) {
                            return Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isDefined)(
                                state[key]
                            )
                        }).join(", ")
                    );
                var views = {},
                    viewsObject = state.views || {
                        $default: Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.pick)(
                            state,
                            allViewKeys
                        )
                    };
                return Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.forEach)(
                    viewsObject,
                    function (config, name) {
                        if (
                            name = name || "$default",
                            Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isString)(
                                config
                            ) && (config = {
                                component: config
                            }),
                            config = Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.extend)(
                                {},
                                config
                            ),
                            hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)
                        ) 
                            throw new Error(
                                "Cannot combine: " + compKeys.join("|") + " with: " + nonCompKeys.join("|") + " in stateview: '" +
                            name + "@" + state.name + "'"
                            );
                        config.resolveAs = config.resolveAs || "$resolve",
                        config.$type = "ng1",
                        config.$context = state,
                        config.$name = name;
                        var normalized = __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                            .ViewService
                            .normalizeUIViewTarget(config.$context, config.$name);
                        config.$uiViewName = normalized.uiViewName,
                        config.$uiViewContextAnchor = normalized.uiViewContextAnchor,
                        views[name] = config
                    }
                ),
                views
            }
            __webpack_exports__.b = getNg1ViewConfigFactory,
            __webpack_exports__.c = ng1ViewsBuilder,
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return Ng1ViewConfig
            });
            var __WEBPACK_IMPORTED_MODULE_0__uirouter_core__ = __webpack_require__(24),
                hasAnyKey = function (keys, obj) {
                    return keys.reduce(function (acc, key) {
                        return acc || Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isDefined)(
                            obj[key]
                        )
                    }, !1)
                },
                id = 0,
                Ng1ViewConfig = function () {
                    function Ng1ViewConfig(path, viewDecl, factory) {
                        var _this = this;
                        this.path = path,
                        this.viewDecl = viewDecl,
                        this.factory = factory,
                        this.$id = id++,
                        this.loaded = !1,
                        this.getTemplate = function (uiView, context) {
                            return _this.component
                                ? _this
                                    .factory
                                    .makeComponentTemplate(
                                        uiView,
                                        context,
                                        _this.component,
                                        _this.viewDecl.bindings
                                    )
                                : _this.template
                        }
                    }
                    return Ng1ViewConfig.prototype.load = function () {
                        var _this = this,
                            $q = __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.services.$q,
                            context = new __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.ResolveContext(
                                this.path
                            ),
                            params = this
                                .path
                                .reduce(function (acc, node) {
                                    return Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.extend)(
                                        acc,
                                        node.paramValues
                                    )
                                }, {}),
                            promises = {
                                template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),
                                controller: $q.when(this.getController(context))
                            };
                        return $q
                            .all(promises)
                            .then(function (results) {
                                return __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                                    .trace
                                    .traceViewServiceEvent("Loaded", _this),
                                _this.controller = results.controller,
                                Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.extend)(
                                    _this,
                                    results.template
                                ),
                                _this
                            })
                    },
                    Ng1ViewConfig.prototype.getController = function (context) {
                        var provider = this.viewDecl.controllerProvider;
                        if (!Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isInjectable)(
                            provider
                        )) 
                            return this.viewDecl.controller;
                        var deps = __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                                .services
                                .$injector
                                .annotate(provider),
                            providerFn = Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isArray)(
                                provider
                            )
                                ? Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.tail)(provider)
                                : provider;
                        return new __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                            .Resolvable(
                                "",
                                providerFn,
                                deps
                            )
                            .get(context)
                    },
                    Ng1ViewConfig
                }()
        },
        function (module, exports) {
            module.exports = function (module) {
                return module.webpackPolyfill || (
                    module.deprecate = function () {},
                    module.paths = [],
                    module.children || (
                        module.children = []
                    ),
                    Object.defineProperty(module, "loaded", {
                        enumerable: !0,
                        get: function () {
                            return module.l
                        }
                    }),
                    Object.defineProperty(module, "id", {
                        enumerable: !0,
                        get: function () {
                            return module.i
                        }
                    }),
                    module.webpackPolyfill = 1
                ),
                module
            }
        },
        function (module, exports) {
            function defaultSetTimout() {
                throw new Error("setTimeout has not been defined")
            }
            function defaultClearTimeout() {
                throw new Error("clearTimeout has not been defined")
            }
            function runTimeout(fun) {
                if (cachedSetTimeout === setTimeout) 
                    return setTimeout(fun, 0);
                if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) 
                    return cachedSetTimeout = setTimeout,
                    setTimeout(fun, 0);
                try {
                    return cachedSetTimeout(fun, 0)
                } catch (e) {
                    try {
                        return cachedSetTimeout.call(null, fun, 0)
                    } catch (e) {
                        return cachedSetTimeout.call(this, fun, 0)
                    }
                }
            }
            function runClearTimeout(marker) {
                if (cachedClearTimeout === clearTimeout) 
                    return clearTimeout(marker);
                if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) 
                    return cachedClearTimeout = clearTimeout,
                    clearTimeout(marker);
                try {
                    return cachedClearTimeout(marker)
                } catch (e) {
                    try {
                        return cachedClearTimeout.call(null, marker)
                    } catch (e) {
                        return cachedClearTimeout.call(this, marker)
                    }
                }
            }
            function cleanUpNextTick() {
                draining && currentQueue && (
                    draining = !1,
                    currentQueue.length
                        ? queue = currentQueue.concat(queue)
                        : queueIndex = -1,
                    queue.length && drainQueue()
                )
            }
            function drainQueue() {
                if (!draining) {
                    var timeout = runTimeout(cleanUpNextTick);
                    draining = !0;
                    for (var len = queue.length; len;) {
                        for (currentQueue = queue, queue = []; ++queueIndex < len;) 
                            currentQueue && currentQueue[queueIndex].run();
                        queueIndex = -1,
                        len = queue.length
                    }
                    currentQueue = null,
                    draining = !1,
                    runClearTimeout(timeout)
                }
            }
            function Item(fun, array) {
                this.fun = fun,
                this.array = array
            }
            function noop() {}
            var cachedSetTimeout,
                cachedClearTimeout,
                process = module.exports = {};
            (function () {
                try {
                    cachedSetTimeout = "function" == typeof setTimeout
                        ? setTimeout
                        : defaultSetTimout
                } catch (e) {
                    cachedSetTimeout = defaultSetTimout
                }
                try {
                    cachedClearTimeout = "function" == typeof clearTimeout
                        ? clearTimeout
                        : defaultClearTimeout
                } catch (e) {
                    cachedClearTimeout = defaultClearTimeout
                }
            })();
            var currentQueue,
                queue = [],
                draining = !1,
                queueIndex = -1;
            process.nextTick = function (fun) {
                var args = new Array(arguments.length - 1);
                if (arguments.length > 1) 
                    for (var i = 1; i < arguments.length; i++) 
                        args[i - 1] = arguments[i];
            queue.push(new Item(fun, args)),
                1 !== queue.length || draining || runTimeout(drainQueue)
            },
            Item.prototype.run = function () {
                this
                    .fun
                    .apply(null, this.array)
            },
            process.title = "browser",
            process.browser = !0,
            process.env = {},
            process.argv = [],
            process.version = "",
            process.versions = {},
            process.on = noop,
            process.addListener = noop,
            process.once = noop,
            process.off = noop,
            process.removeListener = noop,
            process.removeAllListeners = noop,
            process.emit = noop,
            process.prependListener = noop,
            process.prependOnceListener = noop,
            process.listeners = function (name) {
                return []
            },
            process.binding = function (name) {
                throw new Error("process.binding is not supported")
            },
            process.cwd = function () {
                return "/"
            },
            process.chdir = function (dir) {
                throw new Error("process.chdir is not supported")
            },
            process.umask = function () {
                return 0
            }
        },,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function getComponentBindings(name) {
                var cmpDefs = lib_esm
                    .services
                    .$injector
                    .get(name + "Directive");
                if (!cmpDefs || !cmpDefs.length) 
                    throw new Error("Unable to find component named '" + name + "'");
                return cmpDefs
                    .map(getBindings)
                    .reduce(lib_esm.unnestR, [])
            }
            function $uiRouterProvider($locationProvider) {
                function $get(
                    $location,
                    $browser,
                    $window,
                    $sniffer,
                    $rootScope,
                    $http,
                    $templateCache
                ) {
                    return ng1LocationService._runtimeServices(
                        $rootScope,
                        $location,
                        $sniffer,
                        $browser,
                        $window
                    ),
                    delete router.router,
                    delete router.$get,
                    router
                }
                router = this.router = new lib_esm.UIRouter,
                router.stateProvider = new stateProvider.a(
                    router.stateRegistry,
                    router.stateService
                ),
                router
                    .stateRegistry
                    .decorator("views", views.c),
                router
                    .stateRegistry
                    .decorator("onExit", getStateHookBuilder("onExit")),
                router
                    .stateRegistry
                    .decorator("onRetain", getStateHookBuilder("onRetain")),
                router
                    .stateRegistry
                    .decorator("onEnter", getStateHookBuilder("onEnter")),
                router
                    .viewService
                    ._pluginapi
                    ._viewConfigFactory("ng1", Object(views.b)()),
                router.urlService.config._decodeParams = !1;
                var ng1LocationService = router.locationService = router.locationConfig = new locationServices_Ng1LocationServices(
                    $locationProvider
                );
                return locationServices_Ng1LocationServices.monkeyPatchPathParameterType(
                    router
                ),
                router.router = router,
                router.$get = $get,
                $get.$inject = [
                    "$location",
                    "$browser",
                    "$window",
                    "$sniffer",
                    "$rootScope",
                    "$http",
                    "$templateCache"
                ],
                router
            }
            function runBlock($injector, $q, $uiRouter) {
                if (
                    lib_esm.services.$injector = $injector,
                    lib_esm.services.$q = $q,
                    !Object.prototype.hasOwnProperty.call($injector, "strictDi")
                ) 
                    try {
                        $injector.invoke(["checkStrictDi", function (checkStrictDi) {}])
                    } catch (error) {
                        $injector.strictDi = !!/strict mode/.exec(error && error.toString())
                    }
                $uiRouter
                    .stateRegistry
                    .get()
                    .map(function (x) {
                        return x
                            .$$state()
                            .resolvables
                    })
                    .reduce(lib_esm.unnestR, [])
                    .filter(function (x) {
                        return "deferred" === x.deps
                    })
                    .forEach(function (resolvable) {
                        return resolvable.deps = $injector.annotate(
                            resolvable.resolveFn,
                            $injector.strictDi
                        )
                    })
            }
            function watchDigests($rootScope) {
                $rootScope.$watch(function () {
                    lib_esm.trace.approximateDigests++
                })
            }
            var angular = __webpack_require__(68),
                lib_esm = __webpack_require__(24),
                views = __webpack_require__(168),
                templateFactory_TemplateFactory = function () {
                    function TemplateFactory() {
                        var _this = this;
                        this._useHttp = angular.a.version.minor < 3,
                        this.$get = [
                            "$http",
                            "$templateCache",
                            "$injector",
                            function ($http, $templateCache, $injector) {
                                return _this.$templateRequest = $injector.has && $injector.has(
                                    "$templateRequest"
                                ) && $injector.get("$templateRequest"),
                                _this.$http = $http,
                                _this.$templateCache = $templateCache,
                                _this
                            }
                        ]
                    }
                    return TemplateFactory.prototype.useHttpService = function (value) {
                        this._useHttp = value
                    },
                    TemplateFactory.prototype.fromConfig = function (config, params, context) {
                        var asTemplate = function (result) {
                                return lib_esm
                                    .services
                                    .$q
                                    .when(result)
                                    .then(function (str) {
                                        return {template: str}
                                    })
                            },
                            asComponent = function (result) {
                                return lib_esm
                                    .services
                                    .$q
                                    .when(result)
                                    .then(function (str) {
                                        return {component: str}
                                    })
                            };
                        return Object(lib_esm.isDefined)(config.template)
                            ? asTemplate(this.fromString(config.template, params))
                            : Object(lib_esm.isDefined)(config.templateUrl)
                                ? asTemplate(this.fromUrl(config.templateUrl, params))
                                : Object(lib_esm.isDefined)(config.templateProvider)
                                    ? asTemplate(this.fromProvider(config.templateProvider, params, context))
                                    : Object(lib_esm.isDefined)(config.component)
                                        ? asComponent(config.component)
                                        : Object(lib_esm.isDefined)(config.componentProvider)
                                            ? asComponent(
                                                this.fromComponentProvider(config.componentProvider, params, context)
                                            )
                                            : asTemplate("<ui-view></ui-view>")
                    },
                    TemplateFactory.prototype.fromString = function (template, params) {
                        return Object(lib_esm.isFunction)(template)
                            ? template(params)
                            : template
                    },
                    TemplateFactory.prototype.fromUrl = function (url, params) {
                        return Object(lib_esm.isFunction)(url) && (url = url(params)),
                        null == url
                            ? null
                            : this._useHttp
                                ? this
                                    .$http
                                    .get(url, {
                                        cache: this.$templateCache,
                                        headers: {
                                            Accept: "text/html"
                                        }
                                    })
                                    .then(function (response) {
                                        return response.data
                                    })
                                : this.$templateRequest(url)
                    },
                    TemplateFactory.prototype.fromProvider = function (provider, params, context) {
                        var deps = lib_esm
                                .services
                                .$injector
                                .annotate(provider),
                            providerFn = Object(lib_esm.isArray)(provider)
                                ? Object(lib_esm.tail)(provider)
                                : provider;
                        return new lib_esm
                            .Resolvable("", providerFn, deps)
                            .get(context)
                    },
                    TemplateFactory.prototype.fromComponentProvider = function (
                        provider,
                        params,
                        context
                    ) {
                        var deps = lib_esm
                                .services
                                .$injector
                                .annotate(provider),
                            providerFn = Object(lib_esm.isArray)(provider)
                                ? Object(lib_esm.tail)(provider)
                                : provider;
                        return new lib_esm
                            .Resolvable("", providerFn, deps)
                            .get(context)
                    },
                    TemplateFactory.prototype.makeComponentTemplate = function (
                        uiView,
                        context,
                        component,
                        bindings
                    ) {
                        bindings = bindings || {};
                        var prefix = angular.a.version.minor >= 3
                                ? "::"
                                : "",
                            kebob = function (camelCase) {
                                var kebobed = Object(lib_esm.kebobString)(camelCase);
                                return /^(x|data)-/.exec(kebobed)
                                    ? "x-" + kebobed
                                    : kebobed
                            },
                            attributeTpl = function (input) {
                                var name = input.name,
                                    type = input.type,
                                    attrName = kebob(name);
                                if (uiView.attr(attrName) && !bindings[name]) 
                                    return attrName + "='" + uiView.attr(attrName) + "'";
                                var resolveName = bindings[name] || name;
                                if ("@" === type) 
                                    return attrName + "='{{" + prefix + "$resolve." + resolveName + "}}'";
                                if ("&" === type) {
                                    var res = context.getResolvable(resolveName),
                                        fn = res && res.data,
                                        args = fn && lib_esm
                                            .services
                                            .$injector
                                            .annotate(fn) || [];
                                    return attrName + "='$resolve." + resolveName + (
                                        Object(lib_esm.isArray)(fn)
                                            ? "[" + (
                                                fn.length - 1
                                            ) + "]"
                                            : ""
                                    ) + "(" + args.join(",") + ")'"
                                }
                                return attrName + "='" + prefix + "$resolve." + resolveName + "'"
                            },
                            attrs = getComponentBindings(component)
                                .map(attributeTpl)
                                .join(" "),
                            kebobName = kebob(component);
                        return "<" + kebobName + " " + attrs + "></" + kebobName + ">"
                    },
                    TemplateFactory
                }(),
                getBindings = function (def) {
                    return scopeBindings(
                        Object(lib_esm.isObject)(def.bindToController)
                            ? def.bindToController
                            : def.scope
                    )
                },
                scopeBindings = function (bindingsObj) {
                    return Object
                        .keys(bindingsObj || {})
                        .map(function (key) {
                            return [
                                key,
                                /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])
                            ]
                        })
                        .filter(function (tuple) {
                            return Object(lib_esm.isDefined)(tuple) && Object(lib_esm.isArray)(tuple[1])
                        })
                        .map(function (tuple) {
                            return {
                                name: tuple[1][2] || tuple[0],
                                type: tuple[1][1]
                            }
                        })
                },
                stateProvider = __webpack_require__(275),
                getStateHookBuilder = function (hookName) {
                    return function stateHookBuilder(stateObject) {
                        function decoratedNg1Hook(trans, state) {
                            var resolveContext = new lib_esm.ResolveContext(trans.treeChanges(pathname)),
                                subContext = resolveContext.subContext(state.$$state()),
                                locals = Object(lib_esm.extend)(getLocals(subContext), {
                                    $state$: state,
                                    $transition$: trans
                                });
                            return lib_esm
                                .services
                                .$injector
                                .invoke(hook, this, locals)
                        }
                        var hook = stateObject[hookName],
                            pathname = "onExit" === hookName
                                ? "from"
                                : "to";
                        return hook
                            ? decoratedNg1Hook
                            : void 0
                    }
                },
                locationServices_Ng1LocationServices = function () {
                    function Ng1LocationServices($locationProvider) {
                        this._urlListeners = [],
                        this.$locationProvider = $locationProvider;
                        var _lp = Object(lib_esm.val)($locationProvider);
                        Object(lib_esm.createProxyFunctions)(_lp, this, _lp, ["hashPrefix"])
                    }
                    return Ng1LocationServices.monkeyPatchPathParameterType = function (router) {
                        var pathType = router
                            .urlMatcherFactory
                            .type("path");
                        pathType.encode = function (x) {
                            return null != x
                                ? x
                                    .toString()
                                    .replace(/(~|\/)/g, function (m) {
                                        return {"~": "~~", "/": "~2F"}[m]
                                    })
                                : x
                        },
                        pathType.decode = function (x) {
                            return null != x
                                ? x
                                    .toString()
                                    .replace(/(~~|~2F)/g, function (m) {
                                        return {"~~": "~", "~2F": "/"}[m]
                                    })
                                : x
                        }
                    },
                    Ng1LocationServices.prototype.dispose = function () {},
                    Ng1LocationServices.prototype.onChange = function (callback) {
                        var _this = this;
                        return this
                            ._urlListeners
                            .push(callback),
                        function () {
                            return Object(lib_esm.removeFrom)(_this._urlListeners)(callback)
                        }
                    },
                    Ng1LocationServices.prototype.html5Mode = function () {
                        var html5Mode = this
                            .$locationProvider
                            .html5Mode();
                        return (
                            html5Mode = Object(lib_esm.isObject)(html5Mode)
                                ? html5Mode.enabled
                                : html5Mode
                        ) && this.$sniffer.history
                    },
                    Ng1LocationServices.prototype.baseHref = function () {
                        return this._baseHref || (
                            this._baseHref = this.$browser.baseHref() || this.$window.location.pathname
                        )
                    },
                    Ng1LocationServices.prototype.url = function (newUrl, replace, state) {
                        return void 0 === replace && (replace = !1),
                        Object(lib_esm.isDefined)(newUrl) && this
                            .$location
                            .url(newUrl),
                        replace && this
                            .$location
                            .replace(),
                        state && this
                            .$location
                            .state(state),
                        this
                            .$location
                            .url()
                    },
                    Ng1LocationServices.prototype._runtimeServices = function (
                        $rootScope,
                        $location,
                        $sniffer,
                        $browser,
                        $window
                    ) {
                        var _this = this;
                        this.$location = $location,
                        this.$sniffer = $sniffer,
                        this.$browser = $browser,
                        this.$window = $window,
                        $rootScope.$on("$locationChangeSuccess", function (evt) {
                            return _this
                                ._urlListeners
                                .forEach(function (fn) {
                                    return fn(evt)
                                })
                        });
                        var _loc = Object(lib_esm.val)($location);
                        Object(lib_esm.createProxyFunctions)(
                            _loc,
                            this,
                            _loc,
                            ["replace", "path", "search", "hash"]
                        ),
                        Object(lib_esm.createProxyFunctions)(
                            _loc,
                            this,
                            _loc,
                            ["port", "protocol", "host"]
                        )
                    },
                    Ng1LocationServices
                }(),
                urlRouterProvider = __webpack_require__(276);
            __webpack_exports__.b = watchDigests,
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return getLocals
            }),
            angular
                .a
                .module("ui.router.angular1", []);
            var mod_init = angular
                    .a
                    .module("ui.router.init", ["ng"]),
                mod_util = angular
                    .a
                    .module("ui.router.util", ["ui.router.init"]),
                mod_rtr = angular
                    .a
                    .module("ui.router.router", ["ui.router.util"]),
                mod_state = angular
                    .a
                    .module(
                        "ui.router.state",
                        ["ui.router.router", "ui.router.util", "ui.router.angular1"]
                    ),
                mod_main = angular
                    .a
                    .module(
                        "ui.router",
                        ["ui.router.init", "ui.router.state", "ui.router.angular1"]
                    ),
                router = (angular.a.module("ui.router.compat", ["ui.router"]), null);
            $uiRouterProvider.$inject = ["$locationProvider"];
            var getProviderFor = function (serviceName) {
                return [
                    "$uiRouterProvider",
                    function ($urp) {
                        var service = $urp.router[serviceName];
                        return service.$get = function () {
                            return service
                        },
                        service
                    }
                ]
            };
            runBlock.$inject = ["$injector", "$q", "$uiRouter"];
            var getUrlRouterProvider = function (uiRouter) {
                    return uiRouter.urlRouterProvider = new urlRouterProvider.a(uiRouter)
                },
                getStateProvider = function () {
                    return Object(lib_esm.extend)(router.stateProvider, {
                        $get: function () {
                            return router.stateService
                        }
                    })
                };
            watchDigests.$inject = ["$rootScope"],
            mod_init.provider("$uiRouter", $uiRouterProvider),
            mod_rtr.provider("$urlRouter", ["$uiRouterProvider", getUrlRouterProvider]),
            mod_util.provider("$urlService", getProviderFor("urlService")),
            mod_util.provider("$urlMatcherFactory", [
                "$uiRouterProvider",
                function () {
                    return router.urlMatcherFactory
                }
            ]),
            mod_util.provider("$templateFactory", function () {
                return new templateFactory_TemplateFactory
            }),
            mod_state.provider("$stateRegistry", getProviderFor("stateRegistry")),
            mod_state.provider("$uiRouterGlobals", getProviderFor("globals")),
            mod_state.provider("$transitions", getProviderFor("transitionService")),
            mod_state.provider("$state", ["$uiRouterProvider", getStateProvider]),
            mod_state.factory("$stateParams", [
                "$uiRouter",
                function ($uiRouter) {
                    return $uiRouter.globals.params
                }
            ]),
            mod_main.factory("$view", function () {
                return router.viewService
            }),
            mod_main.service("$trace", function () {
                return lib_esm.trace
            }),
            mod_main.run(watchDigests),
            mod_util.run(["$urlMatcherFactory", function ($urlMatcherFactory) {}]),
            mod_state.run(["$state", function ($state) {}]),
            mod_rtr.run(["$urlRouter", function ($urlRouter) {}]),
            mod_init.run(runBlock);
            var getLocals = function (ctx) {
                return ctx
                    .getTokens()
                    .filter(lib_esm.isString)
                    .map(function (key) {
                        var resolvable = ctx.getResolvable(key);
                        return [
                            key, "NOWAIT" === ctx
                                .getPolicy(resolvable)
                                .async
                                    ? resolvable.promise
                                    : resolvable.data
                        ]
                    })
                    .reduce(lib_esm.applyPairs, {})
            }
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function ie9Console(console) {
                var bound = function (fn) {
                    return Function
                        .prototype
                        .bind
                        .call(fn, console)
                };
                return {
                    log: bound(console.log),
                    error: bound(console.log),
                    table: bound(console.log)
                }
            }
            function fallbackConsole(console) {
                var log = console
                    .log
                    .bind(console);
                return {
                    log: log,
                    error: console.error
                        ? console
                            .error
                            .bind(console)
                        : log,
                    table: console.table
                        ? console
                            .table
                            .bind(console)
                        : log
                }
            }
            function getSafeConsole() {
                return "undefined" != typeof document && document.documentMode && 9 === document.documentMode
                    ? window && window.console
                        ? ie9Console(window.console)
                        : noopConsoleStub
                    : console.table && console.error
                        ? console
                        : fallbackConsole(console)
            }
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return safeConsole
            });
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(8),
                noopConsoleStub = {
                    log: __WEBPACK_IMPORTED_MODULE_0__common__.E,
                    error: __WEBPACK_IMPORTED_MODULE_0__common__.E,
                    table: __WEBPACK_IMPORTED_MODULE_0__common__.E
                },
                safeConsole = getSafeConsole()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return StateParams
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                StateParams = function () {
                    function StateParams(params) {
                        void 0 === params && (params = {}),
                        Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(this, params)
                    }
                    return StateParams.prototype.$inherit = function (newParams, $current, $to) {
                        var parentParams,
                            parents = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.f)($current, $to),
                            inherited = {},
                            inheritList = [];
                        for (var i in parents) 
                            if (parents[i] && parents[i].params && (parentParams = Object.keys(parents[i].params), parentParams.length)) 
                                for (var j in parentParams) 
                                    inheritList.indexOf(parentParams[j]) >= 0 || (
                                        inheritList.push(parentParams[j]),
                                        inherited[parentParams[j]] = this[parentParams[j]]
                                    );
                    return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                            {},
                            inherited,
                            newParams
                        )
                    },
                    StateParams
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            var __WEBPACK_IMPORTED_MODULE_0__interface__ = __webpack_require__(251);
            __webpack_require__.d(__webpack_exports__, "e", function () {
                return __WEBPACK_IMPORTED_MODULE_0__interface__.a
            });
            var __WEBPACK_IMPORTED_MODULE_1__resolvable__ = __webpack_require__(111);
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return __WEBPACK_IMPORTED_MODULE_1__resolvable__.a
            }),
            __webpack_require__.d(__webpack_exports__, "d", function () {
                return __WEBPACK_IMPORTED_MODULE_1__resolvable__.b
            });
            var __WEBPACK_IMPORTED_MODULE_2__resolveContext__ = __webpack_require__(112);
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return __WEBPACK_IMPORTED_MODULE_2__resolveContext__.a
            }),
            __webpack_require__.d(__webpack_exports__, "c", function () {
                return __WEBPACK_IMPORTED_MODULE_2__resolveContext__.b
            })
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return resolvePolicies
            });
            var resolvePolicies = {
                when: {
                    LAZY: "LAZY",
                    EAGER: "EAGER"
                },
                async: {
                    WAIT: "WAIT",
                    NOWAIT: "NOWAIT"
                }
            }
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function nameBuilder(state) {
                return state.name
            }
            function selfBuilder(state) {
                return state.self.$$state = function () {
                    return state
                },
                state.self
            }
            function dataBuilder(state) {
                return state.parent && state.parent.data && (
                    state.data = state.self.data = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.A)(
                        state.parent.data,
                        state.data
                    )
                ),
                state.data
            }
            function pathBuilder(state) {
                return state.parent
                    ? state
                        .parent
                        .path
                        .concat(state)
                    : [state]
            }
            function includesBuilder(state) {
                var includes = state.parent
                    ? Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                        {},
                        state.parent.includes
                    )
                    : {};
                return includes[state.name] = !0,
                includes
            }
            function resolvablesBuilder(state) {
                var objects2Tuples = function (resolveObj, resolvePolicies) {
                        return Object
                            .keys(resolveObj || {})
                            .map(function (token) {
                                return {token: token, val: resolveObj[token], deps: void 0, policy: resolvePolicies[token]}
                            })
                    },
                    annotate = function (fn) {
                        var $injector = __WEBPACK_IMPORTED_MODULE_5__common_coreservices__.b.$injector;
                        return fn.$inject || $injector && $injector.annotate(fn, $injector.strictDi) || "deferred"
                    },
                    isResolveLiteral = function (obj) {
                        return !(!obj.token || !obj.resolveFn)
                    },
                    isLikeNg2Provider = function (obj) {
                        return !(
                            !obj.provide && !obj.token || !(obj.useValue || obj.useFactory || obj.useExisting || obj.useClass)
                        )
                    },
                    isTupleFromObj = function (obj) {
                        return !!(
                            obj && obj.val && (Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(
                                obj.val
                            ) || Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.a)(obj.val) || Object(
                                __WEBPACK_IMPORTED_MODULE_1__common_predicates__.d
                            )(obj.val))
                        )
                    },
                    getToken = function (p) {
                        return p.provide || p.token
                    },
                    literal2Resolvable = Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.l)([
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.n)("resolveFn"),
                            function (p) {
                                return new __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__.a(
                                    getToken(p),
                                    p.resolveFn,
                                    p.deps,
                                    p.policy
                                )
                            }
                        ],
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.n)("useFactory"),
                            function (p) {
                                return new __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__.a(
                                    getToken(p),
                                    p.useFactory,
                                    p.deps || p.dependencies,
                                    p.policy
                                )
                            }
                        ],
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.n)("useClass"),
                            function (p) {
                                return new __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__.a(
                                    getToken(p),
                                    function () {
                                        return new p.useClass
                                    },
                                    [],
                                    p.policy
                                )
                            }
                        ],
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.n)("useValue"),
                            function (p) {
                                return new __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__.a(
                                    getToken(p),
                                    function () {
                                        return p.useValue
                                    },
                                    [],
                                    p.policy,
                                    p.useValue
                                )
                            }
                        ],
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.n)("useExisting"),
                            function (p) {
                                return new __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__.a(
                                    getToken(p),
                                    __WEBPACK_IMPORTED_MODULE_0__common_common__.y,
                                    [p.useExisting],
                                    p.policy
                                )
                            }
                        ]
                    ]),
                    tuple2Resolvable = Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.l)([
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.m)(
                                Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.n)(
                                    "val"
                                ),
                                __WEBPACK_IMPORTED_MODULE_1__common_predicates__.l
                            ),
                            function (tuple) {
                                return new __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__.a(
                                    tuple.token,
                                    __WEBPACK_IMPORTED_MODULE_0__common_common__.y,
                                    [tuple.val],
                                    tuple.policy
                                )
                            }
                        ],
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.m)(
                                Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.n)(
                                    "val"
                                ),
                                __WEBPACK_IMPORTED_MODULE_1__common_predicates__.a
                            ),
                            function (tuple) {
                                return new __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__.a(
                                    tuple.token,
                                    Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.P)(
                                        tuple.val
                                    ),
                                    tuple.val.slice(0, -1),
                                    tuple.policy
                                )
                            }
                        ],
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.m)(
                                Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.n)(
                                    "val"
                                ),
                                __WEBPACK_IMPORTED_MODULE_1__common_predicates__.d
                            ),
                            function (tuple) {
                                return new __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__.a(
                                    tuple.token,
                                    tuple.val,
                                    annotate(tuple.val),
                                    tuple.policy
                                )
                            }
                        ]
                    ]),
                    item2Resolvable = Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.l)([
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.h)(
                                __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__.a
                            ),
                            function (r) {
                                return r
                            }
                        ],
                        [
                            isResolveLiteral, literal2Resolvable
                        ],
                        [
                            isLikeNg2Provider, literal2Resolvable
                        ],
                        [
                            isTupleFromObj, tuple2Resolvable
                        ],
                        [
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.p)(!0),
                            function (obj) {
                                throw new Error(
                                    "Invalid resolve value: " + Object(__WEBPACK_IMPORTED_MODULE_2__common_strings__.m)(
                                        obj
                                    )
                                )
                            }
                        ]
                    ]),
                    decl = state.resolve;
                return (
                    Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.a)(decl)
                        ? decl
                        : objects2Tuples(decl, state.resolvePolicy || {})
                ).map(item2Resolvable)
            }
            __webpack_exports__.b = resolvablesBuilder,
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return StateBuilder
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_2__common_strings__ = __webpack_require__(40),
                __WEBPACK_IMPORTED_MODULE_3__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_4__resolve_resolvable__ = __webpack_require__(111),
                __WEBPACK_IMPORTED_MODULE_5__common_coreservices__ = __webpack_require__(20),
                parseUrl = function (url) {
                    if (!Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(url)) 
                        return !1;
                    var root = "^" === url.charAt(0);
                    return {
                        val: root
                            ? url.substring(1)
                            : url,
                        root: root
                    }
                },
                getUrlBuilder = function ($urlMatcherFactoryProvider, root) {
                    return function urlBuilder(stateObject) {
                        var stateDec = stateObject.self;
                        if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\.\*\*$/)) {
                            var newStateDec = {};
                            Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.m)(stateDec, newStateDec),
                            newStateDec.url += "{remainder:any}",
                            stateDec = newStateDec
                        }
                        var parent = stateObject.parent,
                            parsed = parseUrl(stateDec.url),
                            url = parsed
                                ? $urlMatcherFactoryProvider.compile(parsed.val, {state: stateDec})
                                : stateDec.url;
                        if (!url) 
                            return null;
                        if (!$urlMatcherFactoryProvider.isMatcher(url)) 
                            throw new Error("Invalid url '" + url + "' in state '" + stateObject + "'");
                        return parsed && parsed.root
                            ? url
                            : (parent && parent.navigable || root())
                                .url
                                .append(url)
                    }
                },
                getNavigableBuilder = function (isRoot) {
                    return function navigableBuilder(state) {
                        return !isRoot(state) && state.url
                            ? state
                            : state.parent
                                ? state.parent.navigable
                                : null
                    }
                },
                getParamsBuilder = function (paramFactory) {
                    return function paramsBuilder(state) {
                        var makeConfigParam = function (config, id) {
                                return paramFactory.fromConfig(id, null, state.self)
                            },
                            urlParams = state.url && state
                                .url
                                .parameters({
                                    inherit: !1
                                }) || [],
                            nonUrlParams = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.U)(
                                Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.C)(
                                    Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.F)(
                                        state.params || {},
                                        urlParams.map(Object(__WEBPACK_IMPORTED_MODULE_3__common_hof__.n)(
                                            "id"
                                        ))
                                    ),
                                    makeConfigParam
                                )
                            );
                        return urlParams
                            .concat(nonUrlParams)
                            .map(function (p) {
                                return [p.id, p]
                            })
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.h, {})
                    }
                },
                StateBuilder = function () {
                    function StateBuilder(matcher, urlMatcherFactory) {
                        function parentBuilder(state) {
                            return isRoot(state)
                                ? null
                                : matcher.find(self.parentName(state)) || root()
                        }
                        this.matcher = matcher;
                        var self = this,
                            root = function () {
                                return matcher.find("")
                            },
                            isRoot = function (state) {
                                return "" === state.name
                            };
                        this.builders = {
                            name: [nameBuilder],
                            self: [selfBuilder],
                            parent: [parentBuilder],
                            data: [dataBuilder],
                            url: [getUrlBuilder(urlMatcherFactory, root)],
                            navigable: [getNavigableBuilder(isRoot)],
                            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],
                            views: [],
                            path: [pathBuilder],
                            includes: [includesBuilder],
                            resolvables: [resolvablesBuilder]
                        }
                    }
                    return StateBuilder.prototype.builder = function (name, fn) {
                        var builders = this.builders,
                            array = builders[name] || [];
                        return Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(name) && !Object(
                            __WEBPACK_IMPORTED_MODULE_1__common_predicates__.c
                        )(fn)
                            ? array.length > 1
                                ? array
                                : array[0]
                            : Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(name) && Object(
                                __WEBPACK_IMPORTED_MODULE_1__common_predicates__.d
                            )(fn)
                                ? (builders[name] = array, builders[name].push(fn), function () {
                                    return builders[name].splice(builders[name].indexOf(fn, 1)) && null
                                })
                                : void 0
                    },
                    StateBuilder.prototype.build = function (state) {
                        var _a = this,
                            matcher = _a.matcher,
                            builders = _a.builders,
                            parent = this.parentName(state);
                        if (parent && !matcher.find(parent, void 0, !1)) 
                            return null;
                        for (var key in builders) 
                            if (builders.hasOwnProperty(key)) {
                                var chain = builders[key].reduce(function (parentFn, step) {
                                    return function (_state) {
                                        return step(_state, parentFn)
                                    }
                                }, __WEBPACK_IMPORTED_MODULE_0__common_common__.E);
                                state[key] = chain(state)
                            }
                        return state
                    },
                    StateBuilder.prototype.parentName = function (state) {
                        var name = state.name || "",
                            segments = name.split(".");
                        if ("**" === segments.pop() && segments.pop(), segments.length) {
                            if (state.parent) 
                                throw new Error(
                                    "States that specify the 'parent:' property should not have a '.' in their name" +
                                " (" + name + ")"
                                );
                            return segments.join(".")
                        }
                        return state.parent
                            ? Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(state.parent)
                                ? state.parent
                                : state.parent.name
                            : ""
                    },
                    StateBuilder.prototype.name = function (state) {
                        var name = state.name;
                        if (-1 !== name.indexOf(".") || !state.parent) 
                            return name;
                        var parentName = Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(
                            state.parent
                        )
                            ? state.parent
                            : state.parent.name;
                        return parentName
                            ? parentName + "." + name
                            : name
                    },
                    StateBuilder
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return StateMatcher
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_1__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_2__common_safeConsole__ = __webpack_require__(248),
                StateMatcher = function () {
                    function StateMatcher(_states) {
                        this._states = _states
                    }
                    return StateMatcher.prototype.isRelative = function (stateName) {
                        return stateName = stateName || "",
                        0 === stateName.indexOf(".") || 0 === stateName.indexOf("^")
                    },
                    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {
                        if (
                            void 0 === matchGlob && (matchGlob = !0),
                            stateOrName || "" === stateOrName
                        ) {
                            var isStr = Object(__WEBPACK_IMPORTED_MODULE_0__common_predicates__.l)(
                                    stateOrName
                                ),
                                name = isStr
                                    ? stateOrName
                                    : stateOrName.name;
                            this.isRelative(name) && (name = this.resolvePath(name, base));
                            var state = this._states[name];
                            if (state && (isStr || !(isStr || state !== stateOrName && state.self !== stateOrName))) 
                                return state;
                            if (isStr && matchGlob) {
                                var _states = Object(__WEBPACK_IMPORTED_MODULE_1__common_common__.U)(
                                        this._states
                                    ),
                                    matches = _states.filter(function (_state) {
                                        return _state.__stateObjectCache.nameGlob && _state
                                            .__stateObjectCache
                                            .nameGlob
                                            .matches(name)
                                    });
                                return matches.length > 1 && __WEBPACK_IMPORTED_MODULE_2__common_safeConsole__
                                    .a
                                    .error(
                                        "stateMatcher.find: Found multiple matches for " + name + " using glob: ",
                                        matches.map(function (match) {
                                            return match.name
                                        })
                                    ),
                                matches[0]
                            }
                        }
                    },
                    StateMatcher.prototype.resolvePath = function (name, base) {
                        if (!base) 
                            throw new Error("No reference point given for path '" + name + "'");
                        for (
                            var baseState = this.find(base),
                            splitName = name.split("."),
                            pathLength = splitName.length,
                            i = 0,
                            current = baseState;
                            i < pathLength;
                            i++
                        ) 
                            if ("" !== splitName[i] || 0 !== i) {
                                if ("^" !== splitName[i]) 
                                    break;
                                if (!current.parent) 
                                    throw new Error(
                                        "Path '" + name + "' not valid for state '" + baseState.name + "'"
                                    );
                                current = current.parent
                            }
                        else 
                            current = baseState;
                        var relName = splitName
                            .slice(i)
                            .join(".");
                        return current.name + (
                            current.name && relName
                                ? "."
                                : ""
                        ) + relName
                    },
                    StateMatcher
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return StateQueueManager
            });
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17),
                __WEBPACK_IMPORTED_MODULE_1__stateObject__ = __webpack_require__(162),
                StateQueueManager = function () {
                    function StateQueueManager(router, states, builder, listeners) {
                        this.router = router,
                        this.states = states,
                        this.builder = builder,
                        this.listeners = listeners,
                        this.queue = []
                    }
                    return StateQueueManager.prototype.dispose = function () {
                        this.queue = []
                    },
                    StateQueueManager.prototype.register = function (stateDecl) {
                        var queue = this.queue,
                            state = __WEBPACK_IMPORTED_MODULE_1__stateObject__
                                .a
                                .create(stateDecl),
                            name = state.name;
                        if (!Object(__WEBPACK_IMPORTED_MODULE_0__common__._2)(name)) 
                            throw new Error("State must have a valid name");
                        if (this.states.hasOwnProperty(name) || Object(__WEBPACK_IMPORTED_MODULE_0__common__.N)(
                            queue.map(Object(__WEBPACK_IMPORTED_MODULE_0__common__._22)(
                                "name"
                            )),
                            name
                        )) 
                            throw new Error("State '" + name + "' is already defined");
                        return queue.push(state),
                        this.flush(),
                        state
                    },
                    StateQueueManager.prototype.flush = function () {
                        for (
                            var _this = this,
                            _a = this,
                            queue = _a.queue,
                            states = _a.states,
                            builder = _a.builder,
                            registered = [],
                            orphans = [],
                            previousQueueLength = {},
                            getState = function (name) {
                                return _this
                                    .states
                                    .hasOwnProperty(name) && _this
                                    .states[name]
                            },
                            notifyListeners = function () {
                                registered.length && _this
                                    .listeners
                                    .forEach(function (listener) {
                                        return listener("registered", registered.map(function (s) {
                                            return s.self
                                        }))
                                    })
                            };
                            queue.length > 0;
                        ) {
                            var state = queue.shift(),
                                name_1 = state.name,
                                result = builder.build(state),
                                orphanIdx = orphans.indexOf(state);
                            if (result) {
                                var existingState = getState(name_1);
                                if (existingState && existingState.name === name_1) 
                                    throw new Error("State '" + name_1 + "' is already defined");
                                var existingFutureState = getState(name_1 + ".**");
                                existingFutureState && this
                                    .router
                                    .stateRegistry
                                    .deregister(existingFutureState),
                                states[name_1] = state,
                                this.attachRoute(state),
                                orphanIdx >= 0 && orphans.splice(orphanIdx, 1),
                                registered.push(state)
                            } else {
                                var prev = previousQueueLength[name_1];
                                if (
                                    previousQueueLength[name_1] = queue.length,
                                    orphanIdx >= 0 && prev === queue.length
                                ) 
                                    return queue.push(state),
                                    notifyListeners(),
                                    states;
                                orphanIdx < 0 && orphans.push(state),
                                queue.push(state)
                            }
                        }
                        return notifyListeners(),
                        states
                    },
                    StateQueueManager.prototype.attachRoute = function (state) {
                        if (!state.abstract && state.url) {
                            var rulesApi = this.router.urlService.rules;
                            rulesApi.rule(rulesApi.urlRuleFactory.create(state))
                        }
                    },
                    StateQueueManager
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return StateRegistry
            });
            var __WEBPACK_IMPORTED_MODULE_0__stateMatcher__ = __webpack_require__(253),
                __WEBPACK_IMPORTED_MODULE_1__stateBuilder__ = __webpack_require__(252),
                __WEBPACK_IMPORTED_MODULE_2__stateQueueManager__ = __webpack_require__(254),
                __WEBPACK_IMPORTED_MODULE_3__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_4__common_hof__ = __webpack_require__(14),
                StateRegistry = function () {
                    function StateRegistry(router) {
                        this.router = router,
                        this.states = {},
                        this.listeners = [],
                        this.matcher = new __WEBPACK_IMPORTED_MODULE_0__stateMatcher__.a(this.states),
                        this.builder = new __WEBPACK_IMPORTED_MODULE_1__stateBuilder__.a(
                            this.matcher,
                            router.urlMatcherFactory
                        ),
                        this.stateQueue = new __WEBPACK_IMPORTED_MODULE_2__stateQueueManager__.a(
                            router,
                            this.states,
                            this.builder,
                            this.listeners
                        ),
                        this._registerRoot()
                    }
                    return StateRegistry.prototype._registerRoot = function () {
                        var rootStateDef = {
                            name: "",
                            url: "^",
                            views: null,
                            params: {
                                "#": {
                                    value: null,
                                    type: "hash",
                                    dynamic: !0
                                }
                            },
                            abstract: !0
                        };
                        (this._root = this.stateQueue.register(rootStateDef)).navigable = null
                    },
                    StateRegistry.prototype.dispose = function () {
                        var _this = this;
                        this
                            .stateQueue
                            .dispose(),
                        this.listeners = [],
                        this
                            .get()
                            .forEach(function (state) {
                                return _this.get(state) && _this.deregister(state)
                            })
                    },
                    StateRegistry.prototype.onStatesChanged = function (listener) {
                        return this
                            .listeners
                            .push(listener),
                        function deregisterListener() {
                            Object(__WEBPACK_IMPORTED_MODULE_3__common_common__.L)(this.listeners)(
                                listener
                            )
                        }.bind(this)
                    },
                    StateRegistry.prototype.root = function () {
                        return this._root
                    },
                    StateRegistry.prototype.register = function (stateDefinition) {
                        return this
                            .stateQueue
                            .register(stateDefinition)
                    },
                    StateRegistry.prototype._deregisterTree = function (state) {
                        var _this = this,
                            all = this
                                .get()
                                .map(function (s) {
                                    return s.$$state()
                                }),
                            getChildren = function (states) {
                                var _children = all.filter(function (s) {
                                    return -1 !== states.indexOf(s.parent)
                                });
                                return 0 === _children.length
                                    ? _children
                                    : _children.concat(getChildren(_children))
                            },
                            children = getChildren([state]),
                            deregistered = [state]
                                .concat(children)
                                .reverse();
                        return deregistered.forEach(function (_state) {
                            var rulesApi = _this.router.urlService.rules;
                            rulesApi
                                .rules()
                                .filter(Object(__WEBPACK_IMPORTED_MODULE_4__common_hof__.o)("state", _state))
                                .forEach(function (rule) {
                                    return rulesApi.removeRule(rule)
                                }),
                            delete _this.states[_state.name]
                        }),
                        deregistered
                    },
                    StateRegistry.prototype.deregister = function (stateOrName) {
                        var _state = this.get(stateOrName);
                        if (!_state) 
                            throw new Error("Can't deregister state; not found: " + stateOrName);
                        var deregisteredStates = this._deregisterTree(_state.$$state());
                        return this
                            .listeners
                            .forEach(function (listener) {
                                return listener("deregistered", deregisteredStates.map(function (s) {
                                    return s.self
                                }))
                            }),
                        deregisteredStates
                    },
                    StateRegistry.prototype.get = function (stateOrName, base) {
                        var _this = this;
                        if (0 === arguments.length) 
                            return Object
                                .keys(this.states)
                                .map(function (name) {
                                    return _this
                                        .states[name]
                                        .self
                                });
                        var found = this
                            .matcher
                            .find(stateOrName, base);
                        return found && found.self || null
                    },
                    StateRegistry.prototype.decorator = function (property, builderFunction) {
                        return this
                            .builder
                            .builder(property, builderFunction)
                    },
                    StateRegistry
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return StateService
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_2__common_queue__ = __webpack_require__(157),
                __WEBPACK_IMPORTED_MODULE_3__common_coreservices__ = __webpack_require__(20),
                __WEBPACK_IMPORTED_MODULE_4__path_pathUtils__ = __webpack_require__(110),
                __WEBPACK_IMPORTED_MODULE_5__path_pathNode__ = __webpack_require__(160),
                __WEBPACK_IMPORTED_MODULE_6__transition_transitionService__ = __webpack_require__(
                    163
                ),
                __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__ = __webpack_require__(
                    69
                ),
                __WEBPACK_IMPORTED_MODULE_8__targetState__ = __webpack_require__(82),
                __WEBPACK_IMPORTED_MODULE_9__params_param__ = __webpack_require__(81),
                __WEBPACK_IMPORTED_MODULE_10__common_glob__ = __webpack_require__(156),
                __WEBPACK_IMPORTED_MODULE_11__resolve_resolveContext__ = __webpack_require__(
                    112
                ),
                __WEBPACK_IMPORTED_MODULE_12__hooks_lazyLoad__ = __webpack_require__(266),
                __WEBPACK_IMPORTED_MODULE_13__common_hof__ = __webpack_require__(14),
                StateService = function () {
                    function StateService(router) {
                        this.router = router,
                        this.invalidCallbacks = [],
                        this._defaultErrorHandler = function $defaultErrorHandler($error$) {
                            $error$ instanceof Error && $error$.stack
                                ? (console.error($error$), console.error($error$.stack))
                                : $error$ instanceof __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__.b
                                    ? (
                                        console.error($error$.toString()),
                                        $error$.detail && $error$.detail.stack && console.error($error$.detail.stack)
                                    )
                                    : console.error($error$)
                        };
                        var getters = [
                                "current", "$current", "params", "transition"
                            ],
                            boundFns = Object
                                .keys(StateService.prototype)
                                .filter(Object(__WEBPACK_IMPORTED_MODULE_13__common_hof__.i)(
                                    Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.z)(
                                        getters
                                    )
                                ));
                        Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.n)(
                            Object(__WEBPACK_IMPORTED_MODULE_13__common_hof__.p)(
                                StateService.prototype
                            ),
                            this,
                            Object(__WEBPACK_IMPORTED_MODULE_13__common_hof__.p)(this),
                            boundFns
                        )
                    }
                    return Object.defineProperty(StateService.prototype, "transition", {
                        get: function () {
                            return this.router.globals.transition
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    Object.defineProperty(StateService.prototype, "params", {
                        get: function () {
                            return this.router.globals.params
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    Object.defineProperty(StateService.prototype, "current", {
                        get: function () {
                            return this.router.globals.current
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    Object.defineProperty(StateService.prototype, "$current", {
                        get: function () {
                            return this.router.globals.$current
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    StateService.prototype.dispose = function () {
                        this.defaultErrorHandler(__WEBPACK_IMPORTED_MODULE_0__common_common__.E),
                        this.invalidCallbacks = []
                    },
                    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {
                        function invokeNextCallback() {
                            var nextCallback = callbackQueue.dequeue();
                            return void 0 === nextCallback
                                ? __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__
                                    .b
                                    .invalid(toState.error())
                                    .toPromise()
                                : __WEBPACK_IMPORTED_MODULE_3__common_coreservices__
                                    .b
                                    .$q
                                    .when(nextCallback(toState, fromState, injector))
                                    .then(checkForRedirect)
                                    .then(function (result) {
                                        return result || invokeNextCallback()
                                    })
                        }
                        var _this = this,
                            fromState = __WEBPACK_IMPORTED_MODULE_4__path_pathUtils__
                                .a
                                .makeTargetState(this.router.stateRegistry, fromPath),
                            globals = this.router.globals,
                            latestThing = function () {
                                return globals
                                    .transitionHistory
                                    .peekTail()
                            },
                            latest = latestThing(),
                            callbackQueue = new __WEBPACK_IMPORTED_MODULE_2__common_queue__.a(
                                this.invalidCallbacks.slice()
                            ),
                            injector = new __WEBPACK_IMPORTED_MODULE_11__resolve_resolveContext__
                                .b(
                                    fromPath
                                )
                                .injector(),
                            checkForRedirect = function (result) {
                                if (result instanceof __WEBPACK_IMPORTED_MODULE_8__targetState__.a) {
                                    var target = result;
                                    return target = _this.target(
                                        target.identifier(),
                                        target.params(),
                                        target.options()
                                    ),
                                    target.valid()
                                        ? latestThing() !== latest
                                            ? __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__
                                                .b
                                                .superseded()
                                                .toPromise()
                                            : _this.transitionTo(target.identifier(), target.params(), target.options())
                                        : __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__
                                            .b
                                            .invalid(target.error())
                                            .toPromise()
                                }
                            };
                        return invokeNextCallback()
                    },
                    StateService.prototype.onInvalid = function (callback) {
                        return this
                            .invalidCallbacks
                            .push(callback),
                        function deregisterListener() {
                            Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.L)(this.invalidCallbacks)(
                                callback
                            )
                        }.bind(this)
                    },
                    StateService.prototype.reload = function (reloadState) {
                        return this.transitionTo(this.current, this.params, {
                            reload: !Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.c)(
                                reloadState
                            ) || reloadState,
                            inherit: !1,
                            notify: !1
                        })
                    },
                    StateService.prototype.go = function (to, params, options) {
                        var defautGoOpts = {
                                relative: this.$current,
                                inherit: !0
                            },
                            transOpts = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.o)(
                                options,
                                defautGoOpts,
                                __WEBPACK_IMPORTED_MODULE_6__transition_transitionService__.b
                            );
                        return this.transitionTo(to, params, transOpts)
                    },
                    StateService.prototype.target = function (identifier, params, options) {
                        if (
                            void 0 === options && (options = {}),
                            Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.i)(
                                options.reload
                            ) && !options.reload.name
                        ) 
                            throw new Error("Invalid reload state object");
                        var reg = this.router.stateRegistry;
                        if (
                            options.reloadState = !0 === options.reload
                                ? reg.root()
                                : reg.matcher.find(options.reload, options.relative),
                            options.reload && !options.reloadState
                        ) 
                            throw new Error("No such reload state '" + (
                                Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(options.reload)
                                    ? options.reload
                                    : options.reload.name
                            ) + "'");
                        return new __WEBPACK_IMPORTED_MODULE_8__targetState__.a(
                            this.router.stateRegistry,
                            identifier,
                            params,
                            options
                        )
                    },
                    StateService.prototype.getCurrentPath = function () {
                        var _this = this,
                            globals = this.router.globals,
                            latestSuccess = globals
                                .successfulTransitions
                                .peekTail(),
                            rootPath = function () {
                                return [new __WEBPACK_IMPORTED_MODULE_5__path_pathNode__.a(
                                        _this.router.stateRegistry.root()
                                    )]
                            };
                        return latestSuccess
                            ? latestSuccess
                                .treeChanges()
                                .to
                            : rootPath()
                    },
                    StateService.prototype.transitionTo = function (to, toParams, options) {
                        var _this = this;
                        void 0 === toParams && (toParams = {}),
                        void 0 === options && (options = {});
                        var router = this.router,
                            globals = router.globals;
                        options = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.o)(
                            options,
                            __WEBPACK_IMPORTED_MODULE_6__transition_transitionService__.b
                        );
                        var getCurrent = function () {
                            return globals.transition
                        };
                        options = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                            options,
                            {current: getCurrent}
                        );
                        var ref = this.target(to, toParams, options),
                            currentPath = this.getCurrentPath();
                        if (!ref.exists()) 
                            return this._handleInvalidTargetState(currentPath, ref);
                        if (!ref.valid()) 
                            return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.O)(ref.error());
                        if (!1 === options.supercede && getCurrent()) 
                            return __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__
                                .b
                                .ignored(
                                    "Another transition is in progress and supercede has been set to false in Trans" +
                                "itionOptions for the transition. So the transition was ignored in favour of th" +
                                "e existing one in progress."
                                )
                                .toPromise();
                        var rejectedTransitionHandler = function (trans) {
                                return function (error) {
                                    if (error instanceof __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__.b) {
                                        var isLatest = router.globals.lastStartedTransitionId <= trans.$id;
                                        if (error.type === __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__.a.IGNORED) 
                                            return isLatest && router
                                                .urlRouter
                                                .update(),
                                            __WEBPACK_IMPORTED_MODULE_3__common_coreservices__
                                                .b
                                                .$q
                                                .when(globals.current);
                                        var detail = error.detail;
                                        if (error.type === __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__.a.SUPERSEDED && error.redirected && detail instanceof __WEBPACK_IMPORTED_MODULE_8__targetState__.a) {
                                            var redirect = trans.redirect(detail);
                                            return redirect
                                                .run()
                                                .catch(rejectedTransitionHandler(redirect))
                                            }
                                        if (error.type === __WEBPACK_IMPORTED_MODULE_7__transition_rejectFactory__.a.ABORTED) 
                                            return isLatest && router
                                                .urlRouter
                                                .update(),
                                            __WEBPACK_IMPORTED_MODULE_3__common_coreservices__
                                                .b
                                                .$q
                                                .reject(error)
                                        }
                                    return _this.defaultErrorHandler()(error),
                                    __WEBPACK_IMPORTED_MODULE_3__common_coreservices__
                                        .b
                                        .$q
                                        .reject(error)
                                }
                            },
                            transition = this
                                .router
                                .transitionService
                                .create(currentPath, ref),
                            transitionToPromise = transition
                                .run()
                                .catch(rejectedTransitionHandler(transition));
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.N)(
                            transitionToPromise
                        ),
                        Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                            transitionToPromise,
                            {transition: transition}
                        )
                    },
                    StateService.prototype.is = function (stateOrName, params, options) {
                        options = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.o)(
                            options,
                            {relative: this.$current}
                        );
                        var state = this
                            .router
                            .stateRegistry
                            .matcher
                            .find(stateOrName, options.relative);
                        if (Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.c)(state)) {
                            if (this.$current !== state) 
                                return !1;
                            if (!params) 
                                return !0;
                            var schema = state.parameters({
                                inherit: !0,
                                matchingKeys: params
                            });
                            return __WEBPACK_IMPORTED_MODULE_9__params_param__
                                .b
                                .equals(
                                    schema,
                                    __WEBPACK_IMPORTED_MODULE_9__params_param__.b.values(schema, params),
                                    this.params
                                )
                        }
                    },
                    StateService.prototype.includes = function (stateOrName, params, options) {
                        options = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.o)(
                            options,
                            {relative: this.$current}
                        );
                        var glob = Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.l)(
                            stateOrName
                        ) && __WEBPACK_IMPORTED_MODULE_10__common_glob__
                            .a
                            .fromString(stateOrName);
                        if (glob) {
                            if (!glob.matches(this.$current.name)) 
                                return !1;
                            stateOrName = this.$current.name
                        }
                        var state = this
                                .router
                                .stateRegistry
                                .matcher
                                .find(stateOrName, options.relative),
                            include = this.$current.includes;
                        if (Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.c)(state)) {
                            if (!Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.c)(
                                include[state.name]
                            )) 
                                return !1;
                            if (!params) 
                                return !0;
                            var schema = state.parameters({
                                inherit: !0,
                                matchingKeys: params
                            });
                            return __WEBPACK_IMPORTED_MODULE_9__params_param__
                                .b
                                .equals(
                                    schema,
                                    __WEBPACK_IMPORTED_MODULE_9__params_param__.b.values(schema, params),
                                    this.params
                                )
                        }
                    },
                    StateService.prototype.href = function (stateOrName, params, options) {
                        var defaultHrefOpts = {
                            lossy: !0,
                            inherit: !0,
                            absolute: !1,
                            relative: this.$current
                        };
                        options = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.o)(
                            options,
                            defaultHrefOpts
                        ),
                        params = params || {};
                        var state = this
                            .router
                            .stateRegistry
                            .matcher
                            .find(stateOrName, options.relative);
                        if (!Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.c)(state)) 
                            return null;
                        options.inherit && (
                            params = this.params.$inherit(params, this.$current, state)
                        );
                        var nav = state && options.lossy
                            ? state.navigable
                            : state;
                        return nav && void 0 !== nav.url && null !== nav.url
                            ? this
                                .router
                                .urlRouter
                                .href(nav.url, params, {absolute: options.absolute})
                            : null
                    },
                    StateService.prototype.defaultErrorHandler = function (handler) {
                        return this._defaultErrorHandler = handler || this._defaultErrorHandler
                    },
                    StateService.prototype.get = function (stateOrName, base) {
                        var reg = this.router.stateRegistry;
                        return 0 === arguments.length
                            ? reg.get()
                            : reg.get(stateOrName, base || this.$current)
                    },
                    StateService.prototype.lazyLoad = function (stateOrName, transition) {
                        var state = this.get(stateOrName);
                        if (!state || !state.lazyLoad) 
                            throw new Error("Can not lazy load " + stateOrName);
                        var currentPath = this.getCurrentPath(),
                            target = __WEBPACK_IMPORTED_MODULE_4__path_pathUtils__
                                .a
                                .makeTargetState(this.router.stateRegistry, currentPath);
                        return transition = transition || this
                            .router
                            .transitionService
                            .create(currentPath, target),
                        Object(__WEBPACK_IMPORTED_MODULE_12__hooks_lazyLoad__.a)(transition, state)
                    },
                    StateService
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function tupleSort(reverseDepthSort) {
                return void 0 === reverseDepthSort && (reverseDepthSort = !1),
                function nodeDepthThenPriority(l, r) {
                    var factor = reverseDepthSort
                            ? -1
                            : 1,
                        depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;
                    return 0 !== depthDelta
                        ? depthDelta
                        : r.hook.priority - l.hook.priority
                }
            }
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return HookBuilder
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_2__interface__ = __webpack_require__(70),
                __WEBPACK_IMPORTED_MODULE_3__transitionHook__ = __webpack_require__(83),
                HookBuilder = function () {
                    function HookBuilder(transition) {
                        this.transition = transition
                    }
                    return HookBuilder.prototype.buildHooksForPhase = function (phase) {
                        var _this = this;
                        return this
                            .transition
                            .router
                            .transitionService
                            ._pluginapi
                            ._getEvents(phase)
                            .map(function (type) {
                                return _this.buildHooks(type)
                            })
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                            .filter(__WEBPACK_IMPORTED_MODULE_0__common_common__.y)
                    },
                    HookBuilder.prototype.buildHooks = function (hookType) {
                        var transition = this.transition,
                            treeChanges = transition.treeChanges(),
                            matchingHooks = this.getMatchingHooks(hookType, treeChanges, transition);
                        if (!matchingHooks) 
                            return [];
                        var baseHookOptions = {
                                transition: transition,
                                current: transition
                                    .options()
                                    .current
                            },
                            makeTransitionHooks = function (hook) {
                                return hook
                                    .matches(treeChanges, transition)[hookType.criteriaMatchPath.name]
                                    .map(function (node) {
                                        var _options = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)({
                                                bind: hook.bind,
                                                traceData: {
                                                    hookType: hookType.name,
                                                    context: node
                                                }
                                            }, baseHookOptions),
                                            state = hookType.criteriaMatchPath.scope === __WEBPACK_IMPORTED_MODULE_2__interface__.b.STATE
                                                ? node.state.self
                                                : null,
                                            transitionHook = new __WEBPACK_IMPORTED_MODULE_3__transitionHook__.a(
                                                transition,
                                                state,
                                                hook,
                                                _options
                                            );
                                        return {hook: hook, node: node, transitionHook: transitionHook}
                                    })
                            };
                        return matchingHooks
                            .map(makeTransitionHooks)
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                            .sort(tupleSort(hookType.reverseSort))
                            .map(function (tuple) {
                                return tuple.transitionHook
                            })
                    },
                    HookBuilder.prototype.getMatchingHooks = function (
                        hookType,
                        treeChanges,
                        transition
                    ) {
                        var isCreate = hookType.hookPhase === __WEBPACK_IMPORTED_MODULE_2__interface__.a.CREATE,
                            $transitions = this.transition.router.transitionService;
                        return (
                            isCreate
                                ? [$transitions]
                                : [this.transition, $transitions]
                        )
                            .map(function (reg) {
                                return reg.getHooks(hookType.name)
                            })
                            .filter(Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.l)(
                                __WEBPACK_IMPORTED_MODULE_1__common_predicates__.a,
                                "broken event named: " + hookType.name
                            ))
                            .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.T, [])
                            .filter(function (hook) {
                                return hook.matches(treeChanges, transition)
                            })
                    },
                    HookBuilder
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return UIRouter
            });
            var __WEBPACK_IMPORTED_MODULE_0__url_urlMatcherFactory__ = __webpack_require__(
                    259
                ),
                __WEBPACK_IMPORTED_MODULE_1__url_urlRouter__ = __webpack_require__(260),
                __WEBPACK_IMPORTED_MODULE_2__transition_transitionService__ = __webpack_require__(
                    163
                ),
                __WEBPACK_IMPORTED_MODULE_3__view_view__ = __webpack_require__(261),
                __WEBPACK_IMPORTED_MODULE_4__state_stateRegistry__ = __webpack_require__(255),
                __WEBPACK_IMPORTED_MODULE_5__state_stateService__ = __webpack_require__(256),
                __WEBPACK_IMPORTED_MODULE_6__globals__ = __webpack_require__(262),
                __WEBPACK_IMPORTED_MODULE_7__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_8__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_9__url_urlService__ = __webpack_require__(263),
                __WEBPACK_IMPORTED_MODULE_10__common_trace__ = __webpack_require__(47),
                __WEBPACK_IMPORTED_MODULE_11__common__ = __webpack_require__(17),
                _routerInstance = 0,
                locSvcFns = [
                    "url", "path", "search", "hash", "onChange"
                ],
                locCfgFns = [
                    "port",
                    "protocol",
                    "host",
                    "baseHref",
                    "html5Mode",
                    "hashPrefix"
                ],
                locationServiceStub = Object(__WEBPACK_IMPORTED_MODULE_11__common__._6)(
                    "LocationServices",
                    locSvcFns
                ),
                locationConfigStub = Object(__WEBPACK_IMPORTED_MODULE_11__common__._6)(
                    "LocationConfig",
                    locCfgFns
                ),
                UIRouter = function () {
                    function UIRouter(locationService, locationConfig) {
                        void 0 === locationService && (locationService = locationServiceStub),
                        void 0 === locationConfig && (locationConfig = locationConfigStub),
                        this.locationService = locationService,
                        this.locationConfig = locationConfig,
                        this.$id = _routerInstance++,
                        this._disposed = !1,
                        this._disposables = [],
                        this.trace = __WEBPACK_IMPORTED_MODULE_10__common_trace__.c,
                        this.viewService = new __WEBPACK_IMPORTED_MODULE_3__view_view__.a(this),
                        this.globals = new __WEBPACK_IMPORTED_MODULE_6__globals__.a,
                        this.transitionService = new __WEBPACK_IMPORTED_MODULE_2__transition_transitionService__.a(
                            this
                        ),
                        this.urlMatcherFactory = new __WEBPACK_IMPORTED_MODULE_0__url_urlMatcherFactory__.b(
                            this
                        ),
                        this.urlRouter = new __WEBPACK_IMPORTED_MODULE_1__url_urlRouter__.a(this),
                        this.urlService = new __WEBPACK_IMPORTED_MODULE_9__url_urlService__.a(this),
                        this.stateRegistry = new __WEBPACK_IMPORTED_MODULE_4__state_stateRegistry__.a(
                            this
                        ),
                        this.stateService = new __WEBPACK_IMPORTED_MODULE_5__state_stateService__.a(
                            this
                        ),
                        this._plugins = {},
                        this
                            .viewService
                            ._pluginapi
                            ._rootViewContext(this.stateRegistry.root()),
                        this.globals.$current = this
                            .stateRegistry
                            .root(),
                        this.globals.current = this.globals.$current.self,
                        this.disposable(this.globals),
                        this.disposable(this.stateService),
                        this.disposable(this.stateRegistry),
                        this.disposable(this.transitionService),
                        this.disposable(this.urlService),
                        this.disposable(locationService),
                        this.disposable(locationConfig)
                    }
                    return UIRouter.prototype.disposable = function (disposable) {
                        this
                            ._disposables
                            .push(disposable)
                    },
                    UIRouter.prototype.dispose = function (disposable) {
                        var _this = this;
                        if (disposable && Object(__WEBPACK_IMPORTED_MODULE_8__common_predicates__.d)(
                            disposable.dispose
                        )) 
                            return void disposable.dispose(this);
                        this._disposed = !0,
                        this
                            ._disposables
                            .slice()
                            .forEach(function (d) {
                                try {
                                    "function" == typeof d.dispose && d.dispose(_this),
                                    Object(__WEBPACK_IMPORTED_MODULE_7__common_common__.L)(_this._disposables, d)
                                } catch (ignored) {}
                            })
                    },
                    UIRouter.prototype.plugin = function (plugin, options) {
                        void 0 === options && (options = {});
                        var pluginInstance = new plugin(this, options);
                        if (!pluginInstance.name) 
                            throw new Error(
                                "Required property `name` missing on plugin: " + pluginInstance
                            );
                        return this
                            ._disposables
                            .push(pluginInstance),
                        this._plugins[pluginInstance.name] = pluginInstance
                    },
                    UIRouter.prototype.getPlugin = function (pluginName) {
                        return pluginName
                            ? this._plugins[pluginName]
                            : Object(__WEBPACK_IMPORTED_MODULE_7__common_common__.U)(this._plugins)
                    },
                    UIRouter
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return ParamFactory
            }),
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return UrlMatcherFactory
            });
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17),
                __WEBPACK_IMPORTED_MODULE_1__urlMatcher__ = __webpack_require__(113),
                __WEBPACK_IMPORTED_MODULE_2__params__ = __webpack_require__(158),
                __assign = this && this.__assign || function () {
                    return __assign = Object.assign || function (t) {
                        for (var s, i = 1, n = arguments.length; i < n; i++) {
                            s = arguments[i];
                            for (var p in s) 
                                Object
                                    .prototype
                                    .hasOwnProperty
                                    .call(s, p) && (t[p] = s[p])
                            }
                        return t
                    },
                    __assign.apply(this, arguments)
                },
                ParamFactory = function () {
                    function ParamFactory(router) {
                        this.router = router
                    }
                    return ParamFactory.prototype.fromConfig = function (id, type, state) {
                        return new __WEBPACK_IMPORTED_MODULE_2__params__.Param(
                            id,
                            type,
                            __WEBPACK_IMPORTED_MODULE_2__params__.DefType.CONFIG,
                            this.router.urlService.config,
                            state
                        )
                    },
                    ParamFactory.prototype.fromPath = function (id, type, state) {
                        return new __WEBPACK_IMPORTED_MODULE_2__params__.Param(
                            id,
                            type,
                            __WEBPACK_IMPORTED_MODULE_2__params__.DefType.PATH,
                            this.router.urlService.config,
                            state
                        )
                    },
                    ParamFactory.prototype.fromSearch = function (id, type, state) {
                        return new __WEBPACK_IMPORTED_MODULE_2__params__.Param(
                            id,
                            type,
                            __WEBPACK_IMPORTED_MODULE_2__params__.DefType.SEARCH,
                            this.router.urlService.config,
                            state
                        )
                    },
                    ParamFactory
                }(),
                UrlMatcherFactory = function () {
                    function UrlMatcherFactory(router) {
                        var _this = this;
                        this.router = router,
                        this.paramFactory = new ParamFactory(this.router),
                        this.UrlMatcher = __WEBPACK_IMPORTED_MODULE_1__urlMatcher__.a,
                        this.Param = __WEBPACK_IMPORTED_MODULE_2__params__.Param,
                        this.caseInsensitive = function (value) {
                            return _this
                                .router
                                .urlService
                                .config
                                .caseInsensitive(value)
                        },
                        this.defaultSquashPolicy = function (value) {
                            return _this
                                .router
                                .urlService
                                .config
                                .defaultSquashPolicy(value)
                        },
                        this.strictMode = function (value) {
                            return _this
                                .router
                                .urlService
                                .config
                                .strictMode(value)
                        },
                        this.type = function (name, definition, definitionFn) {
                            return _this
                                .router
                                .urlService
                                .config
                                .type(name, definition, definitionFn) || _this
                        }
                    }
                    return UrlMatcherFactory.prototype.compile = function (pattern, config) {
                        var urlConfig = this.router.urlService.config,
                            params = config && !config.state && config.params;
                        config = params
                            ? __assign({
                                state: {
                                    params: params
                                }
                            }, config)
                            : config;
                        var globalConfig = {
                            strict: urlConfig._isStrictMode,
                            caseInsensitive: urlConfig._isCaseInsensitive,
                            decodeParams: urlConfig._decodeParams
                        };
                        return new __WEBPACK_IMPORTED_MODULE_1__urlMatcher__.a(
                            pattern,
                            urlConfig.paramTypes,
                            this.paramFactory,
                            Object(__WEBPACK_IMPORTED_MODULE_0__common__.C)(
                                globalConfig,
                                config
                            )
                        )
                    },
                    UrlMatcherFactory.prototype.isMatcher = function (object) {
                        if (!Object(__WEBPACK_IMPORTED_MODULE_0__common__.Z)(object)) 
                            return !1;
                        var result = !0;
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common__.I)(
                            __WEBPACK_IMPORTED_MODULE_1__urlMatcher__.a.prototype,
                            function (val, name) {
                                Object(__WEBPACK_IMPORTED_MODULE_0__common__.U)(val) && (
                                    result = result && Object(__WEBPACK_IMPORTED_MODULE_0__common__.T)(
                                        object[name]
                                    ) && Object(__WEBPACK_IMPORTED_MODULE_0__common__.U)(object[name])
                                )
                            }
                        ),
                        result
                    },
                    UrlMatcherFactory.prototype.$get = function () {
                        var urlConfig = this.router.urlService.config;
                        return urlConfig.paramTypes.enqueue = !1,
                        urlConfig
                            .paramTypes
                            ._flushTypeQueue(),
                        this
                    },
                    UrlMatcherFactory
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function appendBasePath(url, isHtml5, absolute, baseHref) {
                return "/" === baseHref
                    ? url
                    : isHtml5
                        ? Object(__WEBPACK_IMPORTED_MODULE_0__common__._36)(baseHref) + url
                        : absolute
                            ? baseHref.slice(1) + url
                            : url
            }
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return UrlRouter
            });
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17),
                __WEBPACK_IMPORTED_MODULE_1__urlRule__ = __webpack_require__(166),
                UrlRouter = function () {
                    function UrlRouter(router) {
                        var _this = this;
                        this.router = router,
                        this.sync = function (evt) {
                            return _this
                                .router
                                .urlService
                                .sync(evt)
                        },
                        this.listen = function (enabled) {
                            return _this
                                .router
                                .urlService
                                .listen(enabled)
                        },
                        this.deferIntercept = function (defer) {
                            return _this
                                .router
                                .urlService
                                .deferIntercept(defer)
                        },
                        this.match = function (urlParts) {
                            return _this
                                .router
                                .urlService
                                .match(urlParts)
                        },
                        this.initial = function (handler) {
                            return _this
                                .router
                                .urlService
                                .rules
                                .initial(handler)
                        },
                        this.otherwise = function (handler) {
                            return _this
                                .router
                                .urlService
                                .rules
                                .otherwise(handler)
                        },
                        this.removeRule = function (rule) {
                            return _this
                                .router
                                .urlService
                                .rules
                                .removeRule(rule)
                        },
                        this.rule = function (rule) {
                            return _this
                                .router
                                .urlService
                                .rules
                                .rule(rule)
                        },
                        this.rules = function () {
                            return _this
                                .router
                                .urlService
                                .rules
                                .rules()
                        },
                        this.sort = function (compareFn) {
                            return _this
                                .router
                                .urlService
                                .rules
                                .sort(compareFn)
                        },
                        this.when = function (matcher, handler, options) {
                            return _this
                                .router
                                .urlService
                                .rules
                                .when(matcher, handler, options)
                        },
                        this.urlRuleFactory = new __WEBPACK_IMPORTED_MODULE_1__urlRule__.b(router)
                    }
                    return UrlRouter.prototype.update = function (read) {
                        var $url = this.router.locationService;
                        if (read) 
                            return void(this.location = $url.url());
                        $url.url() !== this.location && $url.url(this.location, !0)
                    },
                    UrlRouter.prototype.push = function (urlMatcher, params, options) {
                        var replace = options && !!options.replace;
                        this
                            .router
                            .urlService
                            .url(urlMatcher.format(params || {}), replace)
                    },
                    UrlRouter.prototype.href = function (urlMatcher, params, options) {
                        var url = urlMatcher.format(params);
                        if (null == url) 
                            return null;
                        options = options || {
                            absolute: !1
                        };
                        var cfg = this.router.urlService.config,
                            isHtml5 = cfg.html5Mode();
                        if (
                            isHtml5 || null === url || (url = "#" + cfg.hashPrefix() + url),
                            url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref()),
                            !options.absolute || !url
                        ) 
                            return url;
                        var slash = !isHtml5 && url
                                ? "/"
                                : "",
                            cfgPort = cfg.port(),
                            port = 80 === cfgPort || 443 === cfgPort
                                ? ""
                                : ":" + cfgPort;
                        return [
                            cfg.protocol(),
                            "://",
                            cfg.host(),
                            port,
                            slash,
                            url
                        ].join("")
                    },
                    Object.defineProperty(UrlRouter.prototype, "interceptDeferred", {
                        get: function () {
                            return this.router.urlService.interceptDeferred
                        },
                        enumerable: !1,
                        configurable: !0
                    }),
                    UrlRouter
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return ViewService
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                __WEBPACK_IMPORTED_MODULE_1__common_hof__ = __webpack_require__(14),
                __WEBPACK_IMPORTED_MODULE_2__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_3__common_trace__ = __webpack_require__(47),
                ViewService = function () {
                    function ViewService(router) {
                        var _this = this;
                        this.router = router,
                        this._uiViews = [],
                        this._viewConfigs = [],
                        this._viewConfigFactories = {},
                        this._listeners = [],
                        this._pluginapi = {
                            _rootViewContext: this
                                ._rootViewContext
                                .bind(this),
                            _viewConfigFactory: this
                                ._viewConfigFactory
                                .bind(this),
                            _registeredUIView: function (id) {
                                return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.t)(
                                    _this._uiViews,
                                    function (view) {
                                        return _this.router.$id + "." + view.id === id
                                    }
                                )
                            },
                            _registeredUIViews: function () {
                                return _this._uiViews
                            },
                            _activeViewConfigs: function () {
                                return _this._viewConfigs
                            },
                            _onSync: function (listener) {
                                return _this
                                    ._listeners
                                    .push(listener),
                                function () {
                                    return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.L)(
                                        _this._listeners,
                                        listener
                                    )
                                }
                            }
                        }
                    }
                    return ViewService.normalizeUIViewTarget = function (context, rawViewName) {
                        void 0 === rawViewName && (rawViewName = "");
                        var viewAtContext = rawViewName.split("@"),
                            uiViewName = viewAtContext[0] || "$default",
                            uiViewContextAnchor = Object(
                                __WEBPACK_IMPORTED_MODULE_2__common_predicates__.l
                            )(viewAtContext[1])
                                ? viewAtContext[1]
                                : "^",
                            relativeViewNameSugar = /^(\^(?:\.\^)*)\.(.*$)/.exec(uiViewName);
                        (
                            relativeViewNameSugar && (
                                uiViewContextAnchor = relativeViewNameSugar[1],
                                uiViewName = relativeViewNameSugar[2]
                            ),
                            "!" === uiViewName.charAt(0) && (uiViewName = uiViewName.substr(1), uiViewContextAnchor = ""),
                            /^(\^(?:\.\^)*)$/.exec(uiViewContextAnchor)
                        )
                            ? uiViewContextAnchor = uiViewContextAnchor
                                .split(".")
                                .reduce(function (anchor, x) {
                                    return anchor.parent
                                }, context)
                                .name
                            : "." === uiViewContextAnchor && (uiViewContextAnchor = context.name);
                        return {uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor}
                    },
                    ViewService.prototype._rootViewContext = function (context) {
                        return this._rootContext = context || this._rootContext
                    },
                    ViewService.prototype._viewConfigFactory = function (viewType, factory) {
                        this._viewConfigFactories[viewType] = factory
                    },
                    ViewService.prototype.createViewConfig = function (path, decl) {
                        var cfgFactory = this._viewConfigFactories[decl.$type];
                        if (!cfgFactory) 
                            throw new Error(
                                "ViewService: No view config factory registered for type " + decl.$type
                            );
                        var cfgs = cfgFactory(path, decl);
                        return Object(__WEBPACK_IMPORTED_MODULE_2__common_predicates__.a)(cfgs)
                            ? cfgs
                            : [cfgs]
                    },
                    ViewService.prototype.deactivateViewConfig = function (viewConfig) {
                        __WEBPACK_IMPORTED_MODULE_3__common_trace__
                            .c
                            .traceViewServiceEvent("<- Removing", viewConfig),
                        Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.L)(
                            this._viewConfigs,
                            viewConfig
                        )
                    },
                    ViewService.prototype.activateViewConfig = function (viewConfig) {
                        __WEBPACK_IMPORTED_MODULE_3__common_trace__
                            .c
                            .traceViewServiceEvent("-> Registering", viewConfig),
                        this
                            ._viewConfigs
                            .push(viewConfig)
                    },
                    ViewService.prototype.sync = function () {
                        function uiViewDepth(uiView) {
                            var stateDepth = function (context) {
                                return context && context.parent
                                    ? stateDepth(context.parent) + 1
                                    : 1
                            };
                            return 1e4 * uiView
                                .fqn
                                .split(".")
                                .length + stateDepth(uiView.creationContext)
                        }
                        function viewConfigDepth(config) {
                            for (
                                var context = config.viewDecl.$context,
                                count = 0;
                                ++count && context.parent;
                            ) 
                                context = context.parent;
                            return count
                        }
                        var _this = this,
                            uiViewsByFqn = this
                                ._uiViews
                                .map(function (uiv) {
                                    return [uiv.fqn, uiv]
                                })
                                .reduce(__WEBPACK_IMPORTED_MODULE_0__common_common__.h, {}),
                            depthCompare = Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.e)(
                                function (depthFn, posNeg, left, right) {
                                    return posNeg * (depthFn(left) - depthFn(right))
                                }
                            ),
                            matchingConfigPair = function (uiView) {
                                var matchingConfigs = _this
                                    ._viewConfigs
                                    .filter(ViewService.matches(uiViewsByFqn, uiView));
                                return matchingConfigs.length > 1 && matchingConfigs.sort(
                                    depthCompare(viewConfigDepth, -1)
                                ), {
                                    uiView: uiView,
                                    viewConfig: matchingConfigs[0]
                                }
                            },
                            configureUIView = function (tuple) {
                                -1 !== _this
                                    ._uiViews
                                    .indexOf(tuple.uiView) && tuple
                                    .uiView
                                    .configUpdated(tuple.viewConfig)
                            },
                            uiViewTuples = this
                                ._uiViews
                                .sort(depthCompare(uiViewDepth, 1))
                                .map(matchingConfigPair),
                            matchedViewConfigs = uiViewTuples.map(function (tuple) {
                                return tuple.viewConfig
                            }),
                            unmatchedConfigTuples = this
                                ._viewConfigs
                                .filter(function (config) {
                                    return !Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.z)(
                                        matchedViewConfigs,
                                        config
                                    )
                                })
                                .map(function (viewConfig) {
                                    return {uiView: void 0, viewConfig: viewConfig}
                                });
                        uiViewTuples.forEach(configureUIView);
                        var allTuples = uiViewTuples.concat(unmatchedConfigTuples);
                        this
                            ._listeners
                            .forEach(function (cb) {
                                return cb(allTuples)
                            }),
                        __WEBPACK_IMPORTED_MODULE_3__common_trace__
                            .c
                            .traceViewSync(allTuples)
                    },
                    ViewService.prototype.registerUIView = function (uiView) {
                        __WEBPACK_IMPORTED_MODULE_3__common_trace__
                            .c
                            .traceViewServiceUIViewEvent("-> Registering", uiView);
                        var uiViews = this._uiViews,
                            fqnAndTypeMatches = function (uiv) {
                                return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type
                            };
                        return uiViews
                            .filter(fqnAndTypeMatches)
                            .length && __WEBPACK_IMPORTED_MODULE_3__common_trace__
                            .c
                            .traceViewServiceUIViewEvent("!!!! duplicate uiView named:", uiView),
                        uiViews.push(uiView),
                        this.sync(),
                        function () {
                            if (-1 === uiViews.indexOf(uiView)) 
                                return void __WEBPACK_IMPORTED_MODULE_3__common_trace__
                                    .c
                                    .traceViewServiceUIViewEvent("Tried removing non-registered uiView", uiView);
                            __WEBPACK_IMPORTED_MODULE_3__common_trace__
                                .c
                                .traceViewServiceUIViewEvent("<- Deregistering", uiView),
                            Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.L)(uiViews)(uiView)
                        }
                    },
                    ViewService.prototype.available = function () {
                        return this
                            ._uiViews
                            .map(Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.n)("fqn"))
                    },
                    ViewService.prototype.active = function () {
                        return this
                            ._uiViews
                            .filter(Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.n)("$config"))
                            .map(Object(__WEBPACK_IMPORTED_MODULE_1__common_hof__.n)("name"))
                    },
                    ViewService.matches = function (uiViewsByFqn, uiView) {
                        return function (viewConfig) {
                            if (uiView.$type !== viewConfig.viewDecl.$type) 
                                return !1;
                            var vc = viewConfig.viewDecl,
                                vcSegments = vc
                                    .$uiViewName
                                    .split("."),
                                uivSegments = uiView
                                    .fqn
                                    .split(".");
                            if (!Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.q)(
                                vcSegments,
                                uivSegments.slice(0 - vcSegments.length)
                            )) 
                                return !1;
                            var negOffset = 1 - vcSegments.length || void 0,
                                fqnToFirstSegment = uivSegments
                                    .slice(0, negOffset)
                                    .join("."),
                                uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;
                            return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name)
                        }
                    },
                    ViewService
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return UIRouterGlobals
            });
            var __WEBPACK_IMPORTED_MODULE_0__params_stateParams__ = __webpack_require__(
                    249
                ),
                __WEBPACK_IMPORTED_MODULE_1__common_queue__ = __webpack_require__(157),
                UIRouterGlobals = function () {
                    function UIRouterGlobals() {
                        this.params = new __WEBPACK_IMPORTED_MODULE_0__params_stateParams__.a,
                        this.lastStartedTransitionId = -1,
                        this.transitionHistory = new __WEBPACK_IMPORTED_MODULE_1__common_queue__.a(
                            [],
                            1
                        ),
                        this.successfulTransitions = new __WEBPACK_IMPORTED_MODULE_1__common_queue__.a(
                            [],
                            1
                        )
                    }
                    return UIRouterGlobals.prototype.dispose = function () {
                        this
                            .transitionHistory
                            .clear(),
                        this
                            .successfulTransitions
                            .clear(),
                        this.transition = null
                    },
                    UIRouterGlobals
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return UrlService
            });
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17),
                __WEBPACK_IMPORTED_MODULE_1__urlRules__ = __webpack_require__(264),
                __WEBPACK_IMPORTED_MODULE_2__urlConfig__ = __webpack_require__(265),
                __WEBPACK_IMPORTED_MODULE_3__state__ = __webpack_require__(161),
                UrlService = function () {
                    function UrlService(router) {
                        var _this = this;
                        this.router = router,
                        this.interceptDeferred = !1,
                        this.rules = new __WEBPACK_IMPORTED_MODULE_1__urlRules__.a(this.router),
                        this.config = new __WEBPACK_IMPORTED_MODULE_2__urlConfig__.a(this.router),
                        this.url = function (newurl, replace, state) {
                            return _this
                                .router
                                .locationService
                                .url(newurl, replace, state)
                        },
                        this.path = function () {
                            return _this
                                .router
                                .locationService
                                .path()
                        },
                        this.search = function () {
                            return _this
                                .router
                                .locationService
                                .search()
                        },
                        this.hash = function () {
                            return _this
                                .router
                                .locationService
                                .hash()
                        },
                        this.onChange = function (callback) {
                            return _this
                                .router
                                .locationService
                                .onChange(callback)
                        }
                    }
                    return UrlService.prototype.dispose = function () {
                        this.listen(!1),
                        this
                            .rules
                            .dispose()
                    },
                    UrlService.prototype.parts = function () {
                        return {path: this.path(), search: this.search(), hash: this.hash()}
                    },
                    UrlService.prototype.sync = function (evt) {
                        if (!evt || !evt.defaultPrevented) {
                            var _a = this.router,
                                urlService = _a.urlService,
                                stateService = _a.stateService,
                                url = {
                                    path: urlService.path(),
                                    search: urlService.search(),
                                    hash: urlService.hash()
                                },
                                best = this.match(url);
                            Object(__WEBPACK_IMPORTED_MODULE_0__common__._18)([
                                [
                                    __WEBPACK_IMPORTED_MODULE_0__common__._2,
                                    function (newurl) {
                                        return urlService.url(newurl, !0)
                                    }
                                ],
                                [
                                    __WEBPACK_IMPORTED_MODULE_3__state__.TargetState.isDef,
                                    function (def) {
                                        return stateService.go(def.state, def.params, def.options)
                                    }
                                ],
                                [
                                    Object(__WEBPACK_IMPORTED_MODULE_0__common__.Q)(
                                        __WEBPACK_IMPORTED_MODULE_3__state__.TargetState
                                    ),
                                    function (target) {
                                        return stateService.go(target.state(), target.params(), target.options())
                                    }
                                ]
                            ])(best && best.rule.handler(best.match, url, this.router))
                        }
                    },
                    UrlService.prototype.listen = function (enabled) {
                        var _this = this;
                        if (!1 !== enabled) 
                            return this._stopListeningFn = this._stopListeningFn || this
                                .router
                                .urlService
                                .onChange(function (evt) {
                                    return _this.sync(evt)
                                });
                        this._stopListeningFn && this._stopListeningFn(),
                        delete this._stopListeningFn
                    },
                    UrlService.prototype.deferIntercept = function (defer) {
                        void 0 === defer && (defer = !0),
                        this.interceptDeferred = defer
                    },
                    UrlService.prototype.match = function (url) {
                        var _this = this;
                        url = Object(__WEBPACK_IMPORTED_MODULE_0__common__.C)({
                            path: "",
                            search: {},
                            hash: ""
                        }, url);
                        for (
                            var best,
                            rules = this.rules.rules(),
                            checkRule = function (rule) {
                                var match = rule.match(url, _this.router);
                                return match && {
                                    match: match,
                                    rule: rule,
                                    weight: rule.matchPriority(match)
                                }
                            },
                            i = 0; i < rules.length && (!best || best.rule._group === rules[i]._group); i++
                        ) {
                            var current = checkRule(rules[i]);
                            best = !best || current && current.weight > best.weight
                                ? current
                                : best
                        }
                        return best
                    },
                    UrlService
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function getHandlerFn(handler) {
                if (!(Object(__WEBPACK_IMPORTED_MODULE_2__common__.U)(handler) || Object(
                    __WEBPACK_IMPORTED_MODULE_2__common__._2
                )(handler) || Object(__WEBPACK_IMPORTED_MODULE_2__common__.Q)(
                    __WEBPACK_IMPORTED_MODULE_0__state__.TargetState
                )(handler) || __WEBPACK_IMPORTED_MODULE_0__state__.TargetState.isDef(handler))) 
                    throw new Error(
                        "'handler' must be a string, function, TargetState, or have a state: 'newtarget" +
                    "' property"
                    );
                return Object(__WEBPACK_IMPORTED_MODULE_2__common__.U)(handler)
                    ? handler
                    : Object(__WEBPACK_IMPORTED_MODULE_2__common__._44)(handler)
            }
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return UrlRules
            });
            var defaultRuleSortFn,
                __WEBPACK_IMPORTED_MODULE_0__state__ = __webpack_require__(161),
                __WEBPACK_IMPORTED_MODULE_1__urlMatcher__ = __webpack_require__(113),
                __WEBPACK_IMPORTED_MODULE_2__common__ = __webpack_require__(17),
                __WEBPACK_IMPORTED_MODULE_3__urlRule__ = __webpack_require__(166),
                prioritySort = function (a, b) {
                    return (b.priority || 0) - (a.priority || 0)
                },
                typeSort = function (a, b) {
                    var weights = {
                        STATE: 4,
                        URLMATCHER: 4,
                        REGEXP: 3,
                        RAW: 2,
                        OTHER: 1
                    };
                    return (weights[a.type] || 0) - (weights[b.type] || 0)
                },
                urlMatcherSort = function (a, b) {
                    return a.urlMatcher && b.urlMatcher
                        ? __WEBPACK_IMPORTED_MODULE_1__urlMatcher__
                            .a
                            .compare(a.urlMatcher, b.urlMatcher)
                        : 0
                },
                idSort = function (a, b) {
                    var useMatchPriority = {
                        STATE: !0,
                        URLMATCHER: !0
                    };
                    return useMatchPriority[a.type] && useMatchPriority[b.type]
                        ? 0
                        : (a.$id || 0) - (b.$id || 0)
                };
            defaultRuleSortFn = function (a, b) {
                var cmp = prioritySort(a, b);
                return 0 !== cmp
                    ? cmp
                    : 0 !== (cmp = typeSort(a, b))
                        ? cmp
                        : (
                            cmp = urlMatcherSort(a, b),
                            0 !== cmp
                                ? cmp
                                : idSort(a, b)
                        )
            };
            var UrlRules = function () {
                function UrlRules(router) {
                    this.router = router,
                    this._sortFn = defaultRuleSortFn,
                    this._rules = [],
                    this._id = 0,
                    this.urlRuleFactory = new __WEBPACK_IMPORTED_MODULE_3__urlRule__.b(router)
                }
                return UrlRules.prototype.dispose = function (router) {
                    this._rules = [],
                    delete this._otherwiseFn
                },
                UrlRules.prototype.initial = function (handler) {
                    var handlerFn = getHandlerFn(handler),
                        matchFn = function (urlParts, router) {
                            return 0 === router
                                .globals
                                .transitionHistory
                                .size() && !!/^\/?$/.exec(urlParts.path)
                        };
                    this.rule(this.urlRuleFactory.create(matchFn, handlerFn))
                },
                UrlRules.prototype.otherwise = function (handler) {
                    var handlerFn = getHandlerFn(handler);
                    this._otherwiseFn = this
                        .urlRuleFactory
                        .create(Object(__WEBPACK_IMPORTED_MODULE_2__common__._44)(!0), handlerFn),
                    this._sorted = !1
                },
                UrlRules.prototype.removeRule = function (rule) {
                    Object(__WEBPACK_IMPORTED_MODULE_2__common__._26)(this._rules, rule)
                },
                UrlRules.prototype.rule = function (rule) {
                    var _this = this;
                    if (!__WEBPACK_IMPORTED_MODULE_3__urlRule__.b.isUrlRule(rule)) 
                        throw new Error("invalid rule");
                    return rule.$id = this._id++,
                    rule.priority = rule.priority || 0,
                    this
                        ._rules
                        .push(rule),
                    this._sorted = !1,
                    function () {
                        return _this.removeRule(rule)
                    }
                },
                UrlRules.prototype.rules = function () {
                    return this.ensureSorted(),
                    this
                        ._rules
                        .concat(
                            this._otherwiseFn
                                ? [this._otherwiseFn]
                                : []
                        )
                },
                UrlRules.prototype.sort = function (compareFn) {
                    for (
                        var sorted = this.stableSort(this._rules, this._sortFn = compareFn || this._sortFn),
                        group = 0,
                        i = 0;
                        i < sorted.length;
                        i++
                    ) 
                        sorted[i]._group = group,
                        i < sorted.length - 1 && 0 !== this._sortFn(sorted[i], sorted[i + 1]) && group++;
                    this._rules = sorted,
                    this._sorted = !0
                },
                UrlRules.prototype.ensureSorted = function () {
                    this._sorted || this.sort()
                },
                UrlRules.prototype.stableSort = function (arr, compareFn) {
                    var arrOfWrapper = arr.map(function (elem, idx) {
                        return {elem: elem, idx: idx}
                    });
                    return arrOfWrapper.sort(function (wrapperA, wrapperB) {
                        var cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);
                        return 0 === cmpDiff
                            ? wrapperA.idx - wrapperB.idx
                            : cmpDiff
                    }),
                    arrOfWrapper.map(function (wrapper) {
                        return wrapper.elem
                    })
                },
                UrlRules.prototype.when = function (matcher, handler, options) {
                    var rule = this
                        .urlRuleFactory
                        .create(matcher, handler);
                    return Object(__WEBPACK_IMPORTED_MODULE_2__common__.T)(
                        options && options.priority
                    ) && (rule.priority = options.priority),
                    this.rule(rule),
                    rule
                },
                UrlRules
            }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return UrlConfig
            });
            var __WEBPACK_IMPORTED_MODULE_0__params__ = __webpack_require__(158),
                __WEBPACK_IMPORTED_MODULE_1__common__ = __webpack_require__(17),
                UrlConfig = function () {
                    function UrlConfig(router) {
                        var _this = this;
                        this.router = router,
                        this.paramTypes = new __WEBPACK_IMPORTED_MODULE_0__params__.ParamTypes,
                        this._decodeParams = !0,
                        this._isCaseInsensitive = !1,
                        this._isStrictMode = !0,
                        this._defaultSquashPolicy = !1,
                        this.dispose = function () {
                            return _this
                                .paramTypes
                                .dispose()
                        },
                        this.baseHref = function () {
                            return _this
                                .router
                                .locationConfig
                                .baseHref()
                        },
                        this.hashPrefix = function (newprefix) {
                            return _this
                                .router
                                .locationConfig
                                .hashPrefix(newprefix)
                        },
                        this.host = function () {
                            return _this
                                .router
                                .locationConfig
                                .host()
                        },
                        this.html5Mode = function () {
                            return _this
                                .router
                                .locationConfig
                                .html5Mode()
                        },
                        this.port = function () {
                            return _this
                                .router
                                .locationConfig
                                .port()
                        },
                        this.protocol = function () {
                            return _this
                                .router
                                .locationConfig
                                .protocol()
                        }
                    }
                    return UrlConfig.prototype.caseInsensitive = function (value) {
                        return this._isCaseInsensitive = Object(
                            __WEBPACK_IMPORTED_MODULE_1__common__.T
                        )(value)
                            ? value
                            : this._isCaseInsensitive
                    },
                    UrlConfig.prototype.defaultSquashPolicy = function (value) {
                        if (Object(__WEBPACK_IMPORTED_MODULE_1__common__.T)(value) && !0 !== value && !1 !== value && !Object(
                            __WEBPACK_IMPORTED_MODULE_1__common__._2
                        )(value)) 
                            throw new Error(
                                "Invalid squash policy: " + value + ". Valid policies: false, true, arbitrary-s" +
                            "tring"
                            );
                        return this._defaultSquashPolicy = Object(
                            __WEBPACK_IMPORTED_MODULE_1__common__.T
                        )(value)
                            ? value
                            : this._defaultSquashPolicy
                    },
                    UrlConfig.prototype.strictMode = function (value) {
                        return this._isStrictMode = Object(__WEBPACK_IMPORTED_MODULE_1__common__.T)(
                            value
                        )
                            ? value
                            : this._isStrictMode
                    },
                    UrlConfig.prototype.type = function (name, definition, definitionFn) {
                        var type = this
                            .paramTypes
                            .type(name, definition, definitionFn);
                        return Object(__WEBPACK_IMPORTED_MODULE_1__common__.T)(definition)
                            ? this
                            : type
                    },
                    UrlConfig
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            function lazyLoadState(transition, state) {
                function updateStateRegistry(result) {
                    return result && Array.isArray(result.states) && result
                        .states
                        .forEach(function (_state) {
                            return transition
                                .router
                                .stateRegistry
                                .register(_state)
                        }),
                    result
                }
                var lazyLoadFn = state
                        .$$state()
                        .lazyLoad,
                    promise = lazyLoadFn._promise;
                if (!promise) {
                    var success = function (result) {
                            return delete state.lazyLoad,
                            delete state
                                .$$state()
                                .lazyLoad,
                            delete lazyLoadFn._promise,
                            result
                        },
                        error = function (err) {
                            return delete lazyLoadFn._promise,
                            __WEBPACK_IMPORTED_MODULE_0__common_coreservices__
                                .b
                                .$q
                                .reject(err)
                        };
                    promise = lazyLoadFn._promise = __WEBPACK_IMPORTED_MODULE_0__common_coreservices__
                        .b
                        .$q
                        .when(lazyLoadFn(transition, state))
                        .then(updateStateRegistry)
                        .then(success, error)
                }
                return promise
            }
            __webpack_require__.d(__webpack_exports__, "b", function () {
                return registerLazyLoadHook
            }),
            __webpack_exports__.a = lazyLoadState;
            var __WEBPACK_IMPORTED_MODULE_0__common_coreservices__ = __webpack_require__(
                    20
                ),
                lazyLoadHook = function (transition) {
                    function retryTransition() {
                        if ("url" !== transition.originalTransition().options().source) {
                            var orig = transition.targetState();
                            return router
                                .stateService
                                .target(orig.identifier(), orig.params(), orig.options())
                        }
                        var $url = router.urlService,
                            result = $url.match($url.parts()),
                            rule = result && result.rule;
                        if (rule && "STATE" === rule.type) {
                            var state = rule.state,
                                params = result.match;
                            return router
                                .stateService
                                .target(state, params, transition.options())
                        }
                        router
                            .urlService
                            .sync()
                    }
                    var router = transition.router,
                        promises = transition
                            .entering()
                            .filter(function (state) {
                                return !!state
                                    .$$state()
                                    .lazyLoad
                            })
                            .map(function (state) {
                                return lazyLoadState(transition, state)
                            });
                    return __WEBPACK_IMPORTED_MODULE_0__common_coreservices__
                        .b
                        .$q
                        .all(promises)
                        .then(retryTransition)
                },
                registerLazyLoadHook = function (transitionService) {
                    return transitionService.onBefore({
                        entering: function (state) {
                            return !!state.lazyLoad
                        }
                    }, lazyLoadHook)
                }
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return TransitionEventType
            });
            var __WEBPACK_IMPORTED_MODULE_0__transitionHook__ = __webpack_require__(83),
                TransitionEventType = function () {
                    function TransitionEventType(
                        name,
                        hookPhase,
                        hookOrder,
                        criteriaMatchPath,
                        reverseSort,
                        getResultHandler,
                        getErrorHandler,
                        synchronous
                    ) {
                        void 0 === reverseSort && (reverseSort = !1),
                        void 0 === getResultHandler && (
                            getResultHandler = __WEBPACK_IMPORTED_MODULE_0__transitionHook__.a.HANDLE_RESULT
                        ),
                        void 0 === getErrorHandler && (
                            getErrorHandler = __WEBPACK_IMPORTED_MODULE_0__transitionHook__.a.REJECT_ERROR
                        ),
                        void 0 === synchronous && (synchronous = !1),
                        this.name = name,
                        this.hookPhase = hookPhase,
                        this.hookOrder = hookOrder,
                        this.criteriaMatchPath = criteriaMatchPath,
                        this.reverseSort = reverseSort,
                        this.getResultHandler = getResultHandler,
                        this.getErrorHandler = getErrorHandler,
                        this.synchronous = synchronous
                    }
                    return TransitionEventType
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return $q
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_index__ = __webpack_require__(17),
                $q = {
                    when: function (val) {
                        return new Promise(function (resolve, reject) {
                            return resolve(val)
                        })
                    },
                    reject: function (val) {
                        return new Promise(function (resolve, reject) {
                            reject(val)
                        })
                    },
                    defer: function () {
                        var deferred = {};
                        return deferred.promise = new Promise(function (resolve, reject) {
                            deferred.resolve = resolve,
                            deferred.reject = reject
                        }),
                        deferred
                    },
                    all: function (promises) {
                        if (Object(__WEBPACK_IMPORTED_MODULE_0__common_index__.R)(promises)) 
                            return Promise.all(promises);
                        if (Object(__WEBPACK_IMPORTED_MODULE_0__common_index__.Z)(promises)) {
                            var chain = Object
                                .keys(promises)
                                .map(function (key) {
                                    return promises[key].then(function (val) {
                                        return {key: key, val: val}
                                    })
                                });
                            return $q
                                .all(chain)
                                .then(function (values) {
                                    return values.reduce(function (acc, tuple) {
                                        return acc[tuple.key] = tuple.val,
                                        acc
                                    }, {})
                                })
                        }
                    }
                }
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return $injector
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_index__ = __webpack_require__(17),
                globals = {},
                STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,
                ARGUMENT_NAMES = /([^\s,]+)/g,
                $injector = {
                    get: function (name) {
                        return globals[name]
                    },
                    has: function (name) {
                        return null != $injector.get(name)
                    },
                    invoke: function (fn, context, locals) {
                        var all = Object(__WEBPACK_IMPORTED_MODULE_0__common_index__.C)(
                                {},
                                globals,
                                locals || {}
                            ),
                            params = $injector.annotate(fn),
                            ensureExist = Object(__WEBPACK_IMPORTED_MODULE_0__common_index__.s)(
                                function (key) {
                                    return all.hasOwnProperty(key)
                                },
                                function (key) {
                                    return "DI can't find injectable: '" + key + "'"
                                }
                            ),
                            args = params
                                .filter(ensureExist)
                                .map(function (x) {
                                    return all[x]
                                });
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_index__.U)(fn)
                            ? fn.apply(context, args)
                            : fn
                                .slice(-1)[0]
                                .apply(context, args)
                    },
                    annotate: function (fn) {
                        if (!Object(__WEBPACK_IMPORTED_MODULE_0__common_index__.V)(fn)) 
                            throw new Error("Not an injectable function: " + fn);
                        if (fn && fn.$inject) 
                            return fn.$inject;
                        if (Object(__WEBPACK_IMPORTED_MODULE_0__common_index__.R)(fn)) 
                            return fn.slice(0, -1);
                        var fnStr = fn
                            .toString()
                            .replace(STRIP_COMMENTS, "");
                        return fnStr
                            .slice(fnStr.indexOf("(") + 1, fnStr.indexOf(")"))
                            .match(ARGUMENT_NAMES) || []
                    }
                }
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return HashLocationService
            });
            var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17),
                __WEBPACK_IMPORTED_MODULE_1__baseLocationService__ = __webpack_require__(114),
                __extends = this && this.__extends || function () {
                    var extendStatics = function (d, b) {
                        return (extendStatics = Object.setPrototypeOf || {
                            __proto__: []
                        }
                        instanceof Array && function (d, b) {
                            d.__proto__ = b
                        } || function (d, b) {
                            for (var p in b) 
                                b.hasOwnProperty(p) && (d[p] = b[p])
                        })(d, b)
                    };
                    return function (d, b) {
                        function __() {
                            this.constructor = d
                        }
                        extendStatics(d, b),
                        d.prototype = null === b
                            ? Object.create(b)
                            : (__.prototype = b.prototype, new __)
                    }
                }(),
                HashLocationService = function (_super) {
                    function HashLocationService(router) {
                        var _this = _super.call(this, router, !1) || this;
                        return __WEBPACK_IMPORTED_MODULE_0__common__
                            ._27
                            .addEventListener("hashchange", _this._listener, !1),
                        _this
                    }
                    return __extends(HashLocationService, _super),
                    HashLocationService.prototype._get = function () {
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common__._40)(this._location.hash)
                    },
                    HashLocationService.prototype._set = function (state, title, url, replace) {
                        this._location.hash = url
                    },
                    HashLocationService.prototype.dispose = function (router) {
                        _super
                            .prototype
                            .dispose
                            .call(this, router),
                        __WEBPACK_IMPORTED_MODULE_0__common__
                            ._27
                            .removeEventListener("hashchange", this._listener)
                    },
                    HashLocationService
                }(__WEBPACK_IMPORTED_MODULE_1__baseLocationService__.a)
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return MemoryLocationService
            });
            var __WEBPACK_IMPORTED_MODULE_0__baseLocationService__ = __webpack_require__(
                    114
                ),
                __extends = this && this.__extends || function () {
                    var extendStatics = function (d, b) {
                        return (extendStatics = Object.setPrototypeOf || {
                            __proto__: []
                        }
                        instanceof Array && function (d, b) {
                            d.__proto__ = b
                        } || function (d, b) {
                            for (var p in b) 
                                b.hasOwnProperty(p) && (d[p] = b[p])
                        })(d, b)
                    };
                    return function (d, b) {
                        function __() {
                            this.constructor = d
                        }
                        extendStatics(d, b),
                        d.prototype = null === b
                            ? Object.create(b)
                            : (__.prototype = b.prototype, new __)
                    }
                }(),
                MemoryLocationService = function (_super) {
                    function MemoryLocationService(router) {
                        return _super.call(this, router, !0) || this
                    }
                    return __extends(MemoryLocationService, _super),
                    MemoryLocationService.prototype._get = function () {
                        return this._url
                    },
                    MemoryLocationService.prototype._set = function (state, title, url, replace) {
                        this._url = url
                    },
                    MemoryLocationService
                }(__WEBPACK_IMPORTED_MODULE_0__baseLocationService__.a)
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return PushStateLocationService
            });
            var __WEBPACK_IMPORTED_MODULE_0__baseLocationService__ = __webpack_require__(
                    114
                ),
                __WEBPACK_IMPORTED_MODULE_1__common__ = __webpack_require__(17),
                __extends = this && this.__extends || function () {
                    var extendStatics = function (d, b) {
                        return (extendStatics = Object.setPrototypeOf || {
                            __proto__: []
                        }
                        instanceof Array && function (d, b) {
                            d.__proto__ = b
                        } || function (d, b) {
                            for (var p in b) 
                                b.hasOwnProperty(p) && (d[p] = b[p])
                        })(d, b)
                    };
                    return function (d, b) {
                        function __() {
                            this.constructor = d
                        }
                        extendStatics(d, b),
                        d.prototype = null === b
                            ? Object.create(b)
                            : (__.prototype = b.prototype, new __)
                    }
                }(),
                PushStateLocationService = function (_super) {
                    function PushStateLocationService(router) {
                        var _this = _super.call(this, router, !0) || this;
                        return _this._config = router.urlService.config,
                        __WEBPACK_IMPORTED_MODULE_1__common__
                            ._27
                            .addEventListener("popstate", _this._listener, !1),
                        _this
                    }
                    return __extends(PushStateLocationService, _super),
                    PushStateLocationService.prototype._getBasePrefix = function () {
                        return Object(__WEBPACK_IMPORTED_MODULE_1__common__._36)(
                            this._config.baseHref()
                        )
                    },
                    PushStateLocationService.prototype._get = function () {
                        var _a = this._location,
                            pathname = _a.pathname,
                            hash = _a.hash,
                            search = _a.search;
                        search = Object(__WEBPACK_IMPORTED_MODULE_1__common__._34)(search)[1],
                        hash = Object(__WEBPACK_IMPORTED_MODULE_1__common__._32)(hash)[1];
                        var basePrefix = this._getBasePrefix(),
                            exactBaseHrefMatch = pathname === this
                                ._config
                                .baseHref(),
                            startsWithBase = pathname.substr(0, basePrefix.length) === basePrefix;
                        return (
                            pathname = exactBaseHrefMatch
                                ? "/"
                                : startsWithBase
                                    ? pathname.substring(basePrefix.length)
                                    : pathname
                        ) + (
                            search
                                ? "?" + search
                                : ""
                        ) + (
                            hash
                                ? "#" + hash
                                : ""
                        )
                    },
                    PushStateLocationService.prototype._set = function (state, title, url, replace) {
                        var basePrefix = this._getBasePrefix(),
                            slash = url && "/" !== url[0]
                                ? "/"
                                : "",
                            fullUrl = "" === url || "/" === url
                                ? this
                                    ._config
                                    .baseHref()
                                : basePrefix + slash + url;
                        replace
                            ? this
                                ._history
                                .replaceState(state, title, fullUrl)
                            : this
                                ._history
                                .pushState(state, title, fullUrl)
                    },
                    PushStateLocationService.prototype.dispose = function (router) {
                        _super
                            .prototype
                            .dispose
                            .call(this, router),
                        __WEBPACK_IMPORTED_MODULE_1__common__
                            ._27
                            .removeEventListener("popstate", this._listener)
                    },
                    PushStateLocationService
                }(__WEBPACK_IMPORTED_MODULE_0__baseLocationService__.a)
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return MemoryLocationConfig
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_predicates__ = __webpack_require__(10),
                __WEBPACK_IMPORTED_MODULE_1__common_common__ = __webpack_require__(8),
                MemoryLocationConfig = function () {
                    function MemoryLocationConfig() {
                        var _this = this;
                        this.dispose = __WEBPACK_IMPORTED_MODULE_1__common_common__.E,
                        this._baseHref = "",
                        this._port = 80,
                        this._protocol = "http",
                        this._host = "localhost",
                        this._hashPrefix = "",
                        this.port = function () {
                            return _this._port
                        },
                        this.protocol = function () {
                            return _this._protocol
                        },
                        this.host = function () {
                            return _this._host
                        },
                        this.baseHref = function () {
                            return _this._baseHref
                        },
                        this.html5Mode = function () {
                            return !1
                        },
                        this.hashPrefix = function (newval) {
                            return Object(__WEBPACK_IMPORTED_MODULE_0__common_predicates__.c)(newval)
                                ? _this._hashPrefix = newval
                                : _this._hashPrefix
                        }
                    }
                    return MemoryLocationConfig
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return BrowserLocationConfig
            });
            var __WEBPACK_IMPORTED_MODULE_0__common_predicates__ = __webpack_require__(10),
                BrowserLocationConfig = function () {
                    function BrowserLocationConfig(router, _isHtml5) {
                        void 0 === _isHtml5 && (_isHtml5 = !1),
                        this._isHtml5 = _isHtml5,
                        this._baseHref = void 0,
                        this._hashPrefix = ""
                    }
                    return BrowserLocationConfig.prototype.port = function () {
                        return location.port
                            ? Number(location.port)
                            : "https" === this.protocol()
                                ? 443
                                : 80
                    },
                    BrowserLocationConfig.prototype.protocol = function () {
                        return location
                            .protocol
                            .replace(/:/g, "")
                    },
                    BrowserLocationConfig.prototype.host = function () {
                        return location.hostname
                    },
                    BrowserLocationConfig.prototype.html5Mode = function () {
                        return this._isHtml5
                    },
                    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_predicates__.c)(newprefix)
                            ? this._hashPrefix = newprefix
                            : this._hashPrefix
                    },
                    BrowserLocationConfig.prototype.baseHref = function (href) {
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_predicates__.c)(href) && (
                            this._baseHref = href
                        ),
                        Object(__WEBPACK_IMPORTED_MODULE_0__common_predicates__.m)(this._baseHref) && (
                            this._baseHref = this.getBaseHref()
                        ),
                        this._baseHref
                    },
                    BrowserLocationConfig.prototype.getBaseHref = function () {
                        var baseTag = document.getElementsByTagName("base")[0];
                        return baseTag && baseTag.href
                            ? baseTag
                                .href
                                .replace(/^([^\/:]*:)?\/\/[^\/]*/, "")
                            : this._isHtml5
                                ? "/"
                                : location.pathname || "/"
                    },
                    BrowserLocationConfig.prototype.dispose = function () {},
                    BrowserLocationConfig
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return StateProvider
            });
            var __WEBPACK_IMPORTED_MODULE_0__uirouter_core__ = __webpack_require__(24),
                StateProvider = function () {
                    function StateProvider(stateRegistry, stateService) {
                        this.stateRegistry = stateRegistry,
                        this.stateService = stateService,
                        Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.createProxyFunctions)(
                            Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.val)(
                                StateProvider.prototype
                            ),
                            this,
                            Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.val)(this)
                        )
                    }
                    return StateProvider.prototype.decorator = function (name, func) {
                        return this
                            .stateRegistry
                            .decorator(name, func) || this
                    },
                    StateProvider.prototype.state = function (name, definition) {
                        return Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isObject)(name)
                            ? definition = name
                            : definition.name = name,
                        this
                            .stateRegistry
                            .register(definition),
                        this
                    },
                    StateProvider.prototype.onInvalid = function (callback) {
                        return this
                            .stateService
                            .onInvalid(callback)
                    },
                    StateProvider
                }()
        },
        function (module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.d(__webpack_exports__, "a", function () {
                return UrlRouterProvider
            });
            var __WEBPACK_IMPORTED_MODULE_0__uirouter_core__ = __webpack_require__(24),
                UrlRouterProvider = function () {
                    function UrlRouterProvider(router) {
                        this.router = router
                    }
                    return UrlRouterProvider.injectableHandler = function (router, handler) {
                        return function (match) {
                            return __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                                .services
                                .$injector
                                .invoke(handler, null, {
                                    $match: match,
                                    $stateParams: router.globals.params
                                })
                        }
                    },
                    UrlRouterProvider.prototype.$get = function () {
                        var urlService = this.router.urlService;
                        return this
                            .router
                            .urlRouter
                            .update(!0),
                        urlService.interceptDeferred || urlService.listen(),
                        this.router.urlRouter
                    },
                    UrlRouterProvider.prototype.rule = function (ruleFn) {
                        var _this = this;
                        if (!Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isFunction)(ruleFn)) 
                            throw new Error("'rule' must be a function");
                        var match = function () {
                                return ruleFn(
                                    __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.services.$injector,
                                    _this.router.locationService
                                )
                            },
                            rule = new __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.BaseUrlRule(
                                match,
                                __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.identity
                            );
                        return this
                            .router
                            .urlService
                            .rules
                            .rule(rule),
                        this
                    },
                    UrlRouterProvider.prototype.otherwise = function (rule) {
                        var _this = this,
                            urlRules = this.router.urlService.rules;
                        if (Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isString)(rule)) 
                            urlRules.otherwise(rule);
                        else {
                            if (!Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isFunction)(rule)) 
                                throw new Error("'rule' must be a string or function");
                            urlRules.otherwise(function () {
                                return rule(
                                    __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.services.$injector,
                                    _this.router.locationService
                                )
                            })
                        }
                        return this
                    },
                    UrlRouterProvider.prototype.when = function (what, handler) {
                        return (
                            Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isArray)(handler) || Object(
                                __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isFunction
                            )(handler)
                        ) && (handler = UrlRouterProvider.injectableHandler(this.router, handler)),
                        this
                            .router
                            .urlService
                            .rules
                            .when(what, handler),
                        this
                    },
                    UrlRouterProvider.prototype.deferIntercept = function (defer) {
                        this
                            .router
                            .urlService
                            .deferIntercept(defer)
                    },
                    UrlRouterProvider
                }()
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule
                    ? obj
                    : {
                        default: obj
                    }
            }
            function registerBarcode(barcodes, name) {
                API.prototype[name] = API.prototype[name.toUpperCase()] = API.prototype[name.toLowerCase()] = function (
                    text,
                    options
                ) {
                    var api = this;
                    return api
                        ._errorHandler
                        .wrapBarcodeCall(function () {
                            options.text = void 0 === options.text
                                ? void 0
                                : "" + options.text;
                            var newOptions = (0, _merge2.default)(api._options, options);
                            newOptions = (0, _optionsFromStrings2.default)(newOptions);
                            var Encoder = barcodes[name],
                                encoded = encode(text, Encoder, newOptions);
                            return api
                                ._encodings
                                .push(encoded),
                            api
                        })
                }
            }
            function encode(text, Encoder, options) {
                text = "" + text;
                var encoder = new Encoder(text, options);
                if (!encoder.valid()) 
                    throw new _exceptions.InvalidInputException(encoder.constructor.name, text);
                var encoded = encoder.encode();
                encoded = (0, _linearizeEncodings2.default)(encoded);
                for (var i = 0; i < encoded.length; i++) 
                    encoded[i].options = (0, _merge2.default)(options, encoded[i].options);
                return encoded
            }
            function autoSelectBarcode() {
                return _barcodes2.default.CODE128
                    ? "CODE128"
                    : Object.keys(_barcodes2.default)[0]
            }
            function render(renderProperties, encodings, options) {
                encodings = (0, _linearizeEncodings2.default)(encodings);
                for (var i = 0; i < encodings.length; i++) 
                    encodings[i].options = (0, _merge2.default)(options, encodings[i].options),
                    (0, _fixOptions2.default)(encodings[i].options);
                
                (0, _fixOptions2.default)(options),
                new(0, renderProperties.renderer)(renderProperties.element, encodings, options).render(),
                renderProperties.afterRender && renderProperties.afterRender()
            }
            var _barcodes = __webpack_require__(660),
                _barcodes2 = _interopRequireDefault(_barcodes),
                _merge = __webpack_require__(117),
                _merge2 = _interopRequireDefault(_merge),
                _linearizeEncodings = __webpack_require__(685),
                _linearizeEncodings2 = _interopRequireDefault(_linearizeEncodings),
                _fixOptions = __webpack_require__(686),
                _fixOptions2 = _interopRequireDefault(_fixOptions),
                _getRenderProperties = __webpack_require__(687),
                _getRenderProperties2 = _interopRequireDefault(_getRenderProperties),
                _optionsFromStrings = __webpack_require__(281),
                _optionsFromStrings2 = _interopRequireDefault(_optionsFromStrings),
                _ErrorHandler = __webpack_require__(693),
                _ErrorHandler2 = _interopRequireDefault(_ErrorHandler),
                _exceptions = __webpack_require__(284),
                _defaults = __webpack_require__(282),
                _defaults2 = _interopRequireDefault(_defaults),
                API = function API() {},
                JsBarcode = function JsBarcode(element, text, options) {
                    var api = new API;
                    if (void 0 === element) 
                        throw Error("No element to render on was provided.");
                    return api._renderProperties = (0, _getRenderProperties2.default)(element),
                    api._encodings = [],
                    api._options = _defaults2.default,
                    api._errorHandler = new _ErrorHandler2.default(api),
                    void 0 !== text && (
                        options = options || {},
                        options.format || (options.format = autoSelectBarcode()),
                        api.options(options)[options.format](
                            text,
                            options
                        ).render()
                    ),
                    api
                };
            JsBarcode.getModule = function (name) {
                return _barcodes2.default[name]
            };
            for (var name in _barcodes2.default) 
                _barcodes2
                    .default
                    .hasOwnProperty(name) && registerBarcode(_barcodes2.default, name);
            API.prototype.options = function (options) {
                return this._options = (0, _merge2.default)(this._options, options),
                this
            },
            API.prototype.blank = function (size) {
                var zeroes = new Array(size + 1).join("0");
                return this
                    ._encodings
                    .push({data: zeroes}),
                this
            },
            API.prototype.init = function () {
                if (this._renderProperties) {
                    Array.isArray(this._renderProperties) || (
                        this._renderProperties = [this._renderProperties]
                    );
                    var renderProperty;
                    for (var i in this._renderProperties) {
                        renderProperty = this._renderProperties[i];
                        var options = (0, _merge2.default)(this._options, renderProperty.options);
                        "auto" == options.format && (options.format = autoSelectBarcode()),
                        this
                            ._errorHandler
                            .wrapBarcodeCall(function () {
                                var text = options.value,
                                    Encoder = _barcodes2.default[
                                        options
                                            .format
                                            .toUpperCase()
                                    ],
                                    encoded = encode(text, Encoder, options);
                                render(renderProperty, encoded, options)
                            })
                    }
                }
            },
            API.prototype.render = function () {
                if (!this._renderProperties) 
                    throw new _exceptions.NoElementException;
                if (Array.isArray(this._renderProperties)) 
                    for (var i = 0; i < this._renderProperties.length; i++) 
                        render(this._renderProperties[i], this._encodings, this._options);
            else 
                    render(this._renderProperties, this._encodings, this._options);
                return this
            },
            API.prototype._defaults = _defaults2.default,
            "undefined" != typeof window && (window.JsBarcode = JsBarcode),
            "undefined" != typeof jQuery && (
                jQuery.fn.JsBarcode = function (content, options) {
                    var elementArray = [];
                    return jQuery(this).each(function () {
                        elementArray.push(this)
                    }),
                    JsBarcode(elementArray, content, options)
                }
            ),
            module.exports = JsBarcode
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule
                    ? obj
                    : {
                        default: obj
                    }
            }
            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) 
                    throw new TypeError("Cannot call a class as a function")
            }
            function _possibleConstructorReturn(self, call) {
                if (!self) 
                    throw new ReferenceError(
                        "this hasn't been initialised - super() hasn't been called"
                    );
                return !call || "object" != typeof call && "function" != typeof call
                    ? self
                    : call
            }
            function _inherits(subClass, superClass) {
                if ("function" != typeof superClass && null !== superClass) 
                    throw new TypeError(
                        "Super expression must either be null or a function, not " + typeof superClass
                    );
                subClass.prototype = Object.create(superClass && superClass.prototype, {
                    constructor: {
                        value: subClass,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                superClass && (
                    Object.setPrototypeOf
                        ? Object.setPrototypeOf(subClass, superClass)
                        : subClass.__proto__ = superClass
                )
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var _createClass = function () {
                    function defineProperties(target, props) {
                        for (var i = 0; i < props.length; i++) {
                            var descriptor = props[i];
                            descriptor.enumerable = descriptor.enumerable || !1,
                            descriptor.configurable = !0,
                            "value" in descriptor && (descriptor.writable = !0),
                            Object.defineProperty(target, descriptor.key, descriptor)
                        }
                    }
                    return function (Constructor, protoProps, staticProps) {
                        return protoProps && defineProperties(Constructor.prototype, protoProps),
                        staticProps && defineProperties(Constructor, staticProps),
                        Constructor
                    }
                }(),
                _constants = __webpack_require__(85),
                _encoder = __webpack_require__(86),
                _encoder2 = _interopRequireDefault(_encoder),
                _Barcode2 = __webpack_require__(29),
                _Barcode3 = _interopRequireDefault(_Barcode2),
                EAN = function (_Barcode) {
                    function EAN(data, options) {
                        _classCallCheck(this, EAN);
                        var _this = _possibleConstructorReturn(
                            this,
                            (EAN.__proto__ || Object.getPrototypeOf(EAN)).call(this, data, options)
                        );
                        return _this.fontSize = !options.flat && options.fontSize > 10 * options.width
                            ? 10 * options.width
                            : options.fontSize,
                        _this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin,
                        _this
                    }
                    return _inherits(EAN, _Barcode),
                    _createClass(EAN, [
                        {
                            key: "encode",
                            value: function encode() {
                                return this.options.flat
                                    ? this.encodeFlat()
                                    : this.encodeGuarded()
                            }
                        }, {
                            key: "leftText",
                            value: function leftText(from, to) {
                                return this
                                    .text
                                    .substr(from, to)
                            }
                        }, {
                            key: "leftEncode",
                            value: function leftEncode(data, structure) {
                                return (0, _encoder2.default)(data, structure)
                            }
                        }, {
                            key: "rightText",
                            value: function rightText(from, to) {
                                return this
                                    .text
                                    .substr(from, to)
                            }
                        }, {
                            key: "rightEncode",
                            value: function rightEncode(data, structure) {
                                return (0, _encoder2.default)(data, structure)
                            }
                        }, {
                            key: "encodeGuarded",
                            value: function encodeGuarded() {
                                var textOptions = {
                                        fontSize: this.fontSize
                                    },
                                    guardOptions = {
                                        height: this.guardHeight
                                    };
                                return [
                                    {
                                        data: _constants.SIDE_BIN,
                                        options: guardOptions
                                    }, {
                                        data: this.leftEncode(),
                                        text: this.leftText(),
                                        options: textOptions
                                    }, {
                                        data: _constants.MIDDLE_BIN,
                                        options: guardOptions
                                    }, {
                                        data: this.rightEncode(),
                                        text: this.rightText(),
                                        options: textOptions
                                    }, {
                                        data: _constants.SIDE_BIN,
                                        options: guardOptions
                                    }
                                ]
                            }
                        }, {
                            key: "encodeFlat",
                            value: function encodeFlat() {
                                return {
                                    data: [_constants.SIDE_BIN, this.leftEncode(), _constants.MIDDLE_BIN, this.rightEncode(), _constants.SIDE_BIN].join(
                                        ""
                                    ),
                                    text: this.text
                                }
                            }
                        }
                    ]),
                    EAN
                }(_Barcode3.default);
            exports.default = EAN
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule
                    ? obj
                    : {
                        default: obj
                    }
            }
            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) 
                    throw new TypeError("Cannot call a class as a function")
            }
            function _possibleConstructorReturn(self, call) {
                if (!self) 
                    throw new ReferenceError(
                        "this hasn't been initialised - super() hasn't been called"
                    );
                return !call || "object" != typeof call && "function" != typeof call
                    ? self
                    : call
            }
            function _inherits(subClass, superClass) {
                if ("function" != typeof superClass && null !== superClass) 
                    throw new TypeError(
                        "Super expression must either be null or a function, not " + typeof superClass
                    );
                subClass.prototype = Object.create(superClass && superClass.prototype, {
                    constructor: {
                        value: subClass,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                superClass && (
                    Object.setPrototypeOf
                        ? Object.setPrototypeOf(subClass, superClass)
                        : subClass.__proto__ = superClass
                )
            }
            function checksum(number) {
                var i,
                    result = 0;
                for (i = 1; i < 11; i += 2) 
                    result += parseInt(number[i]);
                for (i = 0; i < 11; i += 2) 
                    result += 3 * parseInt(number[i]);
                return (10 - result % 10) % 10
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || !1,
                        descriptor.configurable = !0,
                        "value" in descriptor && (descriptor.writable = !0),
                        Object.defineProperty(target, descriptor.key, descriptor)
                    }
                }
                return function (Constructor, protoProps, staticProps) {
                    return protoProps && defineProperties(Constructor.prototype, protoProps),
                    staticProps && defineProperties(Constructor, staticProps),
                    Constructor
                }
            }();
            exports.checksum = checksum;
            var _encoder = __webpack_require__(86),
                _encoder2 = _interopRequireDefault(_encoder),
                _Barcode2 = __webpack_require__(29),
                _Barcode3 = _interopRequireDefault(_Barcode2),
                UPC = function (_Barcode) {
                    function UPC(data, options) {
                        _classCallCheck(this, UPC),
                        -1 !== data.search(/^[0-9]{11}$/) && (data += checksum(data));
                        var _this = _possibleConstructorReturn(
                            this,
                            (UPC.__proto__ || Object.getPrototypeOf(UPC)).call(this, data, options)
                        );
                        return _this.displayValue = options.displayValue,
                        options.fontSize > 10 * options.width
                            ? _this.fontSize = 10 * options.width
                            : _this.fontSize = options.fontSize,
                        _this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin,
                        _this
                    }
                    return _inherits(UPC, _Barcode),
                    _createClass(UPC, [
                        {
                            key: "valid",
                            value: function valid() {
                                return -1 !== this
                                    .data
                                    .search(/^[0-9]{12}$/) && this
                                    .data[11] == checksum(this.data)
                            }
                        }, {
                            key: "encode",
                            value: function encode() {
                                return this.options.flat
                                    ? this.flatEncoding()
                                    : this.guardedEncoding()
                            }
                        }, {
                            key: "flatEncoding",
                            value: function flatEncoding() {
                                var result = "";
                                return result += "101",
                                result += (0, _encoder2.default)(this.data.substr(0, 6), "LLLLLL"),
                                result += "01010",
                                result += (0, _encoder2.default)(this.data.substr(6, 6), "RRRRRR"),
                                result += "101", {
                                    data: result,
                                    text: this.text
                                }
                            }
                        }, {
                            key: "guardedEncoding",
                            value: function guardedEncoding() {
                                var result = [];
                                return this.displayValue && result.push({
                                    data: "00000000",
                                    text: this
                                        .text
                                        .substr(0, 1),
                                    options: {
                                        textAlign: "left",
                                        fontSize: this.fontSize
                                    }
                                }),
                                result.push({
                                    data: "101" + (
                                        0,
                                        _encoder2.default
                                    )(this.data[0], "L"),
                                    options: {
                                        height: this.guardHeight
                                    }
                                }),
                                result.push({
                                    data: (0, _encoder2.default)(this.data.substr(1, 5), "LLLLL"),
                                    text: this
                                        .text
                                        .substr(1, 5),
                                    options: {
                                        fontSize: this.fontSize
                                    }
                                }),
                                result.push({
                                    data: "01010",
                                    options: {
                                        height: this.guardHeight
                                    }
                                }),
                                result.push({
                                    data: (0, _encoder2.default)(this.data.substr(6, 5), "RRRRR"),
                                    text: this
                                        .text
                                        .substr(6, 5),
                                    options: {
                                        fontSize: this.fontSize
                                    }
                                }),
                                result.push({
                                    data: (0, _encoder2.default)(this.data[11], "R") + "101",
                                    options: {
                                        height: this.guardHeight
                                    }
                                }),
                                this.displayValue && result.push({
                                    data: "00000000",
                                    text: this
                                        .text
                                        .substr(11, 1),
                                    options: {
                                        textAlign: "right",
                                        fontSize: this.fontSize
                                    }
                                }),
                                result
                            }
                        }
                    ]),
                    UPC
                }(_Barcode3.default);
            exports.default = UPC
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule
                    ? obj
                    : {
                        default: obj
                    }
            }
            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) 
                    throw new TypeError("Cannot call a class as a function")
            }
            function _possibleConstructorReturn(self, call) {
                if (!self) 
                    throw new ReferenceError(
                        "this hasn't been initialised - super() hasn't been called"
                    );
                return !call || "object" != typeof call && "function" != typeof call
                    ? self
                    : call
            }
            function _inherits(subClass, superClass) {
                if ("function" != typeof superClass && null !== superClass) 
                    throw new TypeError(
                        "Super expression must either be null or a function, not " + typeof superClass
                    );
                subClass.prototype = Object.create(superClass && superClass.prototype, {
                    constructor: {
                        value: subClass,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                superClass && (
                    Object.setPrototypeOf
                        ? Object.setPrototypeOf(subClass, superClass)
                        : subClass.__proto__ = superClass
                )
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var _createClass = function () {
                    function defineProperties(target, props) {
                        for (var i = 0; i < props.length; i++) {
                            var descriptor = props[i];
                            descriptor.enumerable = descriptor.enumerable || !1,
                            descriptor.configurable = !0,
                            "value" in descriptor && (descriptor.writable = !0),
                            Object.defineProperty(target, descriptor.key, descriptor)
                        }
                    }
                    return function (Constructor, protoProps, staticProps) {
                        return protoProps && defineProperties(Constructor.prototype, protoProps),
                        staticProps && defineProperties(Constructor, staticProps),
                        Constructor
                    }
                }(),
                _constants = __webpack_require__(675),
                _Barcode2 = __webpack_require__(29),
                _Barcode3 = _interopRequireDefault(_Barcode2),
                ITF = function (_Barcode) {
                    function ITF() {
                        return _classCallCheck(this, ITF),
                        _possibleConstructorReturn(
                            this,
                            (ITF.__proto__ || Object.getPrototypeOf(ITF)).apply(this, arguments)
                        )
                    }
                    return _inherits(ITF, _Barcode),
                    _createClass(ITF, [
                        {
                            key: "valid",
                            value: function valid() {
                                return -1 !== this
                                    .data
                                    .search(/^([0-9]{2})+$/)
                            }
                        }, {
                            key: "encode",
                            value: function encode() {
                                var _this2 = this,
                                    encoded = this
                                        .data
                                        .match(/.{2}/g)
                                        .map(function (pair) {
                                            return _this2.encodePair(pair)
                                        })
                                        .join("");
                                return {
                                    data: _constants.START_BIN + encoded + _constants.END_BIN,
                                    text: this.text
                                }
                            }
                        }, {
                            key: "encodePair",
                            value: function encodePair(pair) {
                                var second = _constants.BINARIES[pair[1]];
                                return _constants
                                    .BINARIES[pair[0]]
                                    .split("")
                                    .map(function (first, idx) {
                                        return (
                                            "1" === first
                                                ? "111"
                                                : "1"
                                        ) + (
                                            "1" === second[idx]
                                                ? "000"
                                                : "0"
                                        )
                                    })
                                    .join("")
                            }
                        }
                    ]),
                    ITF
                }(_Barcode3.default);
            exports.default = ITF
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function optionsFromStrings(options) {
                var intOptions = [
                    "width",
                    "height",
                    "textMargin",
                    "fontSize",
                    "margin",
                    "marginTop",
                    "marginBottom",
                    "marginLeft",
                    "marginRight"
                ];
                for (var intOption in intOptions) 
                    intOptions.hasOwnProperty(intOption) && (
                        intOption = intOptions[intOption],
                        "string" == typeof options[intOption] && (options[intOption] = parseInt(options[intOption], 10))
                    );
                return "string" == typeof options.displayValue && (
                    options.displayValue = "false" != options.displayValue
                ),
                options
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            }),
            exports.default = optionsFromStrings
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var defaults = {
                width: 2,
                height: 100,
                format: "auto",
                displayValue: !0,
                fontOptions: "",
                font: "monospace",
                text: void 0,
                textAlign: "center",
                textPosition: "bottom",
                textMargin: 2,
                fontSize: 20,
                background: "#ffffff",
                lineColor: "#000000",
                margin: 10,
                marginTop: void 0,
                marginBottom: void 0,
                marginLeft: void 0,
                marginRight: void 0,
                valid: function valid() {}
            };
            exports.default = defaults
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule
                    ? obj
                    : {
                        default: obj
                    }
            }
            function getEncodingHeight(encoding, options) {
                return options.height + (
                    options.displayValue && encoding.text.length > 0
                        ? options.fontSize + options.textMargin
                        : 0
                ) + options.marginTop + options.marginBottom
            }
            function getBarcodePadding(textWidth, barcodeWidth, options) {
                if (options.displayValue && barcodeWidth < textWidth) {
                    if ("center" == options.textAlign) 
                        return Math.floor((textWidth - barcodeWidth) / 2);
                    if ("left" == options.textAlign) 
                        return 0;
                    if ("right" == options.textAlign) 
                        return Math.floor(textWidth - barcodeWidth)
                }
                return 0
            }
            function calculateEncodingAttributes(encodings, barcodeOptions, context) {
                for (var i = 0; i < encodings.length; i++) {
                    var textWidth,
                        encoding = encodings[i],
                        options = (0, _merge2.default)(barcodeOptions, encoding.options);
                    textWidth = options.displayValue
                        ? messureText(encoding.text, options, context)
                        : 0;
                    var barcodeWidth = encoding.data.length * options.width;
                    encoding.width = Math.ceil(Math.max(textWidth, barcodeWidth)),
                    encoding.height = getEncodingHeight(encoding, options),
                    encoding.barcodePadding = getBarcodePadding(textWidth, barcodeWidth, options)
                }
            }
            function getTotalWidthOfEncodings(encodings) {
                for (var totalWidth = 0, i = 0; i < encodings.length; i++) 
                    totalWidth += encodings[i].width;
                return totalWidth
            }
            function getMaximumHeightOfEncodings(encodings) {
                for (var maxHeight = 0, i = 0; i < encodings.length; i++) 
                    encodings[i].height > maxHeight && (maxHeight = encodings[i].height);
                return maxHeight
            }
            function messureText(string, options, context) {
                var ctx;
                if (context) 
                    ctx = context;
                else {
                    if ("undefined" == typeof document) 
                        return 0;
                    ctx = document
                        .createElement("canvas")
                        .getContext("2d")
                }
                return ctx.font = options.fontOptions + " " + options.fontSize + "px " +
                    options.font,
                ctx
                    .measureText(string)
                    .width
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            }),
            exports.getTotalWidthOfEncodings = exports.calculateEncodingAttributes = exports.getBarcodePadding = exports.getEncodingHeight = exports.getMaximumHeightOfEncodings = void 0;
            var _merge = __webpack_require__(117),
                _merge2 = _interopRequireDefault(_merge);
            exports.getMaximumHeightOfEncodings = getMaximumHeightOfEncodings,
            exports.getEncodingHeight = getEncodingHeight,
            exports.getBarcodePadding = getBarcodePadding,
            exports.calculateEncodingAttributes = calculateEncodingAttributes,
            exports.getTotalWidthOfEncodings = getTotalWidthOfEncodings
        },
        function (module, exports, __webpack_require__) {
            "use strict";
            function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) 
                    throw new TypeError("Cannot call a class as a function")
            }
            function _possibleConstructorReturn(self, call) {
                if (!self) 
                    throw new ReferenceError(
                        "this hasn't been initialised - super() hasn't been called"
                    );
                return !call || "object" != typeof call && "function" != typeof call
                    ? self
                    : call
            }
            function _inherits(subClass, superClass) {
                if ("function" != typeof superClass && null !== superClass) 
                    throw new TypeError(
                        "Super expression must either be null or a function, not " + typeof superClass
                    );
                subClass.prototype = Object.create(superClass && superClass.prototype, {
                    constructor: {
                        value: subClass,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                superClass && (
                    Object.setPrototypeOf
                        ? Object.setPrototypeOf(subClass, superClass)
                        : subClass.__proto__ = superClass
                )
            }
            Object.defineProperty(exports, "__esModule", {
                value: !0
            });
            var InvalidInputException = function (_Error) {
                    function InvalidInputException(symbology, input) {
                        _classCallCheck(this, InvalidInputException);
                        var _this = _possibleConstructorReturn(
                            this,
                            (InvalidInputException.__proto__ || Object.getPrototypeOf(InvalidInputException)).call(this)
                        );
                        return _this.name = "InvalidInputException",
                        _this.symbology = symbology,
                        _this.input = input,
                        _this.message = '"' + _this.input + '" is not a valid input for ' + _this.symbology,
                        _this
                    }
                    return _inherits(InvalidInputException, _Error),
                    InvalidInputException
                }(Error),
                InvalidElementException = function (_Error2) {
                    function InvalidElementException() {
                        _classCallCheck(this, InvalidElementException);
                        var _this2 = _possibleConstructorReturn(
                            this,
                            (InvalidElementException.__proto__ || Object.getPrototypeOf(InvalidElementException)).call(this)
                        );
                        return _this2.name = "InvalidElementException",
                        _this2.message = "Not supported type to render on",
                        _this2
                    }
                    return _inherits(InvalidElementException, _Error2),
                    InvalidElementException
                }(Error),
                NoElementException = function (_Error3) {
                    function NoElementException() {
                        _classCallCheck(this, NoElementException);
                        var _this3 = _possibleConstructorReturn(
                            this,
                            (NoElementException.__proto__ || Object.getPrototypeOf(NoElementException)).call(this)
                        );
                        return _this3.name = "NoElementException",
                        _this3.message = "No element to render on.",
                        _this3
                    }
                    return _inherits(NoElementException, _Error3),
                    NoElementException
                }(Error);
            exports.InvalidInputException = InvalidInputException,
            exports.InvalidElementException = InvalidElementException,
            exports.NoElementException = NoElementException
        },,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        function (module, exports, __webpack_require__) {
            "use strict";
            __webpack_require__(3),
            __webpack_require__(616),
            __webpack_require__(618),
            __webpack_require__(620),
            __webpack_require__(622),
            __webpack_require__(624),
            __webpack_require__(626),
            __webpack_require__(628),
            __webpack_require__(629),
            __webpack_require__(650),
            __webpack_require__(651),
            __webpack_require__(653),
            __webpack_require__(654),
            __webpack_require__(656),
            __webpack_require__(657),
            __webpack_require__(277),
            __webpack_require__(48),
            __webpack_require__(694),
            __webpack_require__(697),
            __webpack_require__(88),
            __webpack_require__(698),
            __webpack_require__(699),
            __webpack_require__(700),
            __webpack_require__(701),
            __webpack_require__(702),
            __webpack_require__(703),
            (0, __webpack_require__(704).default)("/service-worker.js")
        },
        function (module, exports) {
            (
            function (window) {
                    "use strict";
                    function minErr(module, ErrorConstructor) {
                        return ErrorConstructor = ErrorConstructor || Error,
                        function () {
                            var paramPrefix,
                                i,
                                SKIP_INDEXES = 2,
                                templateArgs = arguments,
                                code = templateArgs[0],
                                message = "[" + (
                                    module
                                        ? module + ":"
                                        : ""
                                ) + code + "] ",
                                template = templateArgs[1];
                            for (
                                message += template.replace(/\{\d+\}/g, function (match) {
                                    var index = +match.slice(1, -1),
                                        shiftedIndex = index + SKIP_INDEXES;
                                    return shiftedIndex < templateArgs.length
                                        ? toDebugString(templateArgs[shiftedIndex])
                                        : match
                                }),
                                message += "\nhttp://errors.angularjs.org/1.6.1/" + (
                                    module
                                        ? module + "/"
                                        : ""
                                ) + code,
                                i = SKIP_INDEXES,
                                paramPrefix = "?"; i < templateArgs.length; i++,
                                paramPrefix = "&"
                            ) 
                                message += paramPrefix + "p" + (
                                    i - SKIP_INDEXES
                                ) + "=" + encodeURIComponent(toDebugString(templateArgs[i]));
                            return new ErrorConstructor(message)
                        }
                    }
                    function isArrayLike(obj) {
                        if (null == obj || isWindow(obj)) 
                            return !1;
                        if (isArray(obj) || isString(obj) || jqLite && obj instanceof jqLite) 
                            return !0;
                        var length = "length" in Object(obj) && obj.length;
                        return isNumber(length) && (
                            length >= 0 && (length - 1 in obj || obj instanceof Array) || "function" == typeof obj.item
                        )
                    }
                    function forEach(obj, iterator, context) {
                        var key,
                            length;
                        if (obj) 
                            if (isFunction(obj)) 
                                for (key in obj) 
                                    "prototype" !== key && "length" !== key && "name" !== key && obj.hasOwnProperty(
                                        key
                                    ) && iterator.call(context, obj[key], key, obj);
                        else if (isArray(obj) || isArrayLike(obj)) {
                                var isPrimitive = "object" != typeof obj;
                                for (key = 0, length = obj.length; key < length; key++) 
                                    (isPrimitive || key in obj) && iterator.call(context, obj[key], key, obj)
                            }
                        else if (obj.forEach && obj.forEach !== forEach) 
                            obj.forEach(iterator, context, obj);
                        else if (isBlankObject(obj)) 
                            for (key in obj) 
                                iterator.call(context, obj[key], key, obj);
                            else if ("function" == typeof obj.hasOwnProperty) 
                                for (key in obj) 
                                    obj.hasOwnProperty(key) && iterator.call(context, obj[key], key, obj);
                    else 
                            for (key in obj) 
                                hasOwnProperty.call(obj, key) && iterator.call(context, obj[key], key, obj);
                    return obj
                    }
                    function forEachSorted(obj, iterator, context) {
                        for (var keys = Object.keys(obj).sort(), i = 0; i < keys.length; i++) 
                            iterator.call(context, obj[keys[i]], keys[i]);
                        return keys
                    }
                    function reverseParams(iteratorFn) {
                        return function (value, key) {
                            iteratorFn(key, value)
                        }
                    }
                    function nextUid() {
                        return++ uid
                    }
                    function setHashKey(obj, h) {
                        h
                            ? obj.$$hashKey = h
                            : delete obj.$$hashKey
                    }
                    function baseExtend(dst, objs, deep) {
                        for (var h = dst.$$hashKey, i = 0, ii = objs.length; i < ii; ++i) {
                            var obj = objs[i];
                            if (isObject(obj) || isFunction(obj)) 
                                for (var keys = Object.keys(obj), j = 0, jj = keys.length; j < jj; j++) {
                                    var key = keys[j],
                                        src = obj[key];
                                    deep && isObject(src)
                                        ? isDate(src)
                                            ? dst[key] = new Date(src.valueOf())
                                            : isRegExp(src)
                                                ? dst[key] = new RegExp(src)
                                                : src.nodeName
                                                    ? dst[key] = src.cloneNode(!0)
                                                    : isElement(src)
                                                        ? dst[key] = src.clone()
                                                        : (isObject(dst[key]) || (
                                                            dst[key] = isArray(src)
                                                                ? []
                                                                : {}
                                                        ), baseExtend(dst[key], [src], !0))
                                        : dst[key] = src
                                }
                            }
                        return setHashKey(dst, h),
                        dst
                    }
                    function extend(dst) {
                        return baseExtend(dst, slice.call(arguments, 1), !1)
                    }
                    function merge(dst) {
                        return baseExtend(dst, slice.call(arguments, 1), !0)
                    }
                    function toInt(str) {
                        return parseInt(str, 10)
                    }
                    function inherit(parent, extra) {
                        return extend(Object.create(parent), extra)
                    }
                    function noop() {}
                    function identity($) {
                        return $
                    }
                    function valueFn(value) {
                        return function valueRef() {
                            return value
                        }
                    }
                    function hasCustomToString(obj) {
                        return isFunction(obj.toString) && obj.toString !== toString
                    }
                    function isUndefined(value) {
                        return void 0 === value
                    }
                    function isDefined(value) {
                        return void 0 !== value
                    }
                    function isObject(value) {
                        return null !== value && "object" == typeof value
                    }
                    function isBlankObject(value) {
                        return null !== value && "object" == typeof value && !getPrototypeOf(value)
                    }
                    function isString(value) {
                        return "string" == typeof value
                    }
                    function isNumber(value) {
                        return "number" == typeof value
                    }
                    function isDate(value) {
                        return "[object Date]" === toString.call(value)
                    }
                    function isFunction(value) {
                        return "function" == typeof value
                    }
                    function isRegExp(value) {
                        return "[object RegExp]" === toString.call(value)
                    }
                    function isWindow(obj) {
                        return obj && obj.window === obj
                    }
                    function isScope(obj) {
                        return obj && obj.$evalAsync && obj.$watch
                    }
                    function isFile(obj) {
                        return "[object File]" === toString.call(obj)
                    }
                    function isFormData(obj) {
                        return "[object FormData]" === toString.call(obj)
                    }
                    function isBlob(obj) {
                        return "[object Blob]" === toString.call(obj)
                    }
                    function isBoolean(value) {
                        return "boolean" == typeof value
                    }
                    function isPromiseLike(obj) {
                        return obj && isFunction(obj.then)
                    }
                    function isTypedArray(value) {
                        return value && isNumber(value.length) && TYPED_ARRAY_REGEXP.test(
                            toString.call(value)
                        )
                    }
                    function isArrayBuffer(obj) {
                        return "[object ArrayBuffer]" === toString.call(obj)
                    }
                    function isElement(node) {
                        return !(!node || !(node.nodeName || node.prop && node.attr && node.find))
                    }
                    function makeMap(str) {
                        var i,
                            obj = {},
                            items = str.split(",");
                        for (i = 0; i < items.length; i++) 
                            obj[items[i]] = !0;
                        return obj
                    }
                    function nodeName_(element) {
                        return lowercase(element.nodeName || element[0] && element[0].nodeName)
                    }
                    function includes(array, obj) {
                        return -1 !== Array
                            .prototype
                            .indexOf
                            .call(array, obj)
                    }
                    function arrayRemove(array, value) {
                        var index = array.indexOf(value);
                        return index >= 0 && array.splice(index, 1),
                        index
                    }
                    function copy(source, destination) {
                        function copyRecurse(source, destination) {
                            var key,
                                h = destination.$$hashKey;
                            if (isArray(source)) 
                                for (var i = 0, ii = source.length; i < ii; i++) 
                                    destination.push(copyElement(source[i]));
                                else if (isBlankObject(source)) 
                                    for (key in source) 
                                        destination[key] = copyElement(source[key]);
                        else if (source && "function" == typeof source.hasOwnProperty) 
                                for (key in source) 
                                    source.hasOwnProperty(key) && (destination[key] = copyElement(source[key]));
                        else 
                                for (key in source) 
                                    hasOwnProperty.call(source, key) && (
                                        destination[key] = copyElement(source[key])
                                    );
                        return setHashKey(destination, h),
                            destination
                        }
                        function copyElement(source) {
                            if (!isObject(source)) 
                                return source;
                            var index = stackSource.indexOf(source);
                            if (-1 !== index) 
                                return stackDest[index];
                            if (isWindow(source) || isScope(source)) 
                                throw ngMinErr(
                                    "cpws",
                                    "Can't copy! Making copies of Window or Scope instances is not supported."
                                );
                            var needsRecurse = !1,
                                destination = copyType(source);
                            return void 0 === destination && (
                                destination = isArray(source)
                                    ? []
                                    : Object.create(getPrototypeOf(source)),
                                needsRecurse = !0
                            ),
                            stackSource.push(source),
                            stackDest.push(destination),
                            needsRecurse
                                ? copyRecurse(source, destination)
                                : destination
                        }
                        function copyType(source) {
                            switch (toString.call(source)) {
                                case "[object Int8Array]":
                                case "[object Int16Array]":
                                case "[object Int32Array]":
                                case "[object Float32Array]":
                                case "[object Float64Array]":
                                case "[object Uint8Array]":
                                case "[object Uint8ClampedArray]":
                                case "[object Uint16Array]":
                                case "[object Uint32Array]":
                                    return new source.constructor(
                                        copyElement(source.buffer),
                                        source.byteOffset,
                                        source.length
                                    );
                                case "[object ArrayBuffer]":
                                    if (!source.slice) {
                                        var copied = new ArrayBuffer(source.byteLength);
                                        return new Uint8Array(copied).set(new Uint8Array(source)),
                                        copied
                                    }
                                    return source.slice(0);
                                case "[object Boolean]":
                                case "[object Number]":
                                case "[object String]":
                                case "[object Date]":
                                    return new source.constructor(source.valueOf());
                                case "[object RegExp]":
                                    var re = new RegExp(source.source, source.toString().match(/[^\/]*$/)[0]);
                                    return re.lastIndex = source.lastIndex,
                                    re;
                                case "[object Blob]":
                                    return new source.constructor([source], {type: source.type})
                            }
                            if (isFunction(source.cloneNode)) 
                                return source.cloneNode(!0)
                        }
                        var stackSource = [],
                            stackDest = [];
                        if (destination) {
                            if (isTypedArray(destination) || isArrayBuffer(destination)) 
                                throw ngMinErr("cpta", "Can't copy! TypedArray destination cannot be mutated.");
                            if (source === destination) 
                                throw ngMinErr("cpi", "Can't copy! Source and destination are identical.");
                            return isArray(destination)
                                ? destination.length = 0
                                : forEach(destination, function (value, key) {
                                    "$$hashKey" !== key && delete destination[key]
                                }),
                            stackSource.push(source),
                            stackDest.push(destination),
                            copyRecurse(source, destination)
                        }
                        return copyElement(source)
                    }
                    function equals(o1, o2) {
                        if (o1 === o2) 
                            return !0;
                        if (null === o1 || null === o2) 
                            return !1;
                        if (o1 !== o1 && o2 !== o2) 
                            return !0;
                        var length,
                            key,
                            keySet,
                            t1 = typeof o1,
                            t2 = typeof o2;
                        if (t1 === t2 && "object" === t1) {
                            if (!isArray(o1)) {
                                if (isDate(o1)) 
                                    return !!isDate(o2) && equals(o1.getTime(), o2.getTime());
                                if (isRegExp(o1)) 
                                    return !!isRegExp(o2) && o1.toString() === o2.toString();
                                if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2) || isDate(o2) || isRegExp(o2)) 
                                    return !1;
                                keySet = createMap();
                                for (key in o1) 
                                    if ("$" !== key.charAt(0) && !isFunction(o1[key])) {
                                        if (!equals(o1[key], o2[key])) 
                                            return !1;
                                        keySet[key] = !0
                                    }
                                for (key in o2) 
                                    if (!(key in keySet) && "$" !== key.charAt(0) && isDefined(o2[key]) && !isFunction(o2[key])) 
                                        return !1;
                            return !0
                            }
                            if (!isArray(o2)) 
                                return !1;
                            if ((length = o1.length) === o2.length) {
                                for (key = 0; key < length; key++) 
                                    if (!equals(o1[key], o2[key])) 
                                        return !1;
                            return !0
                            }
                        }
                        return !1
                    }
                    function concat(array1, array2, index) {
                        return array1.concat(slice.call(array2, index))
                    }
                    function sliceArgs(args, startIndex) {
                        return slice.call(args, startIndex || 0)
                    }
                    function bind(self, fn) {
                        var curryArgs = arguments.length > 2
                            ? sliceArgs(arguments, 2)
                            : [];
                        return !isFunction(fn) || fn instanceof RegExp
                            ? fn
                            : curryArgs.length
                                ? function () {
                                    return arguments.length
                                        ? fn.apply(self, concat(curryArgs, arguments, 0))
                                        : fn.apply(self, curryArgs)
                                }
                                : function () {
                                    return arguments.length
                                        ? fn.apply(self, arguments)
                                        : fn.call(self)
                                }
                    }
                    function toJsonReplacer(key, value) {
                        var val = value;
                        return "string" == typeof key && "$" === key.charAt(0) && "$" === key.charAt(1)
                            ? val = void 0
                            : isWindow(value)
                                ? val = "$WINDOW"
                                : value && window.document === value
                                    ? val = "$DOCUMENT"
                                    : isScope(value) && (val = "$SCOPE"),
                        val
                    }
                    function toJson(obj, pretty) {
                        if (!isUndefined(obj)) 
                            return isNumber(pretty) || (
                                pretty = pretty
                                    ? 2
                                    : null
                            ),
                            JSON.stringify(obj, toJsonReplacer, pretty)
                    }
                    function fromJson(json) {
                        return isString(json)
                            ? JSON.parse(json)
                            : json
                    }
                    function timezoneToOffset(timezone, fallback) {
                        timezone = timezone.replace(ALL_COLONS, "");
                        var requestedTimezoneOffset = Date.parse(
                            "Jan 01, 1970 00:00:00 " + timezone
                        ) / 6e4;
                        return isNumberNaN(requestedTimezoneOffset)
                            ? fallback
                            : requestedTimezoneOffset
                    }
                    function addDateMinutes(date, minutes) {
                        return date = new Date(date.getTime()),
                        date.setMinutes(date.getMinutes() + minutes),
                        date
                    }
                    function convertTimezoneToLocal(date, timezone, reverse) {
                        reverse = reverse
                            ? -1
                            : 1;
                        var dateTimezoneOffset = date.getTimezoneOffset();
                        return addDateMinutes(
                            date,
                            reverse * (timezoneToOffset(timezone, dateTimezoneOffset) - dateTimezoneOffset)
                        )
                    }
                    function startingTag(element) {
                        element = jqLite(element).clone();
                        try {
                            element.empty()
                        } catch (e) {}
                        var elemHtml = jqLite("<div>")
                            .append(element)
                            .html();
                        try {
                            return element[0].nodeType === NODE_TYPE_TEXT
                                ? lowercase(elemHtml)
                                : elemHtml
                                    .match(/^(<[^>]+>)/)[1]
                                    .replace(/^<([\w-]+)/, function (match, nodeName) {
                                        return "<" + lowercase(nodeName)
                                    })
                        } catch (e) {
                            return lowercase(elemHtml)
                        }
                    }
                    function tryDecodeURIComponent(value) {
                        try {
                            return decodeURIComponent(value)
                        } catch (e) {}
                    }
                    function parseKeyValue(keyValue) {
                        var obj = {};
                        return forEach((keyValue || "").split("&"), function (keyValue) {
                            var splitPoint,
                                key,
                                val;
                            keyValue && (
                                key = keyValue = keyValue.replace(/\+/g, "%20"),
                                splitPoint = keyValue.indexOf("="),
                                -1 !== splitPoint && (key = keyValue.substring(0, splitPoint), val = keyValue.substring(
                                    splitPoint + 1
                                )),
                                key = tryDecodeURIComponent(key),
                                isDefined(key) && (
                                    val = !isDefined(val) || tryDecodeURIComponent(val),
                                    hasOwnProperty.call(obj, key)
                                        ? isArray(obj[key])
                                            ? obj[key].push(val)
                                            : obj[key] = [obj[key], val]
                                        : obj[key] = val
                                )
                            )
                        }),
                        obj
                    }
                    function toKeyValue(obj) {
                        var parts = [];
                        return forEach(obj, function (value, key) {
                            isArray(value)
                                ? forEach(value, function (arrayValue) {
                                    parts.push(encodeUriQuery(key, !0) + (
                                        !0 === arrayValue
                                            ? ""
                                            : "=" + encodeUriQuery(arrayValue, !0)
                                    ))
                                })
                                : parts.push(encodeUriQuery(key, !0) + (
                                    !0 === value
                                        ? ""
                                        : "=" + encodeUriQuery(value, !0)
                                ))
                        }),
                        parts.length
                            ? parts.join("&")
                            : ""
                    }
                    function encodeUriSegment(val) {
                        return encodeUriQuery(val, !0)
                            .replace(/%26/gi, "&")
                            .replace(/%3D/gi, "=")
                            .replace(/%2B/gi, "+")
                    }
                    function encodeUriQuery(val, pctEncodeSpaces) {
                        return encodeURIComponent(val)
                            .replace(/%40/gi, "@")
                            .replace(/%3A/gi, ":")
                            .replace(/%24/g, "$")
                            .replace(/%2C/gi, ",")
                            .replace(/%3B/gi, ";")
                            .replace(
                                /%20/g,
                                pctEncodeSpaces
                                    ? "%20"
                                    : "+"
                            )
                    }
                    function getNgAttribute(element, ngAttr) {
                        var attr,
                            i,
                            ii = ngAttrPrefixes.length;
                        for (i = 0; i < ii; ++i) 
                            if (
                                attr = ngAttrPrefixes[i] + ngAttr,
                                isString(attr = element.getAttribute(attr))
                            ) 
                                return attr;
                    return null
                    }
                    function allowAutoBootstrap(document) {
                        if (!document.currentScript) 
                            return !0;
                        var src = document
                                .currentScript
                                .getAttribute("src"),
                            link = document.createElement("a");
                        if (link.href = src, document.location.origin === link.origin) 
                            return !0;
                        switch (link.protocol) {
                            case "http:":
                            case "https:":
                            case "ftp:":
                            case "blob:":
                            case "file:":
                            case "data:":
                                return !0;
                            default:
                                return !1
                        }
                    }
                    function angularInit(element, bootstrap) {
                        var appElement,
                            module,
                            config = {};
                        if (
                            forEach(ngAttrPrefixes, function (prefix) {
                                var name = prefix + "app";
                                !appElement && element.hasAttribute && element.hasAttribute(name) && (
                                    appElement = element,
                                    module = element.getAttribute(name)
                                )
                            }),
                            forEach(ngAttrPrefixes, function (prefix) {
                                var candidate,
                                    name = prefix + "app";
                                !appElement && (candidate = element.querySelector(
                                    "[" + name.replace(":", "\\:") + "]"
                                )) && (appElement = candidate, module = candidate.getAttribute(name))
                            }),
                            appElement
                        ) {
                            if (!isAutoBootstrapAllowed) 
                                return void window
                                    .console
                                    .error(
                                        "Angular: disabling automatic bootstrap. <script> protocol indicates an extensi" +
                                    "on, document.location.href does not match."
                                    );
                            config.strictDi = null !== getNgAttribute(appElement, "strict-di"),
                            bootstrap(
                                appElement,
                                module
                                    ? [module]
                                    : [],
                                config
                            )
                        }
                    }
                    function bootstrap(element, modules, config) {
                        isObject(config) || (config = {}),
                        config = extend({
                            strictDi: !1
                        }, config);
                        var doBootstrap = function () {
                                if (element = jqLite(element), element.injector()) {
                                    var tag = element[0] === window.document
                                        ? "document"
                                        : startingTag(element);
                                    throw ngMinErr(
                                        "btstrpd",
                                        "App already bootstrapped with this element '{0}'",
                                        tag.replace(/</, "&lt;").replace(/>/, "&gt;")
                                    )
                                }
                                modules = modules || [],
                                modules.unshift([
                                    "$provide",
                                    function ($provide) {
                                        $provide.value("$rootElement", element)
                                    }
                                ]),
                                config.debugInfoEnabled && modules.push([
                                    "$compileProvider",
                                    function ($compileProvider) {
                                        $compileProvider.debugInfoEnabled(!0)
                                    }
                                ]),
                                modules.unshift("ng");
                                var injector = createInjector(modules, config.strictDi);
                                return injector.invoke([
                                    "$rootScope",
                                    "$rootElement",
                                    "$compile",
                                    "$injector",
                                    function bootstrapApply(scope, element, compile, injector) {
                                        scope.$apply(function () {
                                            element.data("$injector", injector),
                                            compile(element)(scope)
                                        })
                                    }
                                ]),
                                injector
                            },
                            NG_ENABLE_DEBUG_INFO = /^NG_ENABLE_DEBUG_INFO!/,
                            NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;
                        if (window && NG_ENABLE_DEBUG_INFO.test(window.name) && (
                            config.debugInfoEnabled = !0,
                            window.name = window.name.replace(NG_ENABLE_DEBUG_INFO, "")
                        ), window && !NG_DEFER_BOOTSTRAP.test(window.name)) 
                            return doBootstrap();
                        window.name = window
                            .name
                            .replace(NG_DEFER_BOOTSTRAP, ""),
                        angular.resumeBootstrap = function (extraModules) {
                            return forEach(extraModules, function (module) {
                                modules.push(module)
                            }),
                            doBootstrap()
                        },
                        isFunction(angular.resumeDeferredBootstrap) && angular.resumeDeferredBootstrap()
                    }
                    function reloadWithDebugInfo() {
                        window.name = "NG_ENABLE_DEBUG_INFO!" + window.name,
                        window
                            .location
                            .reload()
                    }
                    function getTestability(rootElement) {
                        var injector = angular
                            .element(rootElement)
                            .injector();
                        if (!injector) 
                            throw ngMinErr(
                                "test",
                                "no injector found for element argument to getTestability"
                            );
                        return injector.get("$$testability")
                    }
                    function snake_case(name, separator) {
                        return separator = separator || "_",
                        name.replace(SNAKE_CASE_REGEXP, function (letter, pos) {
                            return (
                                pos
                                    ? separator
                                    : ""
                            ) + letter.toLowerCase()
                        })
                    }
                    function bindJQuery() {
                        var originalCleanData;
                        if (!bindJQueryFired) {
                            var jqName = jq();
                            jQuery = isUndefined(jqName)
                                ? window.jQuery
                                : jqName
                                    ? window[jqName]
                                    : void 0,
                            jQuery && jQuery.fn.on
                                ? (jqLite = jQuery, extend(jQuery.fn, {
                                    scope: JQLitePrototype.scope,
                                    isolateScope: JQLitePrototype.isolateScope,
                                    controller: JQLitePrototype.controller,
                                    injector: JQLitePrototype.injector,
                                    inheritedData: JQLitePrototype.inheritedData
                                }), originalCleanData = jQuery.cleanData, jQuery.cleanData = function (elems) {
                                    for (var events, elem, i = 0; null != (elem = elems[i]); i++) 
                                        (events = jQuery._data(elem, "events")) && events.$destroy && jQuery(elem).triggerHandler(
                                            "$destroy"
                                        );
                                    originalCleanData(elems)
                                })
                                : jqLite = JQLite,
                            angular.element = jqLite,
                            bindJQueryFired = !0
                        }
                    }
                    function assertArg(arg, name, reason) {
                        if (!arg) 
                            throw ngMinErr(
                                "areq",
                                "Argument '{0}' is {1}",
                                name || "?",
                                reason || "required"
                            );
                        return arg
                    }
                    function assertArgFn(arg, name, acceptArrayAnnotation) {
                        return acceptArrayAnnotation && isArray(arg) && (arg = arg[arg.length - 1]),
                        assertArg(isFunction(arg), name, "not a function, got " + (
                            arg && "object" == typeof arg
                                ? arg.constructor.name || "Object"
                                : typeof arg
                        )),
                        arg
                    }
                    function assertNotHasOwnProperty(name, context) {
                        if ("hasOwnProperty" === name) 
                            throw ngMinErr("badname", "hasOwnProperty is not a valid {0} name", context)
                    }
                    function getter(obj, path, bindFnToScope) {
                        if (!path) 
                            return obj;
                        for (
                            var key,
                            keys = path.split("."),
                            lastInstance = obj,
                            len = keys.length,
                            i = 0;
                            i < len;
                            i++
                        ) 
                            key = keys[i],
                            obj && (obj = (lastInstance = obj)[key]);
                        return !bindFnToScope && isFunction(obj)
                            ? bind(lastInstance, obj)
                            : obj
                    }
                    function getBlockNodes(nodes) {
                        for (
                            var blockNodes,
                            node = nodes[0],
                            endNode = nodes[nodes.length - 1],
                            i = 1;
                            node !== endNode && (node = node.nextSibling);
                            i++
                        ) 
                            (blockNodes || nodes[i] !== node) && (
                                blockNodes || (blockNodes = jqLite(slice.call(nodes, 0, i))),
                                blockNodes.push(node)
                            );
                        return blockNodes || nodes
                    }
                    function createMap() {
                        return Object.create(null)
                    }
                    function stringify(value) {
                        if (null == value) 
                            return "";
                        switch (typeof value) {
                            case "string":
                                break;
                            case "number":
                                value = "" + value;
                                break;
                            default:
                                value = !hasCustomToString(value) || isArray(value) || isDate(value)
                                    ? toJson(value)
                                    : value.toString()
                        }
                        return value
                    }
                    function setupModuleLoader(window) {
                        function ensure(obj, name, factory) {
                            return obj[name] || (obj[name] = factory())
                        }
                        var $injectorMinErr = minErr("$injector"),
                            ngMinErr = minErr("ng"),
                            angular = ensure(window, "angular", Object);
                        return angular.$$minErr = angular.$$minErr || minErr,
                        ensure(angular, "module", function () {
                            var modules = {};
                            return function module(name, requires, configFn) {
                                return function (name, context) {
                                    if ("hasOwnProperty" === name) 
                                        throw ngMinErr("badname", "hasOwnProperty is not a valid {0} name", context)
                                }(name, "module"),
                                requires && modules.hasOwnProperty(name) && (modules[name] = null),
                                ensure(modules, name, function () {
                                    function invokeLater(provider, method, insertMethod, queue) {
                                        return queue || (queue = invokeQueue),
                                        function () {
                                            return queue[insertMethod || "push"]([provider, method, arguments]),
                                            moduleInstance
                                        }
                                    }
                                    function invokeLaterAndSetModuleName(provider, method, queue) {
                                        return queue || (queue = invokeQueue),
                                        function (recipeName, factoryFunction) {
                                            return factoryFunction && isFunction(factoryFunction) && (
                                                factoryFunction.$$moduleName = name
                                            ),
                                            queue.push([provider, method, arguments]),
                                            moduleInstance
                                        }
                                    }
                                    if (!requires) 
                                        throw $injectorMinErr(
                                            "nomod",
                                            "Module '{0}' is not available! You either misspelled the module name or forgot" +
                                                " to load it. If registering a module ensure that you specify the dependencies " +
                                                "as the second argument.",
                                            name
                                        );
                                    var invokeQueue = [],
                                        configBlocks = [],
                                        runBlocks = [],
                                        config = invokeLater("$injector", "invoke", "push", configBlocks),
                                        moduleInstance = {
                                            _invokeQueue: invokeQueue,
                                            _configBlocks: configBlocks,
                                            _runBlocks: runBlocks,
                                            requires: requires,
                                            name: name,
                                            provider: invokeLaterAndSetModuleName("$provide", "provider"),
                                            factory: invokeLaterAndSetModuleName("$provide", "factory"),
                                            service: invokeLaterAndSetModuleName("$provide", "service"),
                                            value: invokeLater("$provide", "value"),
                                            constant: invokeLater("$provide", "constant", "unshift"),
                                            decorator: invokeLaterAndSetModuleName("$provide", "decorator", configBlocks),
                                            animation: invokeLaterAndSetModuleName("$animateProvider", "register"),
                                            filter: invokeLaterAndSetModuleName("$filterProvider", "register"),
                                            controller: invokeLaterAndSetModuleName("$controllerProvider", "register"),
                                            directive: invokeLaterAndSetModuleName("$compileProvider", "directive"),
                                            component: invokeLaterAndSetModuleName("$compileProvider", "component"),
                                            config: config,
                                            run: function (block) {
                                                return runBlocks.push(block),
                                                this
                                            }
                                        };
                                    return configFn && config(configFn),
                                    moduleInstance
                                })
                            }
                        })
                    }
                    function shallowCopy(src, dst) {
                        if (isArray(src)) {
                            dst = dst || [];
                            for (var i = 0, ii = src.length; i < ii; i++) 
                                dst[i] = src[i]
                        } else if (isObject(src)) {
                            dst = dst || {};
                            for (var key in src) 
                                "$" === key.charAt(0) && "$" === key.charAt(1) || (dst[key] = src[key])
                        }
                        return dst || src
                    }
                    function serializeObject(obj) {
                        var seen = [];
                        return JSON.stringify(obj, function (key, val) {
                            if (val = toJsonReplacer(key, val), isObject(val)) {
                                if (seen.indexOf(val) >= 0) 
                                    return "...";
                                seen.push(val)
                            }
                            return val
                        })
                    }
                    function toDebugString(obj) {
                        return "function" == typeof obj
                            ? obj
                                .toString()
                                .replace(/ \{[\s\S]*$/, "")
                            : isUndefined(obj)
                                ? "undefined"
                                : "string" != typeof obj
                                    ? serializeObject(obj)
                                    : obj
                    }
                    function publishExternalAPI(angular) {
                        extend(angular, {
                            bootstrap: bootstrap,
                            copy: copy,
                            extend: extend,
                            merge: merge,
                            equals: equals,
                            element: jqLite,
                            forEach: forEach,
                            injector: createInjector,
                            noop: noop,
                            bind: bind,
                            toJson: toJson,
                            fromJson: fromJson,
                            identity: identity,
                            isUndefined: isUndefined,
                            isDefined: isDefined,
                            isString: isString,
                            isFunction: isFunction,
                            isObject: isObject,
                            isNumber: isNumber,
                            isElement: isElement,
                            isArray: isArray,
                            version: version,
                            isDate: isDate,
                            lowercase: lowercase,
                            uppercase: uppercase,
                            callbacks: {
                                $$counter: 0
                            },
                            getTestability: getTestability,
                            reloadWithDebugInfo: reloadWithDebugInfo,
                            $$minErr: minErr,
                            $$csp: csp,
                            $$encodeUriSegment: encodeUriSegment,
                            $$encodeUriQuery: encodeUriQuery,
                            $$stringify: stringify
                        }),
                        (angularModule = setupModuleLoader(window))("ng", ["ngLocale"], [
                            "$provide",
                            function ngModule($provide) {
                                $provide.provider({$$sanitizeUri: $$SanitizeUriProvider}),
                                $provide
                                    .provider("$compile", $CompileProvider)
                                    .directive({
                                        a: htmlAnchorDirective,
                                        input: inputDirective,
                                        textarea: inputDirective,
                                        form: formDirective,
                                        script: scriptDirective,
                                        select: selectDirective,
                                        option: optionDirective,
                                        ngBind: ngBindDirective,
                                        ngBindHtml: ngBindHtmlDirective,
                                        ngBindTemplate: ngBindTemplateDirective,
                                        ngClass: ngClassDirective,
                                        ngClassEven: ngClassEvenDirective,
                                        ngClassOdd: ngClassOddDirective,
                                        ngCloak: ngCloakDirective,
                                        ngController: ngControllerDirective,
                                        ngForm: ngFormDirective,
                                        ngHide: ngHideDirective,
                                        ngIf: ngIfDirective,
                                        ngInclude: ngIncludeDirective,
                                        ngInit: ngInitDirective,
                                        ngNonBindable: ngNonBindableDirective,
                                        ngPluralize: ngPluralizeDirective,
                                        ngRepeat: ngRepeatDirective,
                                        ngShow: ngShowDirective,
                                        ngStyle: ngStyleDirective,
                                        ngSwitch: ngSwitchDirective,
                                        ngSwitchWhen: ngSwitchWhenDirective,
                                        ngSwitchDefault: ngSwitchDefaultDirective,
                                        ngOptions: ngOptionsDirective,
                                        ngTransclude: ngTranscludeDirective,
                                        ngModel: ngModelDirective,
                                        ngList: ngListDirective,
                                        ngChange: ngChangeDirective,
                                        pattern: patternDirective,
                                        ngPattern: patternDirective,
                                        required: requiredDirective,
                                        ngRequired: requiredDirective,
                                        minlength: minlengthDirective,
                                        ngMinlength: minlengthDirective,
                                        maxlength: maxlengthDirective,
                                        ngMaxlength: maxlengthDirective,
                                        ngValue: ngValueDirective,
                                        ngModelOptions: ngModelOptionsDirective
                                    })
                                    .directive({ngInclude: ngIncludeFillContentDirective})
                                    .directive(ngAttributeAliasDirectives)
                                    .directive(ngEventDirectives),
                                $provide.provider({
                                    $anchorScroll: $AnchorScrollProvider,
                                    $animate: $AnimateProvider,
                                    $animateCss: $CoreAnimateCssProvider,
                                    $$animateJs: $$CoreAnimateJsProvider,
                                    $$animateQueue: $$CoreAnimateQueueProvider,
                                    $$AnimateRunner: $$AnimateRunnerFactoryProvider,
                                    $$animateAsyncRun: $$AnimateAsyncRunFactoryProvider,
                                    $browser: $BrowserProvider,
                                    $cacheFactory: $CacheFactoryProvider,
                                    $controller: $ControllerProvider,
                                    $document: $DocumentProvider,
                                    $$isDocumentHidden: $$IsDocumentHiddenProvider,
                                    $exceptionHandler: $ExceptionHandlerProvider,
                                    $filter: $FilterProvider,
                                    $$forceReflow: $$ForceReflowProvider,
                                    $interpolate: $InterpolateProvider,
                                    $interval: $IntervalProvider,
                                    $http: $HttpProvider,
                                    $httpParamSerializer: $HttpParamSerializerProvider,
                                    $httpParamSerializerJQLike: $HttpParamSerializerJQLikeProvider,
                                    $httpBackend: $HttpBackendProvider,
                                    $xhrFactory: $xhrFactoryProvider,
                                    $jsonpCallbacks: $jsonpCallbacksProvider,
                                    $location: $LocationProvider,
                                    $log: $LogProvider,
                                    $parse: $ParseProvider,
                                    $rootScope: $RootScopeProvider,
                                    $q: $QProvider,
                                    $$q: $$QProvider,
                                    $sce: $SceProvider,
                                    $sceDelegate: $SceDelegateProvider,
                                    $sniffer: $SnifferProvider,
                                    $templateCache: $TemplateCacheProvider,
                                    $templateRequest: $TemplateRequestProvider,
                                    $$testability: $$TestabilityProvider,
                                    $timeout: $TimeoutProvider,
                                    $window: $WindowProvider,
                                    $$rAF: $$RAFProvider,
                                    $$jqLite: $$jqLiteProvider,
                                    $$HashMap: $$HashMapProvider,
                                    $$cookieReader: $$CookieReaderProvider
                                })
                            }
                        ])
                    }
                    function jqNextId() {
                        return++ jqId
                    }
                    function cssKebabToCamel(name) {
                        return kebabToCamel(name.replace(MS_HACK_REGEXP, "ms-"))
                    }
                    function fnCamelCaseReplace(all, letter) {
                        return letter.toUpperCase()
                    }
                    function kebabToCamel(name) {
                        return name.replace(DASH_LOWERCASE_REGEXP, fnCamelCaseReplace)
                    }
                    function jqLiteIsTextNode(html) {
                        return !HTML_REGEXP.test(html)
                    }
                    function jqLiteAcceptsData(node) {
                        var nodeType = node.nodeType;
                        return nodeType === NODE_TYPE_ELEMENT || !nodeType || nodeType === NODE_TYPE_DOCUMENT
                    }
                    function jqLiteHasData(node) {
                        for (var key in jqCache[node.ng339]) 
                            return !0;
                        return !1
                    }
                    function jqLiteCleanData(nodes) {
                        for (var i = 0, ii = nodes.length; i < ii; i++) 
                            jqLiteRemoveData(nodes[i])
                    }
                    function jqLiteBuildFragment(html, context) {
                        var tmp,
                            tag,
                            wrap,
                            i,
                            fragment = context.createDocumentFragment(),
                            nodes = [];
                        if (jqLiteIsTextNode(html)) 
                            nodes.push(context.createTextNode(html));
                        else {
                            for (
                                tmp = fragment.appendChild(context.createElement("div")),
                                tag = (TAG_NAME_REGEXP.exec(html) || ["", ""])[1].toLowerCase(),
                                wrap = wrapMap[tag] || wrapMap._default,
                                tmp.innerHTML = wrap[1] + html.replace(
                                    XHTML_TAG_REGEXP,
                                    "<$1></$2>"
                                ) + wrap[2],
                                i = wrap[0];
                                i--;
                            ) 
                                tmp = tmp.lastChild;
                            nodes = concat(nodes, tmp.childNodes),
                            tmp = fragment.firstChild,
                            tmp.textContent = ""
                        }
                        return fragment.textContent = "",
                        fragment.innerHTML = "",
                        forEach(nodes, function (node) {
                            fragment.appendChild(node)
                        }),
                        fragment
                    }
                    function jqLiteParseHTML(html, context) {
                        context = context || window.document;
                        var parsed;
                        return (parsed = SINGLE_TAG_REGEXP.exec(html))
                            ? [context.createElement(parsed[1])]
                            : (parsed = jqLiteBuildFragment(html, context))
                                ? parsed.childNodes
                                : []
                    }
                    function jqLiteWrapNode(node, wrapper) {
                        var parent = node.parentNode;
                        parent && parent.replaceChild(wrapper, node),
                        wrapper.appendChild(node)
                    }
                    function JQLite(element) {
                        if (element instanceof JQLite) 
                            return element;
                        var argIsString;
                        if (
                            isString(element) && (element = trim(element), argIsString = !0),
                            !(this instanceof JQLite)
                        ) {
                            if (argIsString && "<" !== element.charAt(0)) 
                                throw jqLiteMinErr(
                                    "nosel",
                                    "Looking up elements via selectors is not supported by jqLite! See: http://docs" +
                                        ".angularjs.org/api/angular.element"
                                );
                            return new JQLite(element)
                        }
                        argIsString
                            ? jqLiteAddNodes(this, jqLiteParseHTML(element))
                            : isFunction(element)
                                ? jqLiteReady(element)
                                : jqLiteAddNodes(this, element)
                    }
                    function jqLiteClone(element) {
                        return element.cloneNode(!0)
                    }
                    function jqLiteDealoc(element, onlyDescendants) {
                        if (onlyDescendants || jqLiteRemoveData(element), element.querySelectorAll) 
                            for (
                                var descendants = element.querySelectorAll("*"),
                                i = 0,
                                l = descendants.length;
                                i < l;
                                i++
                            ) 
                                jqLiteRemoveData(descendants[i])
                    }
                    function jqLiteOff(element, type, fn, unsupported) {
                        if (isDefined(unsupported)) 
                            throw jqLiteMinErr(
                                "offargs",
                                "jqLite#off() does not support the `selector` argument"
                            );
                        var expandoStore = jqLiteExpandoStore(element),
                            events = expandoStore && expandoStore.events,
                            handle = expandoStore && expandoStore.handle;
                        if (handle) 
                            if (type) {
                                var removeHandler = function (type) {
                                    var listenerFns = events[type];
                                    isDefined(fn) && arrayRemove(listenerFns || [], fn),
                                    isDefined(fn) && listenerFns && listenerFns.length > 0 || (
                                        element.removeEventListener(type, handle),
                                        delete events[type]
                                    )
                                };
                                forEach(type.split(" "), function (type) {
                                    removeHandler(type),
                                    MOUSE_EVENT_MAP[type] && removeHandler(MOUSE_EVENT_MAP[type])
                                })
                            } else 
                                for (type in events) 
                                    "$destroy" !== type && element.removeEventListener(type, handle),
                                    delete events[type]
                    }
                    function jqLiteRemoveData(element, name) {
                        var expandoId = element.ng339,
                            expandoStore = expandoId && jqCache[expandoId];
                        if (expandoStore) {
                            if (name) 
                                return void delete expandoStore.data[name];
                            expandoStore.handle && (
                                expandoStore.events.$destroy && expandoStore.handle({}, "$destroy"),
                                jqLiteOff(element)
                            ),
                            delete jqCache[expandoId],
                            element.ng339 = void 0
                        }
                    }
                    function jqLiteExpandoStore(element, createIfNecessary) {
                        var expandoId = element.ng339,
                            expandoStore = expandoId && jqCache[expandoId];
                        return createIfNecessary && !expandoStore && (
                            element.ng339 = expandoId = jqNextId(),
                            expandoStore = jqCache[expandoId] = {
                                events: {},
                                data: {},
                                handle: void 0
                            }
                        ),
                        expandoStore
                    }
                    function jqLiteData(element, key, value) {
                        if (jqLiteAcceptsData(element)) {
                            var prop,
                                isSimpleSetter = isDefined(value),
                                isSimpleGetter = !isSimpleSetter && key && !isObject(key),
                                massGetter = !key,
                                expandoStore = jqLiteExpandoStore(element, !isSimpleGetter),
                                data = expandoStore && expandoStore.data;
                            if (isSimpleSetter) 
                                data[kebabToCamel(key)] = value;
                            else {
                                if (massGetter) 
                                    return data;
                                if (isSimpleGetter) 
                                    return data && data[kebabToCamel(key)];
                                for (prop in key) 
                                    data[kebabToCamel(prop)] = key[prop]
                            }
                        }
                    }
                    function jqLiteHasClass(element, selector) {
                        return !!element.getAttribute && (" " + (
                            element.getAttribute("class") || ""
                        ) + " ")
                            .replace(/[\n\t]/g, " ")
                            .indexOf(" " + selector + " ") > -1
                    }
                    function jqLiteRemoveClass(element, cssClasses) {
                        cssClasses && element.setAttribute && forEach(
                            cssClasses.split(" "),
                            function (cssClass) {
                                element.setAttribute("class", trim((" " + (
                                    element.getAttribute("class") || ""
                                ) + " ").replace(/[\n\t]/g, " ").replace(" " + trim(cssClass) + " ", " ")))
                            }
                        )
                    }
                    function jqLiteAddClass(element, cssClasses) {
                        if (cssClasses && element.setAttribute) {
                            var existingClasses = (" " + (
                                element.getAttribute("class") || ""
                            ) + " ").replace(/[\n\t]/g, " ");
                            forEach(cssClasses.split(" "), function (cssClass) {
                                cssClass = trim(cssClass),
                                -1 === existingClasses.indexOf(" " + cssClass + " ") && (
                                    existingClasses += cssClass + " "
                                )
                            }),
                            element.setAttribute("class", trim(existingClasses))
                        }
                    }
                    function jqLiteAddNodes(root, elements) {
                        if (elements) 
                            if (elements.nodeType) 
                                root[root.length++] = elements;
                            else {
                                var length = elements.length;
                                if ("number" == typeof length && elements.window !== elements) {
                                    if (length) 
                                        for (var i = 0; i < length; i++) 
                                            root[root.length++] = elements[i]
                                } else 
                                    root[root.length++] = elements
                            }
                        }
                    function jqLiteController(element, name) {
                        return jqLiteInheritedData(element, "$" + (
                            name || "ngController"
                        ) + "Controller")
                    }
                    function jqLiteInheritedData(element, name, value) {
                        element.nodeType === NODE_TYPE_DOCUMENT && (element = element.documentElement);
                        for (
                            var names = isArray(name)
                                ? name
                                : [name]; element;
                        ) {
                            for (var i = 0, ii = names.length; i < ii; i++) 
                                if (isDefined(value = jqLite.data(element, names[i]))) 
                                    return value;
                        element = element.parentNode || element.nodeType === NODE_TYPE_DOCUMENT_FRAGMENT && element.host
                        }
                    }
                    function jqLiteEmpty(element) {
                        for (jqLiteDealoc(element, !0); element.firstChild;) 
                            element.removeChild(element.firstChild)
                    }
                    function jqLiteRemove(element, keepData) {
                        keepData || jqLiteDealoc(element);
                        var parent = element.parentNode;
                        parent && parent.removeChild(element)
                    }
                    function jqLiteDocumentLoaded(action, win) {
                        win = win || window,
                        "complete" === win.document.readyState
                            ? win.setTimeout(action)
                            : jqLite(win).on("load", action)
                    }
                    function jqLiteReady(fn) {
                        function trigger() {
                            window
                                .document
                                .removeEventListener("DOMContentLoaded", trigger),
                            window.removeEventListener("load", trigger),
                            fn()
                        }
                        "complete" === window.document.readyState
                            ? window.setTimeout(fn)
                            : (
                                window.document.addEventListener("DOMContentLoaded", trigger),
                                window.addEventListener("load", trigger)
                            )
                    }
                    function getBooleanAttrName(element, name) {
                        var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];
                        return booleanAttr && BOOLEAN_ELEMENTS[nodeName_(element)] && booleanAttr
                    }
                    function getAliasedAttrName(name) {
                        return ALIASED_ATTR[name]
                    }
                    function createEventHandler(element, events) {
                        var eventHandler = function (event, type) {
                            event.isDefaultPrevented = function () {
                                return event.defaultPrevented
                            };
                            var eventFns = events[type || event.type],
                                eventFnsLength = eventFns
                                    ? eventFns.length
                                    : 0;
                            if (eventFnsLength) {
                                if (isUndefined(event.immediatePropagationStopped)) {
                                    var originalStopImmediatePropagation = event.stopImmediatePropagation;
                                    event.stopImmediatePropagation = function () {
                                        event.immediatePropagationStopped = !0,
                                        event.stopPropagation && event.stopPropagation(),
                                        originalStopImmediatePropagation && originalStopImmediatePropagation.call(
                                            event
                                        )
                                    }
                                }
                                event.isImmediatePropagationStopped = function () {
                                    return !0 === event.immediatePropagationStopped
                                };
                                var handlerWrapper = eventFns.specialHandlerWrapper || defaultHandlerWrapper;
                                eventFnsLength > 1 && (eventFns = shallowCopy(eventFns));
                                for (var i = 0; i < eventFnsLength; i++) 
                                    event.isImmediatePropagationStopped() || handlerWrapper(
                                        element,
                                        event,
                                        eventFns[i]
                                    )
                            }
                        };
                        return eventHandler.elem = element,
                        eventHandler
                    }
                    function defaultHandlerWrapper(element, event, handler) {
                        handler.call(element, event)
                    }
                    function specialMouseHandlerWrapper(target, event, handler) {
                        var related = event.relatedTarget;
                        related && (related === target || jqLiteContains.call(target, related)) || handler.call(
                            target,
                            event
                        )
                    }
                    function $$jqLiteProvider() {
                        this.$get = function $$jqLite() {
                            return extend(JQLite, {
                                hasClass: function (node, classes) {
                                    return node.attr && (node = node[0]),
                                    jqLiteHasClass(node, classes)
                                },
                                addClass: function (node, classes) {
                                    return node.attr && (node = node[0]),
                                    jqLiteAddClass(node, classes)
                                },
                                removeClass: function (node, classes) {
                                    return node.attr && (node = node[0]),
                                    jqLiteRemoveClass(node, classes)
                                }
                            })
                        }
                    }
                    function hashKey(obj, nextUidFn) {
                        var key = obj && obj.$$hashKey;
                        if (key) 
                            return "function" == typeof key && (key = obj.$$hashKey()),
                            key;
                        var objType = typeof obj;
                        return key = "function" === objType || "object" === objType && null !== obj
                            ? obj.$$hashKey = objType + ":" + (
                                nextUidFn || nextUid
                            )()
                            : objType + ":" + obj
                    }
                    function HashMap(array, isolatedUid) {
                        if (isolatedUid) {
                            var uid = 0;
                            this.nextUid = function () {
                                return++ uid
                            }
                        }
                        forEach(array, this.put, this)
                    }
                    function stringifyFn(fn) {
                        return Function
                            .prototype
                            .toString
                            .call(fn) + " "
                    }
                    function extractArgs(fn) {
                        var fnText = stringifyFn(fn).replace(STRIP_COMMENTS, "");
                        return fnText.match(ARROW_ARG) || fnText.match(FN_ARGS)
                    }
                    function anonFn(fn) {
                        var args = extractArgs(fn);
                        return args
                            ? "function(" + (
                                args[1] || ""
                            ).replace(/[\s\r\n]+/, " ") + ")"
                            : "fn"
                    }
                    function annotate(fn, strictDi, name) {
                        var $inject,
                            argDecl,
                            last;
                        if ("function" == typeof fn) {
                            if (!($inject = fn.$inject)) {
                                if ($inject = [], fn.length) {
                                    if (strictDi) 
                                        throw isString(name) && name || (name = fn.name || anonFn(fn)),
                                        $injectorMinErr(
                                            "strictdi",
                                            "{0} is not using explicit annotation and cannot be invoked in strict mode",
                                            name
                                        );
                                    argDecl = extractArgs(fn),
                                    forEach(argDecl[1].split(FN_ARG_SPLIT), function (arg) {
                                        arg.replace(FN_ARG, function (all, underscore, name) {
                                            $inject.push(name)
                                        })
                                    })
                                }
                                fn.$inject = $inject
                            }
                        } else 
                            isArray(fn)
                                ? (
                                    last = fn.length - 1,
                                    assertArgFn(fn[last], "fn"),
                                    $inject = fn.slice(0, last)
                                )
                                : assertArgFn(fn, "fn", !0);
                        return $inject
                    }
                    function createInjector(modulesToLoad, strictDi) {
                        function supportObject(delegate) {
                            return function (key, value) {
                                if (!isObject(key)) 
                                    return delegate(key, value);
                                forEach(key, reverseParams(delegate))
                            }
                        }
                        function provider(name, provider_) {
                            if (
                                assertNotHasOwnProperty(name, "service"),
                                (isFunction(provider_) || isArray(provider_)) && (provider_ = providerInjector.instantiate(provider_)),
                                !provider_.$get
                            ) 
                                throw $injectorMinErr(
                                    "pget",
                                    "Provider '{0}' must define $get factory method.",
                                    name
                                );
                            return providerCache[name + providerSuffix] = provider_
                        }
                        function enforceReturnValue(name, factory) {
                            return function enforcedReturnValue() {
                                var result = instanceInjector.invoke(factory, this);
                                if (isUndefined(result)) 
                                    throw $injectorMinErr(
                                        "undef",
                                        "Provider '{0}' must return a value from $get factory method.",
                                        name
                                    );
                                return result
                            }
                        }
                        function factory(name, factoryFn, enforce) {
                            return provider(name, {
                                $get: !1 !== enforce
                                    ? enforceReturnValue(name, factoryFn)
                                    : factoryFn
                            })
                        }
                        function service(name, constructor) {
                            return factory(name, [
                                "$injector",
                                function ($injector) {
                                    return $injector.instantiate(constructor)
                                }
                            ])
                        }
                        function value(name, val) {
                            return factory(name, valueFn(val), !1)
                        }
                        function constant(name, value) {
                            assertNotHasOwnProperty(name, "constant"),
                            providerCache[name] = value,
                            instanceCache[name] = value
                        }
                        function decorator(serviceName, decorFn) {
                            var origProvider = providerInjector.get(
                                    serviceName + providerSuffix
                                ),
                                orig$get = origProvider.$get;
                            origProvider.$get = function () {
                                var origInstance = instanceInjector.invoke(orig$get, origProvider);
                                return instanceInjector.invoke(decorFn, null, {$delegate: origInstance})
                            }
                        }
                        function loadModules(modulesToLoad) {
                            assertArg(
                                isUndefined(modulesToLoad) || isArray(modulesToLoad),
                                "modulesToLoad",
                                "not an array"
                            );
                            var moduleFn,
                                runBlocks = [];
                            return forEach(modulesToLoad, function (module) {
                                function runInvokeQueue(queue) {
                                    var i,
                                        ii;
                                    for (i = 0, ii = queue.length; i < ii; i++) {
                                        var invokeArgs = queue[i],
                                            provider = providerInjector.get(invokeArgs[0]);
                                        provider[invokeArgs[1]].apply(provider, invokeArgs[2])
                                    }
                                }
                                if (!loadedModules.get(module)) {
                                    loadedModules.put(module, !0);
                                    try {
                                        isString(module)
                                            ? (
                                                moduleFn = angularModule(module),
                                                runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks),
                                                runInvokeQueue(moduleFn._invokeQueue),
                                                runInvokeQueue(moduleFn._configBlocks)
                                            )
                                            : isFunction(module)
                                                ? runBlocks.push(providerInjector.invoke(module))
                                                : isArray(module)
                                                    ? runBlocks.push(providerInjector.invoke(module))
                                                    : assertArgFn(module, "module")
                                    } catch (e) {
                                        throw isArray(module) && (module = module[module.length - 1]),
                                        e.message && e.stack && -1 === e
                                            .stack
                                            .indexOf(e.message) && (e = e.message + "\n" + e.stack),
                                        $injectorMinErr(
                                            "modulerr",
                                            "Failed to instantiate module {0} due to:\n{1}",
                                            module,
                                            e.stack || e.message || e
                                        )
                                    }
                                }
                            }),
                            runBlocks
                        }
                        function createInternalInjector(cache, factory) {
                            function getService(serviceName, caller) {
                                if (cache.hasOwnProperty(serviceName)) {
                                    if (cache[serviceName] === INSTANTIATING) 
                                        throw $injectorMinErr(
                                            "cdep",
                                            "Circular dependency found: {0}",
                                            serviceName + " <- " + path.join(" <- ")
                                        );
                                    return cache[serviceName]
                                }
                                try {
                                    return path.unshift(serviceName),
                                    cache[serviceName] = INSTANTIATING,
                                    cache[serviceName] = factory(serviceName, caller),
                                    cache[serviceName]
                                } catch (err) {
                                    throw cache[serviceName] === INSTANTIATING && delete cache[serviceName],
                                    err
                                } finally {
                                    path.shift()
                                }
                            }
                            function injectionArgs(fn, locals, serviceName) {
                                for (
                                    var args = [],
                                    $inject = createInjector.$$annotate(fn, strictDi, serviceName),
                                    i = 0,
                                    length = $inject.length;
                                    i < length;
                                    i++
                                ) {
                                    var key = $inject[i];
                                    if ("string" != typeof key) 
                                        throw $injectorMinErr(
                                            "itkn",
                                            "Incorrect injection token! Expected service name as string, got {0}",
                                            key
                                        );
                                    args.push(
                                        locals && locals.hasOwnProperty(key)
                                            ? locals[key]
                                            : getService(key, serviceName)
                                    )
                                }
                                return args
                            }
                            function isClass(func) {
                                if (msie || "function" != typeof func) 
                                    return !1;
                                var result = func.$$ngIsClass;
                                return isBoolean(result) || (
                                    result = func.$$ngIsClass = /^(?:class\b|constructor\()/.test(stringifyFn(func))
                                ),
                                result
                            }
                            function invoke(fn, self, locals, serviceName) {
                                "string" == typeof locals && (serviceName = locals, locals = null);
                                var args = injectionArgs(fn, locals, serviceName);
                                return isArray(fn) && (fn = fn[fn.length - 1]),
                                isClass(fn)
                                    ? (args.unshift(null), new(Function.prototype.bind.apply(fn, args)))
                                    : fn.apply(self, args)
                            }
                            function instantiate(Type, locals, serviceName) {
                                var ctor = isArray(Type)
                                        ? Type[Type.length - 1]
                                        : Type,
                                    args = injectionArgs(Type, locals, serviceName);
                                return args.unshift(null),
                                new(Function.prototype.bind.apply(ctor, args))
                            }
                            return {
                                invoke: invoke,
                                instantiate: instantiate,
                                get: getService,
                                annotate: createInjector.$$annotate,
                                has: function (name) {
                                    return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(
                                        name
                                    )
                                }
                            }
                        }
                        strictDi = !0 === strictDi;
                        var INSTANTIATING = {},
                            providerSuffix = "Provider",
                            path = [],
                            loadedModules = new HashMap([], !0),
                            providerCache = {
                                $provide: {
                                    provider: supportObject(provider),
                                    factory: supportObject(factory),
                                    service: supportObject(service),
                                    value: supportObject(value),
                                    constant: supportObject(constant),
                                    decorator: decorator
                                }
                            },
                            providerInjector = providerCache.$injector = createInternalInjector(
                                providerCache,
                                function (serviceName, caller) {
                                    throw angular.isString(caller) && path.push(caller),
                                    $injectorMinErr("unpr", "Unknown provider: {0}", path.join(" <- "))
                                }
                            ),
                            instanceCache = {},
                            protoInstanceInjector = createInternalInjector(
                                instanceCache,
                                function (serviceName, caller) {
                                    var provider = providerInjector.get(serviceName + providerSuffix, caller);
                                    return instanceInjector.invoke(provider.$get, provider, void 0, serviceName)
                                }
                            ),
                            instanceInjector = protoInstanceInjector;
                        providerCache["$injector" + providerSuffix] = {
                            $get: valueFn(protoInstanceInjector)
                        };
                        var runBlocks = loadModules(modulesToLoad);
                        return instanceInjector = protoInstanceInjector.get("$injector"),
                        instanceInjector.strictDi = strictDi,
                        forEach(runBlocks, function (fn) {
                            fn && instanceInjector.invoke(fn)
                        }),
                        instanceInjector
                    }
                    function $AnchorScrollProvider() {
                        var autoScrollingEnabled = !0;
                        this.disableAutoScrolling = function () {
                            autoScrollingEnabled = !1
                        },
                        this.$get = [
                            "$window",
                            "$location",
                            "$rootScope",
                            function ($window, $location, $rootScope) {
                                function getFirstAnchor(list) {
                                    var result = null;
                                    return Array
                                        .prototype
                                        .some
                                        .call(list, function (element) {
                                            if ("a" === nodeName_(element)) 
                                                return result = element,
                                                !0
                                        }),
                                    result
                                }
                                function getYOffset() {
                                    var offset = scroll.yOffset;
                                    if (isFunction(offset)) 
                                        offset = offset();
                                    else if (isElement(offset)) {
                                        var elem = offset[0],
                                            style = $window.getComputedStyle(elem);
                                        offset = "fixed" !== style.position
                                            ? 0
                                            : elem
                                                .getBoundingClientRect()
                                                .bottom
                                    } else 
                                        isNumber(offset) || (offset = 0);
                                    return offset
                                }
                                function scrollTo(elem) {
                                    if (elem) {
                                        elem.scrollIntoView();
                                        var offset = getYOffset();
                                        if (offset) {
                                            var elemTop = elem
                                                .getBoundingClientRect()
                                                .top;
                                            $window.scrollBy(0, elemTop - offset)
                                        }
                                    } else 
                                        $window.scrollTo(0, 0)
                                }
                                function scroll(hash) {
                                    hash = isString(hash)
                                        ? hash
                                        : isNumber(hash)
                                            ? hash.toString()
                                            : $location.hash();
                                    var elm;
                                    hash
                                        ? (elm = document.getElementById(hash))
                                            ? scrollTo(elm)
                                            : (elm = getFirstAnchor(document.getElementsByName(hash)))
                                                ? scrollTo(elm)
                                                : "top" === hash && scrollTo(null)
                                        : scrollTo(null)
                                }
                                var document = $window.document;
                                return autoScrollingEnabled && $rootScope.$watch(function autoScrollWatch() {
                                    return $location.hash()
                                }, function autoScrollWatchAction(newVal, oldVal) {
                                    newVal === oldVal && "" === newVal || jqLiteDocumentLoaded(function () {
                                        $rootScope.$evalAsync(scroll)
                                    })
                                }),
                                scroll
                            }
                        ]
                    }
                    function mergeClasses(a, b) {
                        return a || b
                            ? a
                                ? b
                                    ? (
                                        isArray(a) && (a = a.join(" ")),
                                        isArray(b) && (b = b.join(" ")),
                                        a + " " + b
                                    )
                                    : a
                                : b
                            : ""
                    }
                    function extractElementNode(element) {
                        for (var i = 0; i < element.length; i++) {
                            var elm = element[i];
                            if (elm.nodeType === ELEMENT_NODE) 
                                return elm
                        }
                    }
                    function splitClasses(classes) {
                        isString(classes) && (classes = classes.split(" "));
                        var obj = createMap();
                        return forEach(classes, function (klass) {
                            klass.length && (obj[klass] = !0)
                        }),
                        obj
                    }
                    function prepareAnimateOptions(options) {
                        return isObject(options)
                            ? options
                            : {}
                    }
                    function Browser(window, document, $log, $sniffer) {
                        function completeOutstandingRequest(fn) {
                            try {
                                fn.apply(null, sliceArgs(arguments, 1))
                            } finally {
                                if (0 === --outstandingRequestCount) 
                                    for (; outstandingRequestCallbacks.length;) 
                                        try {
                                            outstandingRequestCallbacks.pop()()
                                        } catch (e) {
                                            $log.error(e)
                                        }
                                    }
                        }
                        function getHash(url) {
                            var index = url.indexOf("#");
                            return -1 === index
                                ? ""
                                : url.substr(index)
                        }
                        function cacheStateAndFireUrlChange() {
                            pendingLocation = null,
                            cacheState(),
                            fireUrlChange()
                        }
                        function cacheState() {
                            cachedState = getCurrentState(),
                            cachedState = isUndefined(cachedState)
                                ? null
                                : cachedState,
                            equals(cachedState, lastCachedState) && (cachedState = lastCachedState),
                            lastCachedState = cachedState
                        }
                        function fireUrlChange() {
                            lastBrowserUrl === self.url() && lastHistoryState === cachedState || (
                                lastBrowserUrl = self.url(),
                                lastHistoryState = cachedState,
                                forEach(urlChangeListeners, function (listener) {
                                    listener(self.url(), cachedState)
                                })
                            )
                        }
                        var self = this,
                            location = window.location,
                            history = window.history,
                            setTimeout = window.setTimeout,
                            clearTimeout = window.clearTimeout,
                            pendingDeferIds = {};
                        self.isMock = !1;
                        var outstandingRequestCount = 0,
                            outstandingRequestCallbacks = [];
                        self.$$completeOutstandingRequest = completeOutstandingRequest,
                        self.$$incOutstandingRequestCount = function () {
                            outstandingRequestCount++
                        },
                        self.notifyWhenNoOutstandingRequests = function (callback) {
                            0 === outstandingRequestCount
                                ? callback()
                                : outstandingRequestCallbacks.push(callback)
                        };
                        var cachedState,
                            lastHistoryState,
                            lastBrowserUrl = location.href,
                            baseElement = document.find("base"),
                            pendingLocation = null,
                            getCurrentState = $sniffer.history
                                ? function getCurrentState() {
                                    try {
                                        return history.state
                                    } catch (e) {}
                                }
                                : noop;
                        cacheState(),
                        lastHistoryState = cachedState,
                        self.url = function (url, replace, state) {
                            if (
                                isUndefined(state) && (state = null),
                                location !== window.location && (location = window.location),
                                history !== window.history && (history = window.history),
                                url
                            ) {
                                var sameState = lastHistoryState === state;
                                if (lastBrowserUrl === url && (!$sniffer.history || sameState)) 
                                    return self;
                                var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);
                                return lastBrowserUrl = url,
                                lastHistoryState = state,
                                !$sniffer.history || sameBase && sameState
                                    ? (
                                        sameBase || (pendingLocation = url),
                                        replace
                                            ? location.replace(url)
                                            : sameBase
                                                ? location.hash = getHash(url)
                                                : location.href = url,
                                        location.href !== url && (pendingLocation = url)
                                    )
                                    : (history[
                                        replace
                                            ? "replaceState"
                                            : "pushState"
                                    ](state, "", url), cacheState(), lastHistoryState = cachedState),
                                pendingLocation && (pendingLocation = url),
                                self
                            }
                            return pendingLocation || location
                                .href
                                .replace(/%27/g, "'")
                        },
                        self.state = function () {
                            return cachedState
                        };
                        var urlChangeListeners = [],
                            urlChangeInit = !1,
                            lastCachedState = null;
                        self.onUrlChange = function (callback) {
                            return urlChangeInit || (
                                $sniffer.history && jqLite(window).on("popstate", cacheStateAndFireUrlChange),
                                jqLite(window).on("hashchange", cacheStateAndFireUrlChange),
                                urlChangeInit = !0
                            ),
                            urlChangeListeners.push(callback),
                            callback
                        },
                        self.$$applicationDestroyed = function () {
                            jqLite(window).off("hashchange popstate", cacheStateAndFireUrlChange)
                        },
                        self.$$checkUrlChange = fireUrlChange,
                        self.baseHref = function () {
                            var href = baseElement.attr("href");
                            return href
                                ? href.replace(/^(https?:)?\/\/[^\/]*/, "")
                                : ""
                        },
                        self.defer = function (fn, delay) {
                            var timeoutId;
                            return outstandingRequestCount++,
                            timeoutId = setTimeout(function () {
                                delete pendingDeferIds[timeoutId],
                                completeOutstandingRequest(fn)
                            }, delay || 0),
                            pendingDeferIds[timeoutId] = !0,
                            timeoutId
                        },
                        self.defer.cancel = function (deferId) {
                            return !!pendingDeferIds[deferId] && (
                                delete pendingDeferIds[deferId],
                                clearTimeout(deferId),
                                completeOutstandingRequest(noop),
                                !0
                            )
                        }
                    }
                    function $BrowserProvider() {
                        this.$get = [
                            "$window",
                            "$log",
                            "$sniffer",
                            "$document",
                            function ($window, $log, $sniffer, $document) {
                                return new Browser($window, $document, $log, $sniffer)
                            }
                        ]
                    }
                    function $CacheFactoryProvider() {
                        this.$get = function () {
                            function cacheFactory(cacheId, options) {
                                function refresh(entry) {
                                    entry !== freshEnd && (
                                        staleEnd
                                            ? staleEnd === entry && (staleEnd = entry.n)
                                            : staleEnd = entry,
                                        link(entry.n, entry.p),
                                        link(entry, freshEnd),
                                        freshEnd = entry,
                                        freshEnd.n = null
                                    )
                                }
                                function link(nextEntry, prevEntry) {
                                    nextEntry !== prevEntry && (
                                        nextEntry && (nextEntry.p = prevEntry),
                                        prevEntry && (prevEntry.n = nextEntry)
                                    )
                                }
                                if (cacheId in caches) 
                                    throw minErr("$cacheFactory")(
                                        "iid",
                                        "CacheId '{0}' is already taken!",
                                        cacheId
                                    );
                                var size = 0,
                                    stats = extend({}, options, {id: cacheId}),
                                    data = createMap(),
                                    capacity = options && options.capacity || Number.MAX_VALUE,
                                    lruHash = createMap(),
                                    freshEnd = null,
                                    staleEnd = null;
                                return caches[cacheId] = {
                                    put: function (key, value) {
                                        if (!isUndefined(value)) {
                                            if (capacity < Number.MAX_VALUE) {
                                                refresh(lruHash[key] || (lruHash[key] = {
                                                    key: key
                                                }))
                                            }
                                            return key in data || size++,
                                            data[key] = value,
                                            size > capacity && this.remove(staleEnd.key),
                                            value
                                        }
                                    },
                                    get: function (key) {
                                        if (capacity < Number.MAX_VALUE) {
                                            var lruEntry = lruHash[key];
                                            if (!lruEntry) 
                                                return;
                                            refresh(lruEntry)
                                        }
                                        return data[key]
                                    },
                                    remove: function (key) {
                                        if (capacity < Number.MAX_VALUE) {
                                            var lruEntry = lruHash[key];
                                            if (!lruEntry) 
                                                return;
                                            lruEntry === freshEnd && (freshEnd = lruEntry.p),
                                            lruEntry === staleEnd && (staleEnd = lruEntry.n),
                                            link(lruEntry.n, lruEntry.p),
                                            delete lruHash[key]
                                        }
                                        key in data && (delete data[key], size--)
                                    },
                                    removeAll: function () {
                                        data = createMap(),
                                        size = 0,
                                        lruHash = createMap(),
                                        freshEnd = staleEnd = null
                                    },
                                    destroy: function () {
                                        data = null,
                                        stats = null,
                                        lruHash = null,
                                        delete caches[cacheId]
                                    },
                                    info: function () {
                                        return extend({}, stats, {size: size})
                                    }
                                }
                            }
                            var caches = {};
                            return cacheFactory.info = function () {
                                var info = {};
                                return forEach(caches, function (cache, cacheId) {
                                    info[cacheId] = cache.info()
                                }),
                                info
                            },
                            cacheFactory.get = function (cacheId) {
                                return caches[cacheId]
                            },
                            cacheFactory
                        }
                    }
                    function $TemplateCacheProvider() {
                        this.$get = [
                            "$cacheFactory",
                            function ($cacheFactory) {
                                return $cacheFactory("templates")
                            }
                        ]
                    }
                    function UNINITIALIZED_VALUE() {}
                    function $CompileProvider($provide, $$sanitizeUriProvider) {
                        function parseIsolateBindings(scope, directiveName, isController) {
                            var LOCAL_REGEXP = /^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/,
                                bindings = createMap();
                            return forEach(scope, function (definition, scopeName) {
                                if (definition in bindingCache) 
                                    return void(bindings[scopeName] = bindingCache[definition]);
                                var match = definition.match(LOCAL_REGEXP);
                                if (!match) 
                                    throw $compileMinErr(
                                        "iscp",
                                        "Invalid {3} for directive '{0}'. Definition: {... {1}: '{2}' ...}",
                                        directiveName,
                                        scopeName,
                                        definition,
                                        isController
                                            ? "controller bindings definition"
                                            : "isolate scope definition"
                                    );
                                bindings[scopeName] = {
                                    mode: match[1][0],
                                    collection: "*" === match[2],
                                    optional: "?" === match[3],
                                    attrName: match[4] || scopeName
                                },
                                match[4] && (bindingCache[definition] = bindings[scopeName])
                            }),
                            bindings
                        }
                        function parseDirectiveBindings(directive, directiveName) {
                            var bindings = {
                                isolateScope: null,
                                bindToController: null
                            };
                            if (
                                isObject(directive.scope) && (
                                    !0 === directive.bindToController
                                        ? (
                                            bindings.bindToController = parseIsolateBindings(directive.scope, directiveName, !0),
                                            bindings.isolateScope = {}
                                        )
                                        : bindings.isolateScope = parseIsolateBindings(
                                            directive.scope,
                                            directiveName,
                                            !1
                                        )
                                ),
                                isObject(directive.bindToController) && (bindings.bindToController = parseIsolateBindings(directive.bindToController, directiveName, !0)),
                                bindings.bindToController && !directive.controller
                            ) 
                                throw $compileMinErr(
                                    "noctrl",
                                    "Cannot bind to controller without directive '{0}'s controller.",
                                    directiveName
                                );
                            return bindings
                        }
                        function assertValidDirectiveName(name) {
                            var letter = name.charAt(0);
                            if (!letter || letter !== lowercase(letter)) 
                                throw $compileMinErr(
                                    "baddir",
                                    "Directive/Component name '{0}' is invalid. The first character must be a lower" +
                                        "case letter",
                                    name
                                );
                            if (name !== name.trim()) 
                                throw $compileMinErr(
                                    "baddir",
                                    "Directive/Component name '{0}' is invalid. The name should not contain leading" +
                                        " or trailing whitespaces",
                                    name
                                )
                        }
                        function getDirectiveRequire(directive) {
                            var require = directive.require || directive.controller && directive.name;
                            return !isArray(require) && isObject(require) && forEach(
                                require,
                                function (value, key) {
                                    var match = value.match(REQUIRE_PREFIX_REGEXP);
                                    value.substring(match[0].length) || (require[key] = match[0] + key)
                                }
                            ),
                            require
                        }
                        function getDirectiveRestrict(restrict, name) {
                            if (restrict && (!isString(restrict) || !/[EACM]/.test(restrict))) 
                                throw $compileMinErr(
                                    "badrestrict",
                                    "Restrict property '{0}' of directive '{1}' is invalid",
                                    restrict,
                                    name
                                );
                            return restrict || "EA"
                        }
                        var hasDirectives = {},
                            Suffix = "Directive",
                            COMMENT_DIRECTIVE_REGEXP = /^\s*directive:\s*([\w-]+)\s+(.*)$/,
                            CLASS_DIRECTIVE_REGEXP = /(([\w-]+)(?::([^;]+))?;?)/,
                            ALL_OR_NOTHING_ATTRS = makeMap("ngSrc,ngSrcset,src,srcset"),
                            REQUIRE_PREFIX_REGEXP = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/,
                            EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/,
                            bindingCache = createMap();
                        this.directive = function registerDirective(name, directiveFactory) {
                            return assertArg(name, "name"),
                            assertNotHasOwnProperty(name, "directive"),
                            isString(name)
                                ? (
                                    assertValidDirectiveName(name),
                                    assertArg(directiveFactory, "directiveFactory"),
                                    hasDirectives.hasOwnProperty(name) || (hasDirectives[name] = [], $provide.factory(
                                        name + Suffix,
                                        [
                                            "$injector",
                                            "$exceptionHandler",
                                            function ($injector, $exceptionHandler) {
                                                var directives = [];
                                                return forEach(hasDirectives[name], function (directiveFactory, index) {
                                                    try {
                                                        var directive = $injector.invoke(directiveFactory);
                                                        isFunction(directive)
                                                            ? directive = {
                                                                compile: valueFn(directive)
                                                            }
                                                            : !directive.compile && directive.link && (
                                                                directive.compile = valueFn(directive.link)
                                                            ),
                                                        directive.priority = directive.priority || 0,
                                                        directive.index = index,
                                                        directive.name = directive.name || name,
                                                        directive.require = getDirectiveRequire(directive),
                                                        directive.restrict = getDirectiveRestrict(directive.restrict, name),
                                                        directive.$$moduleName = directiveFactory.$$moduleName,
                                                        directives.push(directive)
                                                    } catch (e) {
                                                        $exceptionHandler(e)
                                                    }
                                                }),
                                                directives
                                            }
                                        ]
                                    )),
                                    hasDirectives[name].push(directiveFactory)
                                )
                                : forEach(name, reverseParams(registerDirective)),
                            this
                        },
                        this.component = function registerComponent(name, options) {
                            function factory($injector) {
                                function makeInjectable(fn) {
                                    return isFunction(fn) || isArray(fn)
                                        ? function (tElement, tAttrs) {
                                            return $injector.invoke(fn, this, {
                                                $element: tElement,
                                                $attrs: tAttrs
                                            })
                                        }
                                        : fn
                                }
                                var template = options.template || options.templateUrl
                                        ? options.template
                                        : "",
                                    ddo = {
                                        controller: controller,
                                        controllerAs: identifierForController(options.controller) || options.controllerAs || "$ctrl",
                                        template: makeInjectable(template),
                                        templateUrl: makeInjectable(options.templateUrl),
                                        transclude: options.transclude,
                                        scope: {},
                                        bindToController: options.bindings || {},
                                        restrict: "E",
                                        require: options.require
                                    };
                                return forEach(options, function (val, key) {
                                    "$" === key.charAt(0) && (ddo[key] = val)
                                }),
                                ddo
                            }
                            var controller = options.controller || function () {};
                            return forEach(options, function (val, key) {
                                "$" === key.charAt(0) && (
                                    factory[key] = val,
                                    isFunction(controller) && (controller[key] = val)
                                )
                            }),
                            factory.$inject = ["$injector"],
                            this.directive(name, factory)
                        },
                        this.aHrefSanitizationWhitelist = function (regexp) {
                            return isDefined(regexp)
                                ? ($$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp), this)
                                : $$sanitizeUriProvider.aHrefSanitizationWhitelist()
                        },
                        this.imgSrcSanitizationWhitelist = function (regexp) {
                            return isDefined(regexp)
                                ? ($$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp), this)
                                : $$sanitizeUriProvider.imgSrcSanitizationWhitelist()
                        };
                        var debugInfoEnabled = !0;
                        this.debugInfoEnabled = function (enabled) {
                            return isDefined(enabled)
                                ? (debugInfoEnabled = enabled, this)
                                : debugInfoEnabled
                        };
                        var preAssignBindingsEnabled = !1;
                        this.preAssignBindingsEnabled = function (enabled) {
                            return isDefined(enabled)
                                ? (preAssignBindingsEnabled = enabled, this)
                                : preAssignBindingsEnabled
                        };
                        var TTL = 10;
                        this.onChangesTtl = function (value) {
                            return arguments.length
                                ? (TTL = value, this)
                                : TTL
                        };
                        var commentDirectivesEnabledConfig = !0;
                        this.commentDirectivesEnabled = function (value) {
                            return arguments.length
                                ? (commentDirectivesEnabledConfig = value, this)
                                : commentDirectivesEnabledConfig
                        };
                        var cssClassDirectivesEnabledConfig = !0;
                        this.cssClassDirectivesEnabled = function (value) {
                            return arguments.length
                                ? (cssClassDirectivesEnabledConfig = value, this)
                                : cssClassDirectivesEnabledConfig
                        },
                        this.$get = [
                            "$injector",
                            "$interpolate",
                            "$exceptionHandler",
                            "$templateRequest",
                            "$parse",
                            "$controller",
                            "$rootScope",
                            "$sce",
                            "$animate",
                            "$$sanitizeUri",
                            function (
                                $injector,
                                $interpolate,
                                $exceptionHandler,
                                $templateRequest,
                                $parse,
                                $controller,
                                $rootScope,
                                $sce,
                                $animate,
                                $$sanitizeUri
                            ) {
                                function flushOnChangesQueue() {
                                    try {
                                        if (!--onChangesTtl) 
                                            throw onChangesQueue = void 0,
                                            $compileMinErr(
                                                "infchng",
                                                "{0} $onChanges() iterations reached. Aborting!\n",
                                                TTL
                                            );
                                        $rootScope.$apply(function () {
                                            for (var errors = [], i = 0, ii = onChangesQueue.length; i < ii; ++i) 
                                                try {
                                                    onChangesQueue[i]()
                                                } catch (e) {
                                                    errors.push(e)
                                                }
                                            if (onChangesQueue = void 0, errors.length) 
                                                throw errors
                                        })
                                    } finally {
                                        onChangesTtl++
                                    }
                                }
                                function Attributes(element, attributesToCopy) {
                                    if (attributesToCopy) {
                                        var i,
                                            l,
                                            key,
                                            keys = Object.keys(attributesToCopy);
                                        for (i = 0, l = keys.length; i < l; i++) 
                                            key = keys[i],
                                            this[key] = attributesToCopy[key]
                                    } else 
                                        this.$attr = {};
                                    this.$$element = element
                                }
                                function setSpecialAttr(element, attrName, value) {
                                    specialAttrHolder.innerHTML = "<span " + attrName + ">";
                                    var attributes = specialAttrHolder.firstChild.attributes,
                                        attribute = attributes[0];
                                    attributes.removeNamedItem(attribute.name),
                                    attribute.value = value,
                                    element
                                        .attributes
                                        .setNamedItem(attribute)
                                }
                                function safeAddClass($element, className) {
                                    try {
                                        $element.addClass(className)
                                    } catch (e) {}
                                }
                                function compile(
                                    $compileNodes,
                                    transcludeFn,
                                    maxPriority,
                                    ignoreDirective,
                                    previousCompileContext
                                ) {
                                    $compileNodes instanceof jqLite || ($compileNodes = jqLite($compileNodes));
                                    var compositeLinkFn = compileNodes(
                                        $compileNodes,
                                        transcludeFn,
                                        $compileNodes,
                                        maxPriority,
                                        ignoreDirective,
                                        previousCompileContext
                                    );
                                    compile.$$addScopeClass($compileNodes);
                                    var namespace = null;
                                    return function publicLinkFn(scope, cloneConnectFn, options) {
                                        if (!$compileNodes) 
                                            throw $compileMinErr("multilink", "This element has already been linked.");
                                        assertArg(scope, "scope"),
                                        previousCompileContext && previousCompileContext.needsNewScope && (
                                            scope = scope.$parent.$new()
                                        ),
                                        options = options || {};
                                        var parentBoundTranscludeFn = options.parentBoundTranscludeFn,
                                            transcludeControllers = options.transcludeControllers,
                                            futureParentElement = options.futureParentElement;
                                        parentBoundTranscludeFn && parentBoundTranscludeFn.$$boundTransclude && (
                                            parentBoundTranscludeFn = parentBoundTranscludeFn.$$boundTransclude
                                        ),
                                        namespace || (namespace = detectNamespaceForChildElements(futureParentElement));
                                        var $linkNode;
                                        if (
                                            $linkNode = "html" !== namespace
                                                ? jqLite(wrapTemplate(namespace, jqLite("<div>").append($compileNodes).html()))
                                                : cloneConnectFn
                                                    ? JQLitePrototype.clone.call($compileNodes)
                                                    : $compileNodes,
                                            transcludeControllers
                                        ) 
                                            for (var controllerName in transcludeControllers) 
                                                $linkNode.data(
                                                    "$" + controllerName + "Controller",
                                                    transcludeControllers[controllerName].instance
                                                );
                                    return compile.$$addScopeInfo($linkNode, scope),
                                        cloneConnectFn && cloneConnectFn($linkNode, scope),
                                        compositeLinkFn && compositeLinkFn(
                                            scope,
                                            $linkNode,
                                            $linkNode,
                                            parentBoundTranscludeFn
                                        ),
                                        cloneConnectFn || ($compileNodes = compositeLinkFn = null),
                                        $linkNode
                                    }
                                }
                                function detectNamespaceForChildElements(parentElement) {
                                    var node = parentElement && parentElement[0];
                                    return node && "foreignobject" !== nodeName_(node) && toString
                                        .call(node)
                                        .match(/SVG/)
                                            ? "svg"
                                            : "html"
                                }
                                function compileNodes(
                                    nodeList,
                                    transcludeFn,
                                    $rootElement,
                                    maxPriority,
                                    ignoreDirective,
                                    previousCompileContext
                                ) {
                                    function compositeLinkFn(
                                        scope,
                                        nodeList,
                                        $rootElement,
                                        parentBoundTranscludeFn
                                    ) {
                                        var nodeLinkFn,
                                            childLinkFn,
                                            node,
                                            childScope,
                                            i,
                                            ii,
                                            idx,
                                            childBoundTranscludeFn,
                                            stableNodeList;
                                        if (nodeLinkFnFound) {
                                            var nodeListLength = nodeList.length;
                                            for (
                                                stableNodeList = new Array(nodeListLength),
                                                i = 0;
                                                i < linkFns.length;
                                                i += 3
                                            ) 
                                                idx = linkFns[i],
                                                stableNodeList[idx] = nodeList[idx]
                                        } else 
                                            stableNodeList = nodeList;
                                        for (i = 0, ii = linkFns.length; i < ii;) 
                                            node = stableNodeList[linkFns[i++]],
                                            nodeLinkFn = linkFns[i++],
                                            childLinkFn = linkFns[i++],
                                            nodeLinkFn
                                                ? (
                                                    nodeLinkFn.scope
                                                        ? (childScope = scope.$new(), compile.$$addScopeInfo(jqLite(node), childScope))
                                                        : childScope = scope,
                                                    childBoundTranscludeFn = nodeLinkFn.transcludeOnThisElement
                                                        ? createBoundTranscludeFn(
                                                            scope,
                                                            nodeLinkFn.transclude,
                                                            parentBoundTranscludeFn
                                                        )
                                                        : !nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn
                                                            ? parentBoundTranscludeFn
                                                            : !parentBoundTranscludeFn && transcludeFn
                                                                ? createBoundTranscludeFn(scope, transcludeFn)
                                                                : null,
                                                    nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn)
                                                )
                                                : childLinkFn && childLinkFn(
                                                    scope,
                                                    node.childNodes,
                                                    void 0,
                                                    parentBoundTranscludeFn
                                                )
                                        }
                                    for (
                                        var attrs,
                                        directives,
                                        nodeLinkFn,
                                        childNodes,
                                        childLinkFn,
                                        linkFnFound,
                                        nodeLinkFnFound,
                                        linkFns = [],
                                        notLiveList = isArray(nodeList) || nodeList instanceof jqLite,
                                        i = 0;
                                        i < nodeList.length;
                                        i++
                                    ) 
                                        attrs = new Attributes,
                                        11 === msie && mergeConsecutiveTextNodes(nodeList, i, notLiveList),
                                        directives = collectDirectives(
                                            nodeList[i],
                                            [],
                                            attrs,
                                            0 === i
                                                ? maxPriority
                                                : void 0,
                                            ignoreDirective
                                        ),
                                        nodeLinkFn = directives.length
                                            ? applyDirectivesToNode(
                                                directives,
                                                nodeList[i],
                                                attrs,
                                                transcludeFn,
                                                $rootElement,
                                                null,
                                                [],
                                                [],
                                                previousCompileContext
                                            )
                                            : null,
                                        nodeLinkFn && nodeLinkFn.scope && compile.$$addScopeClass(attrs.$$element),
                                        childLinkFn = nodeLinkFn && nodeLinkFn.terminal || !(
                                            childNodes = nodeList[i].childNodes
                                        ) || !childNodes.length
                                            ? null
                                            : compileNodes(
                                                childNodes,
                                                nodeLinkFn
                                                    ? (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement) && nodeLinkFn.transclude
                                                    : transcludeFn
                                            ),
                                        (nodeLinkFn || childLinkFn) && (
                                            linkFns.push(i, nodeLinkFn, childLinkFn),
                                            linkFnFound = !0,
                                            nodeLinkFnFound = nodeLinkFnFound || nodeLinkFn
                                        ),
                                        previousCompileContext = null;
                                    return linkFnFound
                                        ? compositeLinkFn
                                        : null
                                }
                                function mergeConsecutiveTextNodes(nodeList, idx, notLiveList) {
                                    var sibling,
                                        node = nodeList[idx],
                                        parent = node.parentNode;
                                    if (node.nodeType === NODE_TYPE_TEXT) 
                                        for (;;) {
                                            if (!(
                                                sibling = parent
                                                    ? node.nextSibling
                                                    : nodeList[idx + 1]
                                            ) || sibling.nodeType !== NODE_TYPE_TEXT) 
                                                break;
                                            node.nodeValue = node.nodeValue + sibling.nodeValue,
                                            sibling.parentNode && sibling
                                                .parentNode
                                                .removeChild(sibling),
                                            notLiveList && sibling === nodeList[idx + 1] && nodeList.splice(idx + 1, 1)
                                        }
                                    }
                                function createBoundTranscludeFn(
                                    scope,
                                    transcludeFn,
                                    previousBoundTranscludeFn
                                ) {
                                    function boundTranscludeFn(
                                        transcludedScope,
                                        cloneFn,
                                        controllers,
                                        futureParentElement,
                                        containingScope
                                    ) {
                                        return transcludedScope || (
                                            transcludedScope = scope.$new(!1, containingScope),
                                            transcludedScope.$$transcluded = !0
                                        ),
                                        transcludeFn(transcludedScope, cloneFn, {
                                            parentBoundTranscludeFn: previousBoundTranscludeFn,
                                            transcludeControllers: controllers,
                                            futureParentElement: futureParentElement
                                        })
                                    }
                                    var boundSlots = boundTranscludeFn.$$slots = createMap();
                                    for (var slotName in transcludeFn.$$slots) 
                                        transcludeFn.$$slots[slotName]
                                            ? boundSlots[slotName] = createBoundTranscludeFn(
                                                scope,
                                                transcludeFn.$$slots[slotName],
                                                previousBoundTranscludeFn
                                            )
                                            : boundSlots[slotName] = null;
                                    return boundTranscludeFn
                                }
                                function collectDirectives(
                                    node,
                                    directives,
                                    attrs,
                                    maxPriority,
                                    ignoreDirective
                                ) {
                                    var match,
                                        nodeName,
                                        className,
                                        nodeType = node.nodeType,
                                        attrsMap = attrs.$attr;
                                    switch (nodeType) {
                                        case NODE_TYPE_ELEMENT:
                                            nodeName = nodeName_(node),
                                            addDirective(
                                                directives,
                                                directiveNormalize(nodeName),
                                                "E",
                                                maxPriority,
                                                ignoreDirective
                                            );
                                            for (
                                                var attr,
                                                name,
                                                nName,
                                                ngAttrName,
                                                value,
                                                isNgAttr,
                                                nAttrs = node.attributes,
                                                j = 0,
                                                jj = nAttrs && nAttrs.length;
                                                j < jj;
                                                j++
                                            ) {
                                                var attrStartName = !1,
                                                    attrEndName = !1;
                                                attr = nAttrs[j],
                                                name = attr.name,
                                                value = attr.value,
                                                ngAttrName = directiveNormalize(name),
                                                isNgAttr = NG_ATTR_BINDING.test(ngAttrName),
                                                isNgAttr && (
                                                    name = name.replace(PREFIX_REGEXP, "").substr(8).replace(/_(.)/g, function (match, letter) {
                                                        return letter.toUpperCase()
                                                    })
                                                );
                                                var multiElementMatch = ngAttrName.match(MULTI_ELEMENT_DIR_RE);
                                                multiElementMatch && directiveIsMultiElement(multiElementMatch[1]) && (
                                                    attrStartName = name,
                                                    attrEndName = name.substr(0, name.length - 5) + "end",
                                                    name = name.substr(0, name.length - 6)
                                                ),
                                                nName = directiveNormalize(name.toLowerCase()),
                                                attrsMap[nName] = name,
                                                !isNgAttr && attrs.hasOwnProperty(nName) || (
                                                    attrs[nName] = value,
                                                    getBooleanAttrName(node, nName) && (attrs[nName] = !0)
                                                ),
                                                addAttrInterpolateDirective(node, directives, value, nName, isNgAttr),
                                                addDirective(
                                                    directives,
                                                    nName,
                                                    "A",
                                                    maxPriority,
                                                    ignoreDirective,
                                                    attrStartName,
                                                    attrEndName
                                                )
                                            }
                                            if (
                                                "input" === nodeName && "hidden" === node.getAttribute("type") && node.setAttribute("autocomplete", "off"),
                                                !cssClassDirectivesEnabled
                                            ) 
                                                break;
                                            if (
                                                className = node.className,
                                                isObject(className) && (className = className.animVal),
                                                isString(className) && "" !== className
                                            ) 
                                                for (; match = CLASS_DIRECTIVE_REGEXP.exec(className);) 
                                                    nName = directiveNormalize(match[2]),
                                                    addDirective(directives, nName, "C", maxPriority, ignoreDirective) && (
                                                        attrs[nName] = trim(match[3])
                                                    ),
                                                    className = className.substr(match.index + match[0].length);
                                        break;
                                        case NODE_TYPE_TEXT:
                                            addTextInterpolateDirective(directives, node.nodeValue);
                                            break;
                                        case NODE_TYPE_COMMENT:
                                            if (!commentDirectivesEnabled) 
                                                break;
                                            collectCommentDirectives(node, directives, attrs, maxPriority, ignoreDirective)
                                    }
                                    return directives.sort(byPriority),
                                    directives
                                }
                                function collectCommentDirectives(
                                    node,
                                    directives,
                                    attrs,
                                    maxPriority,
                                    ignoreDirective
                                ) {
                                    try {
                                        var match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);
                                        if (match) {
                                            var nName = directiveNormalize(match[1]);
                                            addDirective(directives, nName, "M", maxPriority, ignoreDirective) && (
                                                attrs[nName] = trim(match[2])
                                            )
                                        }
                                    } catch (e) {}
                                }
                                function groupScan(node, attrStart, attrEnd) {
                                    var nodes = [],
                                        depth = 0;
                                    if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) 
                                        do {
                                            if (!node) 
                                                throw $compileMinErr(
                                                    "uterdir",
                                                    "Unterminated attribute, found '{0}' but no matching '{1}' found.",
                                                    attrStart,
                                                    attrEnd
                                                );
                                            node.nodeType === NODE_TYPE_ELEMENT && (
                                                node.hasAttribute(attrStart) && depth++,
                                                node.hasAttribute(attrEnd) && depth--
                                            ),
                                            nodes.push(node),
                                            node = node.nextSibling
                                        } while (depth > 0);
                                    else 
                                        nodes.push(node);
                                    return jqLite(nodes)
                                }
                                function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {
                                    return function groupedElementsLink(
                                        scope,
                                        element,
                                        attrs,
                                        controllers,
                                        transcludeFn
                                    ) {
                                        return element = groupScan(element[0], attrStart, attrEnd),
                                        linkFn(scope, element, attrs, controllers, transcludeFn)
                                    }
                                }
                                function compilationGenerator(
                                    eager,
                                    $compileNodes,
                                    transcludeFn,
                                    maxPriority,
                                    ignoreDirective,
                                    previousCompileContext
                                ) {
                                    var compiled;
                                    return eager
                                        ? compile(
                                            $compileNodes,
                                            transcludeFn,
                                            maxPriority,
                                            ignoreDirective,
                                            previousCompileContext
                                        )
                                        : function lazyCompilation() {
                                            return compiled || (compiled = compile(
                                                $compileNodes,
                                                transcludeFn,
                                                maxPriority,
                                                ignoreDirective,
                                                previousCompileContext
                                            ), $compileNodes = transcludeFn = previousCompileContext = null),
                                            compiled.apply(this, arguments)
                                        }
                                }
                                function applyDirectivesToNode(
                                    directives,
                                    compileNode,
                                    templateAttrs,
                                    transcludeFn,
                                    jqCollection,
                                    originalReplaceDirective,
                                    preLinkFns,
                                    postLinkFns,
                                    previousCompileContext
                                ) {
                                    function addLinkFns(pre, post, attrStart, attrEnd) {
                                        pre && (
                                            attrStart && (pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd)),
                                            pre.require = directive.require,
                                            pre.directiveName = directiveName,
                                            (newIsolateScopeDirective === directive || directive.$$isolateScope) && (pre = cloneAndAnnotateFn(pre, {
                                                isolateScope: !0
                                            })),
                                            preLinkFns.push(pre)
                                        ),
                                        post && (
                                            attrStart && (post = groupElementsLinkFnWrapper(post, attrStart, attrEnd)),
                                            post.require = directive.require,
                                            post.directiveName = directiveName,
                                            (newIsolateScopeDirective === directive || directive.$$isolateScope) && (post = cloneAndAnnotateFn(post, {
                                                isolateScope: !0
                                            })),
                                            postLinkFns.push(post)
                                        )
                                    }
                                    function nodeLinkFn(
                                        childLinkFn,
                                        scope,
                                        linkNode,
                                        $rootElement,
                                        boundTranscludeFn
                                    ) {
                                        function controllersBoundTransclude(
                                            scope,
                                            cloneAttachFn,
                                            futureParentElement,
                                            slotName
                                        ) {
                                            var transcludeControllers;
                                            if (
                                                isScope(scope) || (
                                                    slotName = futureParentElement,
                                                    futureParentElement = cloneAttachFn,
                                                    cloneAttachFn = scope,
                                                    scope = void 0
                                                ),
                                                hasElementTranscludeDirective && (transcludeControllers = elementControllers),
                                                futureParentElement || (
                                                    futureParentElement = hasElementTranscludeDirective
                                                        ? $element.parent()
                                                        : $element
                                                ),
                                                !slotName
                                            ) 
                                                return boundTranscludeFn(
                                                    scope,
                                                    cloneAttachFn,
                                                    transcludeControllers,
                                                    futureParentElement,
                                                    scopeToChild
                                                );
                                            var slotTranscludeFn = boundTranscludeFn.$$slots[slotName];
                                            if (slotTranscludeFn) 
                                                return slotTranscludeFn(
                                                    scope,
                                                    cloneAttachFn,
                                                    transcludeControllers,
                                                    futureParentElement,
                                                    scopeToChild
                                                );
                                            if (isUndefined(slotTranscludeFn)) 
                                                throw $compileMinErr(
                                                    "noslot",
                                                    'No parent directive that requires a transclusion with slot name "{0}". Element' +
                                                            ': {1}',
                                                    slotName,
                                                    startingTag($element)
                                                )
                                        }
                                        var i,
                                            ii,
                                            linkFn,
                                            isolateScope,
                                            controllerScope,
                                            elementControllers,
                                            transcludeFn,
                                            $element,
                                            attrs,
                                            scopeBindingInfo;
                                        compileNode === linkNode
                                            ? (attrs = templateAttrs, $element = templateAttrs.$$element)
                                            : (
                                                $element = jqLite(linkNode),
                                                attrs = new Attributes($element, templateAttrs)
                                            ),
                                        controllerScope = scope,
                                        newIsolateScopeDirective
                                            ? isolateScope = scope.$new(!0)
                                            : newScopeDirective && (controllerScope = scope.$parent),
                                        boundTranscludeFn && (
                                            transcludeFn = controllersBoundTransclude,
                                            transcludeFn.$$boundTransclude = boundTranscludeFn,
                                            transcludeFn.isSlotFilled = function (slotName) {
                                                return !!boundTranscludeFn.$$slots[slotName]
                                            }
                                        ),
                                        controllerDirectives && (elementControllers = setupControllers(
                                            $element,
                                            attrs,
                                            transcludeFn,
                                            controllerDirectives,
                                            isolateScope,
                                            scope,
                                            newIsolateScopeDirective
                                        )),
                                        newIsolateScopeDirective && (
                                            compile.$$addScopeInfo(
                                                $element,
                                                isolateScope,
                                                !0,
                                                !(templateDirective && (templateDirective === newIsolateScopeDirective || templateDirective === newIsolateScopeDirective.$$originalDirective))
                                            ),
                                            compile.$$addScopeClass($element, !0),
                                            isolateScope.$$isolateBindings = newIsolateScopeDirective.$$isolateBindings,
                                            scopeBindingInfo = initializeDirectiveBindings(
                                                scope,
                                                attrs,
                                                isolateScope,
                                                isolateScope.$$isolateBindings,
                                                newIsolateScopeDirective
                                            ),
                                            scopeBindingInfo.removeWatches && isolateScope.$on("$destroy", scopeBindingInfo.removeWatches)
                                        );
                                        for (var name in elementControllers) {
                                            var controllerDirective = controllerDirectives[name],
                                                controller = elementControllers[name],
                                                bindings = controllerDirective.$$bindings.bindToController;
                                            if (preAssignBindingsEnabled) {
                                                controller.bindingInfo = bindings
                                                    ? initializeDirectiveBindings(
                                                        controllerScope,
                                                        attrs,
                                                        controller.instance,
                                                        bindings,
                                                        controllerDirective
                                                    )
                                                    : {};
                                                var controllerResult = controller();
                                                controllerResult !== controller.instance && (
                                                    controller.instance = controllerResult,
                                                    $element.data(
                                                        "$" + controllerDirective.name + "Controller",
                                                        controllerResult
                                                    ),
                                                    controller.bindingInfo.removeWatches && controller.bindingInfo.removeWatches(),
                                                    controller.bindingInfo = initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective)
                                                )
                                            } else 
                                                controller.instance = controller(),
                                                $element.data(
                                                    "$" + controllerDirective.name + "Controller",
                                                    controller.instance
                                                ),
                                                controller.bindingInfo = initializeDirectiveBindings(
                                                    controllerScope,
                                                    attrs,
                                                    controller.instance,
                                                    bindings,
                                                    controllerDirective
                                                )
                                        }
                                        for (
                                            forEach(controllerDirectives, function (controllerDirective, name) {
                                                var require = controllerDirective.require;
                                                controllerDirective.bindToController && !isArray(require) && isObject(require) && extend(
                                                    elementControllers[name].instance,
                                                    getControllers(name, require, $element, elementControllers)
                                                )
                                            }),
                                            forEach(elementControllers, function (controller) {
                                                var controllerInstance = controller.instance;
                                                if (isFunction(controllerInstance.$onChanges)) 
                                                    try {
                                                        controllerInstance.$onChanges(controller.bindingInfo.initialChanges)
                                                    } catch (e) {
                                                        $exceptionHandler(e)
                                                    }
                                                if (isFunction(controllerInstance.$onInit)) 
                                                    try {
                                                        controllerInstance.$onInit()
                                                    } catch (e) {
                                                        $exceptionHandler(e)
                                                    }
                                                isFunction(controllerInstance.$doCheck) && (
                                                    controllerScope.$watch(function () {
                                                        controllerInstance.$doCheck()
                                                    }),
                                                    controllerInstance.$doCheck()
                                                ),
                                                isFunction(controllerInstance.$onDestroy) && controllerScope.$on(
                                                    "$destroy",
                                                    function callOnDestroyHook() {
                                                        controllerInstance.$onDestroy()
                                                    }
                                                )
                                            }),
                                            i = 0,
                                            ii = preLinkFns.length; i < ii; i++
                                        ) 
                                            linkFn = preLinkFns[i],
                                            invokeLinkFn(
                                                linkFn,
                                                linkFn.isolateScope
                                                    ? isolateScope
                                                    : scope,
                                                $element,
                                                attrs,
                                                linkFn.require && getControllers(
                                                    linkFn.directiveName,
                                                    linkFn.require,
                                                    $element,
                                                    elementControllers
                                                ),
                                                transcludeFn
                                            );
                                        var scopeToChild = scope;
                                        for (
                                            newIsolateScopeDirective && (newIsolateScopeDirective.template || null === newIsolateScopeDirective.templateUrl) && (scopeToChild = isolateScope),
                                            childLinkFn && childLinkFn(scopeToChild, linkNode.childNodes, void 0, boundTranscludeFn),
                                            i = postLinkFns.length - 1;
                                            i >= 0;
                                            i--
                                        ) 
                                            linkFn = postLinkFns[i],
                                            invokeLinkFn(
                                                linkFn,
                                                linkFn.isolateScope
                                                    ? isolateScope
                                                    : scope,
                                                $element,
                                                attrs,
                                                linkFn.require && getControllers(
                                                    linkFn.directiveName,
                                                    linkFn.require,
                                                    $element,
                                                    elementControllers
                                                ),
                                                transcludeFn
                                            );
                                        forEach(elementControllers, function (controller) {
                                            var controllerInstance = controller.instance;
                                            isFunction(controllerInstance.$postLink) && controllerInstance.$postLink()
                                        })
                                    }
                                    previousCompileContext = previousCompileContext || {};
                                    for (
                                        var directive,
                                        directiveName,
                                        $template,
                                        linkFn,
                                        directiveValue,
                                        terminalPriority = -Number.MAX_VALUE,
                                        newScopeDirective = previousCompileContext.newScopeDirective,
                                        controllerDirectives = previousCompileContext.controllerDirectives,
                                        newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective,
                                        templateDirective = previousCompileContext.templateDirective,
                                        nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective,
                                        hasTranscludeDirective = !1,
                                        hasTemplate = !1,
                                        hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective,
                                        $compileNode = templateAttrs.$$element = jqLite(compileNode),
                                        replaceDirective = originalReplaceDirective,
                                        childTranscludeFn = transcludeFn,
                                        didScanForMultipleTransclusion = !1,
                                        mightHaveMultipleTransclusionError = !1,
                                        i = 0,
                                        ii = directives.length;
                                        i < ii;
                                        i++
                                    ) {
                                        directive = directives[i];
                                        var attrStart = directive.$$start,
                                            attrEnd = directive.$$end;
                                        if (
                                            attrStart && ($compileNode = groupScan(compileNode, attrStart, attrEnd)),
                                            $template = void 0,
                                            terminalPriority > directive.priority
                                        ) 
                                            break;
                                        if (
                                            directiveValue = directive.scope,
                                            directiveValue && (directive.templateUrl || (
                                                isObject(directiveValue)
                                                    ? (assertNoDuplicate(
                                                        "new/isolated scope",
                                                        newIsolateScopeDirective || newScopeDirective,
                                                        directive,
                                                        $compileNode
                                                    ), newIsolateScopeDirective = directive)
                                                    : assertNoDuplicate(
                                                        "new/isolated scope",
                                                        newIsolateScopeDirective,
                                                        directive,
                                                        $compileNode
                                                    )
                                            ), newScopeDirective = newScopeDirective || directive),
                                            directiveName = directive.name,
                                            !didScanForMultipleTransclusion && (directive.replace && (directive.templateUrl || directive.template) || directive.transclude && !directive.$$tlb)
                                        ) {
                                            for (
                                                var candidateDirective,
                                                scanningIndex = i + 1;
                                                candidateDirective = directives[scanningIndex++];
                                            ) 
                                                if (candidateDirective.transclude && !candidateDirective.$$tlb || candidateDirective.replace && (candidateDirective.templateUrl || candidateDirective.template)) {
                                                    mightHaveMultipleTransclusionError = !0;
                                                    break
                                                }
                                            didScanForMultipleTransclusion = !0
                                        }
                                        if (
                                            !directive.templateUrl && directive.controller && (controllerDirectives = controllerDirectives || createMap(), assertNoDuplicate(
                                                "'" + directiveName + "' controller",
                                                controllerDirectives[directiveName],
                                                directive,
                                                $compileNode
                                            ), controllerDirectives[directiveName] = directive),
                                            directiveValue = directive.transclude
                                        ) 
                                            if (
                                                hasTranscludeDirective = !0,
                                                directive.$$tlb || (
                                                    assertNoDuplicate("transclusion", nonTlbTranscludeDirective, directive, $compileNode),
                                                    nonTlbTranscludeDirective = directive
                                                ),
                                                "element" === directiveValue
                                            ) 
                                                hasElementTranscludeDirective = !0,
                                                terminalPriority = directive.priority,
                                                $template = $compileNode,
                                                $compileNode = templateAttrs.$$element = jqLite(
                                                    compile.$$createComment(directiveName, templateAttrs[directiveName])
                                                ),
                                                compileNode = $compileNode[0],
                                                replaceWith(jqCollection, sliceArgs($template), compileNode),
                                                $template[0].$$parentNode = $template[0].parentNode,
                                                childTranscludeFn = compilationGenerator(
                                                    mightHaveMultipleTransclusionError,
                                                    $template,
                                                    transcludeFn,
                                                    terminalPriority,
                                                    replaceDirective && replaceDirective.name,
                                                    {nonTlbTranscludeDirective: nonTlbTranscludeDirective}
                                                );
                                            else {
                                                var slots = createMap();
                                                if (isObject(directiveValue)) {
                                                    $template = [];
                                                    var slotMap = createMap(),
                                                        filledSlots = createMap();
                                                    forEach(directiveValue, function (elementSelector, slotName) {
                                                        var optional = "?" === elementSelector.charAt(0);
                                                        elementSelector = optional
                                                            ? elementSelector.substring(1)
                                                            : elementSelector,
                                                        slotMap[elementSelector] = slotName,
                                                        slots[slotName] = null,
                                                        filledSlots[slotName] = optional
                                                    }),
                                                    forEach($compileNode.contents(), function (node) {
                                                        var slotName = slotMap[directiveNormalize(nodeName_(node))];
                                                        slotName
                                                            ? (
                                                                filledSlots[slotName] = !0,
                                                                slots[slotName] = slots[slotName] || [],
                                                                slots[slotName].push(node)
                                                            )
                                                            : $template.push(node)
                                                    }),
                                                    forEach(filledSlots, function (filled, slotName) {
                                                        if (!filled) 
                                                            throw $compileMinErr(
                                                                "reqslot",
                                                                "Required transclusion slot `{0}` was not filled.",
                                                                slotName
                                                            )
                                                    });
                                                    for (var slotName in slots) 
                                                        slots[slotName] && (
                                                            slots[slotName] = compilationGenerator(mightHaveMultipleTransclusionError, slots[slotName], transcludeFn)
                                                        )
                                                } else 
                                                    $template = jqLite(jqLiteClone(compileNode)).contents();
                                                $compileNode.empty(),
                                                childTranscludeFn = compilationGenerator(
                                                    mightHaveMultipleTransclusionError,
                                                    $template,
                                                    transcludeFn,
                                                    void 0,
                                                    void 0,
                                                    {
                                                        needsNewScope: directive.$$isolateScope || directive.$$newScope
                                                    }
                                                ),
                                                childTranscludeFn.$$slots = slots
                                            }
                                        if (directive.template) 
                                            if (
                                                hasTemplate = !0,
                                                assertNoDuplicate("template", templateDirective, directive, $compileNode),
                                                templateDirective = directive,
                                                directiveValue = isFunction(directive.template)
                                                    ? directive.template($compileNode, templateAttrs)
                                                    : directive.template,
                                                directiveValue = denormalizeTemplate(directiveValue),
                                                directive.replace
                                            ) {
                                                if (
                                                    replaceDirective = directive,
                                                    $template = jqLiteIsTextNode(directiveValue)
                                                        ? []
                                                        : removeComments(
                                                            wrapTemplate(directive.templateNamespace, trim(directiveValue))
                                                        ),
                                                    compileNode = $template[0],
                                                    1 !== $template.length || compileNode.nodeType !== NODE_TYPE_ELEMENT
                                                ) 
                                                    throw $compileMinErr(
                                                        "tplrt",
                                                        "Template for directive '{0}' must have exactly one root element. {1}",
                                                        directiveName,
                                                        ""
                                                    );
                                                replaceWith(jqCollection, $compileNode, compileNode);
                                                var newTemplateAttrs = {
                                                        $attr: {}
                                                    },
                                                    templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs),
                                                    unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));
                                                (newIsolateScopeDirective || newScopeDirective) && markDirectiveScope(
                                                    templateDirectives,
                                                    newIsolateScopeDirective,
                                                    newScopeDirective
                                                ),
                                                directives = directives
                                                    .concat(templateDirectives)
                                                    .concat(unprocessedDirectives),
                                                mergeTemplateAttributes(templateAttrs, newTemplateAttrs),
                                                ii = directives.length
                                            } else 
                                                $compileNode.html(directiveValue);
                                    if (directive.templateUrl) 
                                            hasTemplate = !0,
                                            assertNoDuplicate("template", templateDirective, directive, $compileNode),
                                            templateDirective = directive,
                                            directive.replace && (replaceDirective = directive),
                                            nodeLinkFn = compileTemplateUrl(
                                                directives.splice(i, directives.length - i),
                                                $compileNode,
                                                templateAttrs,
                                                jqCollection,
                                                hasTranscludeDirective && childTranscludeFn,
                                                preLinkFns,
                                                postLinkFns,
                                                {
                                                    controllerDirectives: controllerDirectives,
                                                    newScopeDirective: newScopeDirective !== directive && newScopeDirective,
                                                    newIsolateScopeDirective: newIsolateScopeDirective,
                                                    templateDirective: templateDirective,
                                                    nonTlbTranscludeDirective: nonTlbTranscludeDirective
                                                }
                                            ),
                                            ii = directives.length;
                                        else if (directive.compile) 
                                            try {
                                                linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);
                                                var context = directive.$$originalDirective || directive;
                                                isFunction(linkFn)
                                                    ? addLinkFns(null, bind(context, linkFn), attrStart, attrEnd)
                                                    : linkFn && addLinkFns(
                                                        bind(context, linkFn.pre),
                                                        bind(context, linkFn.post),
                                                        attrStart,
                                                        attrEnd
                                                    )
                                            } catch (e) {
                                                $exceptionHandler(e, startingTag($compileNode))
                                            }
                                        directive.terminal && (
                                            nodeLinkFn.terminal = !0,
                                            terminalPriority = Math.max(terminalPriority, directive.priority)
                                        )
                                    }
                                    return nodeLinkFn.scope = newScopeDirective && !0 === newScopeDirective.scope,
                                    nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective,
                                    nodeLinkFn.templateOnThisElement = hasTemplate,
                                    nodeLinkFn.transclude = childTranscludeFn,
                                    previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective,
                                    nodeLinkFn
                                }
                                function getControllers(directiveName, require, $element, elementControllers) {
                                    var value;
                                    if (isString(require)) {
                                        var match = require.match(REQUIRE_PREFIX_REGEXP),
                                            name = require.substring(match[0].length),
                                            inheritType = match[1] || match[3],
                                            optional = "?" === match[2];
                                        if (
                                            "^^" === inheritType
                                                ? $element = $element.parent()
                                                : (
                                                    value = elementControllers && elementControllers[name],
                                                    value = value && value.instance
                                                ),
                                            !value
                                        ) {
                                            var dataName = "$" + name + "Controller";
                                            value = inheritType
                                                ? $element.inheritedData(dataName)
                                                : $element.data(dataName)
                                        }
                                        if (!value && !optional) 
                                            throw $compileMinErr(
                                                "ctreq",
                                                "Controller '{0}', required by directive '{1}', can't be found!",
                                                name,
                                                directiveName
                                            )
                                    } else if (isArray(require)) {
                                        value = [];
                                        for (var i = 0, ii = require.length; i < ii; i++) 
                                            value[i] = getControllers(
                                                directiveName,
                                                require[i],
                                                $element,
                                                elementControllers
                                            )
                                    } else 
                                        isObject(require) && (
                                            value = {},
                                            forEach(require, function (controller, property) {
                                                value[property] = getControllers(
                                                    directiveName,
                                                    controller,
                                                    $element,
                                                    elementControllers
                                                )
                                            })
                                        );
                                    return value || null
                                }
                                function setupControllers(
                                    $element,
                                    attrs,
                                    transcludeFn,
                                    controllerDirectives,
                                    isolateScope,
                                    scope,
                                    newIsolateScopeDirective
                                ) {
                                    var elementControllers = createMap();
                                    for (var controllerKey in controllerDirectives) {
                                        var directive = controllerDirectives[controllerKey],
                                            locals = {
                                                $scope: directive === newIsolateScopeDirective || directive.$$isolateScope
                                                    ? isolateScope
                                                    : scope,
                                                $element: $element,
                                                $attrs: attrs,
                                                $transclude: transcludeFn
                                            },
                                            controller = directive.controller;
                                        "@" === controller && (controller = attrs[directive.name]);
                                        var controllerInstance = $controller(
                                            controller,
                                            locals,
                                            !0,
                                            directive.controllerAs
                                        );
                                        elementControllers[directive.name] = controllerInstance,
                                        $element.data("$" + directive.name + "Controller", controllerInstance.instance)
                                    }
                                    return elementControllers
                                }
                                function markDirectiveScope(directives, isolateScope, newScope) {
                                    for (var j = 0, jj = directives.length; j < jj; j++) 
                                        directives[j] = inherit(directives[j], {
                                            $$isolateScope: isolateScope,
                                            $$newScope: newScope
                                        })
                                }
                                function addDirective(
                                    tDirectives,
                                    name,
                                    location,
                                    maxPriority,
                                    ignoreDirective,
                                    startAttrName,
                                    endAttrName
                                ) {
                                    if (name === ignoreDirective) 
                                        return null;
                                    var match = null;
                                    if (hasDirectives.hasOwnProperty(name)) 
                                        for (
                                            var directive,
                                            directives = $injector.get(name + Suffix),
                                            i = 0,
                                            ii = directives.length;
                                            i < ii;
                                            i++
                                        ) 
                                            if (
                                                directive = directives[i],
                                                (isUndefined(maxPriority) || maxPriority > directive.priority) && -1 !== directive.restrict.indexOf(location)
                                            ) {
                                                if (startAttrName && (directive = inherit(directive, {
                                                    $$start: startAttrName,
                                                    $$end: endAttrName
                                                })), !directive.$$bindings) {
                                                    var bindings = directive.$$bindings = parseDirectiveBindings(
                                                        directive,
                                                        directive.name
                                                    );
                                                    isObject(bindings.isolateScope) && (
                                                        directive.$$isolateBindings = bindings.isolateScope
                                                    )
                                                }
                                                tDirectives.push(directive),
                                                match = directive
                                            }
                                        return match
                                }
                                function directiveIsMultiElement(name) {
                                    if (hasDirectives.hasOwnProperty(name)) 
                                        for (
                                            var directive,
                                            directives = $injector.get(name + Suffix),
                                            i = 0,
                                            ii = directives.length;
                                            i < ii;
                                            i++
                                        ) 
                                            if (directive = directives[i], directive.multiElement) 
                                                return !0;
                                return !1
                                }
                                function mergeTemplateAttributes(dst, src) {
                                    var srcAttr = src.$attr,
                                        dstAttr = dst.$attr;
                                    forEach(dst, function (value, key) {
                                        "$" !== key.charAt(0) && (src[key] && src[key] !== value && (
                                            value.length
                                                ? value += (
                                                    "style" === key
                                                        ? ";"
                                                        : " "
                                                ) + src[key]
                                                : value = src[key]
                                        ), dst.$set(key, value, !0, srcAttr[key]))
                                    }),
                                    forEach(src, function (value, key) {
                                        dst.hasOwnProperty(key) || "$" === key.charAt(0) || (
                                            dst[key] = value,
                                            "class" !== key && "style" !== key && (dstAttr[key] = srcAttr[key])
                                        )
                                    })
                                }
                                function compileTemplateUrl(
                                    directives,
                                    $compileNode,
                                    tAttrs,
                                    $rootElement,
                                    childTranscludeFn,
                                    preLinkFns,
                                    postLinkFns,
                                    previousCompileContext
                                ) {
                                    var afterTemplateNodeLinkFn,
                                        afterTemplateChildLinkFn,
                                        linkQueue = [],
                                        beforeTemplateCompileNode = $compileNode[0],
                                        origAsyncDirective = directives.shift(),
                                        derivedSyncDirective = inherit(origAsyncDirective, {
                                            templateUrl: null,
                                            transclude: null,
                                            replace: null,
                                            $$originalDirective: origAsyncDirective
                                        }),
                                        templateUrl = isFunction(origAsyncDirective.templateUrl)
                                            ? origAsyncDirective.templateUrl($compileNode, tAttrs)
                                            : origAsyncDirective.templateUrl,
                                        templateNamespace = origAsyncDirective.templateNamespace;
                                    return $compileNode.empty(),
                                    $templateRequest(templateUrl)
                                        .then(function (content) {
                                            var compileNode,
                                                tempTemplateAttrs,
                                                $template,
                                                childBoundTranscludeFn;
                                            if (content = denormalizeTemplate(content), origAsyncDirective.replace) {
                                                if (
                                                    $template = jqLiteIsTextNode(content)
                                                        ? []
                                                        : removeComments(wrapTemplate(templateNamespace, trim(content))),
                                                    compileNode = $template[0],
                                                    1 !== $template.length || compileNode.nodeType !== NODE_TYPE_ELEMENT
                                                ) 
                                                    throw $compileMinErr(
                                                        "tplrt",
                                                        "Template for directive '{0}' must have exactly one root element. {1}",
                                                        origAsyncDirective.name,
                                                        templateUrl
                                                    );
                                                tempTemplateAttrs = {
                                                    $attr: {}
                                                },
                                                replaceWith($rootElement, $compileNode, compileNode);
                                                var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);
                                                isObject(origAsyncDirective.scope) && markDirectiveScope(
                                                    templateDirectives,
                                                    !0
                                                ),
                                                directives = templateDirectives.concat(directives),
                                                mergeTemplateAttributes(tAttrs, tempTemplateAttrs)
                                            } else 
                                                compileNode = beforeTemplateCompileNode,
                                                $compileNode.html(content);
                                            for (
                                                directives.unshift(derivedSyncDirective),
                                                afterTemplateNodeLinkFn = applyDirectivesToNode(
                                                    directives,
                                                    compileNode,
                                                    tAttrs,
                                                    childTranscludeFn,
                                                    $compileNode,
                                                    origAsyncDirective,
                                                    preLinkFns,
                                                    postLinkFns,
                                                    previousCompileContext
                                                ),
                                                forEach($rootElement, function (node, i) {
                                                    node === compileNode && ($rootElement[i] = $compileNode[0])
                                                }),
                                                afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);
                                                linkQueue.length;
                                            ) {
                                                var scope = linkQueue.shift(),
                                                    beforeTemplateLinkNode = linkQueue.shift(),
                                                    linkRootElement = linkQueue.shift(),
                                                    boundTranscludeFn = linkQueue.shift(),
                                                    linkNode = $compileNode[0];
                                                if (!scope.$$destroyed) {
                                                    if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {
                                                        var oldClasses = beforeTemplateLinkNode.className;
                                                        previousCompileContext.hasElementTranscludeDirective && origAsyncDirective.replace || (
                                                            linkNode = jqLiteClone(compileNode)
                                                        ),
                                                        replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode),
                                                        safeAddClass(jqLite(linkNode), oldClasses)
                                                    }
                                                    childBoundTranscludeFn = afterTemplateNodeLinkFn.transcludeOnThisElement
                                                        ? createBoundTranscludeFn(
                                                            scope,
                                                            afterTemplateNodeLinkFn.transclude,
                                                            boundTranscludeFn
                                                        )
                                                        : boundTranscludeFn,
                                                    afterTemplateNodeLinkFn(
                                                        afterTemplateChildLinkFn,
                                                        scope,
                                                        linkNode,
                                                        $rootElement,
                                                        childBoundTranscludeFn
                                                    )
                                                }
                                            }
                                            linkQueue = null
                                        })
                                        .catch(function (error) {
                                            error instanceof Error && $exceptionHandler(error)
                                        })
                                        .catch(noop),
                                    function delayedNodeLinkFn(
                                        ignoreChildLinkFn,
                                        scope,
                                        node,
                                        rootElement,
                                        boundTranscludeFn
                                    ) {
                                        var childBoundTranscludeFn = boundTranscludeFn;
                                        scope.$$destroyed || (
                                            linkQueue
                                                ? linkQueue.push(scope, node, rootElement, childBoundTranscludeFn)
                                                : (
                                                    afterTemplateNodeLinkFn.transcludeOnThisElement && (childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn)),
                                                    afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn)
                                                )
                                        )
                                    }
                                }
                                function byPriority(a, b) {
                                    var diff = b.priority - a.priority;
                                    return 0 !== diff
                                        ? diff
                                        : a.name !== b.name
                                            ? a.name < b.name
                                                ? -1
                                                : 1
                                            : a.index - b.index
                                }
                                function assertNoDuplicate(what, previousDirective, directive, element) {
                                    function wrapModuleNameIfDefined(moduleName) {
                                        return moduleName
                                            ? " (module: " + moduleName + ")"
                                            : ""
                                    }
                                    if (previousDirective) 
                                        throw $compileMinErr(
                                            "multidir",
                                            "Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}",
                                            previousDirective.name,
                                            wrapModuleNameIfDefined(previousDirective.$$moduleName),
                                            directive.name,
                                            wrapModuleNameIfDefined(directive.$$moduleName),
                                            what,
                                            startingTag(element)
                                        )
                                }
                                function addTextInterpolateDirective(directives, text) {
                                    var interpolateFn = $interpolate(text, !0);
                                    interpolateFn && directives.push({
                                        priority: 0,
                                        compile: function textInterpolateCompileFn(templateNode) {
                                            var templateNodeParent = templateNode.parent(),
                                                hasCompileParent = !!templateNodeParent.length;
                                            return hasCompileParent && compile.$$addBindingClass(templateNodeParent),
                                            function textInterpolateLinkFn(scope, node) {
                                                var parent = node.parent();
                                                hasCompileParent || compile.$$addBindingClass(parent),
                                                compile.$$addBindingInfo(parent, interpolateFn.expressions),
                                                scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {
                                                    node[0].nodeValue = value
                                                })
                                            }
                                        }
                                    })
                                }
                                function wrapTemplate(type, template) {
                                    switch (type = lowercase(type || "html")) {
                                        case "svg":
                                        case "math":
                                            var wrapper = window
                                                .document
                                                .createElement("div");
                                            return wrapper.innerHTML = "<" + type + ">" + template + "</" + type + ">",
                                            wrapper
                                                .childNodes[0]
                                                .childNodes;
                                        default:
                                            return template
                                    }
                                }
                                function getTrustedContext(node, attrNormalizedName) {
                                    if ("srcdoc" === attrNormalizedName) 
                                        return $sce.HTML;
                                    var tag = nodeName_(node);
                                    if ("src" === attrNormalizedName || "ngSrc" === attrNormalizedName) {
                                        if (-1 === ["img", "video", "audio", "source", "track"].indexOf(tag)) 
                                            return $sce.RESOURCE_URL
                                    } else if ("xlinkHref" === attrNormalizedName || "form" === tag && "action" === attrNormalizedName || "link" === tag && "href" === attrNormalizedName) 
                                        return $sce.RESOURCE_URL
                                }
                                function addAttrInterpolateDirective(node, directives, value, name, isNgAttr) {
                                    var trustedContext = getTrustedContext(node, name),
                                        mustHaveExpression = !isNgAttr,
                                        allOrNothing = ALL_OR_NOTHING_ATTRS[name] || isNgAttr,
                                        interpolateFn = $interpolate(
                                            value,
                                            mustHaveExpression,
                                            trustedContext,
                                            allOrNothing
                                        );
                                    if (interpolateFn) {
                                        if ("multiple" === name && "select" === nodeName_(node)) 
                                            throw $compileMinErr(
                                                "selmulti",
                                                "Binding to the 'multiple' attribute is not supported. Element: {0}",
                                                startingTag(node)
                                            );
                                        if (EVENT_HANDLER_ATTR_REGEXP.test(name)) 
                                            throw $compileMinErr(
                                                "nodomevents",
                                                "Interpolations for HTML DOM event attributes are disallowed.  Please use the n" +
                                                        "g- versions (such as ng-click instead of onclick) instead."
                                            );
                                        directives.push({
                                            priority: 100,
                                            compile: function () {
                                                return {
                                                    pre: function attrInterpolatePreLinkFn(scope, element, attr) {
                                                        var $$observers = attr.$$observers || (attr.$$observers = createMap()),
                                                            newValue = attr[name];
                                                        newValue !== value && (
                                                            interpolateFn = newValue && $interpolate(newValue, !0, trustedContext, allOrNothing),
                                                            value = newValue
                                                        ),
                                                        interpolateFn && (
                                                            attr[name] = interpolateFn(scope),
                                                            ($$observers[name] || ($$observers[name] = [])).$$inter = !0,
                                                            (attr.$$observers && attr.$$observers[name].$$scope || scope).$watch(interpolateFn, function interpolateFnWatchAction(newValue, oldValue) {
                                                                "class" === name && newValue !== oldValue
                                                                    ? attr.$updateClass(newValue, oldValue)
                                                                    : attr.$set(name, newValue)
                                                            })
                                                        )
                                                    }
                                                }
                                            }
                                        })
                                    }
                                }
                                function replaceWith($rootElement, elementsToRemove, newNode) {
                                    var i,
                                        ii,
                                        firstElementToRemove = elementsToRemove[0],
                                        removeCount = elementsToRemove.length,
                                        parent = firstElementToRemove.parentNode;
                                    if ($rootElement) 
                                        for (i = 0, ii = $rootElement.length; i < ii; i++) 
                                            if ($rootElement[i] === firstElementToRemove) {
                                                $rootElement[i++] = newNode;
                                                for (
                                                    var j = i,
                                                    j2 = j + removeCount - 1,
                                                    jj = $rootElement.length;
                                                    j < jj;
                                                    j++,
                                                    j2++
                                                ) 
                                                    j2 < jj
                                                        ? $rootElement[j] = $rootElement[j2]
                                                        : delete $rootElement[j];
                                                $rootElement.length -= removeCount - 1,
                                                $rootElement.context === firstElementToRemove && (
                                                    $rootElement.context = newNode
                                                );
                                                break
                                            }
                                        parent && parent.replaceChild(newNode, firstElementToRemove);
                                    var fragment = window
                                        .document
                                        .createDocumentFragment();
                                    for (i = 0; i < removeCount; i++) 
                                        fragment.appendChild(elementsToRemove[i]);
                                    for (
                                        jqLite.hasData(firstElementToRemove) && (
                                            jqLite.data(newNode, jqLite.data(firstElementToRemove)),
                                            jqLite(firstElementToRemove).off("$destroy")
                                        ),
                                        jqLite.cleanData(fragment.querySelectorAll("*")),
                                        i = 1; i < removeCount; i++
                                    ) 
                                        delete elementsToRemove[i];
                                    elementsToRemove[0] = newNode,
                                    elementsToRemove.length = 1
                                }
                                function cloneAndAnnotateFn(fn, annotation) {
                                    return extend(function () {
                                        return fn.apply(null, arguments)
                                    }, fn, annotation)
                                }
                                function invokeLinkFn(
                                    linkFn,
                                    scope,
                                    $element,
                                    attrs,
                                    controllers,
                                    transcludeFn
                                ) {
                                    try {
                                        linkFn(scope, $element, attrs, controllers, transcludeFn)
                                    } catch (e) {
                                        $exceptionHandler(e, startingTag($element))
                                    }
                                }
                                function initializeDirectiveBindings(
                                    scope,
                                    attrs,
                                    destination,
                                    bindings,
                                    directive
                                ) {
                                    function recordChanges(key, currentValue, previousValue) {
                                        !isFunction(destination.$onChanges) || currentValue === previousValue || currentValue !== currentValue && previousValue !== previousValue || (
                                            onChangesQueue || (scope.$$postDigest(flushOnChangesQueue), onChangesQueue = []),
                                            changes || (changes = {}, onChangesQueue.push(triggerOnChangesHook)),
                                            changes[key] && (previousValue = changes[key].previousValue),
                                            changes[key] = new SimpleChange(previousValue, currentValue)
                                        )
                                    }
                                    function triggerOnChangesHook() {
                                        destination.$onChanges(changes),
                                        changes = void 0
                                    }
                                    var changes,
                                        removeWatchCollection = [],
                                        initialChanges = {};
                                    return forEach(bindings, function initializeBinding(definition, scopeName) {
                                        var lastValue,
                                            parentGet,
                                            parentSet,
                                            compare,
                                            removeWatch,
                                            attrName = definition.attrName,
                                            optional = definition.optional,
                                            mode = definition.mode;
                                        switch (mode) {
                                            case "@":
                                                optional || hasOwnProperty.call(attrs, attrName) || (
                                                    destination[scopeName] = attrs[attrName] = void 0
                                                ),
                                                removeWatch = attrs.$observe(attrName, function (value) {
                                                    if (isString(value) || isBoolean(value)) {
                                                        var oldValue = destination[scopeName];
                                                        recordChanges(scopeName, value, oldValue),
                                                        destination[scopeName] = value
                                                    }
                                                }),
                                                attrs
                                                    .$$observers[attrName]
                                                    .$$scope = scope,
                                                lastValue = attrs[attrName],
                                                isString(lastValue)
                                                    ? destination[scopeName] = $interpolate(lastValue)(scope)
                                                    : isBoolean(lastValue) && (destination[scopeName] = lastValue),
                                                initialChanges[scopeName] = new SimpleChange(
                                                    _UNINITIALIZED_VALUE,
                                                    destination[scopeName]
                                                ),
                                                removeWatchCollection.push(removeWatch);
                                                break;
                                            case "=":
                                                if (!hasOwnProperty.call(attrs, attrName)) {
                                                    if (optional) 
                                                        break;
                                                    attrs[attrName] = void 0
                                                }
                                                if (optional && !attrs[attrName]) 
                                                    break;
                                                parentGet = $parse(attrs[attrName]),
                                                compare = parentGet.literal
                                                    ? equals
                                                    : function simpleCompare(a, b) {
                                                        return a === b || a !== a && b !== b
                                                    },
                                                parentSet = parentGet.assign || function () {
                                                    throw lastValue = destination[scopeName] = parentGet(scope),
                                                    $compileMinErr(
                                                        "nonassign",
                                                        "Expression '{0}' in attribute '{1}' used with directive '{2}' is non-assignabl" +
                                                                "e!",
                                                        attrs[attrName],
                                                        attrName,
                                                        directive.name
                                                    )
                                                },
                                                lastValue = destination[scopeName] = parentGet(scope);
                                                var parentValueWatch = function parentValueWatch(parentValue) {
                                                    return compare(parentValue, destination[scopeName]) || (
                                                        compare(parentValue, lastValue)
                                                            ? parentSet(scope, parentValue = destination[scopeName])
                                                            : destination[scopeName] = parentValue
                                                    ),
                                                    lastValue = parentValue
                                                };
                                                parentValueWatch.$stateful = !0,
                                                removeWatch = definition.collection
                                                    ? scope.$watchCollection(attrs[attrName], parentValueWatch)
                                                    : scope.$watch(
                                                        $parse(attrs[attrName], parentValueWatch),
                                                        null,
                                                        parentGet.literal
                                                    ),
                                                removeWatchCollection.push(removeWatch);
                                                break;
                                            case "<":
                                                if (!hasOwnProperty.call(attrs, attrName)) {
                                                    if (optional) 
                                                        break;
                                                    attrs[attrName] = void 0
                                                }
                                                if (optional && !attrs[attrName]) 
                                                    break;
                                                parentGet = $parse(attrs[attrName]);
                                                var deepWatch = parentGet.literal,
                                                    initialValue = destination[scopeName] = parentGet(scope);
                                                initialChanges[scopeName] = new SimpleChange(
                                                    _UNINITIALIZED_VALUE,
                                                    destination[scopeName]
                                                ),
                                                removeWatch = scope.$watch(
                                                    parentGet,
                                                    function parentValueWatchAction(newValue, oldValue) {
                                                        if (oldValue === newValue) {
                                                            if (oldValue === initialValue || deepWatch && equals(oldValue, initialValue)) 
                                                                return;
                                                            oldValue = initialValue
                                                        }
                                                        recordChanges(scopeName, newValue, oldValue),
                                                        destination[scopeName] = newValue
                                                    },
                                                    deepWatch
                                                ),
                                                removeWatchCollection.push(removeWatch);
                                                break;
                                            case "&":
                                                if ((
                                                    parentGet = attrs.hasOwnProperty(attrName)
                                                        ? $parse(attrs[attrName])
                                                        : noop
                                                ) === noop && optional) 
                                                    break;
                                                destination[scopeName] = function (locals) {
                                                    return parentGet(scope, locals)
                                                }
                                        }
                                    }), {
                                        initialChanges: initialChanges,
                                        removeWatches: removeWatchCollection.length && function removeWatches() {
                                            for (var i = 0, ii = removeWatchCollection.length; i < ii; ++i) 
                                                removeWatchCollection[i]()
                                        }
                                    }
                                }
                                var onChangesQueue,
                                    SIMPLE_ATTR_NAME = /^\w/,
                                    specialAttrHolder = window
                                        .document
                                        .createElement("div"),
                                    commentDirectivesEnabled = commentDirectivesEnabledConfig,
                                    cssClassDirectivesEnabled = cssClassDirectivesEnabledConfig,
                                    onChangesTtl = TTL;
                                Attributes.prototype = {
                                    $normalize: directiveNormalize,
                                    $addClass: function (classVal) {
                                        classVal && classVal.length > 0 && $animate.addClass(this.$$element, classVal)
                                    },
                                    $removeClass: function (classVal) {
                                        classVal && classVal.length > 0 && $animate.removeClass(
                                            this.$$element,
                                            classVal
                                        )
                                    },
                                    $updateClass: function (newClasses, oldClasses) {
                                        var toAdd = tokenDifference(newClasses, oldClasses);
                                        toAdd && toAdd.length && $animate.addClass(this.$$element, toAdd);
                                        var toRemove = tokenDifference(oldClasses, newClasses);
                                        toRemove && toRemove.length && $animate.removeClass(this.$$element, toRemove)
                                    },
                                    $set: function (key, value, writeAttr, attrName) {
                                        var nodeName,
                                            node = this.$$element[0],
                                            booleanKey = getBooleanAttrName(node, key),
                                            aliasedKey = getAliasedAttrName(key),
                                            observer = key;
                                        if (
                                            booleanKey
                                                ? (this.$$element.prop(key, value), attrName = booleanKey)
                                                : aliasedKey && (this[aliasedKey] = value, observer = aliasedKey),
                                            this[key] = value,
                                            attrName
                                                ? this.$attr[key] = attrName
                                                : (attrName = this.$attr[key]) || (
                                                    this.$attr[key] = attrName = snake_case(key, "-")
                                                ),
                                            "a" === (nodeName = nodeName_(this.$$element)) && (
                                                "href" === key || "xlinkHref" === key
                                            ) || "img" === nodeName && "src" === key
                                        ) 
                                            this[key] = value = $$sanitizeUri(value, "src" === key);
                                        else if ("img" === nodeName && "srcset" === key && isDefined(value)) {
                                            for (
                                                var result = "",
                                                trimmedSrcset = trim(value),
                                                srcPattern = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,
                                                pattern = /\s/.test(trimmedSrcset)
                                                    ? srcPattern
                                                    : /(,)/,
                                                rawUris = trimmedSrcset.split(pattern),
                                                nbrUrisWith2parts = Math.floor(rawUris.length / 2),
                                                i = 0; i < nbrUrisWith2parts; i++
                                            ) {
                                                var innerIdx = 2 * i;
                                                result += $$sanitizeUri(trim(rawUris[innerIdx]), !0),
                                                result += " " + trim(rawUris[innerIdx + 1])
                                            }
                                            var lastTuple = trim(rawUris[2 * i]).split(/\s/);
                                            result += $$sanitizeUri(trim(lastTuple[0]), !0),
                                            2 === lastTuple.length && (result += " " + trim(lastTuple[1])),
                                            this[key] = value = result
                                        }
                                        !1 !== writeAttr && (
                                            null === value || isUndefined(value)
                                                ? this.$$element.removeAttr(attrName)
                                                : SIMPLE_ATTR_NAME.test(attrName)
                                                    ? this.$$element.attr(attrName, value)
                                                    : setSpecialAttr(this.$$element[0], attrName, value)
                                        );
                                        var $$observers = this.$$observers;
                                        $$observers && forEach($$observers[observer], function (fn) {
                                            try {
                                                fn(value)
                                            } catch (e) {
                                                $exceptionHandler(e)
                                            }
                                        })
                                    },
                                    $observe: function (key, fn) {
                                        var attrs = this,
                                            $$observers = attrs.$$observers || (attrs.$$observers = createMap()),
                                            listeners = $$observers[key] || ($$observers[key] = []);
                                        return listeners.push(fn),
                                        $rootScope.$evalAsync(function () {
                                            listeners.$$inter || !attrs.hasOwnProperty(key) || isUndefined(attrs[key]) || fn(
                                                attrs[key]
                                            )
                                        }),
                                        function () {
                                            arrayRemove(listeners, fn)
                                        }
                                    }
                                };
                                var startSymbol = $interpolate.startSymbol(),
                                    endSymbol = $interpolate.endSymbol(),
                                    denormalizeTemplate = "{{" === startSymbol && "}}" === endSymbol
                                        ? identity
                                        : function denormalizeTemplate(template) {
                                            return template
                                                .replace(/\{\{/g, startSymbol)
                                                .replace(/}}/g, endSymbol)
                                        },
                                    NG_ATTR_BINDING = /^ngAttr[A-Z]/,
                                    MULTI_ELEMENT_DIR_RE = /^(.+)Start$/;
                                return compile.$$addBindingInfo = debugInfoEnabled
                                    ? function $$addBindingInfo($element, binding) {
                                        var bindings = $element.data("$binding") || [];
                                        isArray(binding)
                                            ? bindings = bindings.concat(binding)
                                            : bindings.push(binding),
                                        $element.data("$binding", bindings)
                                    }
                                    : noop,
                                compile.$$addBindingClass = debugInfoEnabled
                                    ? function $$addBindingClass($element) {
                                        safeAddClass($element, "ng-binding")
                                    }
                                    : noop,
                                compile.$$addScopeInfo = debugInfoEnabled
                                    ? function $$addScopeInfo($element, scope, isolated, noTemplate) {
                                        var dataName = isolated
                                            ? noTemplate
                                                ? "$isolateScopeNoTemplate"
                                                : "$isolateScope"
                                            : "$scope";
                                        $element.data(dataName, scope)
                                    }
                                    : noop,
                                compile.$$addScopeClass = debugInfoEnabled
                                    ? function $$addScopeClass($element, isolated) {
                                        safeAddClass(
                                            $element,
                                            isolated
                                                ? "ng-isolate-scope"
                                                : "ng-scope"
                                        )
                                    }
                                    : noop,
                                compile.$$createComment = function (directiveName, comment) {
                                    var content = "";
                                    return debugInfoEnabled && (content = " " + (
                                        directiveName || ""
                                    ) + ": ", comment && (content += comment + " ")),
                                    window
                                        .document
                                        .createComment(content)
                                },
                                compile
                            }
                        ]
                    }
                    function SimpleChange(previous, current) {
                        this.previousValue = previous,
                        this.currentValue = current
                    }
                    function directiveNormalize(name) {
                        return name
                            .replace(PREFIX_REGEXP, "")
                            .replace(SPECIAL_CHARS_REGEXP, fnCamelCaseReplace)
                    }
                    function tokenDifference(str1, str2) {
                        var values = "",
                            tokens1 = str1.split(/\s+/),
                            tokens2 = str2.split(/\s+/);
                        outer : for (var i = 0; i < tokens1.length; i++) {
                            for (var token = tokens1[i], j = 0; j < tokens2.length; j++) 
                                if (token === tokens2[j]) 
                                    continue outer;
                        values += (
                                values.length > 0
                                    ? " "
                                    : ""
                            ) + token
                        }
                        return values
                    }
                    function removeComments(jqNodes) {
                        jqNodes = jqLite(jqNodes);
                        var i = jqNodes.length;
                        if (i <= 1) 
                            return jqNodes;
                        for (; i--;) {
                            var node = jqNodes[i];
                            (
                                node.nodeType === NODE_TYPE_COMMENT || node.nodeType === NODE_TYPE_TEXT && "" === node.nodeValue.trim()
                            ) && splice.call(jqNodes, i, 1)
                        }
                        return jqNodes
                    }
                    function identifierForController(controller, ident) {
                        if (ident && isString(ident)) 
                            return ident;
                        if (isString(controller)) {
                            var match = CNTRL_REG.exec(controller);
                            if (match) 
                                return match[3]
                        }
                    }
                    function $ControllerProvider() {
                        var controllers = {},
                            globals = !1;
                        this.has = function (name) {
                            return controllers.hasOwnProperty(name)
                        },
                        this.register = function (name, constructor) {
                            assertNotHasOwnProperty(name, "controller"),
                            isObject(name)
                                ? extend(controllers, name)
                                : controllers[name] = constructor
                        },
                        this.allowGlobals = function () {
                            globals = !0
                        },
                        this.$get = [
                            "$injector",
                            "$window",
                            function ($injector, $window) {
                                function addIdentifier(locals, identifier, instance, name) {
                                    if (!locals || !isObject(locals.$scope)) 
                                        throw minErr("$controller")(
                                            "noscp",
                                            "Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals" +
                                                    "`.",
                                            name,
                                            identifier
                                        );
                                    locals.$scope[identifier] = instance
                                }
                                return function $controller(expression, locals, later, ident) {
                                    var instance,
                                        match,
                                        constructor,
                                        identifier;
                                    if (
                                        later = !0 === later,
                                        ident && isString(ident) && (identifier = ident),
                                        isString(expression)
                                    ) {
                                        if (!(match = expression.match(CNTRL_REG))) 
                                            throw $controllerMinErr(
                                                "ctrlfmt",
                                                "Badly formed controller string '{0}'. Must match `__name__ as __id__` or `__na" +
                                                        "me__`.",
                                                expression
                                            );
                                        if (constructor = match[1], identifier = identifier || match[3], !(
                                            expression = controllers.hasOwnProperty(constructor)
                                                ? controllers[constructor]
                                                : getter(locals.$scope, constructor, !0) || (
                                                    globals
                                                        ? getter($window, constructor, !0)
                                                        : void 0
                                                )
                                        )) 
                                            throw $controllerMinErr(
                                                "ctrlreg",
                                                "The controller with the name '{0}' is not registered.",
                                                constructor
                                            );
                                        assertArgFn(expression, constructor, !0)
                                    }
                                    if (later) {
                                        var controllerPrototype = (
                                            isArray(expression)
                                                ? expression[expression.length - 1]
                                                : expression
                                        ).prototype;
                                        return instance = Object.create(controllerPrototype || null),
                                        identifier && addIdentifier(
                                            locals,
                                            identifier,
                                            instance,
                                            constructor || expression.name
                                        ),
                                        extend(function $controllerInit() {
                                            var result = $injector.invoke(expression, instance, locals, constructor);
                                            return result !== instance && (isObject(result) || isFunction(result)) && (
                                                instance = result,
                                                identifier && addIdentifier(locals, identifier, instance, constructor || expression.name)
                                            ),
                                            instance
                                        }, {
                                            instance: instance,
                                            identifier: identifier
                                        })
                                    }
                                    return instance = $injector.instantiate(expression, locals, constructor),
                                    identifier && addIdentifier(
                                        locals,
                                        identifier,
                                        instance,
                                        constructor || expression.name
                                    ),
                                    instance
                                }
                            }
                        ]
                    }
                    function $DocumentProvider() {
                        this.$get = [
                            "$window",
                            function (window) {
                                return jqLite(window.document)
                            }
                        ]
                    }
                    function $$IsDocumentHiddenProvider() {
                        this.$get = [
                            "$document",
                            "$rootScope",
                            function ($document, $rootScope) {
                                function changeListener() {
                                    hidden = doc.hidden
                                }
                                var doc = $document[0],
                                    hidden = doc && doc.hidden;
                                return $document.on("visibilitychange", changeListener),
                                $rootScope.$on("$destroy", function () {
                                    $document.off("visibilitychange", changeListener)
                                }),
                                function () {
                                    return hidden
                                }
                            }
                        ]
                    }
                    function $ExceptionHandlerProvider() {
                        this.$get = [
                            "$log",
                            function ($log) {
                                return function (exception, cause) {
                                    $log
                                        .error
                                        .apply($log, arguments)
                                }
                            }
                        ]
                    }
                    function serializeValue(v) {
                        return isObject(v)
                            ? isDate(v)
                                ? v.toISOString()
                                : toJson(v)
                            : v
                    }
                    function $HttpParamSerializerProvider() {
                        this.$get = function () {
                            return function ngParamSerializer(params) {
                                if (!params) 
                                    return "";
                                var parts = [];
                                return forEachSorted(params, function (value, key) {
                                    null === value || isUndefined(value) || (
                                        isArray(value)
                                            ? forEach(value, function (v) {
                                                parts.push(encodeUriQuery(key) + "=" + encodeUriQuery(serializeValue(v)))
                                            })
                                            : parts.push(encodeUriQuery(key) + "=" + encodeUriQuery(serializeValue(value)))
                                    )
                                }),
                                parts.join("&")
                            }
                        }
                    }
                    function $HttpParamSerializerJQLikeProvider() {
                        this.$get = function () {
                            return function jQueryLikeParamSerializer(params) {
                                function serialize(toSerialize, prefix, topLevel) {
                                    null === toSerialize || isUndefined(toSerialize) || (
                                        isArray(toSerialize)
                                            ? forEach(toSerialize, function (value, index) {
                                                serialize(value, prefix + "[" + (
                                                    isObject(value)
                                                        ? index
                                                        : ""
                                                ) + "]")
                                            })
                                            : isObject(toSerialize) && !isDate(toSerialize)
                                                ? forEachSorted(toSerialize, function (value, key) {
                                                    serialize(value, prefix + (
                                                        topLevel
                                                            ? ""
                                                            : "["
                                                    ) + key + (
                                                        topLevel
                                                            ? ""
                                                            : "]"
                                                    ))
                                                })
                                                : parts.push(
                                                    encodeUriQuery(prefix) + "=" + encodeUriQuery(serializeValue(toSerialize))
                                                )
                                    )
                                }
                                if (!params) 
                                    return "";
                                var parts = [];
                                return serialize(params, "", !0),
                                parts.join("&")
                            }
                        }
                    }
                    function defaultHttpResponseTransform(data, headers) {
                        if (isString(data)) {
                            var tempData = data
                                .replace(JSON_PROTECTION_PREFIX, "")
                                .trim();
                            if (tempData) {
                                var contentType = headers("Content-Type");
                                (
                                    contentType && 0 === contentType.indexOf(APPLICATION_JSON) || isJsonLike(tempData)
                                ) && (data = fromJson(tempData))
                            }
                        }
                        return data
                    }
                    function isJsonLike(str) {
                        var jsonStart = str.match(JSON_START);
                        return jsonStart && JSON_ENDS[jsonStart[0]].test(str)
                    }
                    function parseHeaders(headers) {
                        function fillInParsed(key, val) {
                            key && (
                                parsed[key] = parsed[key]
                                    ? parsed[key] + ", " + val
                                    : val
                            )
                        }
                        var i,
                            parsed = createMap();
                        return isString(headers)
                            ? forEach(headers.split("\n"), function (line) {
                                i = line.indexOf(":"),
                                fillInParsed(lowercase(trim(line.substr(0, i))), trim(line.substr(i + 1)))
                            })
                            : isObject(headers) && forEach(headers, function (headerVal, headerKey) {
                                fillInParsed(lowercase(headerKey), trim(headerVal))
                            }),
                        parsed
                    }
                    function headersGetter(headers) {
                        var headersObj;
                        return function (name) {
                            if (headersObj || (headersObj = parseHeaders(headers)), name) {
                                var value = headersObj[lowercase(name)];
                                return void 0 === value && (value = null),
                                value
                            }
                            return headersObj
                        }
                    }
                    function transformData(data, headers, status, fns) {
                        return isFunction(fns)
                            ? fns(data, headers, status)
                            : (forEach(fns, function (fn) {
                                data = fn(data, headers, status)
                            }), data)
                    }
                    function isSuccess(status) {
                        return 200 <= status && status < 300
                    }
                    function $HttpProvider() {
                        var defaults = this.defaults = {
                                transformResponse: [defaultHttpResponseTransform],
                                transformRequest: [function (d) {
                                        return !isObject(d) || isFile(d) || isBlob(d) || isFormData(d)
                                            ? d
                                            : toJson(d)
                                    }
                                ],
                                headers: {
                                    common: {
                                        Accept: "application/json, text/plain, */*"
                                    },
                                    post: shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
                                    put: shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
                                    patch: shallowCopy(CONTENT_TYPE_APPLICATION_JSON)
                                },
                                xsrfCookieName: "XSRF-TOKEN",
                                xsrfHeaderName: "X-XSRF-TOKEN",
                                paramSerializer: "$httpParamSerializer",
                                jsonpCallbackParam: "callback"
                            },
                            useApplyAsync = !1;
                        this.useApplyAsync = function (value) {
                            return isDefined(value)
                                ? (useApplyAsync = !!value, this)
                                : useApplyAsync
                        };
                        var interceptorFactories = this.interceptors = [];
                        this.$get = [
                            "$browser",
                            "$httpBackend",
                            "$$cookieReader",
                            "$cacheFactory",
                            "$rootScope",
                            "$q",
                            "$injector",
                            "$sce",
                            function (
                                $browser,
                                $httpBackend,
                                $$cookieReader,
                                $cacheFactory,
                                $rootScope,
                                $q,
                                $injector,
                                $sce
                            ) {
                                function $http(requestConfig) {
                                    function chainInterceptors(promise, interceptors) {
                                        for (var i = 0, ii = interceptors.length; i < ii;) {
                                            var thenFn = interceptors[i++],
                                                rejectFn = interceptors[i++];
                                            promise = promise.then(thenFn, rejectFn)
                                        }
                                        return interceptors.length = 0,
                                        promise
                                    }
                                    function completeOutstandingRequest() {
                                        $browser.$$completeOutstandingRequest(noop)
                                    }
                                    function executeHeaderFns(headers, config) {
                                        var headerContent,
                                            processedHeaders = {};
                                        return forEach(headers, function (headerFn, header) {
                                            isFunction(headerFn)
                                                ? null != (headerContent = headerFn(config)) && (
                                                    processedHeaders[header] = headerContent
                                                )
                                                : processedHeaders[header] = headerFn
                                        }),
                                        processedHeaders
                                    }
                                    function mergeHeaders(config) {
                                        var defHeaderName,
                                            lowercaseDefHeaderName,
                                            reqHeaderName,
                                            defHeaders = defaults.headers,
                                            reqHeaders = extend({}, config.headers);
                                        defHeaders = extend(
                                            {},
                                            defHeaders.common,
                                            defHeaders[lowercase(config.method)]
                                        );
                                        defaultHeadersIteration : for (defHeaderName in defHeaders) {
                                            lowercaseDefHeaderName = lowercase(defHeaderName);
                                            for (reqHeaderName in reqHeaders) 
                                                if (lowercase(reqHeaderName) === lowercaseDefHeaderName) 
                                                    continue defaultHeadersIteration;
                                        reqHeaders[defHeaderName] = defHeaders[defHeaderName]
                                        }
                                        return executeHeaderFns(reqHeaders, shallowCopy(config))
                                    }
                                    function serverRequest(config) {
                                        var headers = config.headers,
                                            reqData = transformData(
                                                config.data,
                                                headersGetter(headers),
                                                void 0,
                                                config.transformRequest
                                            );
                                        return isUndefined(reqData) && forEach(headers, function (value, header) {
                                            "content-type" === lowercase(header) && delete headers[header]
                                        }),
                                        isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials) && (
                                            config.withCredentials = defaults.withCredentials
                                        ),
                                        sendReq(config, reqData).then(transformResponse, transformResponse)
                                    }
                                    function transformResponse(response) {
                                        var resp = extend({}, response);
                                        return resp.data = transformData(
                                            response.data,
                                            response.headers,
                                            response.status,
                                            config.transformResponse
                                        ),
                                        isSuccess(response.status)
                                            ? resp
                                            : $q.reject(resp)
                                    }
                                    if (!isObject(requestConfig)) 
                                        throw minErr("$http")(
                                            "badreq",
                                            "Http request configuration must be an object.  Received: {0}",
                                            requestConfig
                                        );
                                    if (!isString($sce.valueOf(requestConfig.url))) 
                                        throw minErr("$http")(
                                            "badreq",
                                            "Http request configuration url must be a string or a $sce trusted object.  Rec" +
                                                    "eived: {0}",
                                            requestConfig.url
                                        );
                                    var config = extend({
                                        method: "get",
                                        transformRequest: defaults.transformRequest,
                                        transformResponse: defaults.transformResponse,
                                        paramSerializer: defaults.paramSerializer,
                                        jsonpCallbackParam: defaults.jsonpCallbackParam
                                    }, requestConfig);
                                    config.headers = mergeHeaders(requestConfig),
                                    config.method = uppercase(config.method),
                                    config.paramSerializer = isString(config.paramSerializer)
                                        ? $injector.get(config.paramSerializer)
                                        : config.paramSerializer,
                                    $browser.$$incOutstandingRequestCount();
                                    var requestInterceptors = [],
                                        responseInterceptors = [],
                                        promise = $q.resolve(config);
                                    return forEach(reversedInterceptors, function (interceptor) {
                                        (interceptor.request || interceptor.requestError) && requestInterceptors.unshift(
                                            interceptor.request,
                                            interceptor.requestError
                                        ),
                                        (interceptor.response || interceptor.responseError) && responseInterceptors.push(
                                            interceptor.response,
                                            interceptor.responseError
                                        )
                                    }),
                                    promise = chainInterceptors(promise, requestInterceptors),
                                    promise = promise.then(serverRequest),
                                    promise = chainInterceptors(promise, responseInterceptors),
                                    promise = promise. finally(completeOutstandingRequest)
                                }
                                function createShortMethods(names) {
                                    forEach(arguments, function (name) {
                                        $http[name] = function (url, config) {
                                            return $http(extend({}, config || {}, {
                                                method: name,
                                                url: url
                                            }))
                                        }
                                    })
                                }
                                function createShortMethodsWithData(name) {
                                    forEach(arguments, function (name) {
                                        $http[name] = function (url, data, config) {
                                            return $http(extend({}, config || {}, {
                                                method: name,
                                                url: url,
                                                data: data
                                            }))
                                        }
                                    })
                                }
                                function sendReq(config, reqData) {
                                    function createApplyHandlers(eventHandlers) {
                                        if (eventHandlers) {
                                            var applyHandlers = {};
                                            return forEach(eventHandlers, function (eventHandler, key) {
                                                applyHandlers[key] = function (event) {
                                                    function callEventHandler() {
                                                        eventHandler(event)
                                                    }
                                                    useApplyAsync
                                                        ? $rootScope.$applyAsync(callEventHandler)
                                                        : $rootScope.$$phase
                                                            ? callEventHandler()
                                                            : $rootScope.$apply(callEventHandler)
                                                }
                                            }),
                                            applyHandlers
                                        }
                                    }
                                    function done(status, response, headersString, statusText) {
                                        function resolveHttpPromise() {
                                            resolvePromise(response, status, headersString, statusText)
                                        }
                                        cache && (
                                            isSuccess(status)
                                                ? cache.put(url, [status, response, parseHeaders(headersString), statusText])
                                                : cache.remove(url)
                                        ),
                                        useApplyAsync
                                            ? $rootScope.$applyAsync(resolveHttpPromise)
                                            : (resolveHttpPromise(), $rootScope.$$phase || $rootScope.$apply())
                                    }
                                    function resolvePromise(response, status, headers, statusText) {
                                        status = status >= -1
                                            ? status
                                            : 0,
                                        (
                                            isSuccess(status)
                                                ? deferred.resolve
                                                : deferred.reject
                                        )(
                                            {data: response, status: status, headers: headersGetter(headers), config: config, statusText: statusText}
                                        )
                                    }
                                    function resolvePromiseWithResult(result) {
                                        resolvePromise(
                                            result.data,
                                            result.status,
                                            shallowCopy(result.headers()),
                                            result.statusText
                                        )
                                    }
                                    function removePendingReq() {
                                        var idx = $http
                                            .pendingRequests
                                            .indexOf(config);
                                        -1 !== idx && $http
                                            .pendingRequests
                                            .splice(idx, 1)
                                    }
                                    var cache,
                                        cachedResp,
                                        deferred = $q.defer(),
                                        promise = deferred.promise,
                                        reqHeaders = config.headers,
                                        isJsonp = "jsonp" === lowercase(config.method),
                                        url = config.url;
                                    if (
                                        isJsonp
                                            ? url = $sce.getTrustedResourceUrl(url)
                                            : isString(url) || (url = $sce.valueOf(url)),
                                        url = buildUrl(url, config.paramSerializer(config.params)),
                                        isJsonp && (url = sanitizeJsonpCallbackParam(url, config.jsonpCallbackParam)),
                                        $http.pendingRequests.push(config),
                                        promise.then(removePendingReq, removePendingReq),
                                        !config.cache && !defaults.cache || !1 === config.cache || "GET" !== config.method && "JSONP" !== config.method || (
                                            cache = isObject(config.cache)
                                                ? config.cache
                                                : isObject(defaults.cache)
                                                    ? defaults.cache
                                                    : defaultCache
                                        ),
                                        cache && (
                                            cachedResp = cache.get(url),
                                            isDefined(cachedResp)
                                                ? isPromiseLike(cachedResp)
                                                    ? cachedResp.then(resolvePromiseWithResult, resolvePromiseWithResult)
                                                    : isArray(cachedResp)
                                                        ? resolvePromise(
                                                            cachedResp[1],
                                                            cachedResp[0],
                                                            shallowCopy(cachedResp[2]),
                                                            cachedResp[3]
                                                        )
                                                        : resolvePromise(cachedResp, 200, {}, "OK")
                                                : cache.put(url, promise)
                                        ),
                                        isUndefined(cachedResp)
                                    ) {
                                        var xsrfValue = urlIsSameOrigin(config.url)
                                            ? $$cookieReader()[config.xsrfCookieName || defaults.xsrfCookieName]
                                            : void 0;
                                        xsrfValue && (
                                            reqHeaders[config.xsrfHeaderName || defaults.xsrfHeaderName] = xsrfValue
                                        ),
                                        $httpBackend(
                                            config.method,
                                            url,
                                            reqData,
                                            done,
                                            reqHeaders,
                                            config.timeout,
                                            config.withCredentials,
                                            config.responseType,
                                            createApplyHandlers(config.eventHandlers),
                                            createApplyHandlers(config.uploadEventHandlers)
                                        )
                                    }
                                    return promise
                                }
                                function buildUrl(url, serializedParams) {
                                    return serializedParams.length > 0 && (url += (
                                        -1 === url.indexOf("?")
                                            ? "?"
                                            : "&"
                                    ) + serializedParams),
                                    url
                                }
                                function sanitizeJsonpCallbackParam(url, key) {
                                    if (/[&?][^=]+=JSON_CALLBACK/.test(url)) 
                                        throw $httpMinErr(
                                            "badjsonp",
                                            'Illegal use of JSON_CALLBACK in url, "{0}"',
                                            url
                                        );
                                    if (new RegExp("[&?]" + key + "=").test(url)) 
                                        throw $httpMinErr(
                                            "badjsonp",
                                            'Illegal use of callback param, "{0}", in url, "{1}"',
                                            key,
                                            url
                                        );
                                    return url += (
                                        -1 === url.indexOf("?")
                                            ? "?"
                                            : "&"
                                    ) + key + "=JSON_CALLBACK"
                                }
                                var defaultCache = $cacheFactory("$http");
                                defaults.paramSerializer = isString(defaults.paramSerializer)
                                    ? $injector.get(defaults.paramSerializer)
                                    : defaults.paramSerializer;
                                var reversedInterceptors = [];
                                return forEach(interceptorFactories, function (interceptorFactory) {
                                    reversedInterceptors.unshift(
                                        isString(interceptorFactory)
                                            ? $injector.get(interceptorFactory)
                                            : $injector.invoke(interceptorFactory)
                                    )
                                }),
                                $http.pendingRequests = [],
                                createShortMethods("get", "delete", "head", "jsonp"),
                                createShortMethodsWithData("post", "put", "patch"),
                                $http.defaults = defaults,
                                $http
                            }
                        ]
                    }
                    function $xhrFactoryProvider() {
                        this.$get = function () {
                            return function createXhr() {
                                return new window.XMLHttpRequest
                            }
                        }
                    }
                    function $HttpBackendProvider() {
                        this.$get = [
                            "$browser",
                            "$jsonpCallbacks",
                            "$document",
                            "$xhrFactory",
                            function ($browser, $jsonpCallbacks, $document, $xhrFactory) {
                                return createHttpBackend(
                                    $browser,
                                    $xhrFactory,
                                    $browser.defer,
                                    $jsonpCallbacks,
                                    $document[0]
                                )
                            }
                        ]
                    }
                    function createHttpBackend(
                        $browser,
                        createXhr,
                        $browserDefer,
                        callbacks,
                        rawDocument
                    ) {
                        function jsonpReq(url, callbackPath, done) {
                            url = url.replace("JSON_CALLBACK", callbackPath);
                            var script = rawDocument.createElement("script"),
                                callback = null;
                            return script.type = "text/javascript",
                            script.src = url,
                            script.async = !0,
                            callback = function (event) {
                                script.removeEventListener("load", callback),
                                script.removeEventListener("error", callback),
                                rawDocument
                                    .body
                                    .removeChild(script),
                                script = null;
                                var status = -1,
                                    text = "unknown";
                                event && (
                                    "load" !== event.type || callbacks.wasCalled(callbackPath) || (event = {
                                        type: "error"
                                    }),
                                    text = event.type,
                                    status = "error" === event.type
                                        ? 404
                                        : 200
                                ),
                                done && done(status, text)
                            },
                            script.addEventListener("load", callback),
                            script.addEventListener("error", callback),
                            rawDocument
                                .body
                                .appendChild(script),
                            callback
                        }
                        return function (
                            method,
                            url,
                            post,
                            callback,
                            headers,
                            timeout,
                            withCredentials,
                            responseType,
                            eventHandlers,
                            uploadEventHandlers
                        ) {
                            function timeoutRequest() {
                                jsonpDone && jsonpDone(),
                                xhr && xhr.abort()
                            }
                            function completeRequest(callback, status, response, headersString, statusText) {
                                isDefined(timeoutId) && $browserDefer.cancel(timeoutId),
                                jsonpDone = xhr = null,
                                callback(status, response, headersString, statusText)
                            }
                            if (url = url || $browser.url(), "jsonp" === lowercase(method)) 
                                var callbackPath = callbacks.createCallback(url),
                                    jsonpDone = jsonpReq(url, callbackPath, function (status, text) {
                                        var response = 200 === status && callbacks.getResponse(callbackPath);
                                        completeRequest(callback, status, response, "", text),
                                        callbacks.removeCallback(callbackPath)
                                    });
                            else {
                                var xhr = createXhr(method, url);
                                xhr.open(method, url, !0),
                                forEach(headers, function (value, key) {
                                    isDefined(value) && xhr.setRequestHeader(key, value)
                                }),
                                xhr.onload = function requestLoaded() {
                                    var statusText = xhr.statusText || "",
                                        response = "response" in xhr
                                            ? xhr.response
                                            : xhr.responseText,
                                        status = 1223 === xhr.status
                                            ? 204
                                            : xhr.status;
                                    0 === status && (
                                        status = response
                                            ? 200
                                            : "file" === urlResolve(url).protocol
                                                ? 404
                                                : 0
                                    ),
                                    completeRequest(
                                        callback,
                                        status,
                                        response,
                                        xhr.getAllResponseHeaders(),
                                        statusText
                                    )
                                };
                                var requestError = function () {
                                    completeRequest(callback, -1, null, null, "")
                                };
                                if (
                                    xhr.onerror = requestError,
                                    xhr.onabort = requestError,
                                    xhr.ontimeout = requestError,
                                    forEach(eventHandlers, function (value, key) {
                                        xhr.addEventListener(key, value)
                                    }),
                                    forEach(uploadEventHandlers, function (value, key) {
                                        xhr
                                            .upload
                                            .addEventListener(key, value)
                                    }),
                                    withCredentials && (xhr.withCredentials = !0),
                                    responseType
                                ) 
                                    try {
                                        xhr.responseType = responseType
                                    } catch (e) {
                                        if ("json" !== responseType) 
                                            throw e
                                    }
                                xhr.send(
                                    isUndefined(post)
                                        ? null
                                        : post
                                )
                            }
                            if (timeout > 0) 
                                var timeoutId = $browserDefer(timeoutRequest, timeout);
                            else 
                                isPromiseLike(timeout) && timeout.then(timeoutRequest)
                        }
                    }
                    function $InterpolateProvider() {
                        var startSymbol = "{{",
                            endSymbol = "}}";
                        this.startSymbol = function (value) {
                            return value
                                ? (startSymbol = value, this)
                                : startSymbol
                        },
                        this.endSymbol = function (value) {
                            return value
                                ? (endSymbol = value, this)
                                : endSymbol
                        },
                        this.$get = [
                            "$parse",
                            "$exceptionHandler",
                            "$sce",
                            function ($parse, $exceptionHandler, $sce) {
                                function escape(ch) {
                                    return "\\\\\\" + ch
                                }
                                function unescapeText(text) {
                                    return text
                                        .replace(escapedStartRegexp, startSymbol)
                                        .replace(escapedEndRegexp, endSymbol)
                                }
                                function constantWatchDelegate(scope, listener, objectEquality, constantInterp) {
                                    var unwatch = scope.$watch(function constantInterpolateWatch(scope) {
                                        return unwatch(),
                                        constantInterp(scope)
                                    }, listener, objectEquality);
                                    return unwatch
                                }
                                function $interpolate(text, mustHaveExpression, trustedContext, allOrNothing) {
                                    function parseStringifyInterceptor(value) {
                                        try {
                                            return value = getValue(value),
                                            allOrNothing && !isDefined(value)
                                                ? value
                                                : stringify(value)
                                        } catch (err) {
                                            $exceptionHandler($interpolateMinErr.interr(text, err))
                                        }
                                    }
                                    if (!text.length || -1 === text.indexOf(startSymbol)) {
                                        var constantInterp;
                                        if (!mustHaveExpression) {
                                            constantInterp = valueFn(unescapeText(text)),
                                            constantInterp.exp = text,
                                            constantInterp.expressions = [],
                                            constantInterp.$$watchDelegate = constantWatchDelegate
                                        }
                                        return constantInterp
                                    }
                                    allOrNothing = !!allOrNothing;
                                    for (
                                        var startIndex,
                                        endIndex,
                                        exp,
                                        index = 0,
                                        expressions = [],
                                        parseFns = [],
                                        textLength = text.length,
                                        concat = [],
                                        expressionPositions = [];
                                        index < textLength;
                                    ) {
                                        if (-1 === (startIndex = text.indexOf(startSymbol, index)) || -1 === (endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength))) {
                                            index !== textLength && concat.push(unescapeText(text.substring(index)));
                                            break
                                        }
                                        index !== startIndex && concat.push(
                                            unescapeText(text.substring(index, startIndex))
                                        ),
                                        exp = text.substring(startIndex + startSymbolLength, endIndex),
                                        expressions.push(exp),
                                        parseFns.push($parse(exp, parseStringifyInterceptor)),
                                        index = endIndex + endSymbolLength,
                                        expressionPositions.push(concat.length),
                                        concat.push("")
                                    }
                                    if (
                                        trustedContext && concat.length > 1 && $interpolateMinErr.throwNoconcat(text),
                                        !mustHaveExpression || expressions.length
                                    ) {
                                        var compute = function (values) {
                                                for (var i = 0, ii = expressions.length; i < ii; i++) {
                                                    if (allOrNothing && isUndefined(values[i])) 
                                                        return;
                                                    concat[expressionPositions[i]] = values[i]
                                                }
                                                return concat.join("")
                                            },
                                            getValue = function (value) {
                                                return trustedContext
                                                    ? $sce.getTrusted(trustedContext, value)
                                                    : $sce.valueOf(value)
                                            };
                                        return extend(function interpolationFn(context) {
                                            var i = 0,
                                                ii = expressions.length,
                                                values = new Array(ii);
                                            try {
                                                for (; i < ii; i++) 
                                                    values[i] = parseFns[i](context);
                                                return compute(values)
                                            } catch (err) {
                                                $exceptionHandler($interpolateMinErr.interr(text, err))
                                            }
                                        }, {
                                            exp: text,
                                            expressions: expressions,
                                            $$watchDelegate: function (scope, listener) {
                                                var lastValue;
                                                return scope.$watchGroup(
                                                    parseFns,
                                                    function interpolateFnWatcher(values, oldValues) {
                                                        var currValue = compute(values);
                                                        isFunction(listener) && listener.call(
                                                            this,
                                                            currValue,
                                                            values !== oldValues
                                                                ? lastValue
                                                                : currValue,
                                                            scope
                                                        ),
                                                        lastValue = currValue
                                                    }
                                                )
                                            }
                                        })
                                    }
                                }
                                var startSymbolLength = startSymbol.length,
                                    endSymbolLength = endSymbol.length,
                                    escapedStartRegexp = new RegExp(startSymbol.replace(/./g, escape), "g"),
                                    escapedEndRegexp = new RegExp(endSymbol.replace(/./g, escape), "g");
                                return $interpolate.startSymbol = function () {
                                    return startSymbol
                                },
                                $interpolate.endSymbol = function () {
                                    return endSymbol
                                },
                                $interpolate
                            }
                        ]
                    }
                    function $IntervalProvider() {
                        this.$get = [
                            "$rootScope",
                            "$window",
                            "$q",
                            "$$q",
                            "$browser",
                            function ($rootScope, $window, $q, $$q, $browser) {
                                function interval(fn, delay, count, invokeApply) {
                                    function callback() {
                                        hasParams
                                            ? fn.apply(null, args)
                                            : fn(iteration)
                                    }
                                    var hasParams = arguments.length > 4,
                                        args = hasParams
                                            ? sliceArgs(arguments, 4)
                                            : [],
                                        setInterval = $window.setInterval,
                                        clearInterval = $window.clearInterval,
                                        iteration = 0,
                                        skipApply = isDefined(invokeApply) && !invokeApply,
                                        deferred = (
                                            skipApply
                                                ? $$q
                                                : $q
                                        ).defer(),
                                        promise = deferred.promise;
                                    return count = isDefined(count)
                                        ? count
                                        : 0,
                                    promise.$$intervalId = setInterval(function tick() {
                                        skipApply
                                            ? $browser.defer(callback)
                                            : $rootScope.$evalAsync(callback),
                                        deferred.notify(iteration++),
                                        count > 0 && iteration >= count && (
                                            deferred.resolve(iteration),
                                            clearInterval(promise.$$intervalId),
                                            delete intervals[promise.$$intervalId]
                                        ),
                                        skipApply || $rootScope.$apply()
                                    }, delay),
                                    intervals[promise.$$intervalId] = deferred,
                                    promise
                                }
                                var intervals = {};
                                return interval.cancel = function (promise) {
                                    return !!(promise && promise.$$intervalId in intervals) && (
                                        intervals[promise.$$intervalId].promise.catch(noop),
                                        intervals[promise.$$intervalId].reject("canceled"),
                                        $window.clearInterval(promise.$$intervalId),
                                        delete intervals[promise.$$intervalId],
                                        !0
                                    )
                                },
                                interval
                            }
                        ]
                    }
                    function encodePath(path) {
                        for (var segments = path.split("/"), i = segments.length; i--;) 
                            segments[i] = encodeUriSegment(segments[i]);
                        return segments.join("/")
                    }
                    function parseAbsoluteUrl(absoluteUrl, locationObj) {
                        var parsedUrl = urlResolve(absoluteUrl);
                        locationObj.$$protocol = parsedUrl.protocol,
                        locationObj.$$host = parsedUrl.hostname,
                        locationObj.$$port = toInt(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null
                    }
                    function parseAppUrl(url, locationObj) {
                        if (DOUBLE_SLASH_REGEX.test(url)) 
                            throw $locationMinErr("badpath", 'Invalid url "{0}".', url);
                        var prefixed = "/" !== url.charAt(0);
                        prefixed && (url = "/" + url);
                        var match = urlResolve(url);
                        locationObj.$$path = decodeURIComponent(
                            prefixed && "/" === match.pathname.charAt(0)
                                ? match.pathname.substring(1)
                                : match.pathname
                        ),
                        locationObj.$$search = parseKeyValue(match.search),
                        locationObj.$$hash = decodeURIComponent(match.hash),
                        locationObj.$$path && "/" !== locationObj
                            .$$path
                            .charAt(0) && (locationObj.$$path = "/" + locationObj.$$path)
                    }
                    function startsWith(str, search) {
                        return str.slice(0, search.length) === search
                    }
                    function stripBaseUrl(base, url) {
                        if (startsWith(url, base)) 
                            return url.substr(base.length)
                    }
                    function stripHash(url) {
                        var index = url.indexOf("#");
                        return -1 === index
                            ? url
                            : url.substr(0, index)
                    }
                    function trimEmptyHash(url) {
                        return url.replace(/(#.+)|#$/, "$1")
                    }
                    function stripFile(url) {
                        return url.substr(0, stripHash(url).lastIndexOf("/") + 1)
                    }
                    function serverBase(url) {
                        return url.substring(0, url.indexOf("/", url.indexOf("//") + 2))
                    }
                    function LocationHtml5Url(appBase, appBaseNoFile, basePrefix) {
                        this.$$html5 = !0,
                        basePrefix = basePrefix || "",
                        parseAbsoluteUrl(appBase, this),
                        this.$$parse = function (url) {
                            var pathUrl = stripBaseUrl(appBaseNoFile, url);
                            if (!isString(pathUrl)) 
                                throw $locationMinErr(
                                    "ipthprfx",
                                    'Invalid url "{0}", missing path prefix "{1}".',
                                    url,
                                    appBaseNoFile
                                );
                            parseAppUrl(pathUrl, this),
                            this.$$path || (this.$$path = "/"),
                            this.$$compose()
                        },
                        this.$$compose = function () {
                            var search = toKeyValue(this.$$search),
                                hash = this.$$hash
                                    ? "#" + encodeUriSegment(this.$$hash)
                                    : "";
                            this.$$url = encodePath(this.$$path) + (
                                search
                                    ? "?" + search
                                    : ""
                            ) + hash,
                            this.$$absUrl = appBaseNoFile + this
                                .$$url
                                .substr(1)
                        },
                        this.$$parseLinkUrl = function (url, relHref) {
                            if (relHref && "#" === relHref[0]) 
                                return this.hash(relHref.slice(1)),
                                !0;
                            var appUrl,
                                prevAppUrl,
                                rewrittenUrl;
                            return isDefined(appUrl = stripBaseUrl(appBase, url))
                                ? (
                                    prevAppUrl = appUrl,
                                    rewrittenUrl = basePrefix && isDefined(appUrl = stripBaseUrl(basePrefix, appUrl))
                                        ? appBaseNoFile + (stripBaseUrl("/", appUrl) || appUrl)
                                        : appBase + prevAppUrl
                                )
                                : isDefined(appUrl = stripBaseUrl(appBaseNoFile, url))
                                    ? rewrittenUrl = appBaseNoFile + appUrl
                                    : appBaseNoFile === url + "/" && (rewrittenUrl = appBaseNoFile),
                            rewrittenUrl && this.$$parse(rewrittenUrl),
                            !!rewrittenUrl
                        }
                    }
                    function LocationHashbangUrl(appBase, appBaseNoFile, hashPrefix) {
                        parseAbsoluteUrl(appBase, this),
                        this.$$parse = function (url) {
                            function removeWindowsDriveName(path, url, base) {
                                var firstPathSegmentMatch,
                                    windowsFilePathExp = /^\/[A-Z]:(\/.*)/;
                                return startsWith(url, base) && (url = url.replace(base, "")),
                                windowsFilePathExp.exec(url)
                                    ? path
                                    : (
                                        firstPathSegmentMatch = windowsFilePathExp.exec(path),
                                        firstPathSegmentMatch
                                            ? firstPathSegmentMatch[1]
                                            : path
                                    )
                            }
                            var withoutHashUrl,
                                withoutBaseUrl = stripBaseUrl(appBase, url) || stripBaseUrl(appBaseNoFile, url);
                            isUndefined(withoutBaseUrl) || "#" !== withoutBaseUrl.charAt(0)
                                ? this.$$html5
                                    ? withoutHashUrl = withoutBaseUrl
                                    : (
                                        withoutHashUrl = "",
                                        isUndefined(withoutBaseUrl) && (appBase = url, this.replace())
                                    )
                                : (
                                    withoutHashUrl = stripBaseUrl(hashPrefix, withoutBaseUrl),
                                    isUndefined(withoutHashUrl) && (withoutHashUrl = withoutBaseUrl)
                                ),
                            parseAppUrl(withoutHashUrl, this),
                            this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase),
                            this.$$compose()
                        },
                        this.$$compose = function () {
                            var search = toKeyValue(this.$$search),
                                hash = this.$$hash
                                    ? "#" + encodeUriSegment(this.$$hash)
                                    : "";
                            this.$$url = encodePath(this.$$path) + (
                                search
                                    ? "?" + search
                                    : ""
                            ) + hash,
                            this.$$absUrl = appBase + (
                                this.$$url
                                    ? hashPrefix + this.$$url
                                    : ""
                            )
                        },
                        this.$$parseLinkUrl = function (url, relHref) {
                            return stripHash(appBase) === stripHash(url) && (this.$$parse(url), !0)
                        }
                    }
                    function LocationHashbangInHtml5Url(appBase, appBaseNoFile, hashPrefix) {
                        this.$$html5 = !0,
                        LocationHashbangUrl.apply(this, arguments),
                        this.$$parseLinkUrl = function (url, relHref) {
                            if (relHref && "#" === relHref[0]) 
                                return this.hash(relHref.slice(1)),
                                !0;
                            var rewrittenUrl,
                                appUrl;
                            return appBase === stripHash(url)
                                ? rewrittenUrl = url
                                : (appUrl = stripBaseUrl(appBaseNoFile, url))
                                    ? rewrittenUrl = appBase + hashPrefix + appUrl
                                    : appBaseNoFile === url + "/" && (rewrittenUrl = appBaseNoFile),
                            rewrittenUrl && this.$$parse(rewrittenUrl),
                            !!rewrittenUrl
                        },
                        this.$$compose = function () {
                            var search = toKeyValue(this.$$search),
                                hash = this.$$hash
                                    ? "#" + encodeUriSegment(this.$$hash)
                                    : "";
                            this.$$url = encodePath(this.$$path) + (
                                search
                                    ? "?" + search
                                    : ""
                            ) + hash,
                            this.$$absUrl = appBase + hashPrefix + this.$$url
                        }
                    }
                    function locationGetter(property) {
                        return function () {
                            return this[property]
                        }
                    }
                    function locationGetterSetter(property, preprocess) {
                        return function (value) {
                            return isUndefined(value)
                                ? this[property]
                                : (this[property] = preprocess(value), this.$$compose(), this)
                        }
                    }
                    function $LocationProvider() {
                        var hashPrefix = "!",
                            html5Mode = {
                                enabled: !1,
                                requireBase: !0,
                                rewriteLinks: !0
                            };
                        this.hashPrefix = function (prefix) {
                            return isDefined(prefix)
                                ? (hashPrefix = prefix, this)
                                : hashPrefix
                        },
                        this.html5Mode = function (mode) {
                            return isBoolean(mode)
                                ? (html5Mode.enabled = mode, this)
                                : isObject(mode)
                                    ? (
                                        isBoolean(mode.enabled) && (html5Mode.enabled = mode.enabled),
                                        isBoolean(mode.requireBase) && (html5Mode.requireBase = mode.requireBase),
                                        (isBoolean(mode.rewriteLinks) || isString(mode.rewriteLinks)) && (html5Mode.rewriteLinks = mode.rewriteLinks),
                                        this
                                    )
                                    : html5Mode
                        },
                        this.$get = [
                            "$rootScope",
                            "$browser",
                            "$sniffer",
                            "$rootElement",
                            "$window",
                            function ($rootScope, $browser, $sniffer, $rootElement, $window) {
                                function setBrowserUrlWithFallback(url, replace, state) {
                                    var oldUrl = $location.url(),
                                        oldState = $location.$$state;
                                    try {
                                        $browser.url(url, replace, state),
                                        $location.$$state = $browser.state()
                                    } catch (e) {
                                        throw $location.url(oldUrl),
                                        $location.$$state = oldState,
                                        e
                                    }
                                }
                                function afterLocationChange(oldUrl, oldState) {
                                    $rootScope.$broadcast(
                                        "$locationChangeSuccess",
                                        $location.absUrl(),
                                        oldUrl,
                                        $location.$$state,
                                        oldState
                                    )
                                }
                                var $location,
                                    LocationMode,
                                    appBase,
                                    baseHref = $browser.baseHref(),
                                    initialUrl = $browser.url();
                                if (html5Mode.enabled) {
                                    if (!baseHref && html5Mode.requireBase) 
                                        throw $locationMinErr(
                                            "nobase",
                                            "$location in HTML5 mode requires a <base> tag to be present!"
                                        );
                                    appBase = serverBase(initialUrl) + (baseHref || "/"),
                                    LocationMode = $sniffer.history
                                        ? LocationHtml5Url
                                        : LocationHashbangInHtml5Url
                                } else 
                                    appBase = stripHash(initialUrl),
                                    LocationMode = LocationHashbangUrl;
                                var appBaseNoFile = stripFile(appBase);
                                $location = new LocationMode(appBase, appBaseNoFile, "#" + hashPrefix),
                                $location.$$parseLinkUrl(initialUrl, initialUrl),
                                $location.$$state = $browser.state();
                                var IGNORE_URI_REGEXP = /^\s*(javascript|mailto):/i;
                                $rootElement.on("click", function (event) {
                                    var rewriteLinks = html5Mode.rewriteLinks;
                                    if (rewriteLinks && !event.ctrlKey && !event.metaKey && !event.shiftKey && 2 !== event.which && 2 !== event.button) {
                                        for (var elm = jqLite(event.target); "a" !== nodeName_(elm[0]);) 
                                            if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) 
                                                return;
                                    if (!isString(rewriteLinks) || !isUndefined(elm.attr(rewriteLinks))) {
                                            var absHref = elm.prop("href"),
                                                relHref = elm.attr("href") || elm.attr("xlink:href");
                                            isObject(absHref) && "[object SVGAnimatedString]" === absHref.toString() && (
                                                absHref = urlResolve(absHref.animVal).href
                                            ),
                                            IGNORE_URI_REGEXP.test(absHref) || !absHref || elm.attr("target") || event.isDefaultPrevented() || $location.$$parseLinkUrl(
                                                absHref,
                                                relHref
                                            ) && (
                                                event.preventDefault(),
                                                $location.absUrl() !== $browser.url() && ($rootScope.$apply(), $window.angular["ff-684208-preventDefault"] = !0)
                                            )
                                        }
                                    }
                                }),
                                trimEmptyHash($location.absUrl()) !== trimEmptyHash(initialUrl) && $browser.url(
                                    $location.absUrl(),
                                    !0
                                );
                                var initializing = !0;
                                return $browser.onUrlChange(function (newUrl, newState) {
                                    if (!startsWith(newUrl, appBaseNoFile)) 
                                        return void($window.location.href = newUrl);
                                    $rootScope.$evalAsync(function () {
                                        var defaultPrevented,
                                            oldUrl = $location.absUrl(),
                                            oldState = $location.$$state;
                                        newUrl = trimEmptyHash(newUrl),
                                        $location.$$parse(newUrl),
                                        $location.$$state = newState,
                                        defaultPrevented = $rootScope
                                            .$broadcast(
                                                "$locationChangeStart",
                                                newUrl,
                                                oldUrl,
                                                newState,
                                                oldState
                                            )
                                            .defaultPrevented,
                                        $location.absUrl() === newUrl && (
                                            defaultPrevented
                                                ? (
                                                    $location.$$parse(oldUrl),
                                                    $location.$$state = oldState,
                                                    setBrowserUrlWithFallback(oldUrl, !1, oldState)
                                                )
                                                : (initializing = !1, afterLocationChange(oldUrl, oldState))
                                        )
                                    }),
                                    $rootScope.$$phase || $rootScope.$digest()
                                }),
                                $rootScope.$watch(function $locationWatch() {
                                    var oldUrl = trimEmptyHash($browser.url()),
                                        newUrl = trimEmptyHash($location.absUrl()),
                                        oldState = $browser.state(),
                                        currentReplace = $location.$$replace,
                                        urlOrStateChanged = oldUrl !== newUrl || $location.$$html5 && $sniffer.history && oldState !== $location.$$state;
                                    (initializing || urlOrStateChanged) && (
                                        initializing = !1,
                                        $rootScope.$evalAsync(function () {
                                            var newUrl = $location.absUrl(),
                                                defaultPrevented = $rootScope
                                                    .$broadcast(
                                                        "$locationChangeStart",
                                                        newUrl,
                                                        oldUrl,
                                                        $location.$$state,
                                                        oldState
                                                    )
                                                    .defaultPrevented;
                                            $location.absUrl() === newUrl && (
                                                defaultPrevented
                                                    ? ($location.$$parse(oldUrl), $location.$$state = oldState)
                                                    : (urlOrStateChanged && setBrowserUrlWithFallback(
                                                        newUrl,
                                                        currentReplace,
                                                        oldState === $location.$$state
                                                            ? null
                                                            : $location.$$state
                                                    ), afterLocationChange(oldUrl, oldState))
                                            )
                                        })
                                    ),
                                    $location.$$replace = !1
                                }),
                                $location
                            }
                        ]
                    }
                    function $LogProvider() {
                        var debug = !0,
                            self = this;
                        this.debugEnabled = function (flag) {
                            return isDefined(flag)
                                ? (debug = flag, this)
                                : debug
                        },
                        this.$get = [
                            "$window",
                            function ($window) {
                                function formatError(arg) {
                                    return arg instanceof Error && (
                                        arg.stack
                                            ? arg = arg.message && -1 === arg.stack.indexOf(arg.message)
                                                ? "Error: " + arg.message + "\n" + arg.stack
                                                : arg.stack
                                            : arg.sourceURL && (arg = arg.message + "\n" + arg.sourceURL + ":" + arg.line)
                                    ),
                                    arg
                                }
                                function consoleLog(type) {
                                    var console = $window.console || {},
                                        logFn = console[type] || console.log || noop,
                                        hasApply = !1;
                                    try {
                                        hasApply = !!logFn.apply
                                    } catch (e) {}
                                    return hasApply
                                        ? function () {
                                            var args = [];
                                            return forEach(arguments, function (arg) {
                                                args.push(formatError(arg))
                                            }),
                                            logFn.apply(console, args)
                                        }
                                        : function (arg1, arg2) {
                                            logFn(
                                                arg1,
                                                null == arg2
                                                    ? ""
                                                    : arg2
                                            )
                                        }
                                }
                                return {
                                    log: consoleLog("log"),
                                    info: consoleLog("info"),
                                    warn: consoleLog("warn"),
                                    error: consoleLog("error"),
                                    debug: function () {
                                        var fn = consoleLog("debug");
                                        return function () {
                                            debug && fn.apply(self, arguments)
                                        }
                                    }()
                                }
                            }
                        ]
                    }
                    function getStringValue(name) {
                        return name + ""
                    }
                    function ifDefined(v, d) {
                        return void 0 !== v
                            ? v
                            : d
                    }
                    function plusFn(l, r) {
                        return void 0 === l
                            ? r
                            : void 0 === r
                                ? l
                                : l + r
                    }
                    function isStateless($filter, filterName) {
                        return !$filter(filterName).$stateful
                    }
                    function findConstantAndWatchExpressions(ast, $filter) {
                        var allConstants,
                            argsToWatch,
                            isStatelessFilter;
                        switch (ast.type) {
                            case AST.Program:
                                allConstants = !0,
                                forEach(ast.body, function (expr) {
                                    findConstantAndWatchExpressions(expr.expression, $filter),
                                    allConstants = allConstants && expr.expression.constant
                                }),
                                ast.constant = allConstants;
                                break;
                            case AST.Literal:
                                ast.constant = !0,
                                ast.toWatch = [];
                                break;
                            case AST.UnaryExpression:
                                findConstantAndWatchExpressions(ast.argument, $filter),
                                ast.constant = ast.argument.constant,
                                ast.toWatch = ast.argument.toWatch;
                                break;
                            case AST.BinaryExpression:
                                findConstantAndWatchExpressions(ast.left, $filter),
                                findConstantAndWatchExpressions(ast.right, $filter),
                                ast.constant = ast.left.constant && ast.right.constant,
                                ast.toWatch = ast
                                    .left
                                    .toWatch
                                    .concat(ast.right.toWatch);
                                break;
                            case AST.LogicalExpression:
                                findConstantAndWatchExpressions(ast.left, $filter),
                                findConstantAndWatchExpressions(ast.right, $filter),
                                ast.constant = ast.left.constant && ast.right.constant,
                                ast.toWatch = ast.constant
                                    ? []
                                    : [ast];
                                break;
                            case AST.ConditionalExpression:
                                findConstantAndWatchExpressions(ast.test, $filter),
                                findConstantAndWatchExpressions(ast.alternate, $filter),
                                findConstantAndWatchExpressions(ast.consequent, $filter),
                                ast.constant = ast.test.constant && ast.alternate.constant && ast.consequent.constant,
                                ast.toWatch = ast.constant
                                    ? []
                                    : [ast];
                                break;
                            case AST.Identifier:
                                ast.constant = !1,
                                ast.toWatch = [ast];
                                break;
                            case AST.MemberExpression:
                                findConstantAndWatchExpressions(ast.object, $filter),
                                ast.computed && findConstantAndWatchExpressions(ast.property, $filter),
                                ast.constant = ast.object.constant && (!ast.computed || ast.property.constant),
                                ast.toWatch = [ast];
                                break;
                            case AST.CallExpression:
                                isStatelessFilter = !!ast.filter && isStateless($filter, ast.callee.name),
                                allConstants = isStatelessFilter,
                                argsToWatch = [],
                                forEach(ast.arguments, function (expr) {
                                    findConstantAndWatchExpressions(expr, $filter),
                                    allConstants = allConstants && expr.constant,
                                    expr.constant || argsToWatch
                                        .push
                                        .apply(argsToWatch, expr.toWatch)
                                }),
                                ast.constant = allConstants,
                                ast.toWatch = isStatelessFilter
                                    ? argsToWatch
                                    : [ast];
                                break;
                            case AST.AssignmentExpression:
                                findConstantAndWatchExpressions(ast.left, $filter),
                                findConstantAndWatchExpressions(ast.right, $filter),
                                ast.constant = ast.left.constant && ast.right.constant,
                                ast.toWatch = [ast];
                                break;
                            case AST.ArrayExpression:
                                allConstants = !0,
                                argsToWatch = [],
                                forEach(ast.elements, function (expr) {
                                    findConstantAndWatchExpressions(expr, $filter),
                                    allConstants = allConstants && expr.constant,
                                    expr.constant || argsToWatch
                                        .push
                                        .apply(argsToWatch, expr.toWatch)
                                }),
                                ast.constant = allConstants,
                                ast.toWatch = argsToWatch;
                                break;
                            case AST.ObjectExpression:
                                allConstants = !0,
                                argsToWatch = [],
                                forEach(ast.properties, function (property) {
                                    findConstantAndWatchExpressions(property.value, $filter),
                                    allConstants = allConstants && property.value.constant && !property.computed,
                                    property.value.constant || argsToWatch
                                        .push
                                        .apply(argsToWatch, property.value.toWatch)
                                }),
                                ast.constant = allConstants,
                                ast.toWatch = argsToWatch;
                                break;
                            case AST.ThisExpression:
                            case AST.LocalsExpression:
                                ast.constant = !1,
                                ast.toWatch = []
                        }
                    }
                    function getInputs(body) {
                        if (1 === body.length) {
                            var lastExpression = body[0].expression,
                                candidate = lastExpression.toWatch;
                            return 1 !== candidate.length
                                ? candidate
                                : candidate[0] !== lastExpression
                                    ? candidate
                                    : void 0
                        }
                    }
                    function isAssignable(ast) {
                        return ast.type === AST.Identifier || ast.type === AST.MemberExpression
                    }
                    function assignableAST(ast) {
                        if (1 === ast.body.length && isAssignable(ast.body[0].expression)) 
                            return {
                                type: AST.AssignmentExpression,
                                left: ast
                                    .body[0]
                                    .expression,
                                right: {
                                    type: AST.NGValueParameter
                                },
                                operator: "="
                            }
                        }
                    function isLiteral(ast) {
                        return 0 === ast.body.length || 1 === ast.body.length && (
                            ast.body[0].expression.type === AST.Literal || ast.body[0].expression.type === AST.ArrayExpression || ast.body[0].expression.type === AST.ObjectExpression
                        )
                    }
                    function isConstant(ast) {
                        return ast.constant
                    }
                    function ASTCompiler(astBuilder, $filter) {
                        this.astBuilder = astBuilder,
                        this.$filter = $filter
                    }
                    function ASTInterpreter(astBuilder, $filter) {
                        this.astBuilder = astBuilder,
                        this.$filter = $filter
                    }
                    function getValueOf(value) {
                        return isFunction(value.valueOf)
                            ? value.valueOf()
                            : objectValueOf.call(value)
                    }
                    function $ParseProvider() {
                        var identStart,
                            identContinue,
                            cache = createMap(),
                            literals = {
                                true: !0,
                                false: !1,
                                null: null,
                                undefined: void 0
                            };
                        this.addLiteral = function (literalName, literalValue) {
                            literals[literalName] = literalValue
                        },
                        this.setIdentifierFns = function (identifierStart, identifierContinue) {
                            return identStart = identifierStart,
                            identContinue = identifierContinue,
                            this
                        },
                        this.$get = [
                            "$filter",
                            function ($filter) {
                                function $parse(exp, interceptorFn) {
                                    var parsedExpression,
                                        oneTime,
                                        cacheKey;
                                    switch (typeof exp) {
                                        case "string":
                                            if (exp = exp.trim(), cacheKey = exp, !(parsedExpression = cache[cacheKey])) {
                                                ":" === exp.charAt(0) && ":" === exp.charAt(1) && (
                                                    oneTime = !0,
                                                    exp = exp.substring(2)
                                                );
                                                var lexer = new Lexer($parseOptions);
                                                parsedExpression = new Parser(lexer, $filter, $parseOptions).parse(exp),
                                                parsedExpression.constant
                                                    ? parsedExpression.$$watchDelegate = constantWatchDelegate
                                                    : oneTime
                                                        ? parsedExpression.$$watchDelegate = parsedExpression.literal
                                                            ? oneTimeLiteralWatchDelegate
                                                            : oneTimeWatchDelegate
                                                        : parsedExpression.inputs && (
                                                            parsedExpression.$$watchDelegate = inputsWatchDelegate
                                                        ),
                                                cache[cacheKey] = parsedExpression
                                            }
                                            return addInterceptor(parsedExpression, interceptorFn);
                                        case "function":
                                            return addInterceptor(exp, interceptorFn);
                                        default:
                                            return addInterceptor(noop, interceptorFn)
                                    }
                                }
                                function expressionInputDirtyCheck(newValue, oldValueOfValue) {
                                    return null == newValue || null == oldValueOfValue
                                        ? newValue === oldValueOfValue
                                        : (
                                            "object" != typeof newValue || "object" != typeof(newValue = getValueOf(newValue))
                                        ) && (
                                            newValue === oldValueOfValue || newValue !== newValue && oldValueOfValue !== oldValueOfValue
                                        )
                                }
                                function inputsWatchDelegate(
                                    scope,
                                    listener,
                                    objectEquality,
                                    parsedExpression,
                                    prettyPrintExpression
                                ) {
                                    var lastResult,
                                        inputExpressions = parsedExpression.inputs;
                                    if (1 === inputExpressions.length) {
                                        var oldInputValueOf = expressionInputDirtyCheck;
                                        return inputExpressions = inputExpressions[0],
                                        scope.$watch(
                                            function expressionInputWatch(scope) {
                                                var newInputValue = inputExpressions(scope);
                                                return expressionInputDirtyCheck(newInputValue, oldInputValueOf) || (
                                                    lastResult = parsedExpression(scope, void 0, void 0, [newInputValue]),
                                                    oldInputValueOf = newInputValue && getValueOf(newInputValue)
                                                ),
                                                lastResult
                                            },
                                            listener,
                                            objectEquality,
                                            prettyPrintExpression
                                        )
                                    }
                                    for (
                                        var oldInputValueOfValues = [],
                                        oldInputValues = [],
                                        i = 0,
                                        ii = inputExpressions.length;
                                        i < ii;
                                        i++
                                    ) 
                                        oldInputValueOfValues[i] = expressionInputDirtyCheck,
                                        oldInputValues[i] = null;
                                    return scope.$watch(
                                        function expressionInputsWatch(scope) {
                                            for (var changed = !1, i = 0, ii = inputExpressions.length; i < ii; i++) {
                                                var newInputValue = inputExpressions[i](scope);
                                                (
                                                    changed || (changed = !expressionInputDirtyCheck(newInputValue, oldInputValueOfValues[i]))
                                                ) && (
                                                    oldInputValues[i] = newInputValue,
                                                    oldInputValueOfValues[i] = newInputValue && getValueOf(newInputValue)
                                                )
                                            }
                                            return changed && (
                                                lastResult = parsedExpression(scope, void 0, void 0, oldInputValues)
                                            ),
                                            lastResult
                                        },
                                        listener,
                                        objectEquality,
                                        prettyPrintExpression
                                    )
                                }
                                function oneTimeWatchDelegate(
                                    scope,
                                    listener,
                                    objectEquality,
                                    parsedExpression,
                                    prettyPrintExpression
                                ) {
                                    function oneTimeWatch(scope) {
                                        return parsedExpression(scope)
                                    }
                                    function oneTimeListener(value, old, scope) {
                                        lastValue = value,
                                        isFunction(listener) && listener(value, old, scope),
                                        isDefined(value) && scope.$$postDigest(function () {
                                            isDefined(lastValue) && unwatch()
                                        })
                                    }
                                    var unwatch,
                                        lastValue;
                                    return unwatch = parsedExpression.inputs
                                        ? inputsWatchDelegate(
                                            scope,
                                            oneTimeListener,
                                            objectEquality,
                                            parsedExpression,
                                            prettyPrintExpression
                                        )
                                        : scope.$watch(oneTimeWatch, oneTimeListener, objectEquality)
                                }
                                function oneTimeLiteralWatchDelegate(
                                    scope,
                                    listener,
                                    objectEquality,
                                    parsedExpression
                                ) {
                                    function isAllDefined(value) {
                                        var allDefined = !0;
                                        return forEach(value, function (val) {
                                            isDefined(val) || (allDefined = !1)
                                        }),
                                        allDefined
                                    }
                                    var unwatch,
                                        lastValue;
                                    return unwatch = scope.$watch(
                                        function oneTimeWatch(scope) {
                                            return parsedExpression(scope)
                                        },
                                        function oneTimeListener(value, old, scope) {
                                            lastValue = value,
                                            isFunction(listener) && listener(value, old, scope),
                                            isAllDefined(value) && scope.$$postDigest(function () {
                                                isAllDefined(lastValue) && unwatch()
                                            })
                                        },
                                        objectEquality
                                    )
                                }
                                function constantWatchDelegate(
                                    scope,
                                    listener,
                                    objectEquality,
                                    parsedExpression
                                ) {
                                    var unwatch = scope.$watch(function constantWatch(scope) {
                                        return unwatch(),
                                        parsedExpression(scope)
                                    }, listener, objectEquality);
                                    return unwatch
                                }
                                function addInterceptor(parsedExpression, interceptorFn) {
                                    if (!interceptorFn) 
                                        return parsedExpression;
                                    var watchDelegate = parsedExpression.$$watchDelegate,
                                        useInputs = !1,
                                        regularWatch = watchDelegate !== oneTimeLiteralWatchDelegate && watchDelegate !== oneTimeWatchDelegate,
                                        fn = regularWatch
                                            ? function regularInterceptedExpression(scope, locals, assign, inputs) {
                                                var value = useInputs && inputs
                                                    ? inputs[0]
                                                    : parsedExpression(scope, locals, assign, inputs);
                                                return interceptorFn(value, scope, locals)
                                            }
                                            : function oneTimeInterceptedExpression(scope, locals, assign, inputs) {
                                                var value = parsedExpression(scope, locals, assign, inputs),
                                                    result = interceptorFn(value, scope, locals);
                                                return isDefined(value)
                                                    ? result
                                                    : value
                                            };
                                    return useInputs = !parsedExpression.inputs,
                                    parsedExpression.$$watchDelegate && parsedExpression.$$watchDelegate !== inputsWatchDelegate
                                        ? (
                                            fn.$$watchDelegate = parsedExpression.$$watchDelegate,
                                            fn.inputs = parsedExpression.inputs
                                        )
                                        : interceptorFn.$stateful || (
                                            fn.$$watchDelegate = inputsWatchDelegate,
                                            fn.inputs = parsedExpression.inputs
                                                ? parsedExpression.inputs
                                                : [parsedExpression]
                                        ),
                                    fn
                                }
                                var noUnsafeEval = csp().noUnsafeEval,
                                    $parseOptions = {
                                        csp: noUnsafeEval,
                                        literals: copy(literals),
                                        isIdentifierStart: isFunction(identStart) && identStart,
                                        isIdentifierContinue: isFunction(identContinue) && identContinue
                                    };
                                return $parse
                            }
                        ]
                    }
                    function $QProvider() {
                        var errorOnUnhandledRejections = !0;
                        this.$get = [
                            "$rootScope",
                            "$exceptionHandler",
                            function ($rootScope, $exceptionHandler) {
                                return qFactory(function (callback) {
                                    $rootScope.$evalAsync(callback)
                                }, $exceptionHandler, errorOnUnhandledRejections)
                            }
                        ],
                        this.errorOnUnhandledRejections = function (value) {
                            return isDefined(value)
                                ? (errorOnUnhandledRejections = value, this)
                                : errorOnUnhandledRejections
                        }
                    }
                    function $$QProvider() {
                        var errorOnUnhandledRejections = !0;
                        this.$get = [
                            "$browser",
                            "$exceptionHandler",
                            function ($browser, $exceptionHandler) {
                                return qFactory(function (callback) {
                                    $browser.defer(callback)
                                }, $exceptionHandler, errorOnUnhandledRejections)
                            }
                        ],
                        this.errorOnUnhandledRejections = function (value) {
                            return isDefined(value)
                                ? (errorOnUnhandledRejections = value, this)
                                : errorOnUnhandledRejections
                        }
                    }
                    function qFactory(nextTick, exceptionHandler, errorOnUnhandledRejections) {
                    function defer() {
                                return new Deferred
                            }
                            function Deferred() {
                                var promise = this.promise = new Promise;
                                this.resolve = function (val) {
                                    resolvePromise(promise, val)
                                },
                                this.reject = function (reason) {
                                    rejectPromise(promise, reason)
                                },
                                this.notify = function (progress) {
                                    notifyPromise(promise, progress)
                                }
                            }
                            function Promise() {
                                this.$$state = {
                                    status: 0
                                }
                            }
                            function processQueue(state) {
                                var fn,
                                    promise,
                                    pending;
                                pending = state.pending,
                                state.processScheduled = !1,
                                state.pending = void 0;
                                try {
                                    for (var i = 0, ii = pending.length; i < ii; ++i) {
                                        state.pur = !0,
                                        promise = pending[i][0],
                                        fn = pending[i][state.status];
                                        try {
                                            isFunction(fn)
                                                ? resolvePromise(promise, fn(state.value))
                                                : 1 === state.status
                                                    ? resolvePromise(promise, state.value)
                                                    : rejectPromise(promise, state.value)
                                        } catch (e) {
                                            rejectPromise(promise, e)
                                        }
                                    }
                                } finally {
                                    --queueSize,
                                    errorOnUnhandledRejections && 0 === queueSize && nextTick(processChecks)
                                }
                            }
                            function processChecks() {
                                for (; !queueSize && checkQueue.length;) {
                                    var toCheck = checkQueue.shift();
                                    if (!toCheck.pur) {
                                        toCheck.pur = !0;
                                        var errorMessage = "Possibly unhandled rejection: " + toDebugString(
                                            toCheck.value
                                        );
                                        toCheck.value instanceof Error
                                            ? exceptionHandler(toCheck.value, errorMessage)
                                            : exceptionHandler(errorMessage)
                                    }
                                }
                            }
                            function scheduleProcessQueue(state) {
                                !errorOnUnhandledRejections || state.pending || 2 !== state.status || state.pur || (
                                    0 === queueSize && 0 === checkQueue.length && nextTick(processChecks),
                                    checkQueue.push(state)
                                ),
                                !state.processScheduled && state.pending && (
                                    state.processScheduled = !0,
                                    ++queueSize,
                                    nextTick(function () {
                                        processQueue(state)
                                    })
                                )
                            }
                            function resolvePromise(promise, val) {
                                promise.$$state.status || (
                                    val === promise
                                        ? $$reject(promise, $qMinErr(
                                            "qcycle",
                                            "Expected promise to be resolved with value other than itself '{0}'",
                                            val
                                        ))
                                        : $$resolve(promise, val)
                                )
                            }
                            function $$resolve(promise, val) {
                                function doResolve(val) {
                                    done || (done = !0, $$resolve(promise, val))
                                }
                                function doReject(val) {
                                    done || (done = !0, $$reject(promise, val))
                                }
                                function doNotify(progress) {
                                    notifyPromise(promise, progress)
                                }
                                var then,
                                    done = !1;
                                try {
                                    (isObject(val) || isFunction(val)) && (then = val.then),
                                    isFunction(then)
                                        ? (promise.$$state.status = -1, then.call(val, doResolve, doReject, doNotify))
                                        : (
                                            promise.$$state.value = val,
                                            promise.$$state.status = 1,
                                            scheduleProcessQueue(promise.$$state)
                                        )
                                } catch (e) {
                                    doReject(e)
                                }
                            }
                            function rejectPromise(promise, reason) {
                                promise.$$state.status || $$reject(promise, reason)
                            }
                            function $$reject(promise, reason) {
                                promise.$$state.value = reason,
                                promise.$$state.status = 2,
                                scheduleProcessQueue(promise.$$state)
                            }
                            function notifyPromise(promise, progress) {
                                var callbacks = promise.$$state.pending;
                                promise.$$state.status <= 0 && callbacks && callbacks.length && nextTick(
                                    function () {
                                        for (var callback, result, i = 0, ii = callbacks.length; i < ii; i++) {
                                            result = callbacks[i][0],
                                            callback = callbacks[i][3];
                                            try {
                                                notifyPromise(
                                                    result,
                                                    isFunction(callback)
                                                        ? callback(progress)
                                                        : progress
                                                )
                                            } catch (e) {
                                                exceptionHandler(e)
                                            }
                                        }
                                    }
                                )
                            }
                            function reject(reason) {
                                var result = new Promise;
                                return rejectPromise(result, reason),
                                result
                            }
                            function handleCallback(value, resolver, callback) {
                                var callbackOutput = null;
                                try {
                                    isFunction(callback) && (callbackOutput = callback())
                                } catch (e) {
                                    return reject(e)
                                }
                                return isPromiseLike(callbackOutput)
                                    ? callbackOutput.then(function () {
                                        return resolver(value)
                                    }, reject)
                                    : resolver(value)
                            }
                            function when(value, callback, errback, progressBack) {
                                var result = new Promise;
                                return resolvePromise(result, value),
                                result.then(callback, errback, progressBack)
                            }
                            function all(promises) {
                                var result = new Promise,
                                    counter = 0,
                                    results = isArray(promises)
                                        ? []
                                        : {};
                                return forEach(promises, function (promise, key) {
                                    counter++,
                                    when(promise).then(function (value) {
                                        results[key] = value,
                                        --counter || resolvePromise(result, results)
                                    }, function (reason) {
                                        rejectPromise(result, reason)
                                    })
                                }),
                                0 === counter && resolvePromise(result, results),
                                result
                            }
                            function race(promises) {
                                var deferred = defer();
                                return forEach(promises, function (promise) {
                                    when(promise).then(deferred.resolve, deferred.reject)
                                }),
                                deferred.promise
                            }
                            function $Q(resolver) {
                                function resolveFn(value) {
                                    resolvePromise(promise, value)
                                }
                                function rejectFn(reason) {
                                    rejectPromise(promise, reason)
                                }
                                if (!isFunction(resolver)) 
                                    throw $qMinErr("norslvr", "Expected resolverFn, got '{0}'", resolver);
                                var promise = new Promise;
                                return resolver(resolveFn, rejectFn),
                                promise
                            }
                            var $qMinErr = minErr("$q", TypeError),
                    queueSize = 0,
                    checkQueue = [];
                            extend(Promise.prototype, {
                                then: function (onFulfilled, onRejected, progressBack) {
                                        if (isUndefined(onFulfilled) && isUndefined(onRejected) && isUndefined(progressBack)) 
                                            return this;
                                        var result = new Promise;
                                        return this.$$state.pending = this.$$state.pending || [],
                                        this
                                            .$$state
                                            .pending
                                            .push([result, onFulfilled, onRejected, progressBack]),
                                        this.$$state.status > 0 && scheduleProcessQueue(this.$$state),
                                        result
                                    },
                                catch  : function (callback) {
                                        return this.then(null, callback)
                                    }, finally : function (callback, progressBack) {
                                        return this.then(function (value) {
                                            return handleCallback(value, resolve, callback)
                                        }, function (error) {
                                            return handleCallback(error, reject, callback)
                                        }, progressBack)
                                    }
                                }
                            );
                            var resolve = when;
                            return $Q.prototype = Promise.prototype, $Q.defer = defer, $Q.reject = reject, $Q.when = when, $Q.resolve = resolve, $Q.all = all, $Q.race = race, $Q
                        }
                        function $$RAFProvider() {
                            this.$get = [
                                "$window",
                                "$timeout",
                                function ($window, $timeout) {
                                    var requestAnimationFrame = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame,
                                        cancelAnimationFrame = $window.cancelAnimationFrame || $window.webkitCancelAnimationFrame || $window.webkitCancelRequestAnimationFrame,
                                        rafSupported = !!requestAnimationFrame,
                                        raf = rafSupported
                                            ? function (fn) {
                                                var id = requestAnimationFrame(fn);
                                                return function () {
                                                    cancelAnimationFrame(id)
                                                }
                                            }
                                            : function (fn) {
                                                var timer = $timeout(fn, 16.66, !1);
                                                return function () {
                                                    $timeout.cancel(timer)
                                                }
                                            };
                                    return raf.supported = rafSupported,
                                    raf
                                }
                            ]
                        }
                        function $RootScopeProvider() {
                            function createChildScopeClass(parent) {
                                function ChildScope() {
                                    this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null,
                                    this.$$listeners = {},
                                    this.$$listenerCount = {},
                                    this.$$watchersCount = 0,
                                    this.$id = nextUid(),
                                    this.$$ChildScope = null
                                }
                                return ChildScope.prototype = parent,
                                ChildScope
                            }
                            var TTL = 10,
                                $rootScopeMinErr = minErr("$rootScope"),
                                lastDirtyWatch = null,
                                applyAsyncId = null;
                            this.digestTtl = function (value) {
                                return arguments.length && (TTL = value),
                                TTL
                            },
                            this.$get = [
                                "$exceptionHandler",
                                "$parse",
                                "$browser",
                                function ($exceptionHandler, $parse, $browser) {
                                    function destroyChildScope($event) {
                                        $event.currentScope.$$destroyed = !0
                                    }
                                    function cleanUpScope($scope) {
                                        9 === msie && (
                                            $scope.$$childHead && cleanUpScope($scope.$$childHead),
                                            $scope.$$nextSibling && cleanUpScope($scope.$$nextSibling)
                                        ),
                                        $scope.$parent = $scope.$$nextSibling = $scope.$$prevSibling = $scope.$$childHead = $scope.$$childTail = $scope.$root = $scope.$$watchers = null
                                    }
                                    function Scope() {
                                        this.$id = nextUid(),
                                        this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null,
                                        this.$root = this,
                                        this.$$destroyed = !1,
                                        this.$$listeners = {},
                                        this.$$listenerCount = {},
                                        this.$$watchersCount = 0,
                                        this.$$isolateBindings = null
                                    }
                                    function beginPhase(phase) {
                                        if ($rootScope.$$phase) 
                                            throw $rootScopeMinErr("inprog", "{0} already in progress", $rootScope.$$phase);
                                        $rootScope.$$phase = phase
                                    }
                                    function clearPhase() {
                                        $rootScope.$$phase = null
                                    }
                                    function incrementWatchersCount(current, count) {
                                        do {
                                            current.$$watchersCount += count
                                        } while (current = current.$parent)
                                    }
                                    function decrementListenerCount(current, count, name) {
                                        do {
                                            current.$$listenerCount[name] -= count,
                                            0 === current.$$listenerCount[name] && delete current.$$listenerCount[name]
                                        } while (current = current.$parent)
                                    }
                                    function initWatchVal() {}
                                    function flushApplyAsync() {
                                        for (; applyAsyncQueue.length;) 
                                            try {
                                                applyAsyncQueue.shift()()
                                            } catch (e) {
                                                $exceptionHandler(e)
                                            }
                                        applyAsyncId = null
                                    }
                                    function scheduleApplyAsync() {
                                        null === applyAsyncId && (applyAsyncId = $browser.defer(function () {
                                            $rootScope.$apply(flushApplyAsync)
                                        }))
                                    }
                                    Scope.prototype = {
                                        constructor: Scope,
                                        $new: function (isolate, parent) {
                                            var child;
                                            return parent = parent || this,
                                            isolate
                                                ? (child = new Scope, child.$root = this.$root)
                                                : (
                                                    this.$$ChildScope || (this.$$ChildScope = createChildScopeClass(this)),
                                                    child = new this.$$ChildScope
                                                ),
                                            child.$parent = parent,
                                            child.$$prevSibling = parent.$$childTail,
                                            parent.$$childHead
                                                ? (parent.$$childTail.$$nextSibling = child, parent.$$childTail = child)
                                                : parent.$$childHead = parent.$$childTail = child,
                                            (isolate || parent !== this) && child.$on("$destroy", destroyChildScope),
                                            child
                                        },
                                        $watch: function (watchExp, listener, objectEquality, prettyPrintExpression) {
                                            var get = $parse(watchExp);
                                            if (get.$$watchDelegate) 
                                                return get.$$watchDelegate(this, listener, objectEquality, get, watchExp);
                                            var scope = this,
                                                array = scope.$$watchers,
                                                watcher = {
                                                    fn: listener,
                                                    last: initWatchVal,
                                                    get: get,
                                                    exp: prettyPrintExpression || watchExp,
                                                    eq: !!objectEquality
                                                };
                                            return lastDirtyWatch = null,
                                            isFunction(listener) || (watcher.fn = noop),
                                            array || (array = scope.$$watchers = [], array.$$digestWatchIndex = -1),
                                            array.unshift(watcher),
                                            array.$$digestWatchIndex++,
                                            incrementWatchersCount(this, 1),
                                            function deregisterWatch() {
                                                var index = arrayRemove(array, watcher);
                                                index >= 0 && (
                                                    incrementWatchersCount(scope, -1),
                                                    index < array.$$digestWatchIndex && array.$$digestWatchIndex--
                                                ),
                                                lastDirtyWatch = null
                                            }
                                        },
                                        $watchGroup: function (watchExpressions, listener) {
                                            function watchGroupAction() {
                                                changeReactionScheduled = !1,
                                                firstRun
                                                    ? (firstRun = !1, listener(newValues, newValues, self))
                                                    : listener(newValues, oldValues, self)
                                            }
                                            var oldValues = new Array(watchExpressions.length),
                                                newValues = new Array(watchExpressions.length),
                                                deregisterFns = [],
                                                self = this,
                                                changeReactionScheduled = !1,
                                                firstRun = !0;
                                            if (!watchExpressions.length) {
                                                var shouldCall = !0;
                                                return self.$evalAsync(function () {
                                                    shouldCall && listener(newValues, newValues, self)
                                                }),
                                                function deregisterWatchGroup() {
                                                    shouldCall = !1
                                                }
                                            }
                                            return 1 === watchExpressions.length
                                                ? this.$watch(
                                                    watchExpressions[0],
                                                    function watchGroupAction(value, oldValue, scope) {
                                                        newValues[0] = value,
                                                        oldValues[0] = oldValue,
                                                        listener(
                                                            newValues,
                                                            value === oldValue
                                                                ? newValues
                                                                : oldValues,
                                                            scope
                                                        )
                                                    }
                                                )
                                                : (forEach(watchExpressions, function (expr, i) {
                                                    var unwatchFn = self.$watch(
                                                        expr,
                                                        function watchGroupSubAction(value, oldValue) {
                                                            newValues[i] = value,
                                                            oldValues[i] = oldValue,
                                                            changeReactionScheduled || (
                                                                changeReactionScheduled = !0,
                                                                self.$evalAsync(watchGroupAction)
                                                            )
                                                        }
                                                    );
                                                    deregisterFns.push(unwatchFn)
                                                }), function deregisterWatchGroup() {
                                                    for (; deregisterFns.length;) 
                                                        deregisterFns.shift()()
                                                })
                                        },
                                        $watchCollection: function (obj, listener) {
                                            function $watchCollectionInterceptor(_value) {
                                                newValue = _value;
                                                var newLength,
                                                    key,
                                                    newItem,
                                                    oldItem;
                                                if (!isUndefined(newValue)) {
                                                    if (isObject(newValue)) 
                                                        if (isArrayLike(newValue)) {
                                                            oldValue !== internalArray && (
                                                                oldValue = internalArray,
                                                                oldLength = oldValue.length = 0,
                                                                changeDetected++
                                                            ),
                                                            newLength = newValue.length,
                                                            oldLength !== newLength && (
                                                                changeDetected++,
                                                                oldValue.length = oldLength = newLength
                                                            );
                                                            for (var i = 0; i < newLength; i++) 
                                                                oldItem = oldValue[i],
                                                                newItem = newValue[i],
                                                                oldItem !== oldItem && newItem !== newItem || oldItem === newItem || (
                                                                    changeDetected++,
                                                                    oldValue[i] = newItem
                                                                )
                                                        }
                                                    else {
                                                        oldValue !== internalObject && (
                                                            oldValue = internalObject = {},
                                                            oldLength = 0,
                                                            changeDetected++
                                                        ),
                                                        newLength = 0;
                                                        for (key in newValue) 
                                                            hasOwnProperty.call(newValue, key) && (
                                                                newLength++,
                                                                newItem = newValue[key],
                                                                oldItem = oldValue[key],
                                                                key in oldValue
                                                                    ? oldItem !== oldItem && newItem !== newItem || oldItem === newItem || (
                                                                        changeDetected++,
                                                                        oldValue[key] = newItem
                                                                    )
                                                                    : (oldLength++, oldValue[key] = newItem, changeDetected++)
                                                            );
                                                        if (oldLength > newLength) {
                                                            changeDetected++;
                                                            for (key in oldValue) 
                                                                hasOwnProperty.call(newValue, key) || (oldLength--, delete oldValue[key])
                                                        }
                                                    } else 
                                                        oldValue !== newValue && (oldValue = newValue, changeDetected++);
                                                    return changeDetected
                                                }
                                            }
                                            function $watchCollectionAction() {
                                                if (
                                                    initRun
                                                        ? (initRun = !1, listener(newValue, newValue, self))
                                                        : listener(newValue, veryOldValue, self),
                                                    trackVeryOldValue
                                                ) 
                                                    if (isObject(newValue)) 
                                                        if (isArrayLike(newValue)) {
                                                            veryOldValue = new Array(newValue.length);
                                                            for (var i = 0; i < newValue.length; i++) 
                                                                veryOldValue[i] = newValue[i]
                                                        }
                                                    else {
                                                        veryOldValue = {};
                                                    for (var key in newValue) 
                                                        hasOwnProperty.call(newValue, key) && (veryOldValue[key] = newValue[key])
                                                } else 
                                                    veryOldValue = newValue
                                            }
                                            $watchCollectionInterceptor.$stateful = !0;
                                            var newValue,
                                                oldValue,
                                                veryOldValue,
                                                self = this,
                                                trackVeryOldValue = listener.length > 1,
                                                changeDetected = 0,
                                                changeDetector = $parse(obj, $watchCollectionInterceptor),
                                                internalArray = [],
                                                internalObject = {},
                                                initRun = !0,
                                                oldLength = 0;
                                            return this.$watch(changeDetector, $watchCollectionAction)
                                        },
                                        $digest: function () {
                                            var watch,
                                                value,
                                                last,
                                                fn,
                                                get,
                                                watchers,
                                                dirty,
                                                next,
                                                current,
                                                logIdx,
                                                asyncTask,
                                                ttl = TTL,
                                                target = this,
                                                watchLog = [];
                                            beginPhase("$digest"),
                                            $browser.$$checkUrlChange(),
                                            this === $rootScope && null !== applyAsyncId && (
                                                $browser.defer.cancel(applyAsyncId),
                                                flushApplyAsync()
                                            ),
                                            lastDirtyWatch = null;
                                            do {
                                                dirty = !1,
                                                current = target;
                                                for (
                                                    var asyncQueuePosition = 0;
                                                    asyncQueuePosition < asyncQueue.length;
                                                    asyncQueuePosition++
                                                ) {
                                                    try {
                                                        asyncTask = asyncQueue[asyncQueuePosition],
                                                        asyncTask
                                                            .scope
                                                            .$eval(asyncTask.expression, asyncTask.locals)
                                                    } catch (e) {
                                                        $exceptionHandler(e)
                                                    }
                                                    lastDirtyWatch = null
                                                }
                                                asyncQueue.length = 0;
                                                traverseScopesLoop : do {
                                                    if (watchers = current.$$watchers) 
                                                        for (
                                                            watchers.$$digestWatchIndex = watchers.length;
                                                            watchers.$$digestWatchIndex--;
                                                        ) 
                                                            try {
                                                                if (watch = watchers[watchers.$$digestWatchIndex]) 
                                                                    if (get = watch.get, (value = get(current)) === (last = watch.last) || (
                                                                        watch.eq
                                                                            ? equals(value, last)
                                                                            : isNumberNaN(value) && isNumberNaN(last)
                                                                    )) {
                                                                        if (watch === lastDirtyWatch) {
                                                                            dirty = !1;
                                                                            break traverseScopesLoop
                                                                        }
                                                                    } else 
                                                                        dirty = !0,
                                                                        lastDirtyWatch = watch,
                                                                        watch.last = watch.eq
                                                                            ? copy(value, null)
                                                                            : value,
                                                                        fn = watch.fn,
                                                                        fn(
                                                                            value,
                                                                            last === initWatchVal
                                                                                ? value
                                                                                : last,
                                                                            current
                                                                        ),
                                                                        ttl < 5 && (
                                                                            logIdx = 4 - ttl,
                                                                            watchLog[logIdx] || (watchLog[logIdx] = []),
                                                                            watchLog[logIdx].push({
                                                                                msg: isFunction(watch.exp)
                                                                                    ? "fn: " + (
                                                                                        watch.exp.name || watch.exp.toString()
                                                                                    )
                                                                                    : watch.exp,
                                                                                newVal: value,
                                                                                oldVal: last
                                                                            })
                                                                        )
                                                            } catch (e) {
                                                                $exceptionHandler(e)
                                                            }
                                                        if (!(next = current.$$watchersCount && current.$$childHead || current !== target && current.$$nextSibling)) 
                                                        for (; current !== target && !(next = current.$$nextSibling);) 
                                                            current = current.$parent
                                                } while (current = next);
                                                if ((dirty || asyncQueue.length) && !ttl--) 
                                                    throw clearPhase(),
                                                    $rootScopeMinErr(
                                                        "infdig",
                                                        "{0} $digest() iterations reached. Aborting!\nWatchers fired in the last 5 iter" +
                                                                "ations: {1}",
                                                        TTL,
                                                        watchLog
                                                    )
                                            } while (dirty || asyncQueue.length);
                                            for (clearPhase(); postDigestQueuePosition < postDigestQueue.length;) 
                                                try {
                                                    postDigestQueue[postDigestQueuePosition++]()
                                                } catch (e) {
                                                    $exceptionHandler(e)
                                                }
                                            postDigestQueue.length = postDigestQueuePosition = 0
                                        },
                                        $destroy: function () {
                                            if (!this.$$destroyed) {
                                                var parent = this.$parent;
                                                this.$broadcast("$destroy"),
                                                this.$$destroyed = !0,
                                                this === $rootScope && $browser.$$applicationDestroyed(),
                                                incrementWatchersCount(this, -this.$$watchersCount);
                                                for (var eventName in this.$$listenerCount) 
                                                    decrementListenerCount(this, this.$$listenerCount[eventName], eventName);
                                                parent && parent.$$childHead === this && (
                                                    parent.$$childHead = this.$$nextSibling
                                                ),
                                                parent && parent.$$childTail === this && (
                                                    parent.$$childTail = this.$$prevSibling
                                                ),
                                                this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling),
                                                this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling),
                                                this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = noop,
                                                this.$on = this.$watch = this.$watchGroup = function () {
                                                    return noop
                                                },
                                                this.$$listeners = {},
                                                this.$$nextSibling = null,
                                                cleanUpScope(this)
                                            }
                                        },
                                        $eval: function (expr, locals) {
                                            return $parse(expr)(this, locals)
                                        },
                                        $evalAsync: function (expr, locals) {
                                            $rootScope.$$phase || asyncQueue.length || $browser.defer(function () {
                                                asyncQueue.length && $rootScope.$digest()
                                            }),
                                            asyncQueue.push({scope: this, expression: $parse(expr), locals: locals})
                                        },
                                        $$postDigest: function (fn) {
                                            postDigestQueue.push(fn)
                                        },
                                        $apply: function (expr) {
                                            try {
                                                beginPhase("$apply");
                                                try {
                                                    return this.$eval(expr)
                                                } finally {
                                                    clearPhase()
                                                }
                                            } catch (e) {
                                                $exceptionHandler(e)
                                            } finally {
                                                try {
                                                    $rootScope.$digest()
                                                } catch (e) {
                                                    throw $exceptionHandler(e),
                                                    e
                                                }
                                            }
                                        },
                                        $applyAsync: function (expr) {
                                            function $applyAsyncExpression() {
                                                scope.$eval(expr)
                                            }
                                            var scope = this;
                                            expr && applyAsyncQueue.push($applyAsyncExpression),
                                            expr = $parse(expr),
                                            scheduleApplyAsync()
                                        },
                                        $on: function (name, listener) {
                                            var namedListeners = this.$$listeners[name];
                                            namedListeners || (this.$$listeners[name] = namedListeners = []),
                                            namedListeners.push(listener);
                                            var current = this;
                                            do {
                                                current.$$listenerCount[name] || (current.$$listenerCount[name] = 0),
                                                current.$$listenerCount[name]++
                                            } while (current = current.$parent);
                                            var self = this;
                                            return function () {
                                                var indexOfListener = namedListeners.indexOf(listener);
                                                -1 !== indexOfListener && (
                                                    namedListeners[indexOfListener] = null,
                                                    decrementListenerCount(self, 1, name)
                                                )
                                            }
                                        },
                                        $emit: function (name, args) {
                                            var namedListeners,
                                                i,
                                                length,
                                                empty = [],
                                                scope = this,
                                                stopPropagation = !1,
                                                event = {
                                                    name: name,
                                                    targetScope: scope,
                                                    stopPropagation: function () {
                                                        stopPropagation = !0
                                                    },
                                                    preventDefault: function () {
                                                        event.defaultPrevented = !0
                                                    },
                                                    defaultPrevented: !1
                                                },
                                                listenerArgs = concat([event], arguments, 1);
                                            do {
                                                for (
                                                    namedListeners = scope.$$listeners[name] || empty,
                                                    event.currentScope = scope,
                                                    i = 0,
                                                    length = namedListeners.length;
                                                    i < length;
                                                    i++
                                                ) 
                                                    if (namedListeners[i]) 
                                                        try {
                                                            namedListeners[i].apply(null, listenerArgs)
                                                        } catch (e) {
                                                            $exceptionHandler(e)
                                                        }
                                                    else 
                                                    namedListeners.splice(i, 1),
                                                    i--,
                                                    length--;
                                                if (stopPropagation) 
                                                    return event.currentScope = null,
                                                    event;
                                                scope = scope.$parent
                                            } while (scope);
                                            return event.currentScope = null,
                                            event
                                        },
                                        $broadcast: function (name, args) {
                                            var target = this,
                                                current = target,
                                                next = target,
                                                event = {
                                                    name: name,
                                                    targetScope: target,
                                                    preventDefault: function () {
                                                        event.defaultPrevented = !0
                                                    },
                                                    defaultPrevented: !1
                                                };
                                            if (!target.$$listenerCount[name]) 
                                                return event;
                                            for (
                                                var listeners,
                                                i,
                                                length,
                                                listenerArgs = concat([event], arguments, 1);
                                                current = next;
                                            ) {
                                                for (
                                                    event.currentScope = current,
                                                    listeners = current.$$listeners[name] || [],
                                                    i = 0,
                                                    length = listeners.length;
                                                    i < length;
                                                    i++
                                                ) 
                                                    if (listeners[i]) 
                                                        try {
                                                            listeners[i].apply(null, listenerArgs)
                                                        } catch (e) {
                                                            $exceptionHandler(e)
                                                        }
                                                    else 
                                                    listeners.splice(i, 1),
                                                    i--,
                                                    length--;
                                                if (!(next = current.$$listenerCount[name] && current.$$childHead || current !== target && current.$$nextSibling)) 
                                                    for (; current !== target && !(next = current.$$nextSibling);) 
                                                        current = current.$parent
                                            }
                                            return event.currentScope = null,
                                            event
                                        }
                                    };
                                    var $rootScope = new Scope,
                                        asyncQueue = $rootScope.$$asyncQueue = [],
                                        postDigestQueue = $rootScope.$$postDigestQueue = [],
                                        applyAsyncQueue = $rootScope.$$applyAsyncQueue = [],
                                        postDigestQueuePosition = 0;
                                    return $rootScope
                                }
                            ]
                        }
                        function $$SanitizeUriProvider() {
                            var aHrefSanitizationWhitelist = /^\s*(https?|ftp|mailto|tel|file):/,
                                imgSrcSanitizationWhitelist = /^\s*((https?|ftp|file|blob):|data:image\/)/;
                            this.aHrefSanitizationWhitelist = function (regexp) {
                                return isDefined(regexp)
                                    ? (aHrefSanitizationWhitelist = regexp, this)
                                    : aHrefSanitizationWhitelist
                            },
                            this.imgSrcSanitizationWhitelist = function (regexp) {
                                return isDefined(regexp)
                                    ? (imgSrcSanitizationWhitelist = regexp, this)
                                    : imgSrcSanitizationWhitelist
                            },
                            this.$get = function () {
                                return function sanitizeUri(uri, isImage) {
                                    var normalizedVal,
                                        regex = isImage
                                            ? imgSrcSanitizationWhitelist
                                            : aHrefSanitizationWhitelist;
                                    return normalizedVal = urlResolve(uri).href,
                                    "" === normalizedVal || normalizedVal.match(regex)
                                        ? uri
                                        : "unsafe:" + normalizedVal
                                }
                            }
                        }
                        function snakeToCamel(name) {
                            return name.replace(UNDERSCORE_LOWERCASE_REGEXP, fnCamelCaseReplace)
                        }
                        function adjustMatcher(matcher) {
                            if ("self" === matcher) 
                                return matcher;
                            if (isString(matcher)) {
                                if (matcher.indexOf("***") > -1) 
                                    throw $sceMinErr(
                                        "iwcard",
                                        "Illegal sequence *** in string matcher.  String: {0}",
                                        matcher
                                    );
                                return matcher = escapeForRegexp(matcher)
                                    .replace(/\\\*\\\*/g, ".*")
                                    .replace(/\\\*/g, "[^:/.?&;]*"),
                                new RegExp("^" + matcher + "$")
                            }
                            if (isRegExp(matcher)) 
                                return new RegExp("^" + matcher.source + "$");
                            throw $sceMinErr(
                                "imatcher",
                                'Matchers may only be "self", string patterns or RegExp objects'
                            )
                        }
                        function adjustMatchers(matchers) {
                            var adjustedMatchers = [];
                            return isDefined(matchers) && forEach(matchers, function (matcher) {
                                adjustedMatchers.push(adjustMatcher(matcher))
                            }),
                            adjustedMatchers
                        }
                        function $SceDelegateProvider() {
                            this.SCE_CONTEXTS = SCE_CONTEXTS;
                            var resourceUrlWhitelist = ["self"],
                                resourceUrlBlacklist = [];
                            this.resourceUrlWhitelist = function (value) {
                                return arguments.length && (resourceUrlWhitelist = adjustMatchers(value)),
                                resourceUrlWhitelist
                            },
                            this.resourceUrlBlacklist = function (value) {
                                return arguments.length && (resourceUrlBlacklist = adjustMatchers(value)),
                                resourceUrlBlacklist
                            },
                            this.$get = [
                                "$injector",
                                function ($injector) {
                                    function matchUrl(matcher, parsedUrl) {
                                        return "self" === matcher
                                            ? urlIsSameOrigin(parsedUrl)
                                            : !!matcher.exec(parsedUrl.href)
                                    }
                                    function isResourceUrlAllowedByPolicy(url) {
                                        var i,
                                            n,
                                            parsedUrl = urlResolve(url.toString()),
                                            allowed = !1;
                                        for (i = 0, n = resourceUrlWhitelist.length; i < n; i++) 
                                            if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {
                                                allowed = !0;
                                                break
                                            }
                                        if (allowed) 
                                            for (i = 0, n = resourceUrlBlacklist.length; i < n; i++) 
                                                if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {
                                                    allowed = !1;
                                                    break
                                                }
                                            return allowed
                                    }
                                    function generateHolderType(Base) {
                                        var holderType = function TrustedValueHolderType(trustedValue) {
                                            this.$$unwrapTrustedValue = function () {
                                                return trustedValue
                                            }
                                        };
                                        return Base && (holderType.prototype = new Base),
                                        holderType.prototype.valueOf = function sceValueOf() {
                                            return this.$$unwrapTrustedValue()
                                        },
                                        holderType.prototype.toString = function sceToString() {
                                            return this
                                                .$$unwrapTrustedValue()
                                                .toString()
                                        },
                                        holderType
                                    }
                                    function trustAs(type, trustedValue) {
                                        var Constructor = byType.hasOwnProperty(type)
                                            ? byType[type]
                                            : null;
                                        if (!Constructor) 
                                            throw $sceMinErr(
                                                "icontext",
                                                "Attempted to trust a value in invalid context. Context: {0}; Value: {1}",
                                                type,
                                                trustedValue
                                            );
                                        if (null === trustedValue || isUndefined(trustedValue) || "" === trustedValue) 
                                            return trustedValue;
                                        if ("string" != typeof trustedValue) 
                                            throw $sceMinErr(
                                                "itype",
                                                "Attempted to trust a non-string value in a content requiring a string: Context" +
                                                        ": {0}",
                                                type
                                            );
                                        return new Constructor(trustedValue)
                                    }
                                    function valueOf(maybeTrusted) {
                                        return maybeTrusted instanceof trustedValueHolderBase
                                            ? maybeTrusted.$$unwrapTrustedValue()
                                            : maybeTrusted
                                    }
                                    function getTrusted(type, maybeTrusted) {
                                        if (null === maybeTrusted || isUndefined(maybeTrusted) || "" === maybeTrusted) 
                                            return maybeTrusted;
                                        var constructor = byType.hasOwnProperty(type)
                                            ? byType[type]
                                            : null;
                                        if (constructor && maybeTrusted instanceof constructor) 
                                            return maybeTrusted.$$unwrapTrustedValue();
                                        if (type === SCE_CONTEXTS.RESOURCE_URL) {
                                            if (isResourceUrlAllowedByPolicy(maybeTrusted)) 
                                                return maybeTrusted;
                                            throw $sceMinErr(
                                                "insecurl",
                                                "Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0" +
                                                        "}",
                                                maybeTrusted.toString()
                                            )
                                        }
                                        if (type === SCE_CONTEXTS.HTML) 
                                            return htmlSanitizer(maybeTrusted);
                                        throw $sceMinErr(
                                            "unsafe",
                                            "Attempting to use an unsafe value in a safe context."
                                        )
                                    }
                                    var htmlSanitizer = function htmlSanitizer(html) {
                                        throw $sceMinErr(
                                            "unsafe",
                                            "Attempting to use an unsafe value in a safe context."
                                        )
                                    };
                                    $injector.has("$sanitize") && (htmlSanitizer = $injector.get("$sanitize"));
                                    var trustedValueHolderBase = generateHolderType(),
                                        byType = {};
                                    return byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase),
                                    byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase),
                                    byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase),
                                    byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase),
                                    byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(
                                        byType[SCE_CONTEXTS.URL]
                                    ), {
                                        trustAs: trustAs,
                                        getTrusted: getTrusted,
                                        valueOf: valueOf
                                    }
                                }
                            ]
                        }
                        function $SceProvider() {
                            var enabled = !0;
                            this.enabled = function (value) {
                                return arguments.length && (enabled = !!value),
                                enabled
                            },
                            this.$get = [
                                "$parse",
                                "$sceDelegate",
                                function ($parse, $sceDelegate) {
                                    if (enabled && msie < 8) 
                                        throw $sceMinErr(
                                            "iequirks",
                                            "Strict Contextual Escaping does not support Internet Explorer version < 11 in " +
                                                    "quirks mode.  You can fix this by adding the text <!doctype html> to the top o" +
                                                    "f your HTML document.  See http://docs.angularjs.org/api/ng.$sce for more info" +
                                                    "rmation."
                                        );
                                    var sce = shallowCopy(SCE_CONTEXTS);
                                    sce.isEnabled = function () {
                                        return enabled
                                    },
                                    sce.trustAs = $sceDelegate.trustAs,
                                    sce.getTrusted = $sceDelegate.getTrusted,
                                    sce.valueOf = $sceDelegate.valueOf,
                                    enabled || (sce.trustAs = sce.getTrusted = function (type, value) {
                                        return value
                                    }, sce.valueOf = identity),
                                    sce.parseAs = function sceParseAs(type, expr) {
                                        var parsed = $parse(expr);
                                        return parsed.literal && parsed.constant
                                            ? parsed
                                            : $parse(expr, function (value) {
                                                return sce.getTrusted(type, value)
                                            })
                                    };
                                    var parse = sce.parseAs,
                                        getTrusted = sce.getTrusted,
                                        trustAs = sce.trustAs;
                                    return forEach(SCE_CONTEXTS, function (enumValue, name) {
                                        var lName = lowercase(name);
                                        sce[snakeToCamel("parse_as_" + lName)] = function (expr) {
                                            return parse(enumValue, expr)
                                        },
                                        sce[snakeToCamel("get_trusted_" + lName)] = function (value) {
                                            return getTrusted(enumValue, value)
                                        },
                                        sce[snakeToCamel("trust_as_" + lName)] = function (value) {
                                            return trustAs(enumValue, value)
                                        }
                                    }),
                                    sce
                                }
                            ]
                        }
                        function $SnifferProvider() {
                            this.$get = [
                                "$window",
                                "$document",
                                function ($window, $document) {
                                    var eventSupport = {},
                                        isChromePackagedApp = $window.chrome && (
                                            $window.chrome.app && $window.chrome.app.runtime || !$window.chrome.app && $window.chrome.runtime && $window.chrome.runtime.id
                                        ),
                                        hasHistoryPushState = !isChromePackagedApp && $window.history && $window.history.pushState,
                                        android = toInt(
                                            (/android (\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]
                                        ),
                                        boxee = /Boxee/i.test(($window.navigator || {}).userAgent),
                                        document = $document[0] || {},
                                        bodyStyle = document.body && document.body.style,
                                        transitions = !1,
                                        animations = !1;
                                    return bodyStyle && (
                                        transitions = !!("transition" in bodyStyle || "webkitTransition" in bodyStyle),
                                        animations = !!("animation" in bodyStyle || "webkitAnimation" in bodyStyle)
                                    ), {
                                        history: !(!hasHistoryPushState || android < 4 || boxee),
                                        hasEvent: function (event) {
                                            if ("input" === event && msie) 
                                                return !1;
                                            if (isUndefined(eventSupport[event])) {
                                                var divElm = document.createElement("div");
                                                eventSupport[event] = "on" + event in divElm
                                            }
                                            return eventSupport[event]
                                        },
                                        csp: csp(),
                                        transitions: transitions,
                                        animations: animations,
                                        android: android
                                    }
                                }
                            ]
                        }
                        function $TemplateRequestProvider() {
                            var httpOptions;
                            this.httpOptions = function (val) {
                                return val
                                    ? (httpOptions = val, this)
                                    : httpOptions
                            },
                            this.$get = [
                                "$exceptionHandler",
                                "$templateCache",
                                "$http",
                                "$q",
                                "$sce",
                                function ($exceptionHandler, $templateCache, $http, $q, $sce) {
                                    function handleRequestFn(tpl, ignoreRequestError) {
                                        function handleError(resp) {
                                            return ignoreRequestError || (resp = $templateRequestMinErr(
                                                "tpload",
                                                "Failed to load template: {0} (HTTP status: {1} {2})",
                                                tpl,
                                                resp.status,
                                                resp.statusText
                                            ), $exceptionHandler(resp)),
                                            $q.reject(resp)
                                        }
                                        handleRequestFn.totalPendingRequests++,
                                        isString(tpl) && !isUndefined($templateCache.get(tpl)) || (
                                            tpl = $sce.getTrustedResourceUrl(tpl)
                                        );
                                        var transformResponse = $http.defaults && $http.defaults.transformResponse;
                                        return isArray(transformResponse)
                                            ? transformResponse = transformResponse.filter(function (transformer) {
                                                return transformer !== defaultHttpResponseTransform
                                            })
                                            : transformResponse === defaultHttpResponseTransform && (
                                                transformResponse = null
                                            ),
                                        $http
                                            .get(tpl, extend({
                                                cache: $templateCache,
                                                transformResponse: transformResponse
                                            }, httpOptions))
                                            . finally(function () {
                                                handleRequestFn.totalPendingRequests--
                                            })
                                            .then(function (response) {
                                                return $templateCache.put(tpl, response.data),
                                                response.data
                                            }, handleError)
                                    }
                                    return handleRequestFn.totalPendingRequests = 0,
                                    handleRequestFn
                                }
                            ]
                        }
                        function $$TestabilityProvider() {
                            this.$get = [
                                "$rootScope",
                                "$browser",
                                "$location",
                                function ($rootScope, $browser, $location) {
                                    var testability = {};
                                    return testability.findBindings = function (
                                        element,
                                        expression,
                                        opt_exactMatch
                                    ) {
                                        var bindings = element.getElementsByClassName("ng-binding"),
                                            matches = [];
                                        return forEach(bindings, function (binding) {
                                            var dataBinding = angular
                                                .element(binding)
                                                .data("$binding");
                                            dataBinding && forEach(dataBinding, function (bindingName) {
                                                if (opt_exactMatch) {
                                                    new RegExp("(^|\\s)" + escapeForRegexp(expression) + "(\\s|\\||$)").test(
                                                        bindingName
                                                    ) && matches.push(binding)
                                                } else - 1 !== bindingName.indexOf(expression) && matches.push(binding)
                                        })
                                        }),
                                        matches
                                    },
                                    testability.findModels = function (element, expression, opt_exactMatch) {
                                        for (var prefixes = [
                                            "ng-", "data-ng-", "ng\\:"
                                        ], p = 0; p < prefixes.length; ++p) {
                                            var attributeEquals = opt_exactMatch
                                                    ? "="
                                                    : "*=",
                                                selector = "[" + prefixes[p] + "model" + attributeEquals + '"' +
                                                        expression + '"]',
                                                elements = element.querySelectorAll(selector);
                                            if (elements.length) 
                                                return elements
                                        }
                                    },
                                    testability.getLocation = function () {
                                        return $location.url()
                                    },
                                    testability.setLocation = function (url) {
                                        url !== $location.url() && ($location.url(url), $rootScope.$digest())
                                    },
                                    testability.whenStable = function (callback) {
                                        $browser.notifyWhenNoOutstandingRequests(callback)
                                    },
                                    testability
                                }
                            ]
                        }
                        function $TimeoutProvider() {
                            this.$get = [
                                "$rootScope",
                                "$browser",
                                "$q",
                                "$$q",
                                "$exceptionHandler",
                                function ($rootScope, $browser, $q, $$q, $exceptionHandler) {
                                    function timeout(fn, delay, invokeApply) {
                                        isFunction(fn) || (invokeApply = delay, delay = fn, fn = noop);
                                        var timeoutId,
                                            args = sliceArgs(arguments, 3),
                                            skipApply = isDefined(invokeApply) && !invokeApply,
                                            deferred = (
                                                skipApply
                                                    ? $$q
                                                    : $q
                                            ).defer(),
                                            promise = deferred.promise;
                                        return timeoutId = $browser.defer(function () {
                                            try {
                                                deferred.resolve(fn.apply(null, args))
                                            } catch (e) {
                                                deferred.reject(e),
                                                $exceptionHandler(e)
                                            } finally {
                                                delete deferreds[promise.$$timeoutId]
                                            }
                                            skipApply || $rootScope.$apply()
                                        }, delay),
                                        promise.$$timeoutId = timeoutId,
                                        deferreds[timeoutId] = deferred,
                                        promise
                                    }
                                    var deferreds = {};
                                    return timeout.cancel = function (promise) {
                                        return !!(promise && promise.$$timeoutId in deferreds) && (
                                            deferreds[promise.$$timeoutId].promise.catch(noop),
                                            deferreds[promise.$$timeoutId].reject("canceled"),
                                            delete deferreds[promise.$$timeoutId],
                                            $browser.defer.cancel(promise.$$timeoutId)
                                        )
                                    },
                                    timeout
                                }
                            ]
                        }
                        function urlResolve(url) {
                            var href = url;
                            return msie && (
                                urlParsingNode.setAttribute("href", href),
                                href = urlParsingNode.href
                            ),
                            urlParsingNode.setAttribute("href", href), {
                                href: urlParsingNode.href,
                                protocol: urlParsingNode.protocol
                                    ? urlParsingNode
                                        .protocol
                                        .replace(/:$/, "")
                                    : "",
                                host: urlParsingNode.host,
                                search: urlParsingNode.search
                                    ? urlParsingNode
                                        .search
                                        .replace(/^\?/, "")
                                    : "",
                                hash: urlParsingNode.hash
                                    ? urlParsingNode
                                        .hash
                                        .replace(/^#/, "")
                                    : "",
                                hostname: urlParsingNode.hostname,
                                port: urlParsingNode.port,
                                pathname: "/" === urlParsingNode
                                    .pathname
                                    .charAt(0)
                                        ? urlParsingNode.pathname
                                        : "/" + urlParsingNode.pathname
                            }
                        }
                        function urlIsSameOrigin(requestUrl) {
                            var parsed = isString(requestUrl)
                                ? urlResolve(requestUrl)
                                : requestUrl;
                            return parsed.protocol === originUrl.protocol && parsed.host === originUrl.host
                        }
                        function $WindowProvider() {
                            this.$get = valueFn(window)
                        }
                        function $$CookieReader($document) {
                            function safeGetCookie(rawDocument) {
                                try {
                                    return rawDocument.cookie || ""
                                } catch (e) {
                                    return ""
                                }
                            }
                            function safeDecodeURIComponent(str) {
                                try {
                                    return decodeURIComponent(str)
                                } catch (e) {
                                    return str
                                }
                            }
                            var rawDocument = $document[0] || {},
                                lastCookies = {},
                                lastCookieString = "";
                            return function () {
                                var cookieArray,
                                    cookie,
                                    i,
                                    index,
                                    name,
                                    currentCookieString = safeGetCookie(rawDocument);
                                if (currentCookieString !== lastCookieString) 
                                    for (
                                        lastCookieString = currentCookieString,
                                        cookieArray = lastCookieString.split("; "),
                                        lastCookies = {},
                                        i = 0;
                                        i < cookieArray.length;
                                        i++
                                    ) 
                                        cookie = cookieArray[i],
                                        (index = cookie.indexOf("=")) > 0 && (
                                            name = safeDecodeURIComponent(cookie.substring(0, index)),
                                            isUndefined(lastCookies[name]) && (lastCookies[name] = safeDecodeURIComponent(cookie.substring(
                                                index + 1
                                            )))
                                        );
                            return lastCookies
                            }
                        }
                        function $$CookieReaderProvider() {
                            this.$get = $$CookieReader
                        }
                        function $FilterProvider($provide) {
                            function register(name, factory) {
                                if (isObject(name)) {
                                    var filters = {};
                                    return forEach(name, function (filter, key) {
                                        filters[key] = register(key, filter)
                                    }),
                                    filters
                                }
                                return $provide.factory(name + suffix, factory)
                            }
                            var suffix = "Filter";
                            this.register = register,
                            this.$get = [
                                "$injector",
                                function ($injector) {
                                    return function (name) {
                                        return $injector.get(name + suffix)
                                    }
                                }
                            ],
                            register("currency", currencyFilter),
                            register("date", dateFilter),
                            register("filter", filterFilter),
                            register("json", jsonFilter),
                            register("limitTo", limitToFilter),
                            register("lowercase", lowercaseFilter),
                            register("number", numberFilter),
                            register("orderBy", orderByFilter),
                            register("uppercase", uppercaseFilter)
                        }
                        function filterFilter() {
                            return function (array, expression, comparator, anyPropertyKey) {
                                if (!isArrayLike(array)) {
                                    if (null == array) 
                                        return array;
                                    throw minErr("filter")("notarray", "Expected array but received: {0}", array)
                                }
                                anyPropertyKey = anyPropertyKey || "$";
                                var predicateFn,
                                    matchAgainstAnyProp,
                                    expressionType = getTypeForFilter(expression);
                                switch (expressionType) {
                                    case "function":
                                        predicateFn = expression;
                                        break;
                                    case "boolean":
                                    case "null":
                                    case "number":
                                    case "string":
                                        matchAgainstAnyProp = !0;
                                    case "object":
                                        predicateFn = createPredicateFn(
                                            expression,
                                            comparator,
                                            anyPropertyKey,
                                            matchAgainstAnyProp
                                        );
                                        break;
                                    default:
                                        return array
                                }
                                return Array
                                    .prototype
                                    .filter
                                    .call(array, predicateFn)
                            }
                        }
                        function createPredicateFn(
                            expression,
                            comparator,
                            anyPropertyKey,
                            matchAgainstAnyProp
                        ) {
                            var shouldMatchPrimitives = isObject(expression) && anyPropertyKey in expression;
                            return !0 === comparator
                                ? comparator = equals
                                : isFunction(comparator) || (comparator = function (actual, expected) {
                                    return !isUndefined(actual) && (
                                        null === actual || null === expected
                                            ? actual === expected
                                            : !(isObject(expected) || isObject(actual) && !hasCustomToString(actual)) && (
                                                actual = lowercase(
                                                    "" + actual
                                                ),
                                                expected = lowercase("" + expected),
                                                -1 !== actual.indexOf(expected)
                                            )
                                    )
                                }),
                            function (item) {
                                return shouldMatchPrimitives && !isObject(item)
                                    ? deepCompare(item, expression[anyPropertyKey], comparator, anyPropertyKey, !1)
                                    : deepCompare(
                                        item,
                                        expression,
                                        comparator,
                                        anyPropertyKey,
                                        matchAgainstAnyProp
                                    )
                            }
                        }
                        function deepCompare(
                            actual,
                            expected,
                            comparator,
                            anyPropertyKey,
                            matchAgainstAnyProp,
                            dontMatchWholeObject
                        ) {
                            var actualType = getTypeForFilter(actual),
                                expectedType = getTypeForFilter(expected);
                            if ("string" === expectedType && "!" === expected.charAt(0)) 
                                return !deepCompare(
                                    actual,
                                    expected.substring(1),
                                    comparator,
                                    anyPropertyKey,
                                    matchAgainstAnyProp
                                );
                            if (isArray(actual)) 
                                return actual.some(function (item) {
                                    return deepCompare(
                                        item,
                                        expected,
                                        comparator,
                                        anyPropertyKey,
                                        matchAgainstAnyProp
                                    )
                                });
                            switch (actualType) {
                                case "object":
                                    var key;
                                    if (matchAgainstAnyProp) {
                                        for (key in actual) 
                                            if ("$" !== key.charAt(0) && deepCompare(actual[key], expected, comparator, anyPropertyKey, !0)) 
                                                return !0;
                                    return !dontMatchWholeObject && deepCompare(
                                            actual,
                                            expected,
                                            comparator,
                                            anyPropertyKey,
                                            !1
                                        )
                                    }
                                    if ("object" === expectedType) {
                                        for (key in expected) {
                                            var expectedVal = expected[key];
                                            if (!isFunction(expectedVal) && !isUndefined(expectedVal)) {
                                                var matchAnyProperty = key === anyPropertyKey;
                                                if (!deepCompare(
                                                    matchAnyProperty
                                                        ? actual
                                                        : actual[key],
                                                    expectedVal,
                                                    comparator,
                                                    anyPropertyKey,
                                                    matchAnyProperty,
                                                    matchAnyProperty
                                                )) 
                                                    return !1
                                            }
                                        }
                                        return !0
                                    }
                                    return comparator(actual, expected);
                                case "function":
                                    return !1;
                                default:
                                    return comparator(actual, expected)
                            }
                        }
                        function getTypeForFilter(val) {
                            return null === val
                                ? "null"
                                : typeof val
                        }
                        function currencyFilter($locale) {
                            var formats = $locale.NUMBER_FORMATS;
                            return function (amount, currencySymbol, fractionSize) {
                                return isUndefined(currencySymbol) && (currencySymbol = formats.CURRENCY_SYM),
                                isUndefined(fractionSize) && (fractionSize = formats.PATTERNS[1].maxFrac),
                                null == amount
                                    ? amount
                                    : formatNumber(
                                        amount,
                                        formats.PATTERNS[1],
                                        formats.GROUP_SEP,
                                        formats.DECIMAL_SEP,
                                        fractionSize
                                    ).replace(/\u00A4/g, currencySymbol)
                            }
                        }
                        function numberFilter($locale) {
                            var formats = $locale.NUMBER_FORMATS;
                            return function (number, fractionSize) {
                                return null == number
                                    ? number
                                    : formatNumber(
                                        number,
                                        formats.PATTERNS[0],
                                        formats.GROUP_SEP,
                                        formats.DECIMAL_SEP,
                                        fractionSize
                                    )
                            }
                        }
                        function parse(numStr) {
                            var digits,
                                numberOfIntegerDigits,
                                i,
                                j,
                                zeros,
                                exponent = 0;
                            for (
                                (numberOfIntegerDigits = numStr.indexOf(DECIMAL_SEP)) > -1 && (numStr = numStr.replace(DECIMAL_SEP, "")),
                                (i = numStr.search(/e/i)) > 0
                                    ? (
                                        numberOfIntegerDigits < 0 && (numberOfIntegerDigits = i),
                                        numberOfIntegerDigits += +numStr.slice(
                                            i + 1
                                        ),
                                        numStr = numStr.substring(0, i)
                                    )
                                    : numberOfIntegerDigits < 0 && (numberOfIntegerDigits = numStr.length),
                                i = 0; numStr.charAt(i) === ZERO_CHAR; i++
                            ) 
                            ;
                            if (i === (zeros = numStr.length)) 
                                digits = [0],
                                numberOfIntegerDigits = 1;
                            else {
                                for (zeros--; numStr.charAt(zeros) === ZERO_CHAR;) 
                                    zeros--;
                                for (numberOfIntegerDigits -= i, digits = [], j = 0; i <= zeros; i++, j++) 
                                    digits[j] = +numStr.charAt(i)
                            }
                            return numberOfIntegerDigits > MAX_DIGITS && (
                                digits = digits.splice(0, MAX_DIGITS - 1),
                                exponent = numberOfIntegerDigits - 1,
                                numberOfIntegerDigits = 1
                            ), {
                                d: digits,
                                e: exponent,
                                i: numberOfIntegerDigits
                            }
                        }
                        function roundNumber(parsedNumber, fractionSize, minFrac, maxFrac) {
                            var digits = parsedNumber.d,
                                fractionLen = digits.length - parsedNumber.i;
                            fractionSize = isUndefined(fractionSize)
                                ? Math.min(Math.max(minFrac, fractionLen), maxFrac)
                                : +fractionSize;
                            var roundAt = fractionSize + parsedNumber.i,
                                digit = digits[roundAt];
                            if (roundAt > 0) {
                                digits.splice(Math.max(parsedNumber.i, roundAt));
                                for (var j = roundAt; j < digits.length; j++) 
                                    digits[j] = 0
                            } else {
                                fractionLen = Math.max(0, fractionLen),
                                parsedNumber.i = 1,
                                digits.length = Math.max(1, roundAt = fractionSize + 1),
                                digits[0] = 0;
                                for (var i = 1; i < roundAt; i++) 
                                    digits[i] = 0
                            }
                            if (digit >= 5) 
                                if (roundAt - 1 < 0) {
                                    for (var k = 0; k > roundAt; k--) 
                                        digits.unshift(0),
                                        parsedNumber.i++;
                                    digits.unshift(1),
                                    parsedNumber.i++
                                } else 
                                    digits[roundAt - 1]++;
                        for (; fractionLen < Math.max(0, fractionSize); fractionLen++) 
                                digits.push(0);
                            var carry = digits.reduceRight(function (carry, d, i, digits) {
                                return d += carry,
                                digits[i] = d % 10,
                                Math.floor(d / 10)
                            }, 0);
                            carry && (digits.unshift(carry), parsedNumber.i++)
                        }
                        function formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {
                            if (!isString(number) && !isNumber(number) || isNaN(number)) 
                                return "";
                            var parsedNumber,
                                isInfinity = !isFinite(number),
                                isZero = !1,
                                numStr = Math.abs(number) + "",
                                formattedText = "";
                            if (isInfinity) 
                                formattedText = "∞";
                            else {
                                parsedNumber = parse(numStr),
                                roundNumber(parsedNumber, fractionSize, pattern.minFrac, pattern.maxFrac);
                                var digits = parsedNumber.d,
                                    integerLen = parsedNumber.i,
                                    exponent = parsedNumber.e,
                                    decimals = [];
                                for (isZero = digits.reduce(function (isZero, d) {
                                    return isZero && !d
                                }, !0); integerLen < 0;) 
                                    digits.unshift(0),
                                    integerLen++;
                                integerLen > 0
                                    ? decimals = digits.splice(integerLen, digits.length)
                                    : (decimals = digits, digits = [0]);
                                var groups = [];
                                for (
                                    digits.length >= pattern.lgSize && groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(""));
                                    digits.length > pattern.gSize;
                                ) 
                                    groups.unshift(digits.splice(-pattern.gSize, digits.length).join(""));
                                digits.length && groups.unshift(digits.join("")),
                                formattedText = groups.join(groupSep),
                                decimals.length && (formattedText += decimalSep + decimals.join("")),
                                exponent && (formattedText += "e+" + exponent)
                            }
                            return number < 0 && !isZero
                                ? pattern.negPre + formattedText + pattern.negSuf
                                : pattern.posPre + formattedText + pattern.posSuf
                        }
                        function padNumber(num, digits, trim, negWrap) {
                            var neg = "";
                            for ((num < 0 || negWrap && num <= 0) && (
                                negWrap
                                    ? num = 1 - num
                                    : (num = -num, neg = "-")
                            ), num = "" + num; num.length < digits;) 
                                num = ZERO_CHAR + num;
                            return trim && (num = num.substr(num.length - digits)),
                            neg + num
                        }
                        function dateGetter(name, size, offset, trim, negWrap) {
                            return offset = offset || 0,
                            function (date) {
                                var value = date["get" + name]();
                                return (offset > 0 || value > -offset) && (value += offset),
                                0 === value && -12 === offset && (value = 12),
                                padNumber(value, size, trim, negWrap)
                            }
                        }
                        function dateStrGetter(name, shortForm, standAlone) {
                            return function (date, formats) {
                                var value = date["get" + name]();
                                return formats[uppercase((
                                        standAlone
                                            ? "STANDALONE"
                                            : ""
                                    ) + (
                                        shortForm
                                            ? "SHORT"
                                            : ""
                                    ) + name)][value]
                            }
                        }
                        function timeZoneGetter(date, formats, offset) {
                            var zone = -1 * offset,
                                paddedZone = zone >= 0
                                    ? "+"
                                    : "";
                            return paddedZone += padNumber(Math[
                                zone > 0
                                    ? "floor"
                                    : "ceil"
                            ](zone / 60), 2) + padNumber(Math.abs(zone % 60), 2)
                        }
                        function getFirstThursdayOfYear(year) {
                            var dayOfWeekOnFirst = new Date(year, 0, 1).getDay();
                            return new Date(year, 0, (
                                dayOfWeekOnFirst <= 4
                                    ? 5
                                    : 12
                            ) - dayOfWeekOnFirst)
                        }
                        function getThursdayThisWeek(datetime) {
                            return new Date(
                                datetime.getFullYear(),
                                datetime.getMonth(),
                                datetime.getDate() + (4 - datetime.getDay())
                            )
                        }
                        function weekGetter(size) {
                            return function (date) {
                                var firstThurs = getFirstThursdayOfYear(date.getFullYear()),
                                    thisThurs = getThursdayThisWeek(date),
                                    diff = +thisThurs - +firstThurs;
                                return padNumber(1 + Math.round(diff / 6048e5), size)
                            }
                        }
                        function ampmGetter(date, formats) {
                            return date.getHours() < 12
                                ? formats.AMPMS[0]
                                : formats.AMPMS[1]
                        }
                        function eraGetter(date, formats) {
                            return date.getFullYear() <= 0
                                ? formats.ERAS[0]
                                : formats.ERAS[1]
                        }
                        function longEraGetter(date, formats) {
                            return date.getFullYear() <= 0
                                ? formats.ERANAMES[0]
                                : formats.ERANAMES[1]
                        }
                        function dateFilter($locale) {
                            function jsonStringToDate(string) {
                                var match;
                                if (match = string.match(R_ISO8601_STR)) {
                                    var date = new Date(0),
                                        tzHour = 0,
                                        tzMin = 0,
                                        dateSetter = match[8]
                                            ? date.setUTCFullYear
                                            : date.setFullYear,
                                        timeSetter = match[8]
                                            ? date.setUTCHours
                                            : date.setHours;
                                    match[9] && (tzHour = toInt(match[9] + match[10]), tzMin = toInt(
                                        match[9] + match[11]
                                    )),
                                    dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));
                                    var h = toInt(match[4] || 0) - tzHour,
                                        m = toInt(match[5] || 0) - tzMin,
                                        s = toInt(match[6] || 0),
                                        ms = Math.round(1e3 * parseFloat("0." + (
                                            match[7] || 0
                                        )));
                                    return timeSetter.call(date, h, m, s, ms),
                                    date
                                }
                                return string
                            }
                            var R_ISO8601_STR = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
                            return function (date, format, timezone) {
                                var fn,
                                    match,
                                    text = "",
                                    parts = [];
                                if (
                                    format = format || "mediumDate",
                                    format = $locale.DATETIME_FORMATS[format] || format,
                                    isString(date) && (
                                        date = NUMBER_STRING.test(date)
                                            ? toInt(date)
                                            : jsonStringToDate(date)
                                    ),
                                    isNumber(date) && (date = new Date(date)),
                                    !isDate(date) || !isFinite(date.getTime())
                                ) 
                                    return date;
                                for (; format;) 
                                    match = DATE_FORMATS_SPLIT.exec(format),
                                    match
                                        ? (parts = concat(parts, match, 1), format = parts.pop())
                                        : (parts.push(format), format = null);
                                var dateTimezoneOffset = date.getTimezoneOffset();
                                return timezone && (
                                    dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset),
                                    date = convertTimezoneToLocal(date, timezone, !0)
                                ),
                                forEach(parts, function (value) {
                                    fn = DATE_FORMATS[value],
                                    text += fn
                                        ? fn(date, $locale.DATETIME_FORMATS, dateTimezoneOffset)
                                        : "''" === value
                                            ? "'"
                                            : value
                                                .replace(/(^'|'$)/g, "")
                                                .replace(/''/g, "'")
                                }),
                                text
                            }
                        }
                        function jsonFilter() {
                            return function (object, spacing) {
                                return isUndefined(spacing) && (spacing = 2),
                                toJson(object, spacing)
                            }
                        }
                        function limitToFilter() {
                            return function (input, limit, begin) {
                                return limit = Math.abs(Number(limit)) === 1 / 0
                                    ? Number(limit)
                                    : toInt(limit),
                                isNumberNaN(limit)
                                    ? input
                                    : (
                                        isNumber(input) && (input = input.toString()),
                                        isArrayLike(input)
                                            ? (
                                                begin = !begin || isNaN(begin)
                                                    ? 0
                                                    : toInt(begin),
                                                begin = begin < 0
                                                    ? Math.max(0, input.length + begin)
                                                    : begin,
                                                limit >= 0
                                                    ? sliceFn(input, begin, begin + limit)
                                                    : 0 === begin
                                                        ? sliceFn(input, limit, input.length)
                                                        : sliceFn(input, Math.max(0, begin + limit), begin)
                                            )
                                            : input
                                    )
                            }
                        }
                        function sliceFn(input, begin, end) {
                            return isString(input)
                                ? input.slice(begin, end)
                                : slice.call(input, begin, end)
                        }
                        function orderByFilter($parse) {
                            function processPredicates(sortPredicates) {
                                return sortPredicates.map(function (predicate) {
                                    var descending = 1,
                                        get = identity;
                                    if (isFunction(predicate)) 
                                        get = predicate;
                                    else if (isString(predicate) && ("+" !== predicate.charAt(0) && "-" !== predicate.charAt(0) || (
                                        descending = "-" === predicate.charAt(0)
                                            ? -1
                                            : 1,
                                        predicate = predicate.substring(1)
                                    ), "" !== predicate && (get = $parse(predicate), get.constant))) {
                                        var key = get();
                                        get = function (value) {
                                            return value[key]
                                        }
                                    }
                                    return {get: get, descending: descending}
                                })
                            }
                            function isPrimitive(value) {
                                switch (typeof value) {
                                    case "number":
                                    case "boolean":
                                    case "string":
                                        return !0;
                                    default:
                                        return !1
                                }
                            }
                            function objectValue(value) {
                                return isFunction(value.valueOf) && (
                                    value = value.valueOf(),
                                    isPrimitive(value)
                                )
                                    ? value
                                    : (
                                        hasCustomToString(value) && (value = value.toString(), isPrimitive(value)),
                                        value
                                    )
                            }
                            function getPredicateValue(value, index) {
                                var type = typeof value;
                                return null === value
                                    ? (type = "string", value = "null")
                                    : "object" === type && (value = objectValue(value)), {
                                    value: value,
                                    type: type,
                                    index: index
                                }
                            }
                            function defaultCompare(v1, v2) {
                                var result = 0,
                                    type1 = v1.type,
                                    type2 = v2.type;
                                if (type1 === type2) {
                                    var value1 = v1.value,
                                        value2 = v2.value;
                                    "string" === type1
                                        ? (value1 = value1.toLowerCase(), value2 = value2.toLowerCase())
                                        : "object" === type1 && (
                                            isObject(value1) && (value1 = v1.index),
                                            isObject(value2) && (value2 = v2.index)
                                        ),
                                    value1 !== value2 && (
                                        result = value1 < value2
                                            ? -1
                                            : 1
                                    )
                                } else 
                                    result = type1 < type2
                                        ? -1
                                        : 1;
                                return result
                            }
                            return function (array, sortPredicate, reverseOrder, compareFn) {
                                function getComparisonObject(value, index) {
                                    return {
                                        value: value,
                                        tieBreaker: {
                                            value: index,
                                            type: "number",
                                            index: index
                                        },
                                        predicateValues: predicates.map(function (predicate) {
                                            return getPredicateValue(predicate.get(value), index)
                                        })
                                    }
                                }
                                function doComparison(v1, v2) {
                                    for (var i = 0, ii = predicates.length; i < ii; i++) {
                                        var result = compare(v1.predicateValues[i], v2.predicateValues[i]);
                                        if (result) 
                                            return result * predicates[i].descending * descending
                                    }
                                    return compare(v1.tieBreaker, v2.tieBreaker) * descending
                                }
                                if (null == array) 
                                    return array;
                                if (!isArrayLike(array)) 
                                    throw minErr("orderBy")("notarray", "Expected array but received: {0}", array);
                                isArray(sortPredicate) || (sortPredicate = [sortPredicate]),
                                0 === sortPredicate.length && (sortPredicate = ["+"]);
                                var predicates = processPredicates(sortPredicate),
                                    descending = reverseOrder
                                        ? -1
                                        : 1,
                                    compare = isFunction(compareFn)
                                        ? compareFn
                                        : defaultCompare,
                                    compareValues = Array
                                        .prototype
                                        .map
                                        .call(array, getComparisonObject);
                                return compareValues.sort(doComparison),
                                array = compareValues.map(function (item) {
                                    return item.value
                                })
                            }
                        }
                        function ngDirective(directive) {
                            return isFunction(directive) && (directive = {
                                link: directive
                            }),
                            directive.restrict = directive.restrict || "AC",
                            valueFn(directive)
                        }
                        function nullFormRenameControl(control, name) {
                            control.$name = name
                        }
                        function FormController($element, $attrs, $scope, $animate, $interpolate) {
                            this.$$controls = [],
                            this.$error = {},
                            this.$$success = {},
                            this.$pending = void 0,
                            this.$name = $interpolate($attrs.name || $attrs.ngForm || "")($scope),
                            this.$dirty = !1,
                            this.$pristine = !0,
                            this.$valid = !0,
                            this.$invalid = !1,
                            this.$submitted = !1,
                            this.$$parentForm = nullFormCtrl,
                            this.$$element = $element,
                            this.$$animate = $animate,
                            setupValidity(this)
                        }
                        function setupValidity(instance) {
                            instance.$$classCache = {},
                            instance.$$classCache[INVALID_CLASS] = !(
                                instance.$$classCache[VALID_CLASS] = instance.$$element.hasClass(VALID_CLASS)
                            )
                        }
                        function addSetValidityMethod(context) {
                            function createAndSet(ctrl, name, value, controller) {
                                ctrl[name] || (ctrl[name] = {}),
                                set(ctrl[name], value, controller)
                            }
                            function unsetAndCleanup(ctrl, name, value, controller) {
                                ctrl[name] && unset(ctrl[name], value, controller),
                                isObjectEmpty(ctrl[name]) && (ctrl[name] = void 0)
                            }
                            function cachedToggleClass(ctrl, className, switchValue) {
                                switchValue && !ctrl.$$classCache[className]
                                    ? (
                                        ctrl.$$animate.addClass(ctrl.$$element, className),
                                        ctrl.$$classCache[className] = !0
                                    )
                                    : !switchValue && ctrl.$$classCache[className] && (
                                        ctrl.$$animate.removeClass(ctrl.$$element, className),
                                        ctrl.$$classCache[className] = !1
                                    )
                            }
                            function toggleValidationCss(ctrl, validationErrorKey, isValid) {
                                validationErrorKey = validationErrorKey
                                    ? "-" + snake_case(validationErrorKey, "-")
                                    : "",
                                cachedToggleClass(ctrl, VALID_CLASS + validationErrorKey, !0 === isValid),
                                cachedToggleClass(ctrl, INVALID_CLASS + validationErrorKey, !1 === isValid)
                            }
                            var clazz = context.clazz,
                                set = context.set,
                                unset = context.unset;
                            clazz.prototype.$setValidity = function (validationErrorKey, state, controller) {
                                isUndefined(state)
                                    ? createAndSet(this, "$pending", validationErrorKey, controller)
                                    : unsetAndCleanup(this, "$pending", validationErrorKey, controller),
                                isBoolean(state)
                                    ? state
                                        ? (
                                            unset(this.$error, validationErrorKey, controller),
                                            set(this.$$success, validationErrorKey, controller)
                                        )
                                        : (
                                            set(this.$error, validationErrorKey, controller),
                                            unset(this.$$success, validationErrorKey, controller)
                                        )
                                    : (
                                        unset(this.$error, validationErrorKey, controller),
                                        unset(this.$$success, validationErrorKey, controller)
                                    ),
                                this.$pending
                                    ? (
                                        cachedToggleClass(this, PENDING_CLASS, !0),
                                        this.$valid = this.$invalid = void 0,
                                        toggleValidationCss(this, "", null)
                                    )
                                    : (
                                        cachedToggleClass(this, PENDING_CLASS, !1),
                                        this.$valid = isObjectEmpty(this.$error),
                                        this.$invalid = !this.$valid,
                                        toggleValidationCss(this, "", this.$valid)
                                    );
                                var combinedState;
                                combinedState = this.$pending && this.$pending[validationErrorKey]
                                    ? void 0
                                    : !this.$error[validationErrorKey] && (
                                        !!this.$$success[validationErrorKey] || null
                                    ),
                                toggleValidationCss(this, validationErrorKey, combinedState),
                                this
                                    .$$parentForm
                                    .$setValidity(validationErrorKey, combinedState, this)
                            }
                        }
                        function isObjectEmpty(obj) {
                            if (obj) 
                                for (var prop in obj) 
                                    if (obj.hasOwnProperty(prop)) 
                                        return !1;
                        return !0
                        }
                        function stringBasedInputType(ctrl) {
                            ctrl
                                .$formatters
                                .push(function (value) {
                                    return ctrl.$isEmpty(value)
                                        ? value
                                        : value.toString()
                                })
                        }
                        function textInputType(scope, element, attr, ctrl, $sniffer, $browser) {
                            baseInputType(scope, element, attr, ctrl, $sniffer, $browser),
                            stringBasedInputType(ctrl)
                        }
                        function baseInputType(scope, element, attr, ctrl, $sniffer, $browser) {
                            var type = lowercase(element[0].type);
                            if (!$sniffer.android) {
                                var composing = !1;
                                element.on("compositionstart", function () {
                                    composing = !0
                                }),
                                element.on("compositionend", function () {
                                    composing = !1,
                                    listener()
                                })
                            }
                            var timeout,
                                listener = function (ev) {
                                    if (timeout && ($browser.defer.cancel(timeout), timeout = null), !composing) {
                                        var value = element.val(),
                                            event = ev && ev.type;
                                        "password" === type || attr.ngTrim && "false" === attr.ngTrim || (
                                            value = trim(value)
                                        ),
                                        (ctrl.$viewValue !== value || "" === value && ctrl.$$hasNativeValidators) && ctrl.$setViewValue(
                                            value,
                                            event
                                        )
                                    }
                                };
                            if ($sniffer.hasEvent("input")) 
                                element.on("input", listener);
                            else {
                                var deferListener = function (ev, input, origValue) {
                                    timeout || (timeout = $browser.defer(function () {
                                        timeout = null,
                                        input && input.value === origValue || listener(ev)
                                    }))
                                };
                                element.on("keydown", function (event) {
                                    var key = event.keyCode;
                                    91 === key || 15 < key && key < 19 || 37 <= key && key <= 40 || deferListener(
                                        event,
                                        this,
                                        this.value
                                    )
                                }),
                                $sniffer.hasEvent("paste") && element.on("paste cut", deferListener)
                            }
                            element.on("change", listener),
                            PARTIAL_VALIDATION_TYPES[type] && ctrl.$$hasNativeValidators && type === attr.type && element.on(
                                PARTIAL_VALIDATION_EVENTS,
                                function (ev) {
                                    if (!timeout) {
                                        var validity = this[VALIDITY_STATE_PROPERTY],
                                            origBadInput = validity.badInput,
                                            origTypeMismatch = validity.typeMismatch;
                                        timeout = $browser.defer(function () {
                                            timeout = null,
                                            validity.badInput === origBadInput && validity.typeMismatch === origTypeMismatch || listener(
                                                ev
                                            )
                                        })
                                    }
                                }
                            ),
                            ctrl.$render = function () {
                                var value = ctrl.$isEmpty(ctrl.$viewValue)
                                    ? ""
                                    : ctrl.$viewValue;
                                element.val() !== value && element.val(value)
                            }
                        }
                        function weekParser(isoWeek, existingDate) {
                            if (isDate(isoWeek)) 
                                return isoWeek;
                            if (isString(isoWeek)) {
                                WEEK_REGEXP.lastIndex = 0;
                                var parts = WEEK_REGEXP.exec(isoWeek);
                                if (parts) {
                                    var year = +parts[1],
                                        week = +parts[2],
                                        hours = 0,
                                        minutes = 0,
                                        seconds = 0,
                                        milliseconds = 0,
                                        firstThurs = getFirstThursdayOfYear(year),
                                        addDays = 7 * (week - 1);
                                    return existingDate && (
                                        hours = existingDate.getHours(),
                                        minutes = existingDate.getMinutes(),
                                        seconds = existingDate.getSeconds(),
                                        milliseconds = existingDate.getMilliseconds()
                                    ),
                                    new Date(
                                        year,
                                        0,
                                        firstThurs.getDate() + addDays,
                                        hours,
                                        minutes,
                                        seconds,
                                        milliseconds
                                    )
                                }
                            }
                            return NaN
                        }
                        function createDateParser(regexp, mapping) {
                            return function (iso, date) {
                                var parts,
                                    map;
                                if (isDate(iso)) 
                                    return iso;
                                if (isString(iso)) {
                                    if (
                                        '"' === iso.charAt(0) && '"' === iso.charAt(iso.length - 1) && (iso = iso.substring(1, iso.length - 1)),
                                        ISO_DATE_REGEXP.test(iso)
                                    ) 
                                        return new Date(iso);
                                    if (regexp.lastIndex = 0, parts = regexp.exec(iso)) 
                                        return parts.shift(),
                                        map = date
                                            ? {
                                                yyyy: date.getFullYear(),
                                                MM: date.getMonth() + 1,
                                                dd: date.getDate(),
                                                HH: date.getHours(),
                                                mm: date.getMinutes(),
                                                ss: date.getSeconds(),
                                                sss: date.getMilliseconds() / 1e3
                                            }
                                            : {
                                                yyyy: 1970,
                                                MM: 1,
                                                dd: 1,
                                                HH: 0,
                                                mm: 0,
                                                ss: 0,
                                                sss: 0
                                            }
                                        ,
                                    forEach(parts, function (part, index) {
                                        index < mapping.length && (map[mapping[index]] = +part)
                                    }),
                                    new Date(
                                        map.yyyy,
                                        map.MM - 1,
                                        map.dd,
                                        map.HH,
                                        map.mm,
                                        map.ss || 0,
                                        1e3 * map.sss || 0
                                    )
                                }
                                return NaN
                            }
                        }
                        function createDateInputType(type, regexp, parseDate, format) {
                            return function dynamicDateInputType(
                                scope,
                                element,
                                attr,
                                ctrl,
                                $sniffer,
                                $browser,
                                $filter
                            ) {
                                function isValidDate(value) {
                                    return value && !(value.getTime && value.getTime() !== value.getTime())
                                }
                                function parseObservedDateValue(val) {
                                    return isDefined(val) && !isDate(val)
                                        ? parseDate(val) || void 0
                                        : val
                                }
                                badInputChecker(scope, element, attr, ctrl),
                                baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
                                var previousDate,
                                    timezone = ctrl && ctrl
                                        .$options
                                        .getOption("timezone");
                                if (
                                    ctrl.$$parserName = type,
                                    ctrl.$parsers.push(function (value) {
                                        if (ctrl.$isEmpty(value)) 
                                            return null;
                                        if (regexp.test(value)) {
                                            var parsedDate = parseDate(value, previousDate);
                                            return timezone && (parsedDate = convertTimezoneToLocal(parsedDate, timezone)),
                                            parsedDate
                                        }
                                    }),
                                    ctrl.$formatters.push(function (value) {
                                        if (value && !isDate(value)) 
                                            throw ngModelMinErr("datefmt", "Expected `{0}` to be a date", value);
                                        return isValidDate(value)
                                            ? (
                                                previousDate = value,
                                                previousDate && timezone && (previousDate = convertTimezoneToLocal(previousDate, timezone, !0)),
                                                $filter("date")(
                                                    value,
                                                    format,
                                                    timezone
                                                )
                                            )
                                            : (previousDate = null, "")
                                    }),
                                    isDefined(attr.min) || attr.ngMin
                                ) {
                                    var minVal;
                                    ctrl.$validators.min = function (value) {
                                        return !isValidDate(value) || isUndefined(minVal) || parseDate(value) >= minVal
                                    },
                                    attr.$observe("min", function (val) {
                                        minVal = parseObservedDateValue(val),
                                        ctrl.$validate()
                                    })
                                }
                                if (isDefined(attr.max) || attr.ngMax) {
                                    var maxVal;
                                    ctrl.$validators.max = function (value) {
                                        return !isValidDate(value) || isUndefined(maxVal) || parseDate(value) <= maxVal
                                    },
                                    attr.$observe("max", function (val) {
                                        maxVal = parseObservedDateValue(val),
                                        ctrl.$validate()
                                    })
                                }
                            }
                        }
                        function badInputChecker(scope, element, attr, ctrl) {
                            var node = element[0];
                            (ctrl.$$hasNativeValidators = isObject(node.validity)) && ctrl
                                .$parsers
                                .push(function (value) {
                                    var validity = element.prop(VALIDITY_STATE_PROPERTY) || {};
                                    return validity.badInput || validity.typeMismatch
                                        ? void 0
                                        : value
                                })
                        }
                        function numberFormatterParser(ctrl) {
                            ctrl.$$parserName = "number",
                            ctrl
                                .$parsers
                                .push(function (value) {
                                    return ctrl.$isEmpty(value)
                                        ? null
                                        : NUMBER_REGEXP.test(value)
                                            ? parseFloat(value)
                                            : void 0
                                }),
                            ctrl
                                .$formatters
                                .push(function (value) {
                                    if (!ctrl.$isEmpty(value)) {
                                        if (!isNumber(value)) 
                                            throw ngModelMinErr("numfmt", "Expected `{0}` to be a number", value);
                                        value = value.toString()
                                    }
                                    return value
                                })
                        }
                        function parseNumberAttrVal(val) {
                            return isDefined(val) && !isNumber(val) && (val = parseFloat(val)),
                            isNumberNaN(val)
                                ? void 0
                                : val
                        }
                        function isNumberInteger(num) {
                            return (0 | num) === num
                        }
                        function countDecimals(num) {
                            var numString = num.toString(),
                                decimalSymbolIndex = numString.indexOf(".");
                            if (-1 === decimalSymbolIndex) {
                                if (-1 < num && num < 1) {
                                    var match = /e-(\d+)$/.exec(numString);
                                    if (match) 
                                        return Number(match[1])
                                }
                                return 0
                            }
                            return numString.length - decimalSymbolIndex - 1
                        }
                        function isValidForStep(viewValue, stepBase, step) {
                            var value = Number(viewValue);
                            if (!isNumberInteger(value) || !isNumberInteger(stepBase) || !isNumberInteger(step)) {
                                var decimalCount = Math.max(
                                        countDecimals(value),
                                        countDecimals(stepBase),
                                        countDecimals(step)
                                    ),
                                    multiplier = Math.pow(10, decimalCount);
                                value *= multiplier,
                                stepBase *= multiplier,
                                step *= multiplier
                            }
                            return (value - stepBase) % step == 0
                        }
                        function numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {
                            badInputChecker(scope, element, attr, ctrl),
                            numberFormatterParser(ctrl),
                            baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
                            var minVal,
                                maxVal;
                            if (
                                (isDefined(attr.min) || attr.ngMin) && (ctrl.$validators.min = function (value) {
                                    return ctrl.$isEmpty(value) || isUndefined(minVal) || value >= minVal
                                }, attr.$observe("min", function (val) {
                                    minVal = parseNumberAttrVal(val),
                                    ctrl.$validate()
                                })),
                                (isDefined(attr.max) || attr.ngMax) && (ctrl.$validators.max = function (value) {
                                    return ctrl.$isEmpty(value) || isUndefined(maxVal) || value <= maxVal
                                }, attr.$observe("max", function (val) {
                                    maxVal = parseNumberAttrVal(val),
                                    ctrl.$validate()
                                })),
                                isDefined(attr.step) || attr.ngStep
                            ) {
                                var stepVal;
                                ctrl.$validators.step = function (modelValue, viewValue) {
                                    return ctrl.$isEmpty(viewValue) || isUndefined(stepVal) || isValidForStep(
                                        viewValue,
                                        minVal || 0,
                                        stepVal
                                    )
                                },
                                attr.$observe("step", function (val) {
                                    stepVal = parseNumberAttrVal(val),
                                    ctrl.$validate()
                                })
                            }
                        }
                        function rangeInputType(scope, element, attr, ctrl, $sniffer, $browser) {
                            function setInitialValueAndObserver(htmlAttrName, changeFn) {
                                element.attr(htmlAttrName, attr[htmlAttrName]),
                                attr.$observe(htmlAttrName, changeFn)
                            }
                            function minChange(val) {
                                if (minVal = parseNumberAttrVal(val), !isNumberNaN(ctrl.$modelValue)) 
                                    if (supportsRange) {
                                        var elVal = element.val();
                                        minVal > elVal && (elVal = minVal, element.val(elVal)),
                                        ctrl.$setViewValue(elVal)
                                    } else 
                                        ctrl.$validate()
                            }
                            function maxChange(val) {
                                if (maxVal = parseNumberAttrVal(val), !isNumberNaN(ctrl.$modelValue)) 
                                    if (supportsRange) {
                                        var elVal = element.val();
                                        maxVal < elVal && (
                                            element.val(maxVal),
                                            elVal = maxVal < minVal
                                                ? minVal
                                                : maxVal
                                        ),
                                        ctrl.$setViewValue(elVal)
                                    } else 
                                        ctrl.$validate()
                            }
                            function stepChange(val) {
                                stepVal = parseNumberAttrVal(val),
                                isNumberNaN(ctrl.$modelValue) || (
                                    supportsRange && ctrl.$viewValue !== element.val()
                                        ? ctrl.$setViewValue(element.val())
                                        : ctrl.$validate()
                                )
                            }
                            badInputChecker(scope, element, attr, ctrl),
                            numberFormatterParser(ctrl),
                            baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
                            var supportsRange = ctrl.$$hasNativeValidators && "range" === element[0].type,
                                minVal = supportsRange
                                    ? 0
                                    : void 0,
                                maxVal = supportsRange
                                    ? 100
                                    : void 0,
                                stepVal = supportsRange
                                    ? 1
                                    : void 0,
                                validity = element[0].validity,
                                hasMinAttr = isDefined(attr.min),
                                hasMaxAttr = isDefined(attr.max),
                                hasStepAttr = isDefined(attr.step),
                                originalRender = ctrl.$render;
                            ctrl.$render = supportsRange && isDefined(validity.rangeUnderflow) && isDefined(
                                validity.rangeOverflow
                            )
                                ? function rangeRender() {
                                    originalRender(),
                                    ctrl.$setViewValue(element.val())
                                }
                                : originalRender,
                            hasMinAttr && (
                                ctrl.$validators.min = supportsRange
                                    ? function noopMinValidator() {
                                        return !0
                                    }
                                    : function minValidator(modelValue, viewValue) {
                                        return ctrl.$isEmpty(viewValue) || isUndefined(minVal) || viewValue >= minVal
                                    },
                                setInitialValueAndObserver("min", minChange)
                            ),
                            hasMaxAttr && (
                                ctrl.$validators.max = supportsRange
                                    ? function noopMaxValidator() {
                                        return !0
                                    }
                                    : function maxValidator(modelValue, viewValue) {
                                        return ctrl.$isEmpty(viewValue) || isUndefined(maxVal) || viewValue <= maxVal
                                    },
                                setInitialValueAndObserver("max", maxChange)
                            ),
                            hasStepAttr && (
                                ctrl.$validators.step = supportsRange
                                    ? function nativeStepValidator() {
                                        return !validity.stepMismatch
                                    }
                                    : function stepValidator(modelValue, viewValue) {
                                        return ctrl.$isEmpty(viewValue) || isUndefined(stepVal) || isValidForStep(
                                            viewValue,
                                            minVal || 0,
                                            stepVal
                                        )
                                    },
                                setInitialValueAndObserver("step", stepChange)
                            )
                        }
                        function urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {
                            baseInputType(scope, element, attr, ctrl, $sniffer, $browser),
                            stringBasedInputType(ctrl),
                            ctrl.$$parserName = "url",
                            ctrl.$validators.url = function (modelValue, viewValue) {
                                var value = modelValue || viewValue;
                                return ctrl.$isEmpty(value) || URL_REGEXP.test(value)
                            }
                        }
                        function emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {
                            baseInputType(scope, element, attr, ctrl, $sniffer, $browser),
                            stringBasedInputType(ctrl),
                            ctrl.$$parserName = "email",
                            ctrl.$validators.email = function (modelValue, viewValue) {
                                var value = modelValue || viewValue;
                                return ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value)
                            }
                        }
                        function radioInputType(scope, element, attr, ctrl) {
                            var doTrim = !attr.ngTrim || "false" !== trim(attr.ngTrim);
                            isUndefined(attr.name) && element.attr("name", nextUid());
                            var listener = function (ev) {
                                var value;
                                element[0].checked && (
                                    value = attr.value,
                                    doTrim && (value = trim(value)),
                                    ctrl.$setViewValue(value, ev && ev.type)
                                )
                            };
                            element.on("click", listener),
                            ctrl.$render = function () {
                                var value = attr.value;
                                doTrim && (value = trim(value)),
                                element[0].checked = value === ctrl.$viewValue
                            },
                            attr.$observe("value", ctrl.$render)
                        }
                        function parseConstantExpr($parse, context, name, expression, fallback) {
                            var parseFn;
                            if (isDefined(expression)) {
                                if (parseFn = $parse(expression), !parseFn.constant) 
                                    throw ngModelMinErr(
                                        "constexpr",
                                        "Expected constant expression for `{0}`, but saw `{1}`.",
                                        name,
                                        expression
                                    );
                                return parseFn(context)
                            }
                            return fallback
                        }
                        function checkboxInputType(
                            scope,
                            element,
                            attr,
                            ctrl,
                            $sniffer,
                            $browser,
                            $filter,
                            $parse
                        ) {
                            var trueValue = parseConstantExpr(
                                    $parse,
                                    scope,
                                    "ngTrueValue",
                                    attr.ngTrueValue,
                                    !0
                                ),
                                falseValue = parseConstantExpr(
                                    $parse,
                                    scope,
                                    "ngFalseValue",
                                    attr.ngFalseValue,
                                    !1
                                ),
                                listener = function (ev) {
                                    ctrl.$setViewValue(element[0].checked, ev && ev.type)
                                };
                            element.on("click", listener),
                            ctrl.$render = function () {
                                element[0].checked = ctrl.$viewValue
                            },
                            ctrl.$isEmpty = function (value) {
                                return !1 === value
                            },
                            ctrl
                                .$formatters
                                .push(function (value) {
                                    return equals(value, trueValue)
                                }),
                            ctrl
                                .$parsers
                                .push(function (value) {
                                    return value
                                        ? trueValue
                                        : falseValue
                                })
                        }
                        function classDirective(name, selector) {
                            function arrayDifference(tokens1, tokens2) {
                                if (!tokens1 || !tokens1.length) 
                                    return [];
                                if (!tokens2 || !tokens2.length) 
                                    return tokens1;
                                var values = [];
                                outer : for (var i = 0; i < tokens1.length; i++) {
                                    for (var token = tokens1[i], j = 0; j < tokens2.length; j++) 
                                        if (token === tokens2[j]) 
                                            continue outer;
                                values.push(token)
                                }
                                return values
                            }
                            function split(classString) {
                                return classString && classString.split(" ")
                            }
                            function toClassString(classValue) {
                                var classString = classValue;
                                return isArray(classValue)
                                    ? classString = classValue
                                        .map(toClassString)
                                        .join(" ")
                                    : isObject(classValue) && (
                                        classString = Object.keys(classValue).filter(function (key) {
                                            return classValue[key]
                                        }).join(" ")
                                    ),
                                classString
                            }
                            function toFlatValue(classValue) {
                                var flatValue = classValue;
                                if (isArray(classValue)) 
                                    flatValue = classValue.map(toFlatValue);
                                else if (isObject(classValue)) {
                                    var hasUndefined = !1;
                                    flatValue = Object
                                        .keys(classValue)
                                        .filter(function (key) {
                                            var value = classValue[key];
                                            return !hasUndefined && isUndefined(value) && (hasUndefined = !0),
                                            value
                                        }),
                                    hasUndefined && flatValue.push(void 0)
                                }
                                return flatValue
                            }
                            name = "ngClass" + name;
                            var indexWatchExpression;
                            return [
                                "$parse",
                                function ($parse) {
                                    return {
                                        restrict: "AC",
                                        link: function (scope, element, attr) {
                                            function addClasses(classString) {
                                                classString = digestClassCounts(split(classString), 1),
                                                attr.$addClass(classString)
                                            }
                                            function removeClasses(classString) {
                                                classString = digestClassCounts(split(classString), -1),
                                                attr.$removeClass(classString)
                                            }
                                            function updateClasses(oldClassString, newClassString) {
                                                var oldClassArray = split(oldClassString),
                                                    newClassArray = split(newClassString),
                                                    toRemoveArray = arrayDifference(oldClassArray, newClassArray),
                                                    toAddArray = arrayDifference(newClassArray, oldClassArray),
                                                    toRemoveString = digestClassCounts(toRemoveArray, -1),
                                                    toAddString = digestClassCounts(toAddArray, 1);
                                                attr.$addClass(toAddString),
                                                attr.$removeClass(toRemoveString)
                                            }
                                            function digestClassCounts(classArray, count) {
                                                var classesToUpdate = [];
                                                return forEach(classArray, function (className) {
                                                    (count > 0 || classCounts[className]) && (
                                                        classCounts[className] = (classCounts[className] || 0) + count,
                                                        classCounts[className] ===+ (count > 0) && classesToUpdate.push(className)
                                                    )
                                                }),
                                                classesToUpdate.join(" ")
                                            }
                                            function ngClassIndexWatchAction(newModulo) {
                                                newModulo === selector
                                                    ? addClasses(oldClassString)
                                                    : removeClasses(oldClassString),
                                                oldModulo = newModulo
                                            }
                                            function ngClassOneTimeWatchAction(newClassValue) {
                                                var newClassString = toClassString(newClassValue);
                                                newClassString !== oldClassString && ngClassWatchAction(newClassString)
                                            }
                                            function ngClassWatchAction(newClassString) {
                                                oldModulo === selector && updateClasses(oldClassString, newClassString),
                                                oldClassString = newClassString
                                            }
                                            var oldClassString,
                                                expression = attr[name].trim(),
                                                isOneTime = ":" === expression.charAt(0) && ":" === expression.charAt(1),
                                                watchInterceptor = isOneTime
                                                    ? toFlatValue
                                                    : toClassString,
                                                watchExpression = $parse(expression, watchInterceptor),
                                                watchAction = isOneTime
                                                    ? ngClassOneTimeWatchAction
                                                    : ngClassWatchAction,
                                                classCounts = element.data("$classCounts"),
                                                oldModulo = !0;
                                            classCounts || (
                                                classCounts = createMap(),
                                                element.data("$classCounts", classCounts)
                                            ),
                                            "ngClass" !== name && (
                                                indexWatchExpression || (indexWatchExpression = $parse("$index", function moduloTwo($index) {
                                                    return 1 & $index
                                                })),
                                                scope.$watch(indexWatchExpression, ngClassIndexWatchAction)
                                            ),
                                            scope.$watch(watchExpression, watchAction, isOneTime)
                                        }
                                    }
                                }
                            ]
                        }
                        function NgModelController(
                            $scope,
                            $exceptionHandler,
                            $attr,
                            $element,
                            $parse,
                            $animate,
                            $timeout,
                            $q,
                            $interpolate
                        ) {
                            this.$viewValue = Number.NaN,
                            this.$modelValue = Number.NaN,
                            this.$$rawModelValue = void 0,
                            this.$validators = {},
                            this.$asyncValidators = {},
                            this.$parsers = [],
                            this.$formatters = [],
                            this.$viewChangeListeners = [],
                            this.$untouched = !0,
                            this.$touched = !1,
                            this.$pristine = !0,
                            this.$dirty = !1,
                            this.$valid = !0,
                            this.$invalid = !1,
                            this.$error = {},
                            this.$$success = {},
                            this.$pending = void 0,
                            this.$name = $interpolate($attr.name || "", !1)($scope),
                            this.$$parentForm = nullFormCtrl,
                            this.$options = defaultModelOptions,
                            this.$$parsedNgModel = $parse($attr.ngModel),
                            this.$$parsedNgModelAssign = this.$$parsedNgModel.assign,
                            this.$$ngModelGet = this.$$parsedNgModel,
                            this.$$ngModelSet = this.$$parsedNgModelAssign,
                            this.$$pendingDebounce = null,
                            this.$$parserValid = void 0,
                            this.$$currentValidationRunId = 0,
                            this.$$scope = $scope,
                            this.$$attr = $attr,
                            this.$$element = $element,
                            this.$$animate = $animate,
                            this.$$timeout = $timeout,
                            this.$$parse = $parse,
                            this.$$q = $q,
                            this.$$exceptionHandler = $exceptionHandler,
                            setupValidity(this),
                            setupModelWatcher(this)
                        }
                        function setupModelWatcher(ctrl) {
                            ctrl
                                .$$scope
                                .$watch(function ngModelWatch() {
                                    var modelValue = ctrl.$$ngModelGet(ctrl.$$scope);
                                    if (modelValue !== ctrl.$modelValue && (ctrl.$modelValue === ctrl.$modelValue || modelValue === modelValue)) {
                                        ctrl.$modelValue = ctrl.$$rawModelValue = modelValue,
                                        ctrl.$$parserValid = void 0;
                                        for (
                                            var formatters = ctrl.$formatters,
                                            idx = formatters.length,
                                            viewValue = modelValue;
                                            idx--;
                                        ) 
                                            viewValue = formatters[idx](viewValue);
                                        ctrl.$viewValue !== viewValue && (
                                            ctrl.$$updateEmptyClasses(viewValue),
                                            ctrl.$viewValue = ctrl.$$lastCommittedViewValue = viewValue,
                                            ctrl.$render(),
                                            ctrl.$$runValidators(ctrl.$modelValue, ctrl.$viewValue, noop)
                                        )
                                    }
                                    return modelValue
                                })
                        }
                        function ModelOptions(options) {
                            this.$$options = options
                        }
                        function defaults(dst, src) {
                            forEach(src, function (value, key) {
                                isDefined(dst[key]) || (dst[key] = value)
                            })
                        }
                        var REGEX_STRING_REGEXP = /^\/(.+)\/([a-z]*)$/,
                    VALIDITY_STATE_PROPERTY = "validity",
                    hasOwnProperty = Object.prototype.hasOwnProperty,
                    lowercase = function (string) {
                                return isString(string)
                                    ? string.toLowerCase()
                                    : string
                            },
                    uppercase = function (string) {
                                return isString(string)
                                    ? string.toUpperCase()
                                    : string
                            },
                    manualLowercase = function (s) {
                                return isString(s)
                                    ? s.replace(/[A-Z]/g, function (ch) {
                                        return String.fromCharCode(32 | ch.charCodeAt(0))
                                    })
                                    : s
                            },
                    manualUppercase = function (s) {
                                return isString(s)
                                    ? s.replace(/[a-z]/g, function (ch) {
                                        return String.fromCharCode(-33 & ch.charCodeAt(0))
                                    })
                                    : s
                            };
                        "i" !== "I".toLowerCase() && (
                            lowercase = manualLowercase,
                            uppercase = manualUppercase
                        );
                        var msie,
                    jqLite,
                    jQuery,
                    angularModule,
                    slice = [].slice,
                    splice = [].splice,
                    push = [].push,
                    toString = Object.prototype.toString,
                    getPrototypeOf = Object.getPrototypeOf,
                    ngMinErr = minErr("ng"),
                    angular = window.angular || (window.angular = {}),
                    uid = 0;
                        msie = window.document.documentMode;
                        var isNumberNaN = Number.isNaN || function isNumberNaN(num) {
                            return num !== num
                        };
                        noop.$inject = [],
                    identity.$inject = [];
                        var isArray = Array.isArray,
                    TYPED_ARRAY_REGEXP = /^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/,
                    trim = function (value) {
                                return isString(value)
                                    ? value.trim()
                                    : value
                            },
                    escapeForRegexp = function (s) {
                                return s
                                    .replace(/([-()[\]{}+?*.$^|,:#<!\\])/g, "\\$1")
                                    .replace(/\x08/g, "\\x08")
                            },
                    csp = function () {
                                function noUnsafeEval() {
                                    try {
                                        return new Function(""),
                                        !1
                                    } catch (e) {
                                        return !0
                                    }
                                }
                                if (!isDefined(csp.rules)) {
                                    var ngCspElement = window
                                        .document
                                        .querySelector("[ng-csp]") || window
                                        .document
                                        .querySelector("[data-ng-csp]");
                                    if (ngCspElement) {
                                        var ngCspAttribute = ngCspElement.getAttribute("ng-csp") || ngCspElement.getAttribute(
                                            "data-ng-csp"
                                        );
                                        csp.rules = {
                                            noUnsafeEval: !ngCspAttribute || -1 !== ngCspAttribute.indexOf(
                                                "no-unsafe-eval"
                                            ),
                                            noInlineStyle: !ngCspAttribute || -1 !== ngCspAttribute.indexOf(
                                                "no-inline-style"
                                            )
                                        }
                                    } else 
                                        csp.rules = {
                                            noUnsafeEval: noUnsafeEval(),
                                            noInlineStyle: !1
                                        }
                                    }
                                return csp.rules
                            },
                    jq = function () {
                                if (isDefined(jq.name_)) 
                                    return jq.name_;
                                var el,
                                    i,
                                    prefix,
                                    name,
                                    ii = ngAttrPrefixes.length;
                                for (i = 0; i < ii; ++i) 
                                    if (prefix = ngAttrPrefixes[i], el = window.document.querySelector(
                                        "[" + prefix.replace(":", "\\:") + "jq]"
                                    )) {
                                        name = el.getAttribute(prefix + "jq");
                                        break
                                    }
                                return jq.name_ = name
                            },
                    ALL_COLONS = /:/g,
                    ngAttrPrefixes = [
                                "ng-", "data-ng-", "ng:", "x-ng-"
                            ],
                    isAutoBootstrapAllowed = allowAutoBootstrap(window.document),
                    SNAKE_CASE_REGEXP = /[A-Z]/g,
                    bindJQueryFired = !1,
                    NODE_TYPE_ELEMENT = 1,
                    NODE_TYPE_ATTRIBUTE = 2,
                    NODE_TYPE_TEXT = 3,
                    NODE_TYPE_COMMENT = 8,
                    NODE_TYPE_DOCUMENT = 9,
                    NODE_TYPE_DOCUMENT_FRAGMENT = 11,
                    version = {
                                full: "1.6.1",
                                major: 1,
                                minor: 6,
                                dot: 1,
                                codeName: "promise-rectification"
                            };
                        JQLite.expando = "ng339";
                        var jqCache = JQLite.cache = {},
                    jqId = 1;
                        JQLite._data = function (node) {
                            return this.cache[node[this.expando]] || {}
                        };
                        var DASH_LOWERCASE_REGEXP = /-([a-z])/g,
                    MS_HACK_REGEXP = /^-ms-/,
                    MOUSE_EVENT_MAP = {
                                mouseleave: "mouseout",
                                mouseenter: "mouseover"
                            },
                    jqLiteMinErr = minErr("jqLite"),
                    SINGLE_TAG_REGEXP = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,
                    HTML_REGEXP = /<|&#?\w+;/,
                    TAG_NAME_REGEXP = /<([\w:-]+)/,
                    XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
                    wrapMap = {
                                option: [
                                    1, '<select multiple="multiple">', "</select>"
                                ],
                                thead: [
                                    1, "<table>", "</table>"
                                ],
                                col: [
                                    2, "<table><colgroup>", "</colgroup></table>"
                                ],
                                tr: [
                                    2, "<table><tbody>", "</tbody></table>"
                                ],
                                td: [
                                    3, "<table><tbody><tr>", "</tr></tbody></table>"
                                ],
                                _default: [0, "", ""]
                            };
                        wrapMap.optgroup = wrapMap.option,
                    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead,
                    wrapMap.th = wrapMap.td;
                        var jqLiteContains = window.Node.prototype.contains || function (arg) {
                                return !!(16 & this.compareDocumentPosition(arg))
                            },
                    JQLitePrototype = JQLite.prototype = {
                                ready: jqLiteReady,
                                toString: function () {
                                    var value = [];
                                    return forEach(this, function (e) {
                                        value.push("" + e)
                                    }),
                                    "[" + value.join(", ") + "]"
                                },
                                eq: function (index) {
                                    return jqLite(
                                        index >= 0
                                            ? this[index]
                                            : this[this.length + index]
                                    )
                                },
                                length: 0,
                                push: push,
                                sort: [].sort,
                                splice: [].splice
                            },
                    BOOLEAN_ATTR = {};
                        forEach(
                            "multiple,selected,checked,disabled,readOnly,required,open".split(","),
                            function (value) {
                                BOOLEAN_ATTR[lowercase(value)] = value
                            }
                        );
                        var BOOLEAN_ELEMENTS = {};
                        forEach(
                            "input,select,option,textarea,button,form,details".split(","),
                            function (value) {
                                BOOLEAN_ELEMENTS[value] = !0
                            }
                        );
                        var ALIASED_ATTR = {
                            ngMinlength: "minlength",
                            ngMaxlength: "maxlength",
                            ngMin: "min",
                            ngMax: "max",
                            ngPattern: "pattern",
                            ngStep: "step"
                        };
                        forEach({
                            data: jqLiteData,
                            removeData: jqLiteRemoveData,
                            hasData: jqLiteHasData,
                            cleanData: jqLiteCleanData
                        }, function (fn, name) {
                            JQLite[name] = fn
                        }),
                    forEach({
                            data: jqLiteData,
                            inheritedData: jqLiteInheritedData,
                            scope: function (element) {
                                return jqLite.data(element, "$scope") || jqLiteInheritedData(
                                    element.parentNode || element,
                                    ["$isolateScope", "$scope"]
                                )
                            },
                            isolateScope: function (element) {
                                return jqLite.data(element, "$isolateScope") || jqLite.data(
                                    element,
                                    "$isolateScopeNoTemplate"
                                )
                            },
                            controller: jqLiteController,
                            injector: function (element) {
                                return jqLiteInheritedData(element, "$injector")
                            },
                            removeAttr: function (element, name) {
                                element.removeAttribute(name)
                            },
                            hasClass: jqLiteHasClass,
                            css: function (element, name, value) {
                                if (name = cssKebabToCamel(name), !isDefined(value)) 
                                    return element.style[name];
                                element.style[name] = value
                            },
                            attr: function (element, name, value) {
                                var ret,
                                    nodeType = element.nodeType;
                                if (nodeType !== NODE_TYPE_TEXT && nodeType !== NODE_TYPE_ATTRIBUTE && nodeType !== NODE_TYPE_COMMENT && element.getAttribute) {
                                    var lowercasedName = lowercase(name),
                                        isBooleanAttr = BOOLEAN_ATTR[lowercasedName];
                                    if (!isDefined(value)) 
                                        return ret = element.getAttribute(name),
                                        isBooleanAttr && null !== ret && (ret = lowercasedName),
                                        null === ret
                                            ? void 0
                                            : ret;
                                    null === value || !1 === value && isBooleanAttr
                                        ? element.removeAttribute(name)
                                        : element.setAttribute(
                                            name,
                                            isBooleanAttr
                                                ? lowercasedName
                                                : value
                                        )
                                }
                            },
                            prop: function (element, name, value) {
                                if (!isDefined(value)) 
                                    return element[name];
                                element[name] = value
                            },
                            text: function () {
                                function getText(element, value) {
                                    if (isUndefined(value)) {
                                        var nodeType = element.nodeType;
                                        return nodeType === NODE_TYPE_ELEMENT || nodeType === NODE_TYPE_TEXT
                                            ? element.textContent
                                            : ""
                                    }
                                    element.textContent = value
                                }
                                return getText.$dv = "",
                                getText
                            }(),
                            val: function (element, value) {
                                if (isUndefined(value)) {
                                    if (element.multiple && "select" === nodeName_(element)) {
                                        var result = [];
                                        return forEach(element.options, function (option) {
                                            option.selected && result.push(option.value || option.text)
                                        }),
                                        result
                                    }
                                    return element.value
                                }
                                element.value = value
                            },
                            html: function (element, value) {
                                if (isUndefined(value)) 
                                    return element.innerHTML;
                                jqLiteDealoc(element, !0),
                                element.innerHTML = value
                            },
                            empty: jqLiteEmpty
                        }, function (fn, name) {
                            JQLite.prototype[name] = function (arg1, arg2) {
                                var i,
                                    key,
                                    nodeCount = this.length;
                                if (fn !== jqLiteEmpty && isUndefined(
                                    2 === fn.length && fn !== jqLiteHasClass && fn !== jqLiteController
                                        ? arg1
                                        : arg2
                                )) {
                                    if (isObject(arg1)) {
                                        for (i = 0; i < nodeCount; i++) 
                                            if (fn === jqLiteData) 
                                                fn(this[i], arg1);
                                            else 
                                                for (key in arg1) 
                                                    fn(this[i], key, arg1[key]);
                                    return this
                                    }
                                    for (
                                        var value = fn.$dv,
                                        jj = isUndefined(value)
                                            ? Math.min(nodeCount, 1)
                                            : nodeCount,
                                        j = 0; j < jj; j++
                                    ) {
                                        var nodeValue = fn(this[j], arg1, arg2);
                                        value = value
                                            ? value + nodeValue
                                            : nodeValue
                                    }
                                    return value
                                }
                                for (i = 0; i < nodeCount; i++) 
                                    fn(this[i], arg1, arg2);
                                return this
                            }
                        }),
                    forEach({
                            removeData: jqLiteRemoveData,
                            on: function jqLiteOn(element, type, fn, unsupported) {
                                if (isDefined(unsupported)) 
                                    throw jqLiteMinErr(
                                        "onargs",
                                        "jqLite#on() does not support the `selector` or `eventData` parameters"
                                    );
                                if (jqLiteAcceptsData(element)) {
                                    var expandoStore = jqLiteExpandoStore(element, !0),
                                        events = expandoStore.events,
                                        handle = expandoStore.handle;
                                    handle || (handle = expandoStore.handle = createEventHandler(element, events));
                                    for (
                                        var types = type.indexOf(" ") >= 0
                                            ? type.split(" ")
                                            : [type],
                                        i = types.length,
                                        addHandler = function (type, specialHandlerWrapper, noEventListener) {
                                            var eventFns = events[type];
                                            eventFns || (
                                                eventFns = events[type] = [],
                                                eventFns.specialHandlerWrapper = specialHandlerWrapper,
                                                "$destroy" === type || noEventListener || element.addEventListener(type, handle)
                                            ),
                                            eventFns.push(fn)
                                        }; i--;
                                    ) 
                                        type = types[i],
                                        MOUSE_EVENT_MAP[type]
                                            ? (
                                                addHandler(MOUSE_EVENT_MAP[type], specialMouseHandlerWrapper),
                                                addHandler(type, void 0, !0)
                                            )
                                            : addHandler(type)
                                    }
                            },
                            off: jqLiteOff,
                            one: function (element, type, fn) {
                                element = jqLite(element),
                                element.on(type, function onFn() {
                                    element.off(type, fn),
                                    element.off(type, onFn)
                                }),
                                element.on(type, fn)
                            },
                            replaceWith: function (element, replaceNode) {
                                var index,
                                    parent = element.parentNode;
                                jqLiteDealoc(element),
                                forEach(new JQLite(replaceNode), function (node) {
                                    index
                                        ? parent.insertBefore(node, index.nextSibling)
                                        : parent.replaceChild(node, element),
                                    index = node
                                })
                            },
                            children: function (element) {
                                var children = [];
                                return forEach(element.childNodes, function (element) {
                                    element.nodeType === NODE_TYPE_ELEMENT && children.push(element)
                                }),
                                children
                            },
                            contents: function (element) {
                                return element.contentDocument || element.childNodes || []
                            },
                            append: function (element, node) {
                                var nodeType = element.nodeType;
                                if (nodeType === NODE_TYPE_ELEMENT || nodeType === NODE_TYPE_DOCUMENT_FRAGMENT) {
                                    node = new JQLite(node);
                                    for (var i = 0, ii = node.length; i < ii; i++) {
                                        var child = node[i];
                                        element.appendChild(child)
                                    }
                                }
                            },
                            prepend: function (element, node) {
                                if (element.nodeType === NODE_TYPE_ELEMENT) {
                                    var index = element.firstChild;
                                    forEach(new JQLite(node), function (child) {
                                        element.insertBefore(child, index)
                                    })
                                }
                            },
                            wrap: function (element, wrapNode) {
                                jqLiteWrapNode(element, jqLite(wrapNode).eq(0).clone()[0])
                            },
                            remove: jqLiteRemove,
                            detach: function (element) {
                                jqLiteRemove(element, !0)
                            },
                            after: function (element, newElement) {
                                var index = element,
                                    parent = element.parentNode;
                                if (parent) {
                                    newElement = new JQLite(newElement);
                                    for (var i = 0, ii = newElement.length; i < ii; i++) {
                                        var node = newElement[i];
                                        parent.insertBefore(node, index.nextSibling),
                                        index = node
                                    }
                                }
                            },
                            addClass: jqLiteAddClass,
                            removeClass: jqLiteRemoveClass,
                            toggleClass: function (element, selector, condition) {
                                selector && forEach(selector.split(" "), function (className) {
                                    var classCondition = condition;
                                    isUndefined(classCondition) && (
                                        classCondition = !jqLiteHasClass(element, className)
                                    ),
                                    (
                                        classCondition
                                            ? jqLiteAddClass
                                            : jqLiteRemoveClass
                                    )(element, className)
                                })
                            },
                            parent: function (element) {
                                var parent = element.parentNode;
                                return parent && parent.nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT
                                    ? parent
                                    : null
                            },
                            next: function (element) {
                                return element.nextElementSibling
                            },
                            find: function (element, selector) {
                                return element.getElementsByTagName
                                    ? element.getElementsByTagName(selector)
                                    : []
                            },
                            clone: jqLiteClone,
                            triggerHandler: function (element, event, extraParameters) {
                                var dummyEvent,
                                    eventFnsCopy,
                                    handlerArgs,
                                    eventName = event.type || event,
                                    expandoStore = jqLiteExpandoStore(element),
                                    events = expandoStore && expandoStore.events,
                                    eventFns = events && events[eventName];
                                eventFns && (
                                    dummyEvent = {
                                        preventDefault: function () {
                                            this.defaultPrevented = !0
                                        },
                                        isDefaultPrevented: function () {
                                            return !0 === this.defaultPrevented
                                        },
                                        stopImmediatePropagation: function () {
                                            this.immediatePropagationStopped = !0
                                        },
                                        isImmediatePropagationStopped: function () {
                                            return !0 === this.immediatePropagationStopped
                                        },
                                        stopPropagation: noop,
                                        type: eventName,
                                        target: element
                                    },
                                    event.type && (dummyEvent = extend(dummyEvent, event)),
                                    eventFnsCopy = shallowCopy(eventFns),
                                    handlerArgs = extraParameters
                                        ? [dummyEvent].concat(extraParameters)
                                        : [dummyEvent],
                                    forEach(eventFnsCopy, function (fn) {
                                        dummyEvent.isImmediatePropagationStopped() || fn.apply(element, handlerArgs)
                                    })
                                )
                            }
                        }, function (fn, name) {
                            JQLite.prototype[name] = function (arg1, arg2, arg3) {
                                for (var value, i = 0, ii = this.length; i < ii; i++) 
                                    isUndefined(value)
                                        ? (
                                            value = fn(this[i], arg1, arg2, arg3),
                                            isDefined(value) && (value = jqLite(value))
                                        )
                                        : jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));
                                return isDefined(value)
                                    ? value
                                    : this
                            }
                        }),
                    JQLite.prototype.bind = JQLite.prototype.on,
                    JQLite.prototype.unbind = JQLite.prototype.off,
                    HashMap.prototype = {
                            put: function (key, value) {
                                this[hashKey(key, this.nextUid)] = value
                            },
                            get: function (key) {
                                return this[hashKey(key, this.nextUid)]
                            },
                            remove: function (key) {
                                var value = this[key = hashKey(key, this.nextUid)];
                                return delete this[key],
                                value
                            }
                        };
                        var $$HashMapProvider = [function () {
                                    this.$get = [function () {
                                            return HashMap
                                        }
                                    ]
                                }
                            ],
                    ARROW_ARG = /^([^(]+?)=>/,
                    FN_ARGS = /^[^(]*\(\s*([^)]*)\)/m,
                    FN_ARG_SPLIT = /,/,
                    FN_ARG = /^\s*(_?)(\S+?)\1\s*$/,
                    STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,
                    $injectorMinErr = minErr("$injector");
                        createInjector.$$annotate = annotate;
                        var $animateMinErr = minErr("$animate"),
                    ELEMENT_NODE = 1,
                    NG_ANIMATE_CLASSNAME = "ng-animate",
                    $$CoreAnimateJsProvider = function () {
                                this.$get = noop
                            },
                    $$CoreAnimateQueueProvider = function () {
                                var postDigestQueue = new HashMap,
                                    postDigestElements = [];
                                this.$get = [
                                    "$$AnimateRunner",
                                    "$rootScope",
                                    function ($$AnimateRunner, $rootScope) {
                                        function updateData(data, classes, value) {
                                            var changed = !1;
                                            return classes && (
                                                classes = isString(classes)
                                                    ? classes.split(" ")
                                                    : isArray(classes)
                                                        ? classes
                                                        : [],
                                                forEach(classes, function (className) {
                                                    className && (changed = !0, data[className] = value)
                                                })
                                            ),
                                            changed
                                        }
                                        function handleCSSClassChanges() {
                                            forEach(postDigestElements, function (element) {
                                                var data = postDigestQueue.get(element);
                                                if (data) {
                                                    var existing = splitClasses(element.attr("class")),
                                                        toAdd = "",
                                                        toRemove = "";
                                                    forEach(data, function (status, className) {
                                                        status !== !!existing[className] && (
                                                            status
                                                                ? toAdd += (
                                                                    toAdd.length
                                                                        ? " "
                                                                        : ""
                                                                ) + className
                                                                : toRemove += (
                                                                    toRemove.length
                                                                        ? " "
                                                                        : ""
                                                                ) + className
                                                        )
                                                    }),
                                                    forEach(element, function (elm) {
                                                        toAdd && jqLiteAddClass(elm, toAdd),
                                                        toRemove && jqLiteRemoveClass(elm, toRemove)
                                                    }),
                                                    postDigestQueue.remove(element)
                                                }
                                            }),
                                            postDigestElements.length = 0
                                        }
                                        function addRemoveClassesPostDigest(element, add, remove) {
                                            var data = postDigestQueue.get(element) || {},
                                                classesAdded = updateData(data, add, !0),
                                                classesRemoved = updateData(data, remove, !1);
                                            (classesAdded || classesRemoved) && (
                                                postDigestQueue.put(element, data),
                                                postDigestElements.push(element),
                                                1 === postDigestElements.length && $rootScope.$$postDigest(handleCSSClassChanges)
                                            )
                                        }
                                        return {
                                            enabled: noop,
                                            on: noop,
                                            off: noop,
                                            pin: noop,
                                            push: function (element, event, options, domOperation) {
                                                domOperation && domOperation(),
                                                options = options || {},
                                                options.from && element.css(options.from),
                                                options.to && element.css(options.to),
                                                (options.addClass || options.removeClass) && addRemoveClassesPostDigest(
                                                    element,
                                                    options.addClass,
                                                    options.removeClass
                                                );
                                                var runner = new $$AnimateRunner;
                                                return runner.complete(),
                                                runner
                                            }
                                        }
                                    }
                                ]
                            },
                    $AnimateProvider = [
                                "$provide",
                                function ($provide) {
                                    var provider = this;
                                    this.$$registeredAnimations = Object.create(null),
                                    this.register = function (name, factory) {
                                        if (name && "." !== name.charAt(0)) 
                                            throw $animateMinErr(
                                                "notcsel",
                                                "Expecting class selector starting with '.' got '{0}'.",
                                                name
                                            );
                                        var key = name + "-animation";
                                        provider.$$registeredAnimations[name.substr(1)] = key,
                                        $provide.factory(key, factory)
                                    },
                                    this.classNameFilter = function (expression) {
                                        if (1 === arguments.length && (
                                            this.$$classNameFilter = expression instanceof RegExp
                                                ? expression
                                                : null,
                                            this.$$classNameFilter
                                        )) {
                                            if (new RegExp("(\\s+|\\/)" + NG_ANIMATE_CLASSNAME + "(\\s+|\\/)").test(this.$$classNameFilter.toString())) 
                                                throw $animateMinErr(
                                                    "nongcls",
                                                    '$animateProvider.classNameFilter(regex) prohibits accepting a regex value whic' +
                                                            'h matches/contains the "{0}" CSS class.',
                                                    NG_ANIMATE_CLASSNAME
                                                )
                                        }
                                        return this.$$classNameFilter
                                    },
                                    this.$get = [
                                        "$$animateQueue",
                                        function ($$animateQueue) {
                                            function domInsert(element, parentElement, afterElement) {
                                                if (afterElement) {
                                                    var afterNode = extractElementNode(afterElement);
                                                    !afterNode || afterNode.parentNode || afterNode.previousElementSibling || (
                                                        afterElement = null
                                                    )
                                                }
                                                afterElement
                                                    ? afterElement.after(element)
                                                    : parentElement.prepend(element)
                                            }
                                            return {
                                                on: $$animateQueue.on,
                                                off: $$animateQueue.off,
                                                pin: $$animateQueue.pin,
                                                enabled: $$animateQueue.enabled,
                                                cancel: function (runner) {
                                                    runner.end && runner.end()
                                                },
                                                enter: function (element, parent, after, options) {
                                                    return parent = parent && jqLite(parent),
                                                    after = after && jqLite(after),
                                                    parent = parent || after.parent(),
                                                    domInsert(element, parent, after),
                                                    $$animateQueue.push(element, "enter", prepareAnimateOptions(options))
                                                },
                                                move: function (element, parent, after, options) {
                                                    return parent = parent && jqLite(parent),
                                                    after = after && jqLite(after),
                                                    parent = parent || after.parent(),
                                                    domInsert(element, parent, after),
                                                    $$animateQueue.push(element, "move", prepareAnimateOptions(options))
                                                },
                                                leave: function (element, options) {
                                                    return $$animateQueue.push(
                                                        element,
                                                        "leave",
                                                        prepareAnimateOptions(options),
                                                        function () {
                                                            element.remove()
                                                        }
                                                    )
                                                },
                                                addClass: function (element, className, options) {
                                                    return options = prepareAnimateOptions(options),
                                                    options.addClass = mergeClasses(options.addclass, className),
                                                    $$animateQueue.push(element, "addClass", options)
                                                },
                                                removeClass: function (element, className, options) {
                                                    return options = prepareAnimateOptions(options),
                                                    options.removeClass = mergeClasses(options.removeClass, className),
                                                    $$animateQueue.push(element, "removeClass", options)
                                                },
                                                setClass: function (element, add, remove, options) {
                                                    return options = prepareAnimateOptions(options),
                                                    options.addClass = mergeClasses(options.addClass, add),
                                                    options.removeClass = mergeClasses(options.removeClass, remove),
                                                    $$animateQueue.push(element, "setClass", options)
                                                },
                                                animate: function (element, from, to, className, options) {
                                                    return options = prepareAnimateOptions(options),
                                                    options.from = options.from
                                                        ? extend(options.from, from)
                                                        : from,
                                                    options.to = options.to
                                                        ? extend(options.to, to)
                                                        : to,
                                                    className = className || "ng-inline-animate",
                                                    options.tempClasses = mergeClasses(options.tempClasses, className),
                                                    $$animateQueue.push(element, "animate", options)
                                                }
                                            }
                                        }
                                    ]
                                }
                            ],
                    $$AnimateAsyncRunFactoryProvider = function () {
                                this.$get = [
                                    "$$rAF",
                                    function ($$rAF) {
                                        function waitForTick(fn) {
                                            waitQueue.push(fn),
                                            waitQueue.length > 1 || $$rAF(function () {
                                                for (var i = 0; i < waitQueue.length; i++) 
                                                    waitQueue[i]();
                                                waitQueue = []
                                            })
                                        }
                                        var waitQueue = [];
                                        return function () {
                                            var passed = !1;
                                            return waitForTick(function () {
                                                passed = !0
                                            }),
                                            function (callback) {
                                                passed
                                                    ? callback()
                                                    : waitForTick(callback)
                                            }
                                        }
                                    }
                                ]
                            },
                    $$AnimateRunnerFactoryProvider = function () {
                                this.$get = [
                                    "$q",
                                    "$sniffer",
                                    "$$animateAsyncRun",
                                    "$$isDocumentHidden",
                                    "$timeout",
                                    function ($q, $sniffer, $$animateAsyncRun, $$isDocumentHidden, $timeout) {
                                        function AnimateRunner(host) {
                                            this.setHost(host);
                                            var rafTick = $$animateAsyncRun(),
                                                timeoutTick = function (fn) {
                                                    $timeout(fn, 0, !1)
                                                };
                                            this._doneCallbacks = [],
                                            this._tick = function (fn) {
                                                $$isDocumentHidden()
                                                    ? timeoutTick(fn)
                                                    : rafTick(fn)
                                            },
                                            this._state = 0
                                        }
                                        var DONE_COMPLETE_STATE = 2;
                                        return AnimateRunner.chain = function (chain, callback) {
                                            function next() {
                                                if (index === chain.length) 
                                                    return void callback(!0);
                                                chain[index](function (response) {
                                                    if (!1 === response) 
                                                        return void callback(!1);
                                                    index++,
                                                    next()
                                                })
                                            }
                                            var index = 0;
                                            next()
                                        },
                                        AnimateRunner.all = function (runners, callback) {
                                            function onProgress(response) {
                                                status = status && response,
                                                ++count === runners.length && callback(status)
                                            }
                                            var count = 0,
                                                status = !0;
                                            forEach(runners, function (runner) {
                                                runner.done(onProgress)
                                            })
                                        },
                                        AnimateRunner.prototype = {
                                            setHost: function (host) {
                                                this.host = host || {}
                                            },
                                            done: function (fn) {
                                                this._state === DONE_COMPLETE_STATE
                                                    ? fn()
                                                    : this
                                                        ._doneCallbacks
                                                        .push(fn)
                                            },
                                            progress: noop,
                                            getPromise: function () {
                                                if (!this.promise) {
                                                    var self = this;
                                                    this.promise = $q(function (resolve, reject) {
                                                        self.done(function (status) {
                                                            !1 === status
                                                                ? reject()
                                                                : resolve()
                                                        })
                                                    })
                                                }
                                                return this.promise
                                            },
                                            then: function (resolveHandler, rejectHandler) {
                                                return this
                                                    .getPromise()
                                                    .then(resolveHandler, rejectHandler)
                                            }, catch  : function (handler) {
                                                return this
                                                    .getPromise()
                                                    .catch(handler)
                                                }, finally : function (handler) {
                                                return this
                                                    .getPromise()
                                                    . finally(handler)
                                            }, pause : function () {
                                                this.host.pause && this
                                                    .host
                                                    .pause()
                                            }, resume : function () {
                                                this.host.resume && this
                                                    .host
                                                    .resume()
                                            }, end : function () {
                                                this.host.end && this
                                                    .host
                                                    .end(),
                                                this._resolve(!0)
                                            }, cancel : function () {
                                                this.host.cancel && this
                                                    .host
                                                    .cancel(),
                                                this._resolve(!1)
                                            }, complete : function (response) {
                                                var self = this;
                                                0 === self._state && (self._state = 1, self._tick(function () {
                                                    self._resolve(response)
                                                }))
                                            }, _resolve : function (response) {
                                                this._state !== DONE_COMPLETE_STATE && (
                                                    forEach(this._doneCallbacks, function (fn) {
                                                        fn(response)
                                                    }),
                                                    this._doneCallbacks.length = 0,
                                                    this._state = DONE_COMPLETE_STATE
                                                )
                                            }
                                        },
                                        AnimateRunner
                                    }
                                ]
                            },
                            $CoreAnimateCssProvider = function () {
                                this.$get = [
                                    "$$rAF",
                                    "$q",
                                    "$$AnimateRunner",
                                    function ($$rAF, $q, $$AnimateRunner) {
                                        return function (element, initialOptions) {
                                            function run() {
                                                return $$rAF(function () {
                                                    applyAnimationContents(),
                                                    closed || runner.complete(),
                                                    closed = !0
                                                }),
                                                runner
                                            }
                                            function applyAnimationContents() {
                                                options.addClass && (
                                                    element.addClass(options.addClass),
                                                    options.addClass = null
                                                ),
                                                options.removeClass && (
                                                    element.removeClass(options.removeClass),
                                                    options.removeClass = null
                                                ),
                                                options.to && (element.css(options.to), options.to = null)
                                            }
                                            var options = initialOptions || {};
                                            options.$$prepared || (options = copy(options)),
                                            options.cleanupStyles && (options.from = options.to = null),
                                            options.from && (element.css(options.from), options.from = null);
                                            var closed,
                                                runner = new $$AnimateRunner;
                                            return {start: run, end: run}
                                        }
                                    }
                                ]
                            },
                            $compileMinErr = minErr("$compile"),
                            _UNINITIALIZED_VALUE = new UNINITIALIZED_VALUE;
                        $CompileProvider.$inject = [
                            "$provide", "$$sanitizeUriProvider"
                        ],
                        SimpleChange.prototype.isFirstChange = function () {
                            return this.previousValue === _UNINITIALIZED_VALUE
                        };
                        var PREFIX_REGEXP = /^((?:x|data)[:\-_])/i,
                            SPECIAL_CHARS_REGEXP = /[:\-_]+(.)/g,
                            $controllerMinErr = minErr("$controller"),
                            CNTRL_REG = /^(\S+)(\s+as\s+([\w$]+))?$/,
                            $$ForceReflowProvider = function () {
                                this.$get = [
                                    "$document",
                                    function ($document) {
                                        return function (domNode) {
                                            return domNode
                                                ? !domNode.nodeType && domNode instanceof jqLite && (domNode = domNode[0])
                                                : domNode = $document[0].body,
                                            domNode.offsetWidth + 1
                                        }
                                    }
                                ]
                            },
                            APPLICATION_JSON = "application/json",
                            CONTENT_TYPE_APPLICATION_JSON = {
                                "Content-Type": APPLICATION_JSON + ";charset=utf-8"
                            },
                            JSON_START = /^\[|^\{(?!\{)/,
                            JSON_ENDS = {
                                "[": /]$/,
                                "{": /}$/
                            },
                            JSON_PROTECTION_PREFIX = /^\)]\}',?\n/,
                            $httpMinErr = minErr("$http"),
                            $interpolateMinErr = angular.$interpolateMinErr = minErr("$interpolate");
                        $interpolateMinErr.throwNoconcat = function (text) {
                            throw $interpolateMinErr(
                                "noconcat",
                                "Error while interpolating: {0}\nStrict Contextual Escaping disallows interpola" +
                                    "tions that concatenate multiple expressions when a trusted value is required. " +
                                    " See http://docs.angularjs.org/api/ng.$sce",
                                text
                            )
                        },
                        $interpolateMinErr.interr = function (text, err) {
                            return $interpolateMinErr(
                                "interr",
                                "Can't interpolate: {0}\n{1}",
                                text,
                                err.toString()
                            )
                        };
                        var $jsonpCallbacksProvider = function () {
                                this.$get = [
                                    "$window",
                                    function ($window) {
                                        function createCallback(callbackId) {
                                            var callback = function (data) {
                                                callback.data = data,
                                                callback.called = !0
                                            };
                                            return callback.id = callbackId,
                                            callback
                                        }
                                        var callbacks = $window.angular.callbacks,
                                            callbackMap = {};
                                        return {
                                            createCallback: function (url) {
                                                var callbackId = "_" + (
                                                        callbacks.$$counter++
                                                    ).toString(36),
                                                    callbackPath = "angular.callbacks." + callbackId,
                                                    callback = createCallback(callbackId);
                                                return callbackMap[callbackPath] = callbacks[callbackId] = callback,
                                                callbackPath
                                            },
                                            wasCalled: function (callbackPath) {
                                                return callbackMap[callbackPath].called
                                            },
                                            getResponse: function (callbackPath) {
                                                return callbackMap[callbackPath].data
                                            },
                                            removeCallback: function (callbackPath) {
                                                var callback = callbackMap[callbackPath];
                                                delete callbacks[callback.id],
                                                delete callbackMap[callbackPath]
                                            }
                                        }
                                    }
                                ]
                            },
                            PATH_MATCH = /^([^?#]*)(\?([^#]*))?(#(.*))?$/,
                            DEFAULT_PORTS = {
                                http: 80,
                                https: 443,
                                ftp: 21
                            },
                            $locationMinErr = minErr("$location"),
                            DOUBLE_SLASH_REGEX = /^\s*[\\\/]{2,}/,
                            locationPrototype = {
                                $$absUrl: "",
                                $$html5: !1,
                                $$replace: !1,
                                absUrl: locationGetter("$$absUrl"),
                                url: function (url) {
                                    if (isUndefined(url)) 
                                        return this.$$url;
                                    var match = PATH_MATCH.exec(url);
                                    return (match[1] || "" === url) && this.path(decodeURIComponent(match[1])),
                                    (match[2] || match[1] || "" === url) && this.search(match[3] || ""),
                                    this.hash(match[5] || ""),
                                    this
                                },
                                protocol: locationGetter("$$protocol"),
                                host: locationGetter("$$host"),
                                port: locationGetter("$$port"),
                                path: locationGetterSetter("$$path", function (path) {
                                    return path = null !== path
                                        ? path.toString()
                                        : "",
                                    "/" === path.charAt(0)
                                        ? path
                                        : "/" + path
                                }),
                                search: function (search, paramValue) {
                                    switch (arguments.length) {
                                        case 0:
                                            return this.$$search;
                                        case 1:
                                            if (isString(search) || isNumber(search)) 
                                                search = search.toString(),
                                                this.$$search = parseKeyValue(search);
                                            else {
                                                if (!isObject(search)) 
                                                    throw $locationMinErr(
                                                        "isrcharg",
                                                        "The first argument of the `$location#search()` call must be a string or an obj" +
                                                            "ect."
                                                    );
                                                search = copy(search, {}),
                                                forEach(search, function (value, key) {
                                                    null == value && delete search[key]
                                                }),
                                                this.$$search = search
                                            }
                                            break;
                                        default:
                                            isUndefined(paramValue) || null === paramValue
                                                ? delete this.$$search[search]
                                                : this.$$search[search] = paramValue
                                    }
                                    return this.$$compose(),
                                    this
                                },
                                hash: locationGetterSetter("$$hash", function (hash) {
                                    return null !== hash
                                        ? hash.toString()
                                        : ""
                                }),
                                replace: function () {
                                    return this.$$replace = !0,
                                    this
                                }
                            };
                        forEach([
                            LocationHashbangInHtml5Url, LocationHashbangUrl, LocationHtml5Url
                        ], function (Location) {
                            Location.prototype = Object.create(locationPrototype),
                            Location.prototype.state = function (state) {
                                if (!arguments.length) 
                                    return this.$$state;
                                if (Location !== LocationHtml5Url || !this.$$html5) 
                                    throw $locationMinErr(
                                        "nostate",
                                        "History API state support is available only in HTML5 mode and only in browsers" +
                                            " supporting HTML5 History API"
                                    );
                                return this.$$state = isUndefined(state)
                                    ? null
                                    : state,
                                this
                            }
                        });
                        var $parseMinErr = minErr("$parse"),
                            objectValueOf = {}.constructor.prototype.valueOf,
                            OPERATORS = createMap();
                        forEach(
                            "+ - * / % === !== == != < > <= >= && || ! = |".split(" "),
                            function (operator) {
                                OPERATORS[operator] = !0
                            }
                        );
                        var ESCAPE = {
                                n: "\n",
                                f: "\f",
                                r: "\r",
                                t: "\t",
                                v: "\v",
                                "'": "'",
                                '"': '"'
                            },
                            Lexer = function Lexer(options) {
                                this.options = options
                            };
                        Lexer.prototype = {
                            constructor: Lexer,
                            lex: function (text) {
                                for (
                                    this.text = text,
                                    this.index = 0,
                                    this.tokens = [];
                                    this.index < this.text.length;
                                ) {
                                    var ch = this
                                        .text
                                        .charAt(this.index);
                                    if ('"' === ch || "'" === ch) 
                                        this.readString(ch);
                                    else if (this.isNumber(ch) || "." === ch && this.isNumber(this.peek())) 
                                        this.readNumber();
                                    else if (this.isIdentifierStart(this.peekMultichar())) 
                                        this.readIdent();
                                    else if (this.is(ch, "(){}[].,;:?")) 
                                        this
                                            .tokens
                                            .push({index: this.index, text: ch}),
                                        this.index++;
                                    else if (this.isWhitespace(ch)) 
                                        this.index++;
                                    else {
                                        var ch2 = ch + this.peek(),
                                            ch3 = ch2 + this.peek(2),
                                            op1 = OPERATORS[ch],
                                            op2 = OPERATORS[ch2],
                                            op3 = OPERATORS[ch3];
                                        if (op1 || op2 || op3) {
                                            var token = op3
                                                ? ch3
                                                : op2
                                                    ? ch2
                                                    : ch;
                                            this
                                                .tokens
                                                .push({
                                                    index: this.index,
                                                    text: token,
                                                    operator: !0
                                                }),
                                            this.index += token.length
                                        } else 
                                            this.throwError("Unexpected next character ", this.index, this.index + 1)
                                    }
                                }
                                return this.tokens
                            },
                            is: function (ch, chars) {
                                return -1 !== chars.indexOf(ch)
                            },
                            peek: function (i) {
                                var num = i || 1;
                                return this.index + num < this.text.length && this
                                    .text
                                    .charAt(this.index + num)
                            },
                            isNumber: function (ch) {
                                return "0" <= ch && ch <= "9" && "string" == typeof ch
                            },
                            isWhitespace: function (ch) {
                                return " " === ch || "\r" === ch || "\t" === ch || "\n" === ch || "\v" === ch || " " === ch
                            },
                            isIdentifierStart: function (ch) {
                                return this.options.isIdentifierStart
                                    ? this
                                        .options
                                        .isIdentifierStart(ch, this.codePointAt(ch))
                                    : this.isValidIdentifierStart(ch)
                            },
                            isValidIdentifierStart: function (ch) {
                                return "a" <= ch && ch <= "z" || "A" <= ch && ch <= "Z" || "_" === ch || "$" === ch
                            },
                            isIdentifierContinue: function (ch) {
                                return this.options.isIdentifierContinue
                                    ? this
                                        .options
                                        .isIdentifierContinue(ch, this.codePointAt(ch))
                                    : this.isValidIdentifierContinue(ch)
                            },
                            isValidIdentifierContinue: function (ch, cp) {
                                return this.isValidIdentifierStart(ch, cp) || this.isNumber(ch)
                            },
                            codePointAt: function (ch) {
                                return 1 === ch.length
                                    ? ch.charCodeAt(0)
                                    : (ch.charCodeAt(0) << 10) + ch.charCodeAt(1) - 56613888
                            },
                            peekMultichar: function () {
                                var ch = this
                                        .text
                                        .charAt(this.index),
                                    peek = this.peek();
                                if (!peek) 
                                    return ch;
                                var cp1 = ch.charCodeAt(0),
                                    cp2 = peek.charCodeAt(0);
                                return cp1 >= 55296 && cp1 <= 56319 && cp2 >= 56320 && cp2 <= 57343
                                    ? ch + peek
                                    : ch
                            },
                            isExpOperator: function (ch) {
                                return "-" === ch || "+" === ch || this.isNumber(ch)
                            },
                            throwError: function (error, start, end) {
                                end = end || this.index;
                                var colStr = isDefined(start)
                                    ? "s " + start + "-" + this.index + " [" + this
                                        .text
                                        .substring(start, end) + "]"
                                    : " " + end;
                                throw $parseMinErr(
                                    "lexerr",
                                    "Lexer Error: {0} at column{1} in expression [{2}].",
                                    error,
                                    colStr,
                                    this.text
                                )
                            },
                            readNumber: function () {
                                for (var number = "", start = this.index; this.index < this.text.length;) {
                                    var ch = lowercase(this.text.charAt(this.index));
                                    if ("." === ch || this.isNumber(ch)) 
                                        number += ch;
                                    else {
                                        var peekCh = this.peek();
                                        if ("e" === ch && this.isExpOperator(peekCh)) 
                                            number += ch;
                                        else if (this.isExpOperator(ch) && peekCh && this.isNumber(peekCh) && "e" === number.charAt(number.length - 1)) 
                                            number += ch;
                                        else {
                                            if (!this.isExpOperator(ch) || peekCh && this.isNumber(peekCh) || "e" !== number.charAt(number.length - 1)) 
                                                break;
                                            this.throwError("Invalid exponent")
                                        }
                                    }
                                    this.index++
                                }
                                this
                                    .tokens
                                    .push({
                                        index: start,
                                        text: number,
                                        constant: !0,
                                        value: Number(number)
                                    })
                            },
                            readIdent: function () {
                                var start = this.index;
                                for (this.index += this.peekMultichar().length; this.index < this.text.length;) {
                                    var ch = this.peekMultichar();
                                    if (!this.isIdentifierContinue(ch)) 
                                        break;
                                    this.index += ch.length
                                }
                                this
                                    .tokens
                                    .push({
                                        index: start,
                                        text: this
                                            .text
                                            .slice(start, this.index),
                                        identifier: !0
                                    })
                            },
                            readString: function (quote) {
                                var start = this.index;
                                this.index++;
                                for (
                                    var string = "",
                                    rawString = quote,
                                    escape = !1;
                                    this.index < this.text.length;
                                ) {
                                    var ch = this
                                        .text
                                        .charAt(this.index);
                                    if (rawString += ch, escape) {
                                        if ("u" === ch) {
                                            var hex = this
                                                .text
                                                .substring(this.index + 1, this.index + 5);
                                            hex.match(/[\da-f]{4}/i) || this.throwError(
                                                "Invalid unicode escape [\\u" + hex + "]"
                                            ),
                                            this.index += 4,
                                            string += String.fromCharCode(parseInt(hex, 16))
                                        } else {
                                            string += ESCAPE[ch] || ch
                                        }
                                        escape = !1
                                    } else if ("\\" === ch) 
                                        escape = !0;
                                    else {
                                        if (ch === quote) 
                                            return this.index++,
                                            void this
                                                .tokens
                                                .push({
                                                    index: start,
                                                    text: rawString,
                                                    constant: !0,
                                                    value: string
                                                });
                                        string += ch
                                    }
                                    this.index++
                                }
                                this.throwError("Unterminated quote", start)
                            }
                        };
                        var AST = function AST(lexer, options) {
                            this.lexer = lexer,
                            this.options = options
                        };
                        AST.Program = "Program",
                        AST.ExpressionStatement = "ExpressionStatement",
                        AST.AssignmentExpression = "AssignmentExpression",
                        AST.ConditionalExpression = "ConditionalExpression",
                        AST.LogicalExpression = "LogicalExpression",
                        AST.BinaryExpression = "BinaryExpression",
                        AST.UnaryExpression = "UnaryExpression",
                        AST.CallExpression = "CallExpression",
                        AST.MemberExpression = "MemberExpression",
                        AST.Identifier = "Identifier",
                        AST.Literal = "Literal",
                        AST.ArrayExpression = "ArrayExpression",
                        AST.Property = "Property",
                        AST.ObjectExpression = "ObjectExpression",
                        AST.ThisExpression = "ThisExpression",
                        AST.LocalsExpression = "LocalsExpression",
                        AST.NGValueParameter = "NGValueParameter",
                        AST.prototype = {
                            ast: function (text) {
                                this.text = text,
                                this.tokens = this
                                    .lexer
                                    .lex(text);
                                var value = this.program();
                                return 0 !== this.tokens.length && this.throwError(
                                    "is an unexpected token",
                                    this.tokens[0]
                                ),
                                value
                            },
                            program: function () {
                                for (var body = [];;) 
                                    if (
                                        this.tokens.length > 0 && !this.peek("}", ")", ";", "]") && body.push(this.expressionStatement()),
                                        !this.expect(";")
                                    ) 
                                        return {type: AST.Program, body: body}
                                    },
                            expressionStatement: function () {
                                return {type: AST.ExpressionStatement, expression: this.filterChain()}
                            },
                            filterChain: function () {
                                for (var left = this.expression(); this.expect("|");) 
                                    left = this.filter(left);
                                return left
                            },
                            expression: function () {
                                return this.assignment()
                            },
                            assignment: function () {
                                var result = this.ternary();
                                if (this.expect("=")) {
                                    if (!isAssignable(result)) 
                                        throw $parseMinErr("lval", "Trying to assign a value to a non l-value");
                                    result = {
                                        type: AST.AssignmentExpression,
                                        left: result,
                                        right: this.assignment(),
                                        operator: "="
                                    }
                                }
                                return result
                            },
                            ternary: function () {
                                var alternate,
                                    consequent,
                                    test = this.logicalOR();
                                return this.expect("?") && (alternate = this.expression(), this.consume(":"))
                                    ? (consequent = this.expression(), {
                                        type: AST.ConditionalExpression,
                                        test: test,
                                        alternate: alternate,
                                        consequent: consequent
                                    })
                                    : test
                            },
                            logicalOR: function () {
                                for (var left = this.logicalAND(); this.expect("||");) 
                                    left = {
                                        type: AST.LogicalExpression,
                                        operator: "||",
                                        left: left,
                                        right: this.logicalAND()
                                    };
                                return left
                            },
                            logicalAND: function () {
                                for (var left = this.equality(); this.expect("&&");) 
                                    left = {
                                        type: AST.LogicalExpression,
                                        operator: "&&",
                                        left: left,
                                        right: this.equality()
                                    };
                                return left
                            },
                            equality: function () {
                                for (
                                    var token,
                                    left = this.relational();
                                    token = this.expect("==", "!=", "===", "!==");
                                ) 
                                    left = {
                                        type: AST.BinaryExpression,
                                        operator: token.text,
                                        left: left,
                                        right: this.relational()
                                    };
                                return left
                            },
                            relational: function () {
                                for (
                                    var token,
                                    left = this.additive();
                                    token = this.expect("<", ">", "<=", ">=");
                                ) 
                                    left = {
                                        type: AST.BinaryExpression,
                                        operator: token.text,
                                        left: left,
                                        right: this.additive()
                                    };
                                return left
                            },
                            additive: function () {
                                for (var token, left = this.multiplicative(); token = this.expect("+", "-");) 
                                    left = {
                                        type: AST.BinaryExpression,
                                        operator: token.text,
                                        left: left,
                                        right: this.multiplicative()
                                    };
                                return left
                            },
                            multiplicative: function () {
                                for (var token, left = this.unary(); token = this.expect("*", "/", "%");) 
                                    left = {
                                        type: AST.BinaryExpression,
                                        operator: token.text,
                                        left: left,
                                        right: this.unary()
                                    };
                                return left
                            },
                            unary: function () {
                                var token;
                                return (token = this.expect("+", "-", "!"))
                                    ? {
                                        type: AST.UnaryExpression,
                                        operator: token.text,
                                        prefix: !0,
                                        argument: this.unary()
                                    }
                                    : this.primary()
                            },
                            primary: function () {
                                var primary;
                                this.expect("(")
                                    ? (primary = this.filterChain(), this.consume(")"))
                                    : this.expect("[")
                                        ? primary = this.arrayDeclaration()
                                        : this.expect("{")
                                            ? primary = this.object()
                                            : this
                                                .selfReferential
                                                .hasOwnProperty(this.peek().text)
                                                    ? primary = copy(this.selfReferential[
                                                        this
                                                            .consume()
                                                            .text
                                                    ])
                                                    : this
                                                        .options
                                                        .literals
                                                        .hasOwnProperty(this.peek().text)
                                                            ? primary = {
                                                                type: AST.Literal,
                                                                value: this
                                                                    .options
                                                                    .literals[
                                                                        this
                                                                            .consume()
                                                                            .text
                                                                    ]
                                                            }
                                                            : this
                                                                .peek()
                                                                .identifier
                                                                    ? primary = this.identifier()
                                                                    : this
                                                                        .peek()
                                                                        .constant
                                                                            ? primary = this.constant()
                                                                            : this.throwError("not a primary expression", this.peek());
                                for (var next; next = this.expect("(", "[", ".");) 
                                    "(" === next.text
                                        ? (primary = {
                                            type: AST.CallExpression,
                                            callee: primary,
                                            arguments: this.parseArguments()
                                        }, this.consume(")"))
                                        : "[" === next.text
                                            ? (primary = {
                                                type: AST.MemberExpression,
                                                object: primary,
                                                property: this.expression(),
                                                computed: !0
                                            }, this.consume("]"))
                                            : "." === next.text
                                                ? primary = {
                                                    type: AST.MemberExpression,
                                                    object: primary,
                                                    property: this.identifier(),
                                                    computed: !1
                                                }
                                                : this.throwError("IMPOSSIBLE");
                                return primary
                            },
                            filter: function (baseExpression) {
                                for (var args = [baseExpression], result = {
                                    type: AST.CallExpression,
                                    callee: this.identifier(),
                                    arguments: args,
                                    filter: !0
                                }; this.expect(":");) 
                                    args.push(this.expression());
                                return result
                            },
                            parseArguments: function () {
                                var args = [];
                                if (")" !== this.peekToken().text) 
                                    do {
                                        args.push(this.filterChain())
                                    } while (this.expect(","));
                                return args
                            },
                            identifier: function () {
                                var token = this.consume();
                                return token.identifier || this.throwError("is not a valid identifier", token), {
                                    type: AST.Identifier,
                                    name: token.text
                                }
                            },
                            constant: function () {
                                return {
                                    type: AST.Literal, value: this
                                        .consume()
                                        .value
                                }
                            },
                            arrayDeclaration: function () {
                                var elements = [];
                                if ("]" !== this.peekToken().text) 
                                    do {
                                        if (this.peek("]")) 
                                            break;
                                        elements.push(this.expression())
                                    } while (this.expect(","));
                                return this.consume("]"), {
                                    type: AST.ArrayExpression,
                                    elements: elements
                                }
                            },
                            object: function () {
                                var property,
                                    properties = [];
                                if ("}" !== this.peekToken().text) 
                                    do {
                                        if (this.peek("}")) 
                                            break;
                                        property = {
                                            type: AST.Property,
                                            kind: "init"
                                        },
                                        this
                                            .peek()
                                            .constant
                                                ? (
                                                    property.key = this.constant(),
                                                    property.computed = !1,
                                                    this.consume(":"),
                                                    property.value = this.expression()
                                                )
                                                : this
                                                    .peek()
                                                    .identifier
                                                        ? (
                                                            property.key = this.identifier(),
                                                            property.computed = !1,
                                                            this.peek(":")
                                                                ? (this.consume(":"), property.value = this.expression())
                                                                : property.value = property.key
                                                        )
                                                        : this.peek("[")
                                                            ? (
                                                                this.consume("["),
                                                                property.key = this.expression(),
                                                                this.consume("]"),
                                                                property.computed = !0,
                                                                this.consume(":"),
                                                                property.value = this.expression()
                                                            )
                                                            : this.throwError("invalid key", this.peek()),
                                        properties.push(property)
                                    } while (this.expect(","));
                                return this.consume("}"), {
                                    type: AST.ObjectExpression,
                                    properties: properties
                                }
                            },
                            throwError: function (msg, token) {
                                throw $parseMinErr(
                                    "syntax",
                                    "Syntax Error: Token '{0}' {1} at column {2} of the expression [{3}] starting a" +
                                        "t [{4}].",
                                    token.text,
                                    msg,
                                    token.index + 1,
                                    this.text,
                                    this.text.substring(token.index)
                                )
                            },
                            consume: function (e1) {
                                if (0 === this.tokens.length) 
                                    throw $parseMinErr("ueoe", "Unexpected end of expression: {0}", this.text);
                                var token = this.expect(e1);
                                return token || this.throwError(
                                    "is unexpected, expecting [" + e1 + "]",
                                    this.peek()
                                ),
                                token
                            },
                            peekToken: function () {
                                if (0 === this.tokens.length) 
                                    throw $parseMinErr("ueoe", "Unexpected end of expression: {0}", this.text);
                                return this.tokens[0]
                            },
                            peek: function (e1, e2, e3, e4) {
                                return this.peekAhead(0, e1, e2, e3, e4)
                            },
                            peekAhead: function (i, e1, e2, e3, e4) {
                                if (this.tokens.length > i) {
                                    var token = this.tokens[i],
                                        t = token.text;
                                    if (t === e1 || t === e2 || t === e3 || t === e4 || !e1 && !e2 && !e3 && !e4) 
                                        return token
                                }
                                return !1
                            },
                            expect: function (e1, e2, e3, e4) {
                                var token = this.peek(e1, e2, e3, e4);
                                return !!token && (this.tokens.shift(), token)
                            },
                            selfReferential: {
                                this: {
                                    type: AST.ThisExpression
                                },
                                $locals: {
                                    type: AST.LocalsExpression
                                }
                            }
                        },
                        ASTCompiler.prototype = {
                            compile: function (expression) {
                                var self = this,
                                    ast = this
                                        .astBuilder
                                        .ast(expression);
                                this.state = {
                                    nextId: 0,
                                    filters: {},
                                    fn: {
                                        vars: [],
                                        body: [],
                                        own: {}
                                    },
                                    assign: {
                                        vars: [],
                                        body: [],
                                        own: {}
                                    },
                                    inputs: []
                                },
                                findConstantAndWatchExpressions(ast, self.$filter);
                                var assignable,
                                    extra = "";
                                if (this.stage = "assign", assignable = assignableAST(ast)) {
                                    this.state.computing = "assign";
                                    var result = this.nextId();
                                    this.recurse(assignable, result),
                                    this.return_(result),
                                    extra = "fn.assign=" + this.generateFunction("assign", "s,v,l")
                                }
                                var toWatch = getInputs(ast.body);
                                self.stage = "inputs",
                                forEach(toWatch, function (watch, key) {
                                    var fnKey = "fn" + key;
                                    self.state[fnKey] = {
                                        vars: [],
                                        body: [],
                                        own: {}
                                    },
                                    self.state.computing = fnKey;
                                    var intoId = self.nextId();
                                    self.recurse(watch, intoId),
                                    self.return_(intoId),
                                    self
                                        .state
                                        .inputs
                                        .push(fnKey),
                                    watch.watchId = key
                                }),
                                this.state.computing = "fn",
                                this.stage = "main",
                                this.recurse(ast);
                                var fnString = '"' + this.USE + " " + this.STRICT + '";\n' + this.filterPrefix() +
                                        "var fn=" + this.generateFunction("fn", "s,l,a,i") + extra + this.watchFns() +
                                        "return fn;",
                                    fn = new Function("$filter", "getStringValue", "ifDefined", "plus", fnString)(
                                        this.$filter,
                                        getStringValue,
                                        ifDefined,
                                        plusFn
                                    );
                                return this.state = this.stage = void 0,
                                fn.literal = isLiteral(ast),
                                fn.constant = isConstant(ast),
                                fn
                            },
                            USE: "use",
                            STRICT: "strict",
                            watchFns: function () {
                                var result = [],
                                    fns = this.state.inputs,
                                    self = this;
                                return forEach(fns, function (name) {
                                    result.push("var " + name + "=" + self.generateFunction(name, "s"))
                                }),
                                fns.length && result.push("fn.inputs=[" + fns.join(",") + "];"),
                                result.join("")
                            },
                            generateFunction: function (name, params) {
                                return "function(" + params + "){" + this.varsPrefix(name) + this.body(name) +
                                    "};"
                            },
                            filterPrefix: function () {
                                var parts = [],
                                    self = this;
                                return forEach(this.state.filters, function (id, filter) {
                                    parts.push(id + "=$filter(" + self.escape(filter) + ")")
                                }),
                                parts.length
                                    ? "var " + parts.join(",") + ";"
                                    : ""
                            },
                            varsPrefix: function (section) {
                                return this
                                    .state[section]
                                    .vars
                                    .length
                                        ? "var " + this
                                            .state[section]
                                            .vars
                                            .join(",") + ";"
                                        : ""
                            },
                            body: function (section) {
                                return this
                                    .state[section]
                                    .body
                                    .join("")
                            },
                            recurse: function (ast, intoId, nameId, recursionFn, create, skipWatchIdCheck) {
                                var left,
                                    right,
                                    args,
                                    expression,
                                    computed,
                                    self = this;
                                if (
                                    recursionFn = recursionFn || noop,
                                    !skipWatchIdCheck && isDefined(ast.watchId)
                                ) 
                                    return intoId = intoId || this.nextId(),
                                    void this.if_(
                                        "i",
                                        this.lazyAssign(intoId, this.computedMember("i", ast.watchId)),
                                        this.lazyRecurse(ast, intoId, nameId, recursionFn, create, !0)
                                    );
                                switch (ast.type) {
                                    case AST.Program:
                                        forEach(ast.body, function (expression, pos) {
                                            self.recurse(expression.expression, void 0, void 0, function (expr) {
                                                right = expr
                                            }),
                                            pos !== ast.body.length - 1
                                                ? self
                                                    .current()
                                                    .body
                                                    .push(right, ";")
                                                : self.return_(right)
                                        });
                                        break;
                                    case AST.Literal:
                                        expression = this.escape(ast.value),
                                        this.assign(intoId, expression),
                                        recursionFn(intoId || expression);
                                        break;
                                    case AST.UnaryExpression:
                                        this.recurse(ast.argument, void 0, void 0, function (expr) {
                                            right = expr
                                        }),
                                        expression = ast.operator + "(" + this.ifDefined(right, 0) + ")",
                                        this.assign(intoId, expression),
                                        recursionFn(expression);
                                        break;
                                    case AST.BinaryExpression:
                                        this.recurse(ast.left, void 0, void 0, function (expr) {
                                            left = expr
                                        }),
                                        this.recurse(ast.right, void 0, void 0, function (expr) {
                                            right = expr
                                        }),
                                        expression = "+" === ast.operator
                                            ? this.plus(left, right)
                                            : "-" === ast.operator
                                                ? this.ifDefined(left, 0) + ast.operator + this.ifDefined(right, 0)
                                                : "(" + left + ")" + ast.operator + "(" + right + ")",
                                        this.assign(intoId, expression),
                                        recursionFn(expression);
                                        break;
                                    case AST.LogicalExpression:
                                        intoId = intoId || this.nextId(),
                                        self.recurse(ast.left, intoId),
                                        self.if_(
                                            "&&" === ast.operator
                                                ? intoId
                                                : self.not(intoId),
                                            self.lazyRecurse(ast.right, intoId)
                                        ),
                                        recursionFn(intoId);
                                        break;
                                    case AST.ConditionalExpression:
                                        intoId = intoId || this.nextId(),
                                        self.recurse(ast.test, intoId),
                                        self.if_(
                                            intoId,
                                            self.lazyRecurse(ast.alternate, intoId),
                                            self.lazyRecurse(ast.consequent, intoId)
                                        ),
                                        recursionFn(intoId);
                                        break;
                                    case AST.Identifier:
                                        intoId = intoId || this.nextId(),
                                        nameId && (
                                            nameId.context = "inputs" === self.stage
                                                ? "s"
                                                : this.assign(this.nextId(), this.getHasOwnProperty("l", ast.name) + "?l:s"),
                                            nameId.computed = !1,
                                            nameId.name = ast.name
                                        ),
                                        self.if_(
                                            "inputs" === self.stage || self.not(self.getHasOwnProperty("l", ast.name)),
                                            function () {
                                                self.if_("inputs" === self.stage || "s", function () {
                                                    create && 1 !== create && self.if_(
                                                        self.isNull(self.nonComputedMember("s", ast.name)),
                                                        self.lazyAssign(self.nonComputedMember("s", ast.name), "{}")
                                                    ),
                                                    self.assign(intoId, self.nonComputedMember("s", ast.name))
                                                })
                                            },
                                            intoId && self.lazyAssign(intoId, self.nonComputedMember("l", ast.name))
                                        ),
                                        recursionFn(intoId);
                                        break;
                                    case AST.MemberExpression:
                                        left = nameId && (nameId.context = this.nextId()) || this.nextId(),
                                        intoId = intoId || this.nextId(),
                                        self.recurse(ast.object, left, void 0, function () {
                                            self.if_(self.notNull(left), function () {
                                                ast.computed
                                                    ? (
                                                        right = self.nextId(),
                                                        self.recurse(ast.property, right),
                                                        self.getStringValue(right),
                                                        create && 1 !== create && self.if_(
                                                            self.not(self.computedMember(left, right)),
                                                            self.lazyAssign(self.computedMember(left, right), "{}")
                                                        ),
                                                        expression = self.computedMember(left, right),
                                                        self.assign(intoId, expression),
                                                        nameId && (nameId.computed = !0, nameId.name = right)
                                                    )
                                                    : (
                                                        create && 1 !== create && self.if_(
                                                            self.isNull(self.nonComputedMember(left, ast.property.name)),
                                                            self.lazyAssign(self.nonComputedMember(left, ast.property.name), "{}")
                                                        ),
                                                        expression = self.nonComputedMember(left, ast.property.name),
                                                        self.assign(intoId, expression),
                                                        nameId && (nameId.computed = !1, nameId.name = ast.property.name)
                                                    )
                                            }, function () {
                                                self.assign(intoId, "undefined")
                                            }),
                                            recursionFn(intoId)
                                        }, !!create);
                                        break;
                                    case AST.CallExpression:
                                        intoId = intoId || this.nextId(),
                                        ast.filter
                                            ? (
                                                right = self.filter(ast.callee.name),
                                                args = [],
                                                forEach(ast.arguments, function (expr) {
                                                    var argument = self.nextId();
                                                    self.recurse(expr, argument),
                                                    args.push(argument)
                                                }),
                                                expression = right + "(" + args.join(",") + ")",
                                                self.assign(intoId, expression),
                                                recursionFn(intoId)
                                            )
                                            : (
                                                right = self.nextId(),
                                                left = {},
                                                args = [],
                                                self.recurse(ast.callee, right, left, function () {
                                                    self.if_(self.notNull(right), function () {
                                                        forEach(ast.arguments, function (expr) {
                                                            self.recurse(
                                                                expr,
                                                                ast.constant
                                                                    ? void 0
                                                                    : self.nextId(),
                                                                void 0,
                                                                function (argument) {
                                                                    args.push(argument)
                                                                }
                                                            )
                                                        }),
                                                        expression = left.name
                                                            ? self.member(left.context, left.name, left.computed) + "(" + args.join(",") +
                                                                ")"
                                                            : right + "(" + args.join(",") + ")",
                                                        self.assign(intoId, expression)
                                                    }, function () {
                                                        self.assign(intoId, "undefined")
                                                    }),
                                                    recursionFn(intoId)
                                                })
                                            );
                                        break;
                                    case AST.AssignmentExpression:
                                        right = this.nextId(),
                                        left = {},
                                        this.recurse(ast.left, void 0, left, function () {
                                            self.if_(self.notNull(left.context), function () {
                                                self.recurse(ast.right, right),
                                                expression = self.member(left.context, left.name, left.computed) + ast.operator +
                                                    right,
                                                self.assign(intoId, expression),
                                                recursionFn(intoId || expression)
                                            })
                                        }, 1);
                                        break;
                                    case AST.ArrayExpression:
                                        args = [],
                                        forEach(ast.elements, function (expr) {
                                            self.recurse(
                                                expr,
                                                ast.constant
                                                    ? void 0
                                                    : self.nextId(),
                                                void 0,
                                                function (argument) {
                                                    args.push(argument)
                                                }
                                            )
                                        }),
                                        expression = "[" + args.join(",") + "]",
                                        this.assign(intoId, expression),
                                        recursionFn(intoId || expression);
                                        break;
                                    case AST.ObjectExpression:
                                        args = [],
                                        computed = !1,
                                        forEach(ast.properties, function (property) {
                                            property.computed && (computed = !0)
                                        }),
                                        computed
                                            ? (
                                                intoId = intoId || this.nextId(),
                                                this.assign(intoId, "{}"),
                                                forEach(ast.properties, function (property) {
                                                    property.computed
                                                        ? (left = self.nextId(), self.recurse(property.key, left))
                                                        : left = property.key.type === AST.Identifier
                                                            ? property.key.name
                                                            : "" + property.key.value,
                                                    right = self.nextId(),
                                                    self.recurse(property.value, right),
                                                    self.assign(self.member(intoId, left, property.computed), right)
                                                })
                                            )
                                            : (
                                                forEach(ast.properties, function (property) {
                                                    self.recurse(
                                                        property.value,
                                                        ast.constant
                                                            ? void 0
                                                            : self.nextId(),
                                                        void 0,
                                                        function (expr) {
                                                            args.push(self.escape(
                                                                property.key.type === AST.Identifier
                                                                    ? property.key.name
                                                                    : "" + property.key.value
                                                            ) + ":" + expr)
                                                        }
                                                    )
                                                }),
                                                expression = "{" + args.join(",") + "}",
                                                this.assign(intoId, expression)
                                            ),
                                        recursionFn(intoId || expression);
                                        break;
                                    case AST.ThisExpression:
                                        this.assign(intoId, "s"),
                                        recursionFn(intoId || "s");
                                        break;
                                    case AST.LocalsExpression:
                                        this.assign(intoId, "l"),
                                        recursionFn(intoId || "l");
                                        break;
                                    case AST.NGValueParameter:
                                        this.assign(intoId, "v"),
                                        recursionFn(intoId || "v")
                                }
                            },
                            getHasOwnProperty: function (element, property) {
                                var key = element + "." + property,
                                    own = this
                                        .current()
                                        .own;
                                return own.hasOwnProperty(key) || (
                                    own[key] = this.nextId(!1, element + "&&(" + this.escape(property) + " in " + element + ")")
                                ),
                                own[key]
                            },
                            assign: function (id, value) {
                                if (id) 
                                    return this
                                        .current()
                                        .body
                                        .push(id, "=", value, ";"),
                                    id
                            },
                            filter: function (filterName) {
                                return this
                                    .state
                                    .filters
                                    .hasOwnProperty(filterName) || (
                                        this.state.filters[filterName] = this.nextId(!0)
                                    ),
                                this
                                    .state
                                    .filters[filterName]
                            },
                            ifDefined: function (id, defaultValue) {
                                return "ifDefined(" + id + "," + this.escape(defaultValue) + ")"
                            },
                            plus: function (left, right) {
                                return "plus(" + left + "," + right + ")"
                            },
                            return_: function (id) {
                                this
                                    .current()
                                    .body
                                    .push("return ", id, ";")
                            },
                            if_: function (test, alternate, consequent) {
                                if (!0 === test) 
                                    alternate();
                                else {
                                    var body = this
                                        .current()
                                        .body;
                                    body.push("if(", test, "){"),
                                    alternate(),
                                    body.push("}"),
                                    consequent && (body.push("else{"), consequent(), body.push("}"))
                                }
                            },
                            not: function (expression) {
                                return "!(" + expression + ")"
                            },
                            isNull: function (expression) {
                                return expression + "==null"
                            },
                            notNull: function (expression) {
                                return expression + "!=null"
                            },
                            nonComputedMember: function (left, right) {
                                var SAFE_IDENTIFIER = /^[$_a-zA-Z][$_a-zA-Z0-9]*$/,
                                    UNSAFE_CHARACTERS = /[^$_a-zA-Z0-9]/g;
                                return SAFE_IDENTIFIER.test(right)
                                    ? left + "." + right
                                    : left + '["' + right.replace(UNSAFE_CHARACTERS, this.stringEscapeFn) + '"]'
                            },
                            computedMember: function (left, right) {
                                return left + "[" + right + "]"
                            },
                            member: function (left, right, computed) {
                                return computed
                                    ? this.computedMember(left, right)
                                    : this.nonComputedMember(left, right)
                            },
                            getStringValue: function (item) {
                                this.assign(item, "getStringValue(" + item + ")")
                            },
                            lazyRecurse: function (
                                ast,
                                intoId,
                                nameId,
                                recursionFn,
                                create,
                                skipWatchIdCheck
                            ) {
                                var self = this;
                                return function () {
                                    self.recurse(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck)
                                }
                            },
                            lazyAssign: function (id, value) {
                                var self = this;
                                return function () {
                                    self.assign(id, value)
                                }
                            },
                            stringEscapeRegex: /[^ a-zA-Z0-9]/g,
                            stringEscapeFn: function (c) {
                                return "\\u" + (
                                    "0000" + c.charCodeAt(0).toString(16)
                                ).slice(-4)
                            },
                            escape: function (value) {
                                if (isString(value)) 
                                    return "'" + value.replace(this.stringEscapeRegex, this.stringEscapeFn) + "'";
                                if (isNumber(value)) 
                                    return value.toString();
                                if (!0 === value) 
                                    return "true";
                                if (!1 === value) 
                                    return "false";
                                if (null === value) 
                                    return "null";
                                if (void 0 === value) 
                                    return "undefined";
                                throw $parseMinErr("esc", "IMPOSSIBLE")
                            },
                            nextId: function (skip, init) {
                                var id = "v" + this.state.nextId++;
                                return skip || this
                                    .current()
                                    .vars
                                    .push(id + (
                                        init
                                            ? "=" + init
                                            : ""
                                    )),
                                id
                            },
                            current: function () {
                                return this.state[this.state.computing]
                            }
                        },
                        ASTInterpreter.prototype = {
                            compile: function (expression) {
                                var self = this,
                                    ast = this
                                        .astBuilder
                                        .ast(expression);
                                findConstantAndWatchExpressions(ast, self.$filter);
                                var assignable,
                                    assign;
                                (assignable = assignableAST(ast)) && (assign = this.recurse(assignable));
                                var inputs,
                                    toWatch = getInputs(ast.body);
                                toWatch && (inputs = [], forEach(toWatch, function (watch, key) {
                                    var input = self.recurse(watch);
                                    watch.input = input,
                                    inputs.push(input),
                                    watch.watchId = key
                                }));
                                var expressions = [];
                                forEach(ast.body, function (expression) {
                                    expressions.push(self.recurse(expression.expression))
                                });
                                var fn = 0 === ast.body.length
                                    ? noop
                                    : 1 === ast.body.length
                                        ? expressions[0]
                                        : function (scope, locals) {
                                            var lastValue;
                                            return forEach(expressions, function (exp) {
                                                lastValue = exp(scope, locals)
                                            }),
                                            lastValue
                                        };
                                return assign && (fn.assign = function (scope, value, locals) {
                                    return assign(scope, locals, value)
                                }),
                                inputs && (fn.inputs = inputs),
                                fn.literal = isLiteral(ast),
                                fn.constant = isConstant(ast),
                                fn
                            },
                            recurse: function (ast, context, create) {
                                var left,
                                    right,
                                    args,
                                    self = this;
                                if (ast.input) 
                                    return this.inputs(ast.input, ast.watchId);
                                switch (ast.type) {
                                    case AST.Literal:
                                        return this.value(ast.value, context);
                                    case AST.UnaryExpression:
                                        return right = this.recurse(ast.argument),
                                        this["unary" + ast.operator](right, context);
                                    case AST.BinaryExpression:
                                    case AST.LogicalExpression:
                                        return left = this.recurse(ast.left),
                                        right = this.recurse(ast.right),
                                        this["binary" + ast.operator](left, right, context);
                                    case AST.ConditionalExpression:
                                        return this["ternary?:"](
                                            this.recurse(ast.test),
                                            this.recurse(ast.alternate),
                                            this.recurse(ast.consequent),
                                            context
                                        );
                                    case AST.Identifier:
                                        return self.identifier(ast.name, context, create);
                                    case AST.MemberExpression:
                                        return left = this.recurse(ast.object, !1, !!create),
                                        ast.computed || (right = ast.property.name),
                                        ast.computed && (right = this.recurse(ast.property)),
                                        ast.computed
                                            ? this.computedMember(left, right, context, create)
                                            : this.nonComputedMember(left, right, context, create);
                                    case AST.CallExpression:
                                        return args = [],
                                        forEach(ast.arguments, function (expr) {
                                            args.push(self.recurse(expr))
                                        }),
                                        ast.filter && (right = this.$filter(ast.callee.name)),
                                        ast.filter || (right = this.recurse(ast.callee, !0)),
                                        ast.filter
                                            ? function (scope, locals, assign, inputs) {
                                                for (var values = [], i = 0; i < args.length; ++i) 
                                                    values.push(args[i](scope, locals, assign, inputs));
                                                var value = right.apply(void 0, values, inputs);
                                                return context
                                                    ? {
                                                        context: void 0,
                                                        name: void 0,
                                                        value: value
                                                    }
                                                    : value
                                            }
                                            : function (scope, locals, assign, inputs) {
                                                var value,
                                                    rhs = right(scope, locals, assign, inputs);
                                                if (null != rhs.value) {
                                                    for (var values = [], i = 0; i < args.length; ++i) 
                                                        values.push(args[i](scope, locals, assign, inputs));
                                                    value = rhs
                                                        .value
                                                        .apply(rhs.context, values)
                                                }
                                                return context
                                                    ? {
                                                        value: value
                                                    }
                                                    : value
                                            };
                                    case AST.AssignmentExpression:
                                        return left = this.recurse(ast.left, !0, 1),
                                        right = this.recurse(ast.right),
                                        function (scope, locals, assign, inputs) {
                                            var lhs = left(scope, locals, assign, inputs),
                                                rhs = right(scope, locals, assign, inputs);
                                            return lhs.context[lhs.name] = rhs,
                                            context
                                                ? {
                                                    value: rhs
                                                }
                                                : rhs
                                        };
                                    case AST.ArrayExpression:
                                        return args = [],
                                        forEach(ast.elements, function (expr) {
                                            args.push(self.recurse(expr))
                                        }),
                                        function (scope, locals, assign, inputs) {
                                            for (var value = [], i = 0; i < args.length; ++i) 
                                                value.push(args[i](scope, locals, assign, inputs));
                                            return context
                                                ? {
                                                    value: value
                                                }
                                                : value
                                        };
                                    case AST.ObjectExpression:
                                        return args = [],
                                        forEach(ast.properties, function (property) {
                                            property.computed
                                                ? args.push({
                                                    key: self.recurse(property.key),
                                                    computed: !0,
                                                    value: self.recurse(property.value)
                                                })
                                                : args.push({
                                                    key: property.key.type === AST.Identifier
                                                        ? property.key.name
                                                        : "" + property.key.value,
                                                    computed: !1,
                                                    value: self.recurse(property.value)
                                                })
                                        }),
                                        function (scope, locals, assign, inputs) {
                                            for (var value = {}, i = 0; i < args.length; ++i) 
                                                args[i].computed
                                                    ? value[args[i].key(scope, locals, assign, inputs)] = args[i].value(
                                                        scope,
                                                        locals,
                                                        assign,
                                                        inputs
                                                    )
                                                    : value[args[i].key] = args[i].value(scope, locals, assign, inputs);
                                            return context
                                                ? {
                                                    value: value
                                                }
                                                : value
                                        };
                                    case AST.ThisExpression:
                                        return function (scope) {
                                            return context
                                                ? {
                                                    value: scope
                                                }
                                                : scope
                                        };
                                    case AST.LocalsExpression:
                                        return function (scope, locals) {
                                            return context
                                                ? {
                                                    value: locals
                                                }
                                                : locals
                                        };
                                    case AST.NGValueParameter:
                                        return function (scope, locals, assign) {
                                            return context
                                                ? {
                                                    value: assign
                                                }
                                                : assign
                                        }
                                }
                            },
                            "unary+": function (argument, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = argument(scope, locals, assign, inputs);
                                    return arg = isDefined(arg)
                                        ? +arg
                                        : 0,
                                    context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "unary-": function (argument, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = argument(scope, locals, assign, inputs);
                                    return arg = isDefined(arg)
                                        ? -arg
                                        : -0,
                                    context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "unary!": function (argument, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = !argument(scope, locals, assign, inputs);
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary+": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var lhs = left(scope, locals, assign, inputs),
                                        rhs = right(scope, locals, assign, inputs),
                                        arg = plusFn(lhs, rhs);
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary-": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var lhs = left(scope, locals, assign, inputs),
                                        rhs = right(scope, locals, assign, inputs),
                                        arg = (
                                            isDefined(lhs)
                                                ? lhs
                                                : 0
                                        ) - (
                                            isDefined(rhs)
                                                ? rhs
                                                : 0
                                        );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary*": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) * right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary/": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) / right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary%": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) % right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary===": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) === right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary!==": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) !== right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary==": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) == right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary!=": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) != right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary<": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) < right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary>": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) > right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary<=": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) <= right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary>=": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) >= right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary&&": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) && right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "binary||": function (left, right, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = left(scope, locals, assign, inputs) || right(
                                        scope,
                                        locals,
                                        assign,
                                        inputs
                                    );
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            "ternary?:": function (test, alternate, consequent, context) {
                                return function (scope, locals, assign, inputs) {
                                    var arg = test(scope, locals, assign, inputs)
                                        ? alternate(scope, locals, assign, inputs)
                                        : consequent(scope, locals, assign, inputs);
                                    return context
                                        ? {
                                            value: arg
                                        }
                                        : arg
                                }
                            },
                            value: function (value, context) {
                                return function () {
                                    return context
                                        ? {
                                            context: void 0,
                                            name: void 0,
                                            value: value
                                        }
                                        : value
                                }
                            },
                            identifier: function (name, context, create) {
                                return function (scope, locals, assign, inputs) {
                                    var base = locals && name in locals
                                        ? locals
                                        : scope;
                                    create && 1 !== create && base && null == base[name] && (base[name] = {});
                                    var value = base
                                        ? base[name]
                                        : void 0;
                                    return context
                                        ? {
                                            context: base,
                                            name: name,
                                            value: value
                                        }
                                        : value
                                }
                            },
                            computedMember: function (left, right, context, create) {
                                return function (scope, locals, assign, inputs) {
                                    var rhs,
                                        value,
                                        lhs = left(scope, locals, assign, inputs);
                                    return null != lhs && (
                                        rhs = right(scope, locals, assign, inputs),
                                        rhs = getStringValue(rhs),
                                        create && 1 !== create && lhs && !lhs[rhs] && (lhs[rhs] = {}),
                                        value = lhs[rhs]
                                    ),
                                    context
                                        ? {
                                            context: lhs,
                                            name: rhs,
                                            value: value
                                        }
                                        : value
                                }
                            },
                            nonComputedMember: function (left, right, context, create) {
                                return function (scope, locals, assign, inputs) {
                                    var lhs = left(scope, locals, assign, inputs);
                                    create && 1 !== create && lhs && null == lhs[right] && (lhs[right] = {});
                                    var value = null != lhs
                                        ? lhs[right]
                                        : void 0;
                                    return context
                                        ? {
                                            context: lhs,
                                            name: right,
                                            value: value
                                        }
                                        : value
                                }
                            },
                            inputs: function (input, watchId) {
                                return function (scope, value, locals, inputs) {
                                    return inputs
                                        ? inputs[watchId]
                                        : input(scope, value, locals)
                                }
                            }
                        };
                        var Parser = function Parser(lexer, $filter, options) {
                            this.lexer = lexer,
                            this.$filter = $filter,
                            this.options = options,
                            this.ast = new AST(lexer, options),
                            this.astCompiler = options.csp
                                ? new ASTInterpreter(this.ast, $filter)
                                : new ASTCompiler(this.ast, $filter)
                        };
                        Parser.prototype = {
                            constructor: Parser,
                            parse: function (text) {
                                return this
                                    .astCompiler
                                    .compile(text)
                            }
                        };
                        var $sceMinErr = minErr("$sce"),
                            SCE_CONTEXTS = {
                                HTML: "html",
                                CSS: "css",
                                URL: "url",
                                RESOURCE_URL: "resourceUrl",
                                JS: "js"
                            },
                            UNDERSCORE_LOWERCASE_REGEXP = /_([a-z])/g,
                            $templateRequestMinErr = minErr("$compile"),
                            urlParsingNode = window
                                .document
                                .createElement("a"),
                            originUrl = urlResolve(window.location.href);
                        $$CookieReader.$inject = ["$document"],
                        $FilterProvider.$inject = ["$provide"];
                        var MAX_DIGITS = 22,
                            DECIMAL_SEP = ".",
                            ZERO_CHAR = "0";
                        currencyFilter.$inject = ["$locale"],
                        numberFilter.$inject = ["$locale"];
                        var DATE_FORMATS = {
                                yyyy: dateGetter("FullYear", 4, 0, !1, !0),
                                yy: dateGetter("FullYear", 2, 0, !0, !0),
                                y: dateGetter("FullYear", 1, 0, !1, !0),
                                MMMM: dateStrGetter("Month"),
                                MMM: dateStrGetter("Month", !0),
                                MM: dateGetter("Month", 2, 1),
                                M: dateGetter("Month", 1, 1),
                                LLLL: dateStrGetter("Month", !1, !0),
                                dd: dateGetter("Date", 2),
                                d: dateGetter("Date", 1),
                                HH: dateGetter("Hours", 2),
                                H: dateGetter("Hours", 1),
                                hh: dateGetter("Hours", 2, -12),
                                h: dateGetter("Hours", 1, -12),
                                mm: dateGetter("Minutes", 2),
                                m: dateGetter("Minutes", 1),
                                ss: dateGetter("Seconds", 2),
                                s: dateGetter("Seconds", 1),
                                sss: dateGetter("Milliseconds", 3),
                                EEEE: dateStrGetter("Day"),
                                EEE: dateStrGetter("Day", !0),
                                a: ampmGetter,
                                Z: timeZoneGetter,
                                ww: weekGetter(2),
                                w: weekGetter(1),
                                G: eraGetter,
                                GG: eraGetter,
                                GGG: eraGetter,
                                GGGG: longEraGetter
                            },
                            DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,
                            NUMBER_STRING = /^-?\d+$/;
                        dateFilter.$inject = ["$locale"];
                        var lowercaseFilter = valueFn(lowercase),
                            uppercaseFilter = valueFn(uppercase);
                        orderByFilter.$inject = ["$parse"];
                        var htmlAnchorDirective = valueFn({
                                restrict: "E",
                                compile: function (element, attr) {
                                    if (!attr.href && !attr.xlinkHref) 
                                        return function (scope, element) {
                                            if ("a" === element[0].nodeName.toLowerCase()) {
                                                var href = "[object SVGAnimatedString]" === toString.call(element.prop("href"))
                                                    ? "xlink:href"
                                                    : "href";
                                                element.on("click", function (event) {
                                                    element.attr(href) || event.preventDefault()
                                                })
                                            }
                                        }
                                    }
                            }),
                            ngAttributeAliasDirectives = {};
                        forEach(BOOLEAN_ATTR, function (propName, attrName) {
                            function defaultLinkFn(scope, element, attr) {
                                scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {
                                    attr.$set(attrName, !!value)
                                })
                            }
                            if ("multiple" !== propName) {
                                var normalized = directiveNormalize("ng-" + attrName),
                                    linkFn = defaultLinkFn;
                                "checked" === propName && (linkFn = function (scope, element, attr) {
                                    attr.ngModel !== attr[normalized] && defaultLinkFn(scope, element, attr)
                                }),
                                ngAttributeAliasDirectives[normalized] = function () {
                                    return {restrict: "A", priority: 100, link: linkFn}
                                }
                            }
                        }),
                        forEach(ALIASED_ATTR, function (htmlAttr, ngAttr) {
                            ngAttributeAliasDirectives[ngAttr] = function () {
                                return {
                                    priority: 100,
                                    link: function (scope, element, attr) {
                                        if ("ngPattern" === ngAttr && "/" === attr.ngPattern.charAt(0)) {
                                            var match = attr
                                                .ngPattern
                                                .match(REGEX_STRING_REGEXP);
                                            if (match) 
                                                return void attr.$set("ngPattern", new RegExp(match[1], match[2]))
                                        }
                                        scope.$watch(attr[ngAttr], function ngAttrAliasWatchAction(value) {
                                            attr.$set(ngAttr, value)
                                        })
                                    }
                                }
                            }
                        }),
                        forEach([
                            "src", "srcset", "href"
                        ], function (attrName) {
                            var normalized = directiveNormalize("ng-" + attrName);
                            ngAttributeAliasDirectives[normalized] = function () {
                                return {
                                    priority: 99,
                                    link: function (scope, element, attr) {
                                        var propName = attrName,
                                            name = attrName;
                                        "href" === attrName && "[object SVGAnimatedString]" === toString.call(
                                            element.prop("href")
                                        ) && (name = "xlinkHref", attr.$attr[name] = "xlink:href", propName = null),
                                        attr.$observe(normalized, function (value) {
                                            if (!value) 
                                                return void("href" === attrName && attr.$set(name, null));
                                            attr.$set(name, value),
                                            msie && propName && element.prop(propName, attr[name])
                                        })
                                    }
                                }
                            }
                        });
                        var nullFormCtrl = {
                                $addControl: noop,
                                $$renameControl: nullFormRenameControl,
                                $removeControl: noop,
                                $setValidity: noop,
                                $setDirty: noop,
                                $setPristine: noop,
                                $setSubmitted: noop
                            },
                            PENDING_CLASS = "ng-pending",
                            SUBMITTED_CLASS = "ng-submitted";
                        FormController.$inject = [
                            "$element", "$attrs", "$scope", "$animate", "$interpolate"
                        ],
                        FormController.prototype = {
                            $rollbackViewValue: function () {
                                forEach(this.$$controls, function (control) {
                                    control.$rollbackViewValue()
                                })
                            },
                            $commitViewValue: function () {
                                forEach(this.$$controls, function (control) {
                                    control.$commitViewValue()
                                })
                            },
                            $addControl: function (control) {
                                assertNotHasOwnProperty(control.$name, "input"),
                                this
                                    .$$controls
                                    .push(control),
                                control.$name && (this[control.$name] = control),
                                control.$$parentForm = this
                            },
                            $$renameControl: function (control, newName) {
                                var oldName = control.$name;
                                this[oldName] === control && delete this[oldName],
                                this[newName] = control,
                                control.$name = newName
                            },
                            $removeControl: function (control) {
                                control.$name && this[control.$name] === control && delete this[control.$name],
                                forEach(this.$pending, function (value, name) {
                                    this.$setValidity(name, null, control)
                                }, this),
                                forEach(this.$error, function (value, name) {
                                    this.$setValidity(name, null, control)
                                }, this),
                                forEach(this.$$success, function (value, name) {
                                    this.$setValidity(name, null, control)
                                }, this),
                                arrayRemove(this.$$controls, control),
                                control.$$parentForm = nullFormCtrl
                            },
                            $setDirty: function () {
                                this
                                    .$$animate
                                    .removeClass(this.$$element, PRISTINE_CLASS),
                                this
                                    .$$animate
                                    .addClass(this.$$element, DIRTY_CLASS),
                                this.$dirty = !0,
                                this.$pristine = !1,
                                this
                                    .$$parentForm
                                    .$setDirty()
                            },
                            $setPristine: function () {
                                this
                                    .$$animate
                                    .setClass(this.$$element, PRISTINE_CLASS, DIRTY_CLASS + " " + SUBMITTED_CLASS),
                                this.$dirty = !1,
                                this.$pristine = !0,
                                this.$submitted = !1,
                                forEach(this.$$controls, function (control) {
                                    control.$setPristine()
                                })
                            },
                            $setUntouched: function () {
                                forEach(this.$$controls, function (control) {
                                    control.$setUntouched()
                                })
                            },
                            $setSubmitted: function () {
                                this
                                    .$$animate
                                    .addClass(this.$$element, SUBMITTED_CLASS),
                                this.$submitted = !0,
                                this
                                    .$$parentForm
                                    .$setSubmitted()
                            }
                        },
                        addSetValidityMethod({
                            clazz: FormController,
                            set: function (object, property, controller) {
                                var list = object[property];
                                if (list) {
                                    -1 === list.indexOf(controller) && list.push(controller)
                                } else 
                                    object[property] = [controller]
                            },
                            unset: function (object, property, controller) {
                                var list = object[property];
                                list && (
                                    arrayRemove(list, controller),
                                    0 === list.length && delete object[property]
                                )
                            }
                        });
                        var formDirectiveFactory = function (isNgForm) {
                                return [
                                    "$timeout",
                                    "$parse",
                                    function ($timeout, $parse) {
                                        function getSetter(expression) {
                                            return "" === expression
                                                ? $parse('this[""]').assign
                                                : $parse(expression).assign || noop
                                        }
                                        return {
                                            name: "form",
                                            restrict: isNgForm
                                                ? "EAC"
                                                : "E",
                                            require: [
                                                "form", "^^?form"
                                            ],
                                            controller: FormController,
                                            compile: function ngFormCompile(formElement, attr) {
                                                formElement
                                                    .addClass(PRISTINE_CLASS)
                                                    .addClass(VALID_CLASS);
                                                var nameAttr = attr.name
                                                    ? "name"
                                                    : !(!isNgForm || !attr.ngForm) && "ngForm";
                                                return {
                                                    pre: function ngFormPreLink(scope, formElement, attr, ctrls) {
                                                        var controller = ctrls[0];
                                                        if (!("action" in attr)) {
                                                            var handleFormSubmission = function (event) {
                                                                scope.$apply(function () {
                                                                    controller.$commitViewValue(),
                                                                    controller.$setSubmitted()
                                                                }),
                                                                event.preventDefault()
                                                            };
                                                            formElement[0].addEventListener("submit", handleFormSubmission),
                                                            formElement.on("$destroy", function () {
                                                                $timeout(function () {
                                                                    formElement[0].removeEventListener("submit", handleFormSubmission)
                                                                }, 0, !1)
                                                            })
                                                        }
                                                        (ctrls[1] || controller.$$parentForm).$addControl(controller);
                                                        var setter = nameAttr
                                                            ? getSetter(controller.$name)
                                                            : noop;
                                                        nameAttr && (
                                                            setter(scope, controller),
                                                            attr.$observe(nameAttr, function (newValue) {
                                                                controller.$name !== newValue && (
                                                                    setter(scope, void 0),
                                                                    controller.$$parentForm.$$renameControl(controller, newValue),
                                                                    (setter = getSetter(controller.$name))(
                                                                        scope,
                                                                        controller
                                                                    )
                                                                )
                                                            })
                                                        ),
                                                        formElement.on("$destroy", function () {
                                                            controller
                                                                .$$parentForm
                                                                .$removeControl(controller),
                                                            setter(scope, void 0),
                                                            extend(controller, nullFormCtrl)
                                                        })
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            },
                            formDirective = formDirectiveFactory(),
                            ngFormDirective = formDirectiveFactory(!0),
                            ISO_DATE_REGEXP = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,
                            URL_REGEXP = /^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:\/?#]+|\[[a-f\d:]+])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,
                            EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,
                            NUMBER_REGEXP = /^\s*(-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,
                            DATE_REGEXP = /^(\d{4,})-(\d{2})-(\d{2})$/,
                            DATETIMELOCAL_REGEXP = /^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
                            WEEK_REGEXP = /^(\d{4,})-W(\d\d)$/,
                            MONTH_REGEXP = /^(\d{4,})-(\d\d)$/,
                            TIME_REGEXP = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
                            PARTIAL_VALIDATION_EVENTS = "keydown wheel mousedown",
                            PARTIAL_VALIDATION_TYPES = createMap();
                        forEach("date,datetime-local,month,time,week".split(","), function (type) {
                            PARTIAL_VALIDATION_TYPES[type] = !0
                        });
                        var inputType = {
                                text: textInputType,
                                date: createDateInputType(
                                    "date",
                                    DATE_REGEXP,
                                    createDateParser(DATE_REGEXP, ["yyyy", "MM", "dd"]),
                                    "yyyy-MM-dd"
                                ),
                                "datetime-local": createDateInputType(
                                    "datetimelocal",
                                    DATETIMELOCAL_REGEXP,
                                    createDateParser(DATETIMELOCAL_REGEXP, [
                                        "yyyy",
                                        "MM",
                                        "dd",
                                        "HH",
                                        "mm",
                                        "ss",
                                        "sss"
                                    ]),
                                    "yyyy-MM-ddTHH:mm:ss.sss"
                                ),
                                time: createDateInputType(
                                    "time",
                                    TIME_REGEXP,
                                    createDateParser(TIME_REGEXP, ["HH", "mm", "ss", "sss"]),
                                    "HH:mm:ss.sss"
                                ),
                                week: createDateInputType("week", WEEK_REGEXP, weekParser, "yyyy-Www"),
                                month: createDateInputType(
                                    "month",
                                    MONTH_REGEXP,
                                    createDateParser(MONTH_REGEXP, ["yyyy", "MM"]),
                                    "yyyy-MM"
                                ),
                                number: numberInputType,
                                url: urlInputType,
                                email: emailInputType,
                                radio: radioInputType,
                                range: rangeInputType,
                                checkbox: checkboxInputType,
                                hidden: noop,
                                button: noop,
                                submit: noop,
                                reset: noop,
                                file: noop
                            },
                            inputDirective = [
                                "$browser",
                                "$sniffer",
                                "$filter",
                                "$parse",
                                function ($browser, $sniffer, $filter, $parse) {
                                    return {
                                        restrict: "E",
                                        require: ["?ngModel"],
                                        link: {
                                            pre: function (scope, element, attr, ctrls) {
                                                ctrls[0] && (inputType[lowercase(attr.type)] || inputType.text)(
                                                    scope,
                                                    element,
                                                    attr,
                                                    ctrls[0],
                                                    $sniffer,
                                                    $browser,
                                                    $filter,
                                                    $parse
                                                )
                                            }
                                        }
                                    }
                                }
                            ],
                            CONSTANT_VALUE_REGEXP = /^(true|false|\d+)$/,
                            ngValueDirective = function () {
                                function updateElementValue(element, attr, value) {
                                    element.prop("value", value),
                                    attr.$set("value", value)
                                }
                                return {
                                    restrict: "A",
                                    priority: 100,
                                    compile: function (tpl, tplAttr) {
                                        return CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)
                                            ? function ngValueConstantLink(scope, elm, attr) {
                                                updateElementValue(elm, attr, scope.$eval(attr.ngValue))
                                            }
                                            : function ngValueLink(scope, elm, attr) {
                                                scope.$watch(attr.ngValue, function valueWatchAction(value) {
                                                    updateElementValue(elm, attr, value)
                                                })
                                            }
                                    }
                                }
                            },
                            ngBindDirective = [
                                "$compile",
                                function ($compile) {
                                    return {
                                        restrict: "AC",
                                        compile: function ngBindCompile(templateElement) {
                                            return $compile.$$addBindingClass(templateElement),
                                            function ngBindLink(scope, element, attr) {
                                                $compile.$$addBindingInfo(element, attr.ngBind),
                                                element = element[0],
                                                scope.$watch(attr.ngBind, function ngBindWatchAction(value) {
                                                    element.textContent = stringify(value)
                                                })
                                            }
                                        }
                                    }
                                }
                            ],
                            ngBindTemplateDirective = [
                                "$interpolate",
                                "$compile",
                                function ($interpolate, $compile) {
                                    return {
                                        compile: function ngBindTemplateCompile(templateElement) {
                                            return $compile.$$addBindingClass(templateElement),
                                            function ngBindTemplateLink(scope, element, attr) {
                                                var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));
                                                $compile.$$addBindingInfo(element, interpolateFn.expressions),
                                                element = element[0],
                                                attr.$observe("ngBindTemplate", function (value) {
                                                    element.textContent = isUndefined(value)
                                                        ? ""
                                                        : value
                                                })
                                            }
                                        }
                                    }
                                }
                            ],
                            ngBindHtmlDirective = [
                                "$sce",
                                "$parse",
                                "$compile",
                                function ($sce, $parse, $compile) {
                                    return {
                                        restrict: "A",
                                        compile: function ngBindHtmlCompile(tElement, tAttrs) {
                                            var ngBindHtmlGetter = $parse(tAttrs.ngBindHtml),
                                                ngBindHtmlWatch = $parse(tAttrs.ngBindHtml, function sceValueOf(val) {
                                                    return $sce.valueOf(val)
                                                });
                                            return $compile.$$addBindingClass(tElement),
                                            function ngBindHtmlLink(scope, element, attr) {
                                                $compile.$$addBindingInfo(element, attr.ngBindHtml),
                                                scope.$watch(ngBindHtmlWatch, function ngBindHtmlWatchAction() {
                                                    var value = ngBindHtmlGetter(scope);
                                                    element.html($sce.getTrustedHtml(value) || "")
                                                })
                                            }
                                        }
                                    }
                                }
                            ],
                            ngChangeDirective = valueFn({
                                restrict: "A",
                                require: "ngModel",
                                link: function (scope, element, attr, ctrl) {
                                    ctrl
                                        .$viewChangeListeners
                                        .push(function () {
                                            scope.$eval(attr.ngChange)
                                        })
                                }
                            }),
                            ngClassDirective = classDirective("", !0),
                            ngClassOddDirective = classDirective("Odd", 0),
                            ngClassEvenDirective = classDirective("Even", 1),
                            ngCloakDirective = ngDirective({
                                compile: function (element, attr) {
                                    attr.$set("ngCloak", void 0),
                                    element.removeClass("ng-cloak")
                                }
                            }),
                            ngControllerDirective = [
                                function () {
                                    return {
                                        restrict: "A",
                                        scope: !0,
                                        controller: "@",
                                        priority: 500
                                    }
                                }
                            ],
                            ngEventDirectives = {},
                            forceAsyncEvents = {
                                blur: !0,
                                focus: !0
                            };
                        forEach(
                            (
                                "click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouse" +
                            "leave keydown keyup keypress submit focus blur copy cut paste"
                            ).split(" "),
                            function (eventName) {
                                var directiveName = directiveNormalize("ng-" + eventName);
                                ngEventDirectives[directiveName] = [
                                    "$parse",
                                    "$rootScope",
                                    function ($parse, $rootScope) {
                                        return {
                                            restrict: "A",
                                            compile: function ($element, attr) {
                                                var fn = $parse(attr[directiveName], null, !0);
                                                return function ngEventHandler(scope, element) {
                                                    element.on(eventName, function (event) {
                                                        var callback = function () {
                                                            fn(scope, {$event: event})
                                                        };
                                                        forceAsyncEvents[eventName] && $rootScope.$$phase
                                                            ? scope.$evalAsync(callback)
                                                            : scope.$apply(callback)
                                                    })
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        );
                        var ngIfDirective = [
                                "$animate",
                                "$compile",
                                function ($animate, $compile) {
                                    return {
                                        multiElement: !0,
                                        transclude: "element",
                                        priority: 600,
                                        terminal: !0,
                                        restrict: "A",
                                        $$tlb: !0,
                                        link: function ($scope, $element, $attr, ctrl, $transclude) {
                                            var block,
                                                childScope,
                                                previousElements;
                                            $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {
                                                value
                                                    ? childScope || $transclude(function (clone, newScope) {
                                                        childScope = newScope,
                                                        clone[clone.length++] = $compile.$$createComment("end ngIf", $attr.ngIf),
                                                        block = {
                                                            clone: clone
                                                        },
                                                        $animate.enter(clone, $element.parent(), $element)
                                                    })
                                                    : (
                                                        previousElements && (previousElements.remove(), previousElements = null),
                                                        childScope && (childScope.$destroy(), childScope = null),
                                                        block && (
                                                            previousElements = getBlockNodes(block.clone),
                                                            $animate.leave(previousElements).done(function (response) {
                                                                !1 !== response && (previousElements = null)
                                                            }),
                                                            block = null
                                                        )
                                                    )
                                            })
                                        }
                                    }
                                }
                            ],
                            ngIncludeDirective = [
                                "$templateRequest",
                                "$anchorScroll",
                                "$animate",
                                function ($templateRequest, $anchorScroll, $animate) {
                                    return {
                                        restrict: "ECA",
                                        priority: 400,
                                        terminal: !0,
                                        transclude: "element",
                                        controller: angular.noop,
                                        compile: function (element, attr) {
                                            var srcExp = attr.ngInclude || attr.src,
                                                onloadExp = attr.onload || "",
                                                autoScrollExp = attr.autoscroll;
                                            return function (scope, $element, $attr, ctrl, $transclude) {
                                                var currentScope,
                                                    previousElement,
                                                    currentElement,
                                                    changeCounter = 0,
                                                    cleanupLastIncludeContent = function () {
                                                        previousElement && (previousElement.remove(), previousElement = null),
                                                        currentScope && (currentScope.$destroy(), currentScope = null),
                                                        currentElement && (
                                                            $animate.leave(currentElement).done(function (response) {
                                                                !1 !== response && (previousElement = null)
                                                            }),
                                                            previousElement = currentElement,
                                                            currentElement = null
                                                        )
                                                    };
                                                scope.$watch(srcExp, function ngIncludeWatchAction(src) {
                                                    var afterAnimation = function (response) {
                                                            !1 === response || !isDefined(autoScrollExp) || autoScrollExp && !scope.$eval(
                                                                autoScrollExp
                                                            ) || $anchorScroll()
                                                        },
                                                        thisChangeId = ++changeCounter;
                                                    src
                                                        ? (
                                                            $templateRequest(src, !0).then(function (response) {
                                                                if (!scope.$$destroyed && thisChangeId === changeCounter) {
                                                                    var newScope = scope.$new();
                                                                    ctrl.template = response;
                                                                    var clone = $transclude(newScope, function (clone) {
                                                                        cleanupLastIncludeContent(),
                                                                        $animate
                                                                            .enter(clone, null, $element)
                                                                            .done(afterAnimation)
                                                                    });
                                                                    currentScope = newScope,
                                                                    currentElement = clone,
                                                                    currentScope.$emit("$includeContentLoaded", src),
                                                                    scope.$eval(onloadExp)
                                                                }
                                                            }, function () {
                                                                scope.$$destroyed || thisChangeId === changeCounter && (
                                                                    cleanupLastIncludeContent(),
                                                                    scope.$emit("$includeContentError", src)
                                                                )
                                                            }),
                                                            scope.$emit("$includeContentRequested", src)
                                                        )
                                                        : (cleanupLastIncludeContent(), ctrl.template = null)
                                                })
                                            }
                                        }
                                    }
                                }
                            ],
                            ngIncludeFillContentDirective = [
                                "$compile",
                                function ($compile) {
                                    return {
                                        restrict: "ECA",
                                        priority: -400,
                                        require: "ngInclude",
                                        link: function (scope, $element, $attr, ctrl) {
                                            if (toString.call($element[0]).match(/SVG/)) 
                                                return $element.empty(),
                                                void $compile(jqLiteBuildFragment(ctrl.template, window.document).childNodes)(
                                                    scope,
                                                    function namespaceAdaptedClone(clone) {
                                                        $element.append(clone)
                                                    },
                                                    {futureParentElement: $element}
                                                );
                                            $element.html(ctrl.template),
                                            $compile($element.contents())(scope)
                                        }
                                    }
                                }
                            ],
                            ngInitDirective = ngDirective({
                                priority: 450,
                                compile: function () {
                                    return {
                                        pre: function (scope, element, attrs) {
                                            scope.$eval(attrs.ngInit)
                                        }
                                    }
                                }
                            }),
                            ngListDirective = function () {
                                return {
                                    restrict: "A",
                                    priority: 100,
                                    require: "ngModel",
                                    link: function (scope, element, attr, ctrl) {
                                        var ngList = attr.ngList || ", ",
                                            trimValues = "false" !== attr.ngTrim,
                                            separator = trimValues
                                                ? trim(ngList)
                                                : ngList,
                                            parse = function (viewValue) {
                                                if (!isUndefined(viewValue)) {
                                                    var list = [];
                                                    return viewValue && forEach(viewValue.split(separator), function (value) {
                                                        value && list.push(
                                                            trimValues
                                                                ? trim(value)
                                                                : value
                                                        )
                                                    }),
                                                    list
                                                }
                                            };
                                        ctrl
                                            .$parsers
                                            .push(parse),
                                        ctrl
                                            .$formatters
                                            .push(function (value) {
                                                if (isArray(value)) 
                                                    return value.join(ngList)
                                            }),
                                        ctrl.$isEmpty = function (value) {
                                            return !value || !value.length
                                        }
                                    }
                                }
                            },
                            VALID_CLASS = "ng-valid",
                            INVALID_CLASS = "ng-invalid",
                            PRISTINE_CLASS = "ng-pristine",
                            DIRTY_CLASS = "ng-dirty",
                            UNTOUCHED_CLASS = "ng-untouched",
                            TOUCHED_CLASS = "ng-touched",
                            EMPTY_CLASS = "ng-empty",
                            NOT_EMPTY_CLASS = "ng-not-empty",
                            ngModelMinErr = minErr("ngModel");
                        NgModelController.$inject = [
                            "$scope",
                            "$exceptionHandler",
                            "$attrs",
                            "$element",
                            "$parse",
                            "$animate",
                            "$timeout",
                            "$q",
                            "$interpolate"
                        ],
                        NgModelController.prototype = {
                            $$initGetterSetters: function () {
                                if (this.$options.getOption("getterSetter")) {
                                    var invokeModelGetter = this.$$parse(this.$$attr.ngModel + "()"),
                                        invokeModelSetter = this.$$parse(this.$$attr.ngModel + "($$$p)");
                                    this.$$ngModelGet = function ($scope) {
                                        var modelValue = this.$$parsedNgModel($scope);
                                        return isFunction(modelValue) && (modelValue = invokeModelGetter($scope)),
                                        modelValue
                                    },
                                    this.$$ngModelSet = function ($scope, newValue) {
                                        isFunction(this.$$parsedNgModel($scope))
                                            ? invokeModelSetter($scope, {$$$p: newValue})
                                            : this.$$parsedNgModelAssign($scope, newValue)
                                    }
                                } else if (!this.$$parsedNgModel.assign) 
                                    throw ngModelMinErr(
                                        "nonassign",
                                        "Expression '{0}' is non-assignable. Element: {1}",
                                        this.$$attr.ngModel,
                                        startingTag(this.$$element)
                                    )
                            },
                            $render: noop,
                            $isEmpty: function (value) {
                                return isUndefined(value) || "" === value || null === value || value !== value
                            },
                            $$updateEmptyClasses: function (value) {
                                this.$isEmpty(value)
                                    ? (
                                        this.$$animate.removeClass(this.$$element, NOT_EMPTY_CLASS),
                                        this.$$animate.addClass(this.$$element, EMPTY_CLASS)
                                    )
                                    : (
                                        this.$$animate.removeClass(this.$$element, EMPTY_CLASS),
                                        this.$$animate.addClass(this.$$element, NOT_EMPTY_CLASS)
                                    )
                            },
                            $setPristine: function () {
                                this.$dirty = !1,
                                this.$pristine = !0,
                                this
                                    .$$animate
                                    .removeClass(this.$$element, DIRTY_CLASS),
                                this
                                    .$$animate
                                    .addClass(this.$$element, PRISTINE_CLASS)
                            },
                            $setDirty: function () {
                                this.$dirty = !0,
                                this.$pristine = !1,
                                this
                                    .$$animate
                                    .removeClass(this.$$element, PRISTINE_CLASS),
                                this
                                    .$$animate
                                    .addClass(this.$$element, DIRTY_CLASS),
                                this
                                    .$$parentForm
                                    .$setDirty()
                            },
                            $setUntouched: function () {
                                this.$touched = !1,
                                this.$untouched = !0,
                                this
                                    .$$animate
                                    .setClass(this.$$element, UNTOUCHED_CLASS, TOUCHED_CLASS)
                            },
                            $setTouched: function () {
                                this.$touched = !0,
                                this.$untouched = !1,
                                this
                                    .$$animate
                                    .setClass(this.$$element, TOUCHED_CLASS, UNTOUCHED_CLASS)
                            },
                            $rollbackViewValue: function () {
                                this
                                    .$$timeout
                                    .cancel(this.$$pendingDebounce),
                                this.$viewValue = this.$$lastCommittedViewValue,
                                this.$render()
                            },
                            $validate: function () {
                                if (!isNumberNaN(this.$modelValue)) {
                                    var viewValue = this.$$lastCommittedViewValue,
                                        modelValue = this.$$rawModelValue,
                                        prevValid = this.$valid,
                                        prevModelValue = this.$modelValue,
                                        allowInvalid = this
                                            .$options
                                            .getOption("allowInvalid"),
                                        that = this;
                                    this.$$runValidators(modelValue, viewValue, function (allValid) {
                                        allowInvalid || prevValid === allValid || (
                                            that.$modelValue = allValid
                                                ? modelValue
                                                : void 0,
                                            that.$modelValue !== prevModelValue && that.$$writeModelToScope()
                                        )
                                    })
                                }
                            },
                            $$runValidators: function (modelValue, viewValue, doneCallback) {
                                function processParseErrors() {
                                    var errorKey = that.$$parserName || "parse";
                                    return isUndefined(that.$$parserValid)
                                        ? (setValidity(errorKey, null), !0)
                                        : (that.$$parserValid || (
                                            forEach(that.$validators, function (v, name) {
                                                setValidity(name, null)
                                            }),
                                            forEach(that.$asyncValidators, function (v, name) {
                                                setValidity(name, null)
                                            })
                                        ), setValidity(errorKey, that.$$parserValid), that.$$parserValid)
                                }
                                function processSyncValidators() {
                                    var syncValidatorsValid = !0;
                                    return forEach(that.$validators, function (validator, name) {
                                        var result = Boolean(validator(modelValue, viewValue));
                                        syncValidatorsValid = syncValidatorsValid && result,
                                        setValidity(name, result)
                                    }),
                                    !!syncValidatorsValid || (forEach(that.$asyncValidators, function (v, name) {
                                        setValidity(name, null)
                                    }), !1)
                                }
                                function processAsyncValidators() {
                                    var validatorPromises = [],
                                        allValid = !0;
                                    forEach(that.$asyncValidators, function (validator, name) {
                                        var promise = validator(modelValue, viewValue);
                                        if (!isPromiseLike(promise)) 
                                            throw ngModelMinErr(
                                                "nopromise",
                                                "Expected asynchronous validator to return a promise but got '{0}' instead.",
                                                promise
                                            );
                                        setValidity(name, void 0),
                                        validatorPromises.push(promise.then(function () {
                                            setValidity(name, !0)
                                        }, function () {
                                            allValid = !1,
                                            setValidity(name, !1)
                                        }))
                                    }),
                                    validatorPromises.length
                                        ? that
                                            .$$q
                                            .all(validatorPromises)
                                            .then(function () {
                                                validationDone(allValid)
                                            }, noop)
                                        : validationDone(!0)
                                }
                                function setValidity(name, isValid) {
                                    localValidationRunId === that.$$currentValidationRunId && that.$setValidity(
                                        name,
                                        isValid
                                    )
                                }
                                function validationDone(allValid) {
                                    localValidationRunId === that.$$currentValidationRunId && doneCallback(
                                        allValid
                                    )
                                }
                                this.$$currentValidationRunId++;
                                var localValidationRunId = this.$$currentValidationRunId,
                                    that = this;
                                return processParseErrors() && processSyncValidators()
                                    ? void processAsyncValidators()
                                    : void validationDone(!1)
                            },
                            $commitViewValue: function () {
                                var viewValue = this.$viewValue;
                                this
                                    .$$timeout
                                    .cancel(this.$$pendingDebounce),
                                (
                                    this.$$lastCommittedViewValue !== viewValue || "" === viewValue && this.$$hasNativeValidators
                                ) && (
                                    this.$$updateEmptyClasses(viewValue),
                                    this.$$lastCommittedViewValue = viewValue,
                                    this.$pristine && this.$setDirty(),
                                    this.$$parseAndValidate()
                                )
                            },
                            $$parseAndValidate: function () {
                                function writeToModelIfNeeded() {
                                    that.$modelValue !== prevModelValue && that.$$writeModelToScope()
                                }
                                var viewValue = this.$$lastCommittedViewValue,
                                    modelValue = viewValue,
                                    that = this;
                                if (
                                    this.$$parserValid = !isUndefined(modelValue) || void 0,
                                    this.$$parserValid
                                ) 
                                    for (var i = 0; i < this.$parsers.length; i++) 
                                        if (modelValue = this.$parsers[i](modelValue), isUndefined(modelValue)) {
                                            this.$$parserValid = !1;
                                            break
                                        }
                                    isNumberNaN(this.$modelValue) && (
                                    this.$modelValue = this.$$ngModelGet(this.$$scope)
                                );
                                var prevModelValue = this.$modelValue,
                                    allowInvalid = this
                                        .$options
                                        .getOption("allowInvalid");
                                this.$$rawModelValue = modelValue,
                                allowInvalid && (this.$modelValue = modelValue, writeToModelIfNeeded()),
                                this.$$runValidators(
                                    modelValue,
                                    this.$$lastCommittedViewValue,
                                    function (allValid) {
                                        allowInvalid || (
                                            that.$modelValue = allValid
                                                ? modelValue
                                                : void 0,
                                            writeToModelIfNeeded()
                                        )
                                    }
                                )
                            },
                            $$writeModelToScope: function () {
                                this.$$ngModelSet(this.$$scope, this.$modelValue),
                                forEach(this.$viewChangeListeners, function (listener) {
                                    try {
                                        listener()
                                    } catch (e) {
                                        this.$$exceptionHandler(e)
                                    }
                                }, this)
                            },
                            $setViewValue: function (value, trigger) {
                                this.$viewValue = value,
                                this
                                    .$options
                                    .getOption("updateOnDefault") && this.$$debounceViewValueCommit(trigger)
                            },
                            $$debounceViewValueCommit: function (trigger) {
                                var debounceDelay = this
                                    .$options
                                    .getOption("debounce");
                                isNumber(debounceDelay[trigger])
                                    ? debounceDelay = debounceDelay[trigger]
                                    : isNumber(debounceDelay.default) && (debounceDelay = debounceDelay.default),
                                this
                                    .$$timeout
                                    .cancel(this.$$pendingDebounce);
                                var that = this;
                                debounceDelay > 0
                                    ? this.$$pendingDebounce = this.$$timeout(function () {
                                        that.$commitViewValue()
                                    }, debounceDelay)
                                    : this.$$scope.$root.$$phase
                                        ? this.$commitViewValue()
                                        : this
                                            .$$scope
                                            .$apply(function () {
                                                that.$commitViewValue()
                                            })
                            }
                        },
                        addSetValidityMethod({
                            clazz: NgModelController,
                            set: function (object, property) {
                                object[property] = !0
                            },
                            unset: function (object, property) {
                                delete object[property]
                            }
                        });
                        var defaultModelOptions,
                            ngModelDirective = [
                                "$rootScope",
                                function ($rootScope) {
                                    return {
                                        restrict: "A",
                                        require: [
                                            "ngModel", "^?form", "^?ngModelOptions"
                                        ],
                                        controller: NgModelController,
                                        priority: 1,
                                        compile: function ngModelCompile(element) {
                                            return element
                                                .addClass(PRISTINE_CLASS)
                                                .addClass(UNTOUCHED_CLASS)
                                                .addClass(VALID_CLASS), {
                                                pre: function ngModelPreLink(scope, element, attr, ctrls) {
                                                    var modelCtrl = ctrls[0],
                                                        formCtrl = ctrls[1] || modelCtrl.$$parentForm,
                                                        optionsCtrl = ctrls[2];
                                                    optionsCtrl && (modelCtrl.$options = optionsCtrl.$options),
                                                    modelCtrl.$$initGetterSetters(),
                                                    formCtrl.$addControl(modelCtrl),
                                                    attr.$observe("name", function (newValue) {
                                                        modelCtrl.$name !== newValue && modelCtrl
                                                            .$$parentForm
                                                            .$$renameControl(modelCtrl, newValue)
                                                    }),
                                                    scope.$on("$destroy", function () {
                                                        modelCtrl
                                                            .$$parentForm
                                                            .$removeControl(modelCtrl)
                                                    })
                                                },
                                                post: function ngModelPostLink(scope, element, attr, ctrls) {
                                                    function setTouched() {
                                                        modelCtrl.$setTouched()
                                                    }
                                                    var modelCtrl = ctrls[0];
                                                    modelCtrl
                                                        .$options
                                                        .getOption("updateOn") && element.on(
                                                            modelCtrl.$options.getOption("updateOn"),
                                                            function (ev) {
                                                            modelCtrl.$$debounceViewValueCommit(ev && ev.type)
                                                        }
                                                        ),
                                                    element.on("blur", function () {
                                                        modelCtrl.$touched || (
                                                            $rootScope.$$phase
                                                                ? scope.$evalAsync(setTouched)
                                                                : scope.$apply(setTouched)
                                                        )
                                                    })
                                                }
                                            }
                                        }
                                    }
                                }
                            ],
                            DEFAULT_REGEXP = /(\s+|^)default(\s+|$)/;
                        ModelOptions.prototype = {
                            getOption: function (name) {
                                return this.$$options[name]
                            },
                            createChild: function (options) {
                                var inheritAll = !1;
                                return options = extend({}, options),
                                forEach(options, function (option, key) {
                                    "$inherit" === option
                                        ? "*" === key
                                            ? inheritAll = !0
                                            : (
                                                options[key] = this.$$options[key],
                                                "updateOn" === key && (options.updateOnDefault = this.$$options.updateOnDefault)
                                            )
                                        : "updateOn" === key && (
                                            options.updateOnDefault = !1,
                                            options[key] = trim(option.replace(DEFAULT_REGEXP, function () {
                                                return options.updateOnDefault = !0,
                                                " "
                                            }))
                                        )
                                }, this),
                                inheritAll && (delete options["*"], defaults(options, this.$$options)),
                                defaults(options, defaultModelOptions.$$options),
                                new ModelOptions(options)
                            }
                        },
                        defaultModelOptions = new ModelOptions({
                            updateOn: "",
                            updateOnDefault: !0,
                            debounce: 0,
                            getterSetter: !1,
                            allowInvalid: !1,
                            timezone: null
                        });
                        var ngModelOptionsDirective = function () {
                                function NgModelOptionsController($attrs, $scope) {
                                    this.$$attrs = $attrs,
                                    this.$$scope = $scope
                                }
                                return NgModelOptionsController.$inject = [
                                    "$attrs", "$scope"
                                ],
                                NgModelOptionsController.prototype = {
                                    $onInit: function () {
                                        var parentOptions = this.parentCtrl
                                                ? this.parentCtrl.$options
                                                : defaultModelOptions,
                                            modelOptionsDefinition = this
                                                .$$scope
                                                .$eval(this.$$attrs.ngModelOptions);
                                        this.$options = parentOptions.createChild(modelOptionsDefinition)
                                    }
                                }, {
                                    restrict: "A",
                                    priority: 10,
                                    require: {
                                        parentCtrl: "?^^ngModelOptions"
                                    },
                                    bindToController: !0,
                                    controller: NgModelOptionsController
                                }
                            },
                            ngNonBindableDirective = ngDirective({
                                terminal: !0,
                                priority: 1e3
                            }),
                            ngOptionsMinErr = minErr("ngOptions"),
                            NG_OPTIONS_REGEXP = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([$\w][$\w]*)|(?:\(\s*([$\w][$\w]*)\s*,\s*([$\w][$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
                            ngOptionsDirective = [
                                "$compile",
                                "$document",
                                "$parse",
                                function ($compile, $document, $parse) {
                                    function parseOptionsExpression(optionsExp, selectElement, scope) {
                                        function Option(selectValue, viewValue, label, group, disabled) {
                                            this.selectValue = selectValue,
                                            this.viewValue = viewValue,
                                            this.label = label,
                                            this.group = group,
                                            this.disabled = disabled
                                        }
                                        function getOptionValuesKeys(optionValues) {
                                            var optionValuesKeys;
                                            if (!keyName && isArrayLike(optionValues)) 
                                                optionValuesKeys = optionValues;
                                            else {
                                                optionValuesKeys = [];
                                                for (var itemKey in optionValues) 
                                                    optionValues.hasOwnProperty(itemKey) && "$" !== itemKey.charAt(0) && optionValuesKeys.push(
                                                        itemKey
                                                    )
                                            }
                                            return optionValuesKeys
                                        }
                                        var match = optionsExp.match(NG_OPTIONS_REGEXP);
                                        if (!match) 
                                            throw ngOptionsMinErr(
                                                "iexp",
                                                "Expected expression in form of '_select_ (as _label_)? for (_key_,)?_value_ in" +
                                                        " _collection_' but got '{0}'. Element: {1}",
                                                optionsExp,
                                                startingTag(selectElement)
                                            );
                                        var valueName = match[5] || match[7],
                                            keyName = match[6],
                                            selectAs = / as /.test(match[0]) && match[1],
                                            trackBy = match[9],
                                            valueFn = $parse(
                                                match[2]
                                                    ? match[1]
                                                    : valueName
                                            ),
                                            selectAsFn = selectAs && $parse(selectAs),
                                            viewValueFn = selectAsFn || valueFn,
                                            trackByFn = trackBy && $parse(trackBy),
                                            getTrackByValueFn = trackBy
                                                ? function (value, locals) {
                                                    return trackByFn(scope, locals)
                                                }
                                                : function getHashOfValue(value) {
                                                    return hashKey(value)
                                                },
                                            getTrackByValue = function (value, key) {
                                                return getTrackByValueFn(value, getLocals(value, key))
                                            },
                                            displayFn = $parse(match[2] || match[1]),
                                            groupByFn = $parse(match[3] || ""),
                                            disableWhenFn = $parse(match[4] || ""),
                                            valuesFn = $parse(match[8]),
                                            locals = {},
                                            getLocals = keyName
                                                ? function (value, key) {
                                                    return locals[keyName] = key,
                                                    locals[valueName] = value,
                                                    locals
                                                }
                                                : function (value) {
                                                    return locals[valueName] = value,
                                                    locals
                                                };
                                        return {
                                            trackBy: trackBy,
                                            getTrackByValue: getTrackByValue,
                                            getWatchables: $parse(valuesFn, function (optionValues) {
                                                var watchedArray = [];
                                                optionValues = optionValues || [];
                                                for (
                                                    var optionValuesKeys = getOptionValuesKeys(optionValues),
                                                    optionValuesLength = optionValuesKeys.length,
                                                    index = 0;
                                                    index < optionValuesLength;
                                                    index++
                                                ) {
                                                    var key = optionValues === optionValuesKeys
                                                            ? index
                                                            : optionValuesKeys[index],
                                                        value = optionValues[key],
                                                        locals = getLocals(value, key),
                                                        selectValue = getTrackByValueFn(value, locals);
                                                    if (watchedArray.push(selectValue), match[2] || match[1]) {
                                                        var label = displayFn(scope, locals);
                                                        watchedArray.push(label)
                                                    }
                                                    if (match[4]) {
                                                        var disableWhen = disableWhenFn(scope, locals);
                                                        watchedArray.push(disableWhen)
                                                    }
                                                }
                                                return watchedArray
                                            }),
                                            getOptions: function () {
                                                for (
                                                    var optionItems = [],
                                                    selectValueMap = {},
                                                    optionValues = valuesFn(scope) || [],
                                                    optionValuesKeys = getOptionValuesKeys(optionValues),
                                                    optionValuesLength = optionValuesKeys.length,
                                                    index = 0;
                                                    index < optionValuesLength;
                                                    index++
                                                ) {
                                                    var key = optionValues === optionValuesKeys
                                                            ? index
                                                            : optionValuesKeys[index],
                                                        value = optionValues[key],
                                                        locals = getLocals(value, key),
                                                        viewValue = viewValueFn(scope, locals),
                                                        selectValue = getTrackByValueFn(viewValue, locals),
                                                        label = displayFn(scope, locals),
                                                        group = groupByFn(scope, locals),
                                                        disabled = disableWhenFn(scope, locals),
                                                        optionItem = new Option(selectValue, viewValue, label, group, disabled);
                                                    optionItems.push(optionItem),
                                                    selectValueMap[selectValue] = optionItem
                                                }
                                                return {
                                                    items: optionItems,
                                                    selectValueMap: selectValueMap,
                                                    getOptionFromViewValue: function (value) {
                                                        return selectValueMap[getTrackByValue(value)]
                                                    },
                                                    getViewValueFromOption: function (option) {
                                                        return trackBy
                                                            ? copy(option.viewValue)
                                                            : option.viewValue
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    function ngOptionsPostLink(scope, selectElement, attr, ctrls) {
                                        function addOptionElement(option, parent) {
                                            var optionElement = optionTemplate.cloneNode(!1);
                                            parent.appendChild(optionElement),
                                            updateOptionElement(option, optionElement)
                                        }
                                        function getAndUpdateSelectedOption(viewValue) {
                                            var option = options.getOptionFromViewValue(viewValue),
                                                element = option && option.element;
                                            return element && !element.selected && (element.selected = !0),
                                            option
                                        }
                                        function updateOptionElement(option, element) {
                                            option.element = element,
                                            element.disabled = option.disabled,
                                            option.label !== element.label && (
                                                element.label = option.label,
                                                element.textContent = option.label
                                            ),
                                            element.value = option.selectValue
                                        }
                                        function updateOptions() {
                                            var previousValue = options && selectCtrl.readValue();
                                            if (options) 
                                                for (var i = options.items.length - 1; i >= 0; i--) {
                                                    var option = options.items[i];
                                                    jqLiteRemove(
                                                        isDefined(option.group)
                                                            ? option.element.parentNode
                                                            : option.element
                                                    )
                                                }
                                            options = ngOptions.getOptions();
                                            var groupElementMap = {};
                                            if (
                                                providedEmptyOption && selectElement.prepend(selectCtrl.emptyOption),
                                                options.items.forEach(function addOption(option) {
                                                    var groupElement;
                                                    isDefined(option.group)
                                                        ? (groupElement = groupElementMap[option.group], groupElement || (
                                                            groupElement = optGroupTemplate.cloneNode(!1),
                                                            listFragment.appendChild(groupElement),
                                                            groupElement.label = null === option.group
                                                                ? "null"
                                                                : option.group,
                                                            groupElementMap[option.group] = groupElement
                                                        ), addOptionElement(option, groupElement))
                                                        : addOptionElement(option, listFragment)
                                                }),
                                                selectElement[0].appendChild(listFragment),
                                                ngModelCtrl.$render(),
                                                !ngModelCtrl.$isEmpty(previousValue)
                                            ) {
                                                var nextValue = selectCtrl.readValue();
                                                (
                                                    ngOptions.trackBy || multiple
                                                        ? equals(previousValue, nextValue)
                                                        : previousValue === nextValue
                                                ) || (ngModelCtrl.$setViewValue(nextValue), ngModelCtrl.$render())
                                            }
                                        }
                                        for (
                                            var selectCtrl = ctrls[0],
                                            ngModelCtrl = ctrls[1],
                                            multiple = attr.multiple,
                                            i = 0,
                                            children = selectElement.children(),
                                            ii = children.length;
                                            i < ii;
                                            i++
                                        ) 
                                            if ("" === children[i].value) {
                                                selectCtrl.hasEmptyOption = !0,
                                                selectCtrl.emptyOption = children.eq(i);
                                                break
                                            }
                                        var providedEmptyOption = !!selectCtrl.emptyOption;
                                        jqLite(optionTemplate.cloneNode(!1)).val("?");
                                        var options,
                                            ngOptions = parseOptionsExpression(attr.ngOptions, selectElement, scope),
                                            listFragment = $document[0].createDocumentFragment();
                                        selectCtrl.generateUnknownOptionValue = function (val) {
                                            return "?"
                                        },
                                        multiple
                                            ? (
                                                selectCtrl.writeValue = function writeNgOptionsMultiple(values) {
                                                    var selectedOptions = values && values.map(getAndUpdateSelectedOption) || [];
                                                    options
                                                        .items
                                                        .forEach(function (option) {
                                                            option.element.selected && !includes(selectedOptions, option) && (
                                                                option.element.selected = !1
                                                            )
                                                        })
                                                },
                                                selectCtrl.readValue = function readNgOptionsMultiple() {
                                                    var selectedValues = selectElement.val() || [],
                                                        selections = [];
                                                    return forEach(selectedValues, function (value) {
                                                        var option = options.selectValueMap[value];
                                                        option && !option.disabled && selections.push(
                                                            options.getViewValueFromOption(option)
                                                        )
                                                    }),
                                                    selections
                                                },
                                                ngOptions.trackBy && scope.$watchCollection(function () {
                                                    if (isArray(ngModelCtrl.$viewValue)) 
                                                        return ngModelCtrl
                                                            .$viewValue
                                                            .map(function (value) {
                                                                return ngOptions.getTrackByValue(value)
                                                            })
                                                    }, function () {
                                                    ngModelCtrl.$render()
                                                })
                                            )
                                            : (
                                                selectCtrl.writeValue = function writeNgOptionsValue(value) {
                                                    var selectedOption = options.selectValueMap[selectElement.val()],
                                                        option = options.getOptionFromViewValue(value);
                                                    selectedOption && selectedOption
                                                        .element
                                                        .removeAttribute("selected"),
                                                    option
                                                        ? (selectElement[0].value !== option.selectValue && (
                                                            selectCtrl.removeUnknownOption(),
                                                            selectCtrl.unselectEmptyOption(),
                                                            selectElement[0].value = option.selectValue,
                                                            option.element.selected = !0
                                                        ), option.element.setAttribute("selected", "selected"))
                                                        : providedEmptyOption
                                                            ? selectCtrl.selectEmptyOption()
                                                            : selectCtrl
                                                                .unknownOption
                                                                .parent()
                                                                .length
                                                                    ? selectCtrl.updateUnknownOption(value)
                                                                    : selectCtrl.renderUnknownOption(value)
                                                },
                                                selectCtrl.readValue = function readNgOptionsValue() {
                                                    var selectedOption = options.selectValueMap[selectElement.val()];
                                                    return selectedOption && !selectedOption.disabled
                                                        ? (
                                                            selectCtrl.unselectEmptyOption(),
                                                            selectCtrl.removeUnknownOption(),
                                                            options.getViewValueFromOption(selectedOption)
                                                        )
                                                        : null
                                                },
                                                ngOptions.trackBy && scope.$watch(function () {
                                                    return ngOptions.getTrackByValue(ngModelCtrl.$viewValue)
                                                }, function () {
                                                    ngModelCtrl.$render()
                                                })
                                            ),
                                        providedEmptyOption && (
                                            selectCtrl.emptyOption.remove(),
                                            $compile(selectCtrl.emptyOption)(
                                                scope
                                            ),
                                            selectCtrl.emptyOption[0].nodeType === NODE_TYPE_COMMENT
                                                ? (
                                                    selectCtrl.hasEmptyOption = !1,
                                                    selectCtrl.registerOption = function (optionScope, optionEl) {
                                                        "" === optionEl.val() && (
                                                            selectCtrl.hasEmptyOption = !0,
                                                            selectCtrl.emptyOption = optionEl,
                                                            selectCtrl.emptyOption.removeClass("ng-scope"),
                                                            ngModelCtrl.$render(),
                                                            optionEl.on("$destroy", function () {
                                                                selectCtrl.hasEmptyOption = !1,
                                                                selectCtrl.emptyOption = void 0
                                                            })
                                                        )
                                                    }
                                                )
                                                : selectCtrl.emptyOption.removeClass("ng-scope")
                                        ),
                                        selectElement.empty(),
                                        updateOptions(),
                                        scope.$watchCollection(ngOptions.getWatchables, updateOptions)
                                    }
                                    var optionTemplate = window
                                            .document
                                            .createElement("option"),
                                        optGroupTemplate = window
                                            .document
                                            .createElement("optgroup");
                                    return {
                                        restrict: "A",
                                        terminal: !0,
                                        require: [
                                            "select", "ngModel"
                                        ],
                                        link: {
                                            pre: function ngOptionsPreLink(scope, selectElement, attr, ctrls) {
                                                ctrls[0].registerOption = noop
                                            },
                                            post: ngOptionsPostLink
                                        }
                                    }
                                }
                            ],
                            ngPluralizeDirective = [
                                "$locale",
                                "$interpolate",
                                "$log",
                                function ($locale, $interpolate, $log) {
                                    var BRACE = /{}/g,
                                        IS_WHEN = /^when(Minus)?(.+)$/;
                                    return {
                                        link: function (scope, element, attr) {
                                            function updateElementText(newText) {
                                                element.text(newText || "")
                                            }
                                            var lastCount,
                                                numberExp = attr.count,
                                                whenExp = attr.$attr.when && element.attr(attr.$attr.when),
                                                offset = attr.offset || 0,
                                                whens = scope.$eval(whenExp) || {},
                                                whensExpFns = {},
                                                startSymbol = $interpolate.startSymbol(),
                                                endSymbol = $interpolate.endSymbol(),
                                                braceReplacement = startSymbol + numberExp + "-" + offset + endSymbol,
                                                watchRemover = angular.noop;
                                            forEach(attr, function (expression, attributeName) {
                                                var tmpMatch = IS_WHEN.exec(attributeName);
                                                if (tmpMatch) {
                                                    var whenKey = (
                                                        tmpMatch[1]
                                                            ? "-"
                                                            : ""
                                                    ) + lowercase(tmpMatch[2]);
                                                    whens[whenKey] = element.attr(attr.$attr[attributeName])
                                                }
                                            }),
                                            forEach(whens, function (expression, key) {
                                                whensExpFns[key] = $interpolate(expression.replace(BRACE, braceReplacement))
                                            }),
                                            scope.$watch(numberExp, function ngPluralizeWatchAction(newVal) {
                                                var count = parseFloat(newVal),
                                                    countIsNaN = isNumberNaN(count);
                                                if (
                                                    countIsNaN || count in whens || (count = $locale.pluralCat(count - offset)),
                                                    !(count === lastCount || countIsNaN && isNumberNaN(lastCount))
                                                ) {
                                                    watchRemover();
                                                    var whenExpFn = whensExpFns[count];
                                                    isUndefined(whenExpFn)
                                                        ? (null != newVal && $log.debug(
                                                            "ngPluralize: no rule defined for '" + count + "' in " + whenExp
                                                        ), watchRemover = noop, updateElementText())
                                                        : watchRemover = scope.$watch(whenExpFn, updateElementText),
                                                    lastCount = count
                                                }
                                            })
                                        }
                                    }
                                }
                            ],
                            ngRepeatDirective = [
                                "$parse",
                                "$animate",
                                "$compile",
                                function ($parse, $animate, $compile) {
                                    var NG_REMOVED = "$$NG_REMOVED",
                                        ngRepeatMinErr = minErr("ngRepeat"),
                                        updateScope = function (
                                            scope,
                                            index,
                                            valueIdentifier,
                                            value,
                                            keyIdentifier,
                                            key,
                                            arrayLength
                                        ) {
                                            scope[valueIdentifier] = value,
                                            keyIdentifier && (scope[keyIdentifier] = key),
                                            scope.$index = index,
                                            scope.$first = 0 === index,
                                            scope.$last = index === arrayLength - 1,
                                            scope.$middle = !(scope.$first || scope.$last),
                                            scope.$odd = !(scope.$even = 0 == (1 & index))
                                        },
                                        getBlockStart = function (block) {
                                            return block.clone[0]
                                        },
                                        getBlockEnd = function (block) {
                                            return block.clone[block.clone.length - 1]
                                        };
                                    return {
                                        restrict: "A",
                                        multiElement: !0,
                                        transclude: "element",
                                        priority: 1e3,
                                        terminal: !0,
                                        $$tlb: !0,
                                        compile: function ngRepeatCompile($element, $attr) {
                                            var expression = $attr.ngRepeat,
                                                ngRepeatEndComment = $compile.$$createComment("end ngRepeat", expression),
                                                match = expression.match(
                                                    /^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/
                                                );
                                            if (!match) 
                                                throw ngRepeatMinErr(
                                                    "iexp",
                                                    "Expected expression in form of '_item_ in _collection_[ track by _id_]' but go" +
                                                            "t '{0}'.",
                                                    expression
                                                );
                                            var lhs = match[1],
                                                rhs = match[2],
                                                aliasAs = match[3],
                                                trackByExp = match[4];
                                            if (!(match = lhs.match(/^(?:(\s*[$\w]+)|\(\s*([$\w]+)\s*,\s*([$\w]+)\s*\))$/))) 
                                                throw ngRepeatMinErr(
                                                    "iidexp",
                                                    "'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _valu" +
                                                            "e_)' expression, but got '{0}'.",
                                                    lhs
                                                );
                                            var valueIdentifier = match[3] || match[1],
                                                keyIdentifier = match[2];
                                            if (aliasAs && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(aliasAs))) 
                                                throw ngRepeatMinErr(
                                                    "badident",
                                                    "alias '{0}' is invalid --- must be a valid JS identifier which is not a reserv" +
                                                            "ed name.",
                                                    aliasAs
                                                );
                                            var trackByExpGetter,
                                                trackByIdExpFn,
                                                trackByIdArrayFn,
                                                trackByIdObjFn,
                                                hashFnLocals = {
                                                    $id: hashKey
                                                };
                                            return trackByExp
                                                ? trackByExpGetter = $parse(trackByExp)
                                                : (trackByIdArrayFn = function (key, value) {
                                                    return hashKey(value)
                                                }, trackByIdObjFn = function (key) {
                                                    return key
                                                }),
                                            function ngRepeatLink($scope, $element, $attr, ctrl, $transclude) {
                                                trackByExpGetter && (trackByIdExpFn = function (key, value, index) {
                                                    return keyIdentifier && (hashFnLocals[keyIdentifier] = key),
                                                    hashFnLocals[valueIdentifier] = value,
                                                    hashFnLocals.$index = index,
                                                    trackByExpGetter($scope, hashFnLocals)
                                                });
                                                var lastBlockMap = createMap();
                                                $scope.$watchCollection(rhs, function ngRepeatAction(collection) {
                                                    var index,
                                                        length,
                                                        nextNode,
                                                        collectionLength,
                                                        key,
                                                        value,
                                                        trackById,
                                                        trackByIdFn,
                                                        collectionKeys,
                                                        block,
                                                        nextBlockOrder,
                                                        elementsToRemove,
                                                        previousNode = $element[0],
                                                        nextBlockMap = createMap();
                                                    if (aliasAs && ($scope[aliasAs] = collection), isArrayLike(collection)) 
                                                        collectionKeys = collection,
                                                        trackByIdFn = trackByIdExpFn || trackByIdArrayFn;
                                                    else {
                                                        trackByIdFn = trackByIdExpFn || trackByIdObjFn,
                                                        collectionKeys = [];
                                                        for (var itemKey in collection) 
                                                            hasOwnProperty.call(collection, itemKey) && "$" !== itemKey.charAt(0) && collectionKeys.push(
                                                                itemKey
                                                            )
                                                    }
                                                    for (
                                                        collectionLength = collectionKeys.length,
                                                        nextBlockOrder = new Array(collectionLength),
                                                        index = 0;
                                                        index < collectionLength;
                                                        index++
                                                    ) 
                                                        if (
                                                            key = collection === collectionKeys
                                                                ? index
                                                                : collectionKeys[index],
                                                            value = collection[key],
                                                            trackById = trackByIdFn(key, value, index),
                                                            lastBlockMap[trackById]
                                                        ) 
                                                            block = lastBlockMap[trackById],
                                                            delete lastBlockMap[trackById],
                                                            nextBlockMap[trackById] = block,
                                                            nextBlockOrder[index] = block;
                                                        else {
                                                            if (nextBlockMap[trackById]) 
                                                                throw forEach(nextBlockOrder, function (block) {
                                                                    block && block.scope && (lastBlockMap[block.id] = block)
                                                                }),
                                                                ngRepeatMinErr(
                                                                    "dupes",
                                                                    "Duplicates in a repeater are not allowed. Use 'track by' expression to specify" +
                                                                            " unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}",
                                                                    expression,
                                                                    trackById,
                                                                    value
                                                                );
                                                            nextBlockOrder[index] = {
                                                                id: trackById,
                                                                scope: void 0,
                                                                clone: void 0
                                                            },
                                                            nextBlockMap[trackById] = !0
                                                        }
                                                    for (var blockKey in lastBlockMap) {
                                                        if (
                                                            block = lastBlockMap[blockKey],
                                                            elementsToRemove = getBlockNodes(block.clone),
                                                            $animate.leave(elementsToRemove),
                                                            elementsToRemove[0].parentNode
                                                        ) 
                                                            for (index = 0, length = elementsToRemove.length; index < length; index++) 
                                                                elementsToRemove[index][NG_REMOVED] = !0;
                                                    block
                                                            .scope
                                                            .$destroy()
                                                    }
                                                    for (index = 0; index < collectionLength; index++) 
                                                        if (
                                                            key = collection === collectionKeys
                                                                ? index
                                                                : collectionKeys[index],
                                                            value = collection[key],
                                                            block = nextBlockOrder[index],
                                                            block.scope
                                                        ) {
                                                            nextNode = previousNode;
                                                            do {
                                                                nextNode = nextNode.nextSibling
                                                            } while (nextNode && nextNode[NG_REMOVED]);
                                                            getBlockStart(block) !== nextNode && $animate.move(
                                                                getBlockNodes(block.clone),
                                                                null,
                                                                previousNode
                                                            ),
                                                            previousNode = getBlockEnd(block),
                                                            updateScope(
                                                                block.scope,
                                                                index,
                                                                valueIdentifier,
                                                                value,
                                                                keyIdentifier,
                                                                key,
                                                                collectionLength
                                                            )
                                                        }
                                                    else 
                                                        $transclude(function ngRepeatTransclude(clone, scope) {
                                                            block.scope = scope;
                                                            var endNode = ngRepeatEndComment.cloneNode(!1);
                                                            clone[clone.length++] = endNode,
                                                            $animate.enter(clone, null, previousNode),
                                                            previousNode = endNode,
                                                            block.clone = clone,
                                                            nextBlockMap[block.id] = block,
                                                            updateScope(
                                                                block.scope,
                                                                index,
                                                                valueIdentifier,
                                                                value,
                                                                keyIdentifier,
                                                                key,
                                                                collectionLength
                                                            )
                                                        });
                                                    lastBlockMap = nextBlockMap
                                                })
                                            }
                                        }
                                    }
                                }
                            ],
                            NG_HIDE_CLASS = "ng-hide",
                            NG_HIDE_IN_PROGRESS_CLASS = "ng-hide-animate",
                            ngShowDirective = [
                                "$animate",
                                function ($animate) {
                                    return {
                                        restrict: "A",
                                        multiElement: !0,
                                        link: function (scope, element, attr) {
                                            scope.$watch(attr.ngShow, function ngShowWatchAction(value) {
                                                $animate[
                                                    value
                                                        ? "removeClass"
                                                        : "addClass"
                                                ](element, NG_HIDE_CLASS, {tempClasses: NG_HIDE_IN_PROGRESS_CLASS})
                                            })
                                        }
                                    }
                                }
                            ],
                            ngHideDirective = [
                                "$animate",
                                function ($animate) {
                                    return {
                                        restrict: "A",
                                        multiElement: !0,
                                        link: function (scope, element, attr) {
                                            scope.$watch(attr.ngHide, function ngHideWatchAction(value) {
                                                $animate[
                                                    value
                                                        ? "addClass"
                                                        : "removeClass"
                                                ](element, NG_HIDE_CLASS, {tempClasses: NG_HIDE_IN_PROGRESS_CLASS})
                                            })
                                        }
                                    }
                                }
                            ],
                            ngStyleDirective = ngDirective(function (scope, element, attr) {
                                scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {
                                    oldStyles && newStyles !== oldStyles && forEach(
                                        oldStyles,
                                        function (val, style) {
                                            element.css(style, "")
                                        }
                                    ),
                                    newStyles && element.css(newStyles)
                                }, !0)
                            }),
                            ngSwitchDirective = [
                                "$animate",
                                "$compile",
                                function ($animate, $compile) {
                                    return {
                                        require: "ngSwitch",
                                        controller: [
                                            "$scope",
                                            function NgSwitchController() {
                                                this.cases = {}
                                            }
                                        ],
                                        link: function (scope, element, attr, ngSwitchController) {
                                            var watchExpr = attr.ngSwitch || attr.on,
                                                selectedTranscludes = [],
                                                selectedElements = [],
                                                previousLeaveAnimations = [],
                                                selectedScopes = [],
                                                spliceFactory = function (array, index) {
                                                    return function (response) {
                                                        !1 !== response && array.splice(index, 1)
                                                    }
                                                };
                                            scope.$watch(watchExpr, function ngSwitchWatchAction(value) {
                                                for (var i, ii; previousLeaveAnimations.length;) 
                                                    $animate.cancel(previousLeaveAnimations.pop());
                                                for (i = 0, ii = selectedScopes.length; i < ii; ++i) {
                                                    var selected = getBlockNodes(selectedElements[i].clone);
                                                    selectedScopes[i].$destroy();
                                                    (previousLeaveAnimations[i] = $animate.leave(selected)).done(
                                                        spliceFactory(previousLeaveAnimations, i)
                                                    )
                                                }
                                                selectedElements.length = 0,
                                                selectedScopes.length = 0,
                                                (
                                                    selectedTranscludes = ngSwitchController.cases["!" + value] || ngSwitchController.cases["?"]
                                                ) && forEach(selectedTranscludes, function (selectedTransclude) {
                                                    selectedTransclude.transclude(function (caseElement, selectedScope) {
                                                        selectedScopes.push(selectedScope);
                                                        var anchor = selectedTransclude.element;
                                                        caseElement[caseElement.length++] = $compile.$$createComment(
                                                            "end ngSwitchWhen"
                                                        );
                                                        var block = {
                                                            clone: caseElement
                                                        };
                                                        selectedElements.push(block),
                                                        $animate.enter(caseElement, anchor.parent(), anchor)
                                                    })
                                                })
                                            })
                                        }
                                    }
                                }
                            ],
                            ngSwitchWhenDirective = ngDirective({
                                transclude: "element",
                                priority: 1200,
                                require: "^ngSwitch",
                                multiElement: !0,
                                link: function (scope, element, attrs, ctrl, $transclude) {
                                    forEach(
                                        attrs.ngSwitchWhen.split(attrs.ngSwitchWhenSeparator).sort().filter(function (element, index, array) {
                                            return array[index - 1] !== element
                                        }),
                                        function (whenCase) {
                                            ctrl.cases["!" + whenCase] = ctrl.cases["!" + whenCase] || [],
                                            ctrl
                                                .cases["!" + whenCase]
                                                .push({transclude: $transclude, element: element})
                                        }
                                    )
                                }
                            }),
                            ngSwitchDefaultDirective = ngDirective({
                                transclude: "element",
                                priority: 1200,
                                require: "^ngSwitch",
                                multiElement: !0,
                                link: function (scope, element, attr, ctrl, $transclude) {
                                    ctrl.cases["?"] = ctrl.cases["?"] || [],
                                    ctrl
                                        .cases["?"]
                                        .push({transclude: $transclude, element: element})
                                }
                            }),
                            ngTranscludeMinErr = minErr("ngTransclude"),
                            ngTranscludeDirective = [
                                "$compile",
                                function ($compile) {
                                    return {
                                        restrict: "EAC",
                                        terminal: !0,
                                        compile: function ngTranscludeCompile(tElement) {
                                            var fallbackLinkFn = $compile(tElement.contents());
                                            return tElement.empty(),
                                            function ngTranscludePostLink(
                                                $scope,
                                                $element,
                                                $attrs,
                                                controller,
                                                $transclude
                                            ) {
                                                function ngTranscludeCloneAttachFn(clone, transcludedScope) {
                                                    clone.length && notWhitespace(clone)
                                                        ? $element.append(clone)
                                                        : (useFallbackContent(), transcludedScope.$destroy())
                                                }
                                                function useFallbackContent() {
                                                    fallbackLinkFn($scope, function (clone) {
                                                        $element.append(clone)
                                                    })
                                                }
                                                function notWhitespace(nodes) {
                                                    for (var i = 0, ii = nodes.length; i < ii; i++) {
                                                        var node = nodes[i];
                                                        if (node.nodeType !== NODE_TYPE_TEXT || node.nodeValue.trim()) 
                                                            return !0
                                                    }
                                                }
                                                if (!$transclude) 
                                                    throw ngTranscludeMinErr(
                                                        "orphan",
                                                        "Illegal use of ngTransclude directive in the template! No parent directive tha" +
                                                                "t requires a transclusion found. Element: {0}",
                                                        startingTag($element)
                                                    );
                                                $attrs.ngTransclude === $attrs.$attr.ngTransclude && ($attrs.ngTransclude = "");
                                                var slotName = $attrs.ngTransclude || $attrs.ngTranscludeSlot;
                                                $transclude(ngTranscludeCloneAttachFn, null, slotName),
                                                slotName && !$transclude.isSlotFilled(slotName) && useFallbackContent()
                                            }
                                        }
                                    }
                                }
                            ],
                            scriptDirective = [
                                "$templateCache",
                                function ($templateCache) {
                                    return {
                                        restrict: "E",
                                        terminal: !0,
                                        compile: function (element, attr) {
                                            if ("text/ng-template" === attr.type) {
                                                var templateUrl = attr.id,
                                                    text = element[0].text;
                                                $templateCache.put(templateUrl, text)
                                            }
                                        }
                                    }
                                }
                            ],
                            noopNgModelController = {
                                $setViewValue: noop,
                                $render: noop
                            },
                            SelectController = [
                                "$element",
                                "$scope",
                                function ($element, $scope) {
                                    function scheduleRender() {
                                        renderScheduled || (renderScheduled = !0, $scope.$$postDigest(function () {
                                            renderScheduled = !1,
                                            self
                                                .ngModelCtrl
                                                .$render()
                                        }))
                                    }
                                    function scheduleViewValueUpdate(renderAfter) {
                                        updateScheduled || (updateScheduled = !0, $scope.$$postDigest(function () {
                                            $scope.$$destroyed || (
                                                updateScheduled = !1,
                                                self.ngModelCtrl.$setViewValue(self.readValue()),
                                                renderAfter && self.ngModelCtrl.$render()
                                            )
                                        }))
                                    }
                                    function setOptionAsSelected(optionEl) {
                                        optionEl.prop("selected", !0),
                                        optionEl.attr("selected", !0)
                                    }
                                    var self = this,
                                        optionsMap = new HashMap;
                                    self.selectValueMap = {},
                                    self.ngModelCtrl = noopNgModelController,
                                    self.multiple = !1,
                                    self.unknownOption = jqLite(window.document.createElement("option")),
                                    self.hasEmptyOption = !1,
                                    self.emptyOption = void 0,
                                    self.renderUnknownOption = function (val) {
                                        var unknownVal = self.generateUnknownOptionValue(val);
                                        self
                                            .unknownOption
                                            .val(unknownVal),
                                        $element.prepend(self.unknownOption),
                                        setOptionAsSelected(self.unknownOption),
                                        $element.val(unknownVal)
                                    },
                                    self.updateUnknownOption = function (val) {
                                        var unknownVal = self.generateUnknownOptionValue(val);
                                        self
                                            .unknownOption
                                            .val(unknownVal),
                                        setOptionAsSelected(self.unknownOption),
                                        $element.val(unknownVal)
                                    },
                                    self.generateUnknownOptionValue = function (val) {
                                        return "? " + hashKey(val) + " ?"
                                    },
                                    self.removeUnknownOption = function () {
                                        self
                                            .unknownOption
                                            .parent() && self
                                            .unknownOption
                                            .remove()
                                    },
                                    self.selectEmptyOption = function () {
                                        self.emptyOption && ($element.val(""), setOptionAsSelected(self.emptyOption))
                                    },
                                    self.unselectEmptyOption = function () {
                                        self.hasEmptyOption && self
                                            .emptyOption
                                            .removeAttr("selected")
                                    },
                                    $scope.$on("$destroy", function () {
                                        self.renderUnknownOption = noop
                                    }),
                                    self.readValue = function readSingleValue() {
                                        var val = $element.val(),
                                            realVal = val in self.selectValueMap
                                                ? self.selectValueMap[val]
                                                : val;
                                        return self.hasOption(realVal)
                                            ? realVal
                                            : null
                                    },
                                    self.writeValue = function writeSingleValue(value) {
                                        var currentlySelectedOption = $element[0].options[$element[0].selectedIndex];
                                        if (
                                            currentlySelectedOption && currentlySelectedOption.removeAttribute("selected"),
                                            self.hasOption(value)
                                        ) {
                                            self.removeUnknownOption();
                                            var hashedVal = hashKey(value);
                                            $element.val(
                                                hashedVal in self.selectValueMap
                                                    ? hashedVal
                                                    : value
                                            );
                                            var selectedOption = $element[0].options[$element[0].selectedIndex];
                                            setOptionAsSelected(jqLite(selectedOption))
                                        } else 
                                            null == value && self.emptyOption
                                                ? (self.removeUnknownOption(), self.selectEmptyOption())
                                                : self
                                                    .unknownOption
                                                    .parent()
                                                    .length
                                                        ? self.updateUnknownOption(value)
                                                        : self.renderUnknownOption(value)
                                                },
                                    self.addOption = function (value, element) {
                                        if (element[0].nodeType !== NODE_TYPE_COMMENT) {
                                            assertNotHasOwnProperty(value, '"option value"'),
                                            "" === value && (self.hasEmptyOption = !0, self.emptyOption = element);
                                            var count = optionsMap.get(value) || 0;
                                            optionsMap.put(value, count + 1),
                                            scheduleRender()
                                        }
                                    },
                                    self.removeOption = function (value) {
                                        var count = optionsMap.get(value);
                                        count && (
                                            1 === count
                                                ? (
                                                    optionsMap.remove(value),
                                                    "" === value && (self.hasEmptyOption = !1, self.emptyOption = void 0)
                                                )
                                                : optionsMap.put(value, count - 1)
                                        )
                                    },
                                    self.hasOption = function (value) {
                                        return !!optionsMap.get(value)
                                    };
                                    var renderScheduled = !1,
                                        updateScheduled = !1;
                                    self.registerOption = function (
                                        optionScope,
                                        optionElement,
                                        optionAttrs,
                                        interpolateValueFn,
                                        interpolateTextFn
                                    ) {
                                        if (optionAttrs.$attr.ngValue) {
                                            var oldVal,
                                                hashedVal = NaN;
                                            optionAttrs.$observe("value", function valueAttributeObserveAction(newVal) {
                                                var removal,
                                                    previouslySelected = optionElement.prop("selected");
                                                isDefined(hashedVal) && (
                                                    self.removeOption(oldVal),
                                                    delete self.selectValueMap[hashedVal],
                                                    removal = !0
                                                ),
                                                hashedVal = hashKey(newVal),
                                                oldVal = newVal,
                                                self.selectValueMap[hashedVal] = newVal,
                                                self.addOption(newVal, optionElement),
                                                optionElement.attr("value", hashedVal),
                                                removal && previouslySelected && scheduleViewValueUpdate()
                                            })
                                        } else 
                                            interpolateValueFn
                                                ? optionAttrs.$observe("value", function valueAttributeObserveAction(newVal) {
                                                    self.readValue();
                                                    var removal,
                                                        previouslySelected = optionElement.prop("selected");
                                                    isDefined(oldVal) && (self.removeOption(oldVal), removal = !0),
                                                    oldVal = newVal,
                                                    self.addOption(newVal, optionElement),
                                                    removal && previouslySelected && scheduleViewValueUpdate()
                                                })
                                                : interpolateTextFn
                                                    ? optionScope.$watch(
                                                        interpolateTextFn,
                                                        function interpolateWatchAction(newVal, oldVal) {
                                                            optionAttrs.$set("value", newVal);
                                                            var previouslySelected = optionElement.prop("selected");
                                                            oldVal !== newVal && self.removeOption(oldVal),
                                                            self.addOption(newVal, optionElement),
                                                            oldVal && previouslySelected && scheduleViewValueUpdate()
                                                        }
                                                    )
                                                    : self.addOption(optionAttrs.value, optionElement);
                                        optionAttrs.$observe("disabled", function (newVal) {
                                            ("true" === newVal || newVal && optionElement.prop("selected")) && (
                                                self.multiple
                                                    ? scheduleViewValueUpdate(!0)
                                                    : (self.ngModelCtrl.$setViewValue(null), self.ngModelCtrl.$render())
                                            )
                                        }),
                                        optionElement.on("$destroy", function () {
                                            var currentValue = self.readValue(),
                                                removeValue = optionAttrs.value;
                                            self.removeOption(removeValue),
                                            self
                                                .ngModelCtrl
                                                .$render(),
                                            (
                                                self.multiple && currentValue && -1 !== currentValue.indexOf(removeValue) || currentValue === removeValue
                                            ) && scheduleViewValueUpdate(!0)
                                        })
                                    }
                                }
                            ],
                            selectDirective = function () {
                                function selectPreLink(scope, element, attr, ctrls) {
                                    var selectCtrl = ctrls[0],
                                        ngModelCtrl = ctrls[1];
                                    if (!ngModelCtrl) 
                                        return void(selectCtrl.registerOption = noop);
                                    if (
                                        selectCtrl.ngModelCtrl = ngModelCtrl,
                                        element.on("change", function () {
                                            selectCtrl.removeUnknownOption(),
                                            scope.$apply(function () {
                                                ngModelCtrl.$setViewValue(selectCtrl.readValue())
                                            })
                                        }),
                                        attr.multiple
                                    ) {
                                        selectCtrl.multiple = !0,
                                        selectCtrl.readValue = function readMultipleValue() {
                                            var array = [];
                                            return forEach(element.find("option"), function (option) {
                                                if (option.selected && !option.disabled) {
                                                    var val = option.value;
                                                    array.push(
                                                        val in selectCtrl.selectValueMap
                                                            ? selectCtrl.selectValueMap[val]
                                                            : val
                                                    )
                                                }
                                            }),
                                            array
                                        },
                                        selectCtrl.writeValue = function writeMultipleValue(value) {
                                            var items = new HashMap(value);
                                            forEach(element.find("option"), function (option) {
                                                option.selected = isDefined(items.get(option.value)) || isDefined(
                                                    items.get(selectCtrl.selectValueMap[option.value])
                                                )
                                            })
                                        };
                                        var lastView,
                                            lastViewRef = NaN;
                                        scope.$watch(function selectMultipleWatch() {
                                            lastViewRef !== ngModelCtrl.$viewValue || equals(
                                                lastView,
                                                ngModelCtrl.$viewValue
                                            ) || (lastView = shallowCopy(ngModelCtrl.$viewValue), ngModelCtrl.$render()),
                                            lastViewRef = ngModelCtrl.$viewValue
                                        }),
                                        ngModelCtrl.$isEmpty = function (value) {
                                            return !value || 0 === value.length
                                        }
                                    }
                                }
                                function selectPostLink(scope, element, attrs, ctrls) {
                                    var ngModelCtrl = ctrls[1];
                                    if (ngModelCtrl) {
                                        var selectCtrl = ctrls[0];
                                        ngModelCtrl.$render = function () {
                                            selectCtrl.writeValue(ngModelCtrl.$viewValue)
                                        }
                                    }
                                }
                                return {
                                    restrict: "E",
                                    require: [
                                        "select", "?ngModel"
                                    ],
                                    controller: SelectController,
                                    priority: 1,
                                    link: {
                                        pre: selectPreLink,
                                        post: selectPostLink
                                    }
                                }
                            },
                            optionDirective = [
                                "$interpolate",
                                function ($interpolate) {
                                    return {
                                        restrict: "E",
                                        priority: 100,
                                        compile: function (element, attr) {
                                            var interpolateValueFn,
                                                interpolateTextFn;
                                            return isDefined(attr.ngValue) || (
                                                isDefined(attr.value)
                                                    ? interpolateValueFn = $interpolate(attr.value, !0)
                                                    : (interpolateTextFn = $interpolate(element.text(), !0)) || attr.$set(
                                                        "value",
                                                        element.text()
                                                    )
                                            ),
                                            function (scope, element, attr) {
                                                var selectCtrlName = "$selectController",
                                                    parent = element.parent(),
                                                    selectCtrl = parent.data(selectCtrlName) || parent
                                                        .parent()
                                                        .data(selectCtrlName);
                                                selectCtrl && selectCtrl.registerOption(
                                                    scope,
                                                    element,
                                                    attr,
                                                    interpolateValueFn,
                                                    interpolateTextFn
                                                )
                                            }
                                        }
                                    }
                                }
                            ],
                            requiredDirective = function () {
                                return {
                                    restrict: "A",
                                    require: "?ngModel",
                                    link: function (scope, elm, attr, ctrl) {
                                        ctrl && (
                                            attr.required = !0,
                                            ctrl.$validators.required = function (modelValue, viewValue) {
                                                return !attr.required || !ctrl.$isEmpty(viewValue)
                                            },
                                            attr.$observe("required", function () {
                                                ctrl.$validate()
                                            })
                                        )
                                    }
                                }
                            },
                            patternDirective = function () {
                                return {
                                    restrict: "A",
                                    require: "?ngModel",
                                    link: function (scope, elm, attr, ctrl) {
                                        if (ctrl) {
                                            var regexp,
                                                patternExp = attr.ngPattern || attr.pattern;
                                            attr.$observe("pattern", function (regex) {
                                                if (isString(regex) && regex.length > 0 && (regex = new RegExp(
                                                    "^" + regex + "$"
                                                )), regex && !regex.test) 
                                                    throw minErr("ngPattern")(
                                                        "noregexp",
                                                        "Expected {0} to be a RegExp but was {1}. Element: {2}",
                                                        patternExp,
                                                        regex,
                                                        startingTag(elm)
                                                    );
                                                regexp = regex || void 0,
                                                ctrl.$validate()
                                            }),
                                            ctrl.$validators.pattern = function (modelValue, viewValue) {
                                                return ctrl.$isEmpty(viewValue) || isUndefined(regexp) || regexp.test(
                                                    viewValue
                                                )
                                            }
                                        }
                                    }
                                }
                            },
                            maxlengthDirective = function () {
                                return {
                                    restrict: "A",
                                    require: "?ngModel",
                                    link: function (scope, elm, attr, ctrl) {
                                        if (ctrl) {
                                            var maxlength = -1;
                                            attr.$observe("maxlength", function (value) {
                                                var intVal = toInt(value);
                                                maxlength = isNumberNaN(intVal)
                                                    ? -1
                                                    : intVal,
                                                ctrl.$validate()
                                            }),
                                            ctrl.$validators.maxlength = function (modelValue, viewValue) {
                                                return maxlength < 0 || ctrl.$isEmpty(viewValue) || viewValue.length <= maxlength
                                            }
                                        }
                                    }
                                }
                            },
                            minlengthDirective = function () {
                                return {
                                    restrict: "A",
                                    require: "?ngModel",
                                    link: function (scope, elm, attr, ctrl) {
                                        if (ctrl) {
                                            var minlength = 0;
                                            attr.$observe("minlength", function (value) {
                                                minlength = toInt(value) || 0,
                                                ctrl.$validate()
                                            }),
                                            ctrl.$validators.minlength = function (modelValue, viewValue) {
                                                return ctrl.$isEmpty(viewValue) || viewValue.length >= minlength
                                            }
                                        }
                                    }
                                }
                            };
                        if (window.angular.bootstrap) 
                            return void(
                                window.console && console.log("WARNING: Tried to load angular more than once.")
                            );
                        bindJQuery(),
                        publishExternalAPI(angular),
                        angular.module("ngLocale", [], [
                            "$provide",
                            function ($provide) {
                                function getDecimals(n) {
                                    n += "";
                                    var i = n.indexOf(".");
                                    return -1 == i
                                        ? 0
                                        : n.length - i - 1
                                }
                                function getVF(n, opt_precision) {
                                    var v = opt_precision;
                                    void 0 === v && (v = Math.min(getDecimals(n), 3));
                                    var base = Math.pow(10, v);
                                    return {
                                        v: v,
                                        f: (n * base | 0) % base
                                    }
                                }
                                var PLURAL_CATEGORY = {
                                    ZERO: "zero",
                                    ONE: "one",
                                    TWO: "two",
                                    FEW: "few",
                                    MANY: "many",
                                    OTHER: "other"
                                };
                                $provide.value("$locale", {
                                    DATETIME_FORMATS: {
                                        AMPMS: [
                                            "AM", "PM"
                                        ],
                                        DAY: [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        ERANAMES: [
                                            "Before Christ", "Anno Domini"
                                        ],
                                        ERAS: [
                                            "BC", "AD"
                                        ],
                                        FIRSTDAYOFWEEK: 6,
                                        MONTH: [
                                            "January",
                                            "February",
                                            "March",
                                            "April",
                                            "May",
                                            "June",
                                            "July",
                                            "August",
                                            "September",
                                            "October",
                                            "November",
                                            "December"
                                        ],
                                        SHORTDAY: [
                                            "Sun",
                                            "Mon",
                                            "Tue",
                                            "Wed",
                                            "Thu",
                                            "Fri",
                                            "Sat"
                                        ],
                                        SHORTMONTH: [
                                            "Jan",
                                            "Feb",
                                            "Mar",
                                            "Apr",
                                            "May",
                                            "Jun",
                                            "Jul",
                                            "Aug",
                                            "Sep",
                                            "Oct",
                                            "Nov",
                                            "Dec"
                                        ],
                                        STANDALONEMONTH: [
                                            "January",
                                            "February",
                                            "March",
                                            "April",
                                            "May",
                                            "June",
                                            "July",
                                            "August",
                                            "September",
                                            "October",
                                            "November",
                                            "December"
                                        ],
                                        WEEKENDRANGE: [
                                            5, 6
                                        ],
                                        fullDate: "EEEE, MMMM d, y",
                                        longDate: "MMMM d, y",
                                        medium: "MMM d, y h:mm:ss a",
                                        mediumDate: "MMM d, y",
                                        mediumTime: "h:mm:ss a",
                                        short: "M/d/yy h:mm a",
                                        shortDate: "M/d/yy",
                                        shortTime: "h:mm a"
                                    },
                                    NUMBER_FORMATS: {
                                        CURRENCY_SYM: "$",
                                        DECIMAL_SEP: ".",
                                        GROUP_SEP: ",",
                                        PATTERNS: [
                                            {
                                                gSize: 3,
                                                lgSize: 3,
                                                maxFrac: 3,
                                                minFrac: 0,
                                                minInt: 1,
                                                negPre: "-",
                                                negSuf: "",
                                                posPre: "",
                                                posSuf: ""
                                            }, {
                                                gSize: 3,
                                                lgSize: 3,
                                                maxFrac: 2,
                                                minFrac: 2,
                                                minInt: 1,
                                                negPre: "-¤",
                                                negSuf: "",
                                                posPre: "¤",
                                                posSuf: ""
                                            }
                                        ]
                                    },
                                    id: "en-us",
                                    localeID: "en_US",
                                    pluralCat: function (n, opt_precision) {
                                        var i = 0 | n,
                                            vf = getVF(n, opt_precision);
                                        return 1 == i && 0 == vf.v
                                            ? PLURAL_CATEGORY.ONE
                                            : PLURAL_CATEGORY.OTHER
                                    }
                                })
                            }
                        ]),
                        jqLite(function () {
                            angularInit(window.document, bootstrap)
                        })
                    }
                )(window),
                !window
                    .angular
                    .$$csp()
                    .noInlineStyle && window
                    .angular
                    .element(document.head)
                    .prepend(
                        '<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak' +
                    '],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:no' +
                    'ne !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.n' +
                    'g-anchor{position:absolute;}</style>'
                    )
            },
            function (module, exports, __webpack_require__) {
                __webpack_require__(617),
                module.exports = "ngCookies"
            },
            function (module, exports) {
                (function (window, angular) {
                    "use strict";
                    function $$CookieWriter($document, $log, $browser) {
                        function buildCookieString(name, value, options) {
                            var path,
                                expires;
                            options = options || {},
                            expires = options.expires,
                            path = angular.isDefined(options.path)
                                ? options.path
                                : cookiePath,
                            angular.isUndefined(value) && (
                                expires = "Thu, 01 Jan 1970 00:00:00 GMT",
                                value = ""
                            ),
                            angular.isString(expires) && (expires = new Date(expires));
                            var str = encodeURIComponent(name) + "=" + encodeURIComponent(value);
                            str += path
                                ? ";path=" + path
                                : "",
                            str += options.domain
                                ? ";domain=" + options.domain
                                : "",
                            str += expires
                                ? ";expires=" + expires.toUTCString()
                                : "",
                            str += options.secure
                                ? ";secure"
                                : "";
                            var cookieLength = str.length + 1;
                            return cookieLength > 4096 && $log.warn(
                                "Cookie '" + name +
                            "' possibly not set or overflowed because it was too large (" +
                            cookieLength + " > 4096 bytes)!"
                            ),
                            str
                        }
                        var cookiePath = $browser.baseHref(),
                            rawDocument = $document[0];
                        return function (name, value, options) {
                            rawDocument.cookie = buildCookieString(name, value, options)
                        }
                    }
                    angular
                        .module("ngCookies", ["ng"])
                        .provider("$cookies", [
                            function $CookiesProvider() {
                                function calcOptions(options) {
                                    return options
                                        ? angular.extend({}, defaults, options)
                                        : defaults
                                }
                                var defaults = this.defaults = {};
                                this.$get = [
                                    "$$cookieReader",
                                    "$$cookieWriter",
                                    function ($$cookieReader, $$cookieWriter) {
                                        return {
                                            get: function (key) {
                                                return $$cookieReader()[key]
                                            },
                                            getObject: function (key) {
                                                var value = this.get(key);
                                                return value
                                                    ? angular.fromJson(value)
                                                    : value
                                            },
                                            getAll: function () {
                                                return $$cookieReader()
                                            },
                                            put: function (key, value, options) {
                                                $$cookieWriter(key, value, calcOptions(options))
                                            },
                                            putObject: function (key, value, options) {
                                                this.put(key, angular.toJson(value), options)
                                            },
                                            remove: function (key, options) {
                                                $$cookieWriter(key, void 0, calcOptions(options))
                                            }
                                        }
                                    }
                                ]
                            }
                        ]),
                    angular
                        .module("ngCookies")
                        .factory("$cookieStore", [
                            "$cookies",
                            function ($cookies) {
                                return {
                                    get: function (key) {
                                        return $cookies.getObject(key)
                                    },
                                    put: function (key, value) {
                                        $cookies.putObject(key, value)
                                    },
                                    remove: function (key) {
                                        $cookies.remove(key)
                                    }
                                }
                            }
                        ]),
                    $$CookieWriter.$inject = [
                        "$document", "$log", "$browser"
                    ],
                    angular
                        .module("ngCookies")
                        .provider("$$cookieWriter", function $$CookieWriterProvider() {
                            this.$get = $$CookieWriter
                        })
                })(window, window.angular)
            },
            function (module, exports, __webpack_require__) {
                __webpack_require__(619),
                module.exports = "ngRoute"
            },
            function (module, exports) {
                (function (window, angular) {
                    "use strict";
                    function shallowCopy(src, dst) {
                        if (isArray(src)) {
                            dst = dst || [];
                            for (var i = 0, ii = src.length; i < ii; i++) 
                                dst[i] = src[i]
                        } else if (isObject(src)) {
                            dst = dst || {};
                            for (var key in src) 
                                "$" === key.charAt(0) && "$" === key.charAt(1) || (dst[key] = src[key])
                        }
                        return dst || src
                    }
                    function $RouteProvider() {
                        function inherit(parent, extra) {
                            return angular.extend(Object.create(parent), extra)
                        }
                        function pathRegExp(path, opts) {
                            var insensitive = opts.caseInsensitiveMatch,
                                ret = {
                                    originalPath: path,
                                    regexp: path
                                },
                                keys = ret.keys = [];
                            return path = path
                                .replace(/([().])/g, "\\$1")
                                .replace(/(\/)?:(\w+)(\*\?|[?*])?/g, function (_, slash, key, option) {
                                    var optional = "?" === option || "*?" === option
                                            ? "?"
                                            : null,
                                        star = "*" === option || "*?" === option
                                            ? "*"
                                            : null;
                                    return keys.push({
                                        name: key,
                                        optional: !!optional
                                    }),
                                    slash = slash || "",
                                    (
                                        optional
                                            ? ""
                                            : slash
                                    ) + "(?:" + (
                                        optional
                                            ? slash
                                            : ""
                                    ) + (star && "(.+?)" || "([^/]+)") + (optional || "") + ")" + (
                                        optional || ""
                                    )
                                })
                                .replace(/([\/$*])/g, "\\$1"),
                            ret.regexp = new RegExp(
                                "^" + path + "$",
                                insensitive
                                    ? "i"
                                    : ""
                            ),
                            ret
                        }
                        isArray = angular.isArray,
                        isObject = angular.isObject,
                        isDefined = angular.isDefined;
                        var routes = {};
                        this.when = function (path, route) {
                            var routeCopy = shallowCopy(route);
                            if (
                                angular.isUndefined(routeCopy.reloadOnSearch) && (routeCopy.reloadOnSearch = !0),
                                angular.isUndefined(routeCopy.caseInsensitiveMatch) && (routeCopy.caseInsensitiveMatch = this.caseInsensitiveMatch),
                                routes[path] = angular.extend(routeCopy, path && pathRegExp(path, routeCopy)),
                                path
                            ) {
                                var redirectPath = "/" === path[path.length - 1]
                                    ? path.substr(0, path.length - 1)
                                    : path + "/";
                                routes[redirectPath] = angular.extend({
                                    redirectTo: path
                                }, pathRegExp(redirectPath, routeCopy))
                            }
                            return this
                        },
                        this.caseInsensitiveMatch = !1,
                        this.otherwise = function (params) {
                            return "string" == typeof params && (params = {
                                redirectTo: params
                            }),
                            this.when(null, params),
                            this
                        },
                        isEagerInstantiationEnabled = !0,
                        this.eagerInstantiationEnabled = function eagerInstantiationEnabled(enabled) {
                            return isDefined(enabled)
                                ? (isEagerInstantiationEnabled = enabled, this)
                                : isEagerInstantiationEnabled
                        },
                        this.$get = [
                            "$rootScope",
                            "$location",
                            "$routeParams",
                            "$q",
                            "$injector",
                            "$templateRequest",
                            "$sce",
                            function (
                                $rootScope,
                                $location,
                                $routeParams,
                                $q,
                                $injector,
                                $templateRequest,
                                $sce
                            ) {
                                function switchRouteMatcher(on, route) {
                                    var keys = route.keys,
                                        params = {};
                                    if (!route.regexp) 
                                        return null;
                                    var m = route
                                        .regexp
                                        .exec(on);
                                    if (!m) 
                                        return null;
                                    for (var i = 1, len = m.length; i < len; ++i) {
                                        var key = keys[i - 1],
                                            val = m[i];
                                        key && val && (params[key.name] = val)
                                    }
                                    return params
                                }
                                function prepareRoute($locationEvent) {
                                    var lastRoute = $route.current;
                                    preparedRoute = parseRoute(),
                                    (
                                        preparedRouteIsUpdateOnly = preparedRoute && lastRoute && preparedRoute.$$route === lastRoute.$$route && angular.equals(preparedRoute.pathParams, lastRoute.pathParams) && !preparedRoute.reloadOnSearch && !forceReload
                                    ) || !lastRoute && !preparedRoute || $rootScope
                                        .$broadcast(
                                            "$routeChangeStart",
                                            preparedRoute,
                                            lastRoute
                                        )
                                        .defaultPrevented && $locationEvent && $locationEvent.preventDefault()
                                }
                                function commitRoute() {
                                    var lastRoute = $route.current,
                                        nextRoute = preparedRoute;
                                    if (preparedRouteIsUpdateOnly) 
                                        lastRoute.params = nextRoute.params,
                                        angular.copy(lastRoute.params, $routeParams),
                                        $rootScope.$broadcast("$routeUpdate", lastRoute);
                                    else if (nextRoute || lastRoute) {
                                        forceReload = !1,
                                        $route.current = nextRoute;
                                        var nextRoutePromise = $q.resolve(nextRoute);
                                        nextRoutePromise
                                            .then(getRedirectionData)
                                            .then(handlePossibleRedirection)
                                            .then(function (keepProcessingRoute) {
                                                return keepProcessingRoute && nextRoutePromise
                                                    .then(resolveLocals)
                                                    .then(function (locals) {
                                                        nextRoute === $route.current && (
                                                            nextRoute && (nextRoute.locals = locals, angular.copy(nextRoute.params, $routeParams)),
                                                            $rootScope.$broadcast("$routeChangeSuccess", nextRoute, lastRoute)
                                                        )
                                                    })
                                            })
                                            .catch(function (error) {
                                                nextRoute === $route.current && $rootScope.$broadcast(
                                                    "$routeChangeError",
                                                    nextRoute,
                                                    lastRoute,
                                                    error
                                                )
                                            })
                                        }
                                }
                                function getRedirectionData(route) {
                                    var data = {
                                        route: route,
                                        hasRedirection: !1
                                    };
                                    if (route) 
                                        if (route.redirectTo) 
                                            if (angular.isString(route.redirectTo)) 
                                                data.path = interpolate(route.redirectTo, route.params),
                                                data.search = route.params,
                                                data.hasRedirection = !0;
                                            else {
                                                var oldPath = $location.path(),
                                                    oldSearch = $location.search(),
                                                    newUrl = route.redirectTo(route.pathParams, oldPath, oldSearch);
                                                angular.isDefined(newUrl) && (data.url = newUrl, data.hasRedirection = !0)
                                            }
                                        else if (route.resolveRedirectTo) 
                                            return $q
                                                .resolve($injector.invoke(route.resolveRedirectTo))
                                                .then(function (newUrl) {
                                                    return angular.isDefined(newUrl) && (
                                                        data.url = newUrl,
                                                        data.hasRedirection = !0
                                                    ),
                                                    data
                                                });
                                    return data
                                }
                                function handlePossibleRedirection(data) {
                                    var keepProcessingRoute = !0;
                                    if (data.route !== $route.current) 
                                        keepProcessingRoute = !1;
                                    else if (data.hasRedirection) {
                                        var oldUrl = $location.url(),
                                            newUrl = data.url;
                                        newUrl
                                            ? $location
                                                .url(newUrl)
                                                .replace()
                                            : newUrl = $location
                                                .path(data.path)
                                                .search(data.search)
                                                .replace()
                                                .url(),
                                        newUrl !== oldUrl && (keepProcessingRoute = !1)
                                    }
                                    return keepProcessingRoute
                                }
                                function resolveLocals(route) {
                                    if (route) {
                                        var locals = angular.extend({}, route.resolve);
                                        angular.forEach(locals, function (value, key) {
                                            locals[key] = angular.isString(value)
                                                ? $injector.get(value)
                                                : $injector.invoke(value, null, null, key)
                                        });
                                        var template = getTemplateFor(route);
                                        return angular.isDefined(template) && (locals.$template = template),
                                        $q.all(locals)
                                    }
                                }
                                function getTemplateFor(route) {
                                    var template,
                                        templateUrl;
                                    return angular.isDefined(template = route.template)
                                        ? angular.isFunction(template) && (template = template(route.params))
                                        : angular.isDefined(templateUrl = route.templateUrl) && (
                                            angular.isFunction(templateUrl) && (templateUrl = templateUrl(route.params)),
                                            angular.isDefined(templateUrl) && (
                                                route.loadedTemplateUrl = $sce.valueOf(templateUrl),
                                                template = $templateRequest(templateUrl)
                                            )
                                        ),
                                    template
                                }
                                function parseRoute() {
                                    var params,
                                        match;
                                    return angular.forEach(routes, function (route, path) {
                                        !match && (params = switchRouteMatcher($location.path(), route)) && (
                                            match = inherit(route, {
                                                params: angular.extend({}, $location.search(), params),
                                                pathParams: params
                                            }),
                                            match.$$route = route
                                        )
                                    }),
                                    match || routes[null] && inherit(routes[null], {
                                        params: {},
                                        pathParams: {}
                                    })
                                }
                                function interpolate(string, params) {
                                    var result = [];
                                    return angular.forEach((string || "").split(":"), function (segment, i) {
                                        if (0 === i) 
                                            result.push(segment);
                                        else {
                                            var segmentMatch = segment.match(/(\w+)(?:[?*])?(.*)/),
                                                key = segmentMatch[1];
                                            result.push(params[key]),
                                            result.push(segmentMatch[2] || ""),
                                            delete params[key]
                                        }
                                    }),
                                    result.join("")
                                }
                                var preparedRoute,
                                    preparedRouteIsUpdateOnly,
                                    forceReload = !1,
                                    $route = {
                                        routes: routes,
                                        reload: function () {
                                            forceReload = !0;
                                            var fakeLocationEvent = {
                                                defaultPrevented: !1,
                                                preventDefault: function fakePreventDefault() {
                                                    this.defaultPrevented = !0,
                                                    forceReload = !1
                                                }
                                            };
                                            $rootScope.$evalAsync(function () {
                                                prepareRoute(fakeLocationEvent),
                                                fakeLocationEvent.defaultPrevented || commitRoute()
                                            })
                                        },
                                        updateParams: function (newParams) {
                                            if (!this.current || !this.current.$$route) 
                                                throw $routeMinErr("norout", "Tried updating route when with no current route");
                                            newParams = angular.extend({}, this.current.params, newParams),
                                            $location.path(interpolate(this.current.$$route.originalPath, newParams)),
                                            $location.search(newParams)
                                        }
                                    };
                                return $rootScope.$on("$locationChangeStart", prepareRoute),
                                $rootScope.$on("$locationChangeSuccess", commitRoute),
                                $route
                            }
                        ]
                    }
                    function instantiateRoute($injector) {
                        isEagerInstantiationEnabled && $injector.get("$route")
                    }
                    function $RouteParamsProvider() {
                        this.$get = function () {
                            return {}
                        }
                    }
                    function ngViewFactory($route, $anchorScroll, $animate) {
                        return {
                            restrict: "ECA",
                            terminal: !0,
                            priority: 400,
                            transclude: "element",
                            link: function (scope, $element, attr, ctrl, $transclude) {
                                function cleanupLastView() {
                                    previousLeaveAnimation && (
                                        $animate.cancel(previousLeaveAnimation),
                                        previousLeaveAnimation = null
                                    ),
                                    currentScope && (currentScope.$destroy(), currentScope = null),
                                    currentElement && (
                                        previousLeaveAnimation = $animate.leave(currentElement),
                                        previousLeaveAnimation.done(function (response) {
                                            !1 !== response && (previousLeaveAnimation = null)
                                        }),
                                        currentElement = null
                                    )
                                }
                                function update() {
                                    var locals = $route.current && $route.current.locals,
                                        template = locals && locals.$template;
                                    if (angular.isDefined(template)) {
                                        var newScope = scope.$new(),
                                            current = $route.current,
                                            clone = $transclude(newScope, function (clone) {
                                                $animate
                                                    .enter(clone, null, currentElement || $element)
                                                    .done(function onNgViewEnter(response) {
                                                        !1 === response || !angular.isDefined(autoScrollExp) || autoScrollExp && !scope.$eval(
                                                            autoScrollExp
                                                        ) || $anchorScroll()
                                                    }),
                                                cleanupLastView()
                                            });
                                        currentElement = clone,
                                        currentScope = current.scope = newScope,
                                        currentScope.$emit("$viewContentLoaded"),
                                        currentScope.$eval(onloadExp)
                                    } else 
                                        cleanupLastView()
                                }
                                var currentScope,
                                    currentElement,
                                    previousLeaveAnimation,
                                    autoScrollExp = attr.autoscroll,
                                    onloadExp = attr.onload || "";
                                scope.$on("$routeChangeSuccess", update),
                                update()
                            }
                        }
                    }
                    function ngViewFillContentFactory($compile, $controller, $route) {
                        return {
                            restrict: "ECA",
                            priority: -400,
                            link: function (scope, $element) {
                                var current = $route.current,
                                    locals = current.locals;
                                $element.html(locals.$template);
                                var link = $compile($element.contents());
                                if (current.controller) {
                                    locals.$scope = scope;
                                    var controller = $controller(current.controller, locals);
                                    current.controllerAs && (scope[current.controllerAs] = controller),
                                    $element.data("$ngControllerController", controller),
                                    $element
                                        .children()
                                        .data("$ngControllerController", controller)
                                }
                                scope[current.resolveAs || "$resolve"] = locals,
                                link(scope)
                            }
                        }
                    }
                    var isArray,
                        isObject,
                        isDefined,
                        isEagerInstantiationEnabled,
                        ngRouteModule = angular
                            .module("ngRoute", [])
                            .provider("$route", $RouteProvider)
                            .run(instantiateRoute),
                        $routeMinErr = angular.$$minErr("ngRoute");
                    instantiateRoute.$inject = ["$injector"],
                    ngRouteModule.provider("$routeParams", $RouteParamsProvider),
                    ngRouteModule.directive("ngView", ngViewFactory),
                    ngRouteModule.directive("ngView", ngViewFillContentFactory),
                    ngViewFactory.$inject = [
                        "$route", "$anchorScroll", "$animate"
                    ],
                    ngViewFillContentFactory.$inject = ["$compile", "$controller", "$route"]
                })(window, window.angular)
            },
            function (module, exports, __webpack_require__) {
                __webpack_require__(621),
                module.exports = "ngAria"
            },
            function (module, exports) {
                (function (window, angular) {
                    "use strict";
                    function $AriaProvider() {
                        function watchExpr(attrName, ariaAttr, nodeBlackList, negate) {
                            return function (scope, elem, attr) {
                                var ariaCamelName = attr.$normalize(ariaAttr);
                                !config[ariaCamelName] || isNodeOneOf(elem, nodeBlackList) || attr[ariaCamelName] || scope.$watch(
                                    attr[attrName],
                                    function (boolVal) {
                                        boolVal = negate
                                            ? !boolVal
                                            : !!boolVal,
                                        elem.attr(ariaAttr, boolVal)
                                    }
                                )
                            }
                        }
                        var config = {
                            ariaHidden: !0,
                            ariaChecked: !0,
                            ariaReadonly: !0,
                            ariaDisabled: !0,
                            ariaRequired: !0,
                            ariaInvalid: !0,
                            ariaValue: !0,
                            tabindex: !0,
                            bindKeydown: !0,
                            bindRoleForClick: !0
                        };
                        this.config = function (newConfig) {
                            config = angular.extend(config, newConfig)
                        },
                        this.$get = function () {
                            return {
                                config: function (key) {
                                    return config[key]
                                },
                                $$watchExpr: watchExpr
                            }
                        }
                    }
                    var ngAriaModule = angular
                            .module("ngAria", ["ng"])
                            .provider("$aria", $AriaProvider),
                        nodeBlackList = [
                            "BUTTON",
                            "A",
                            "INPUT",
                            "TEXTAREA",
                            "SELECT",
                            "DETAILS",
                            "SUMMARY"
                        ],
                        isNodeOneOf = function (elem, nodeTypeArray) {
                            if (-1 !== nodeTypeArray.indexOf(elem[0].nodeName)) 
                                return !0
                        };
                    ngAriaModule
                        .directive("ngShow", [
                            "$aria",
                            function ($aria) {
                                return $aria.$$watchExpr("ngShow", "aria-hidden", [], !0)
                            }
                        ])
                        .directive("ngHide", [
                            "$aria",
                            function ($aria) {
                                return $aria.$$watchExpr("ngHide", "aria-hidden", [], !1)
                            }
                        ])
                        .directive("ngValue", [
                            "$aria",
                            function ($aria) {
                                return $aria.$$watchExpr("ngValue", "aria-checked", nodeBlackList, !1)
                            }
                        ])
                        .directive("ngChecked", [
                            "$aria",
                            function ($aria) {
                                return $aria.$$watchExpr("ngChecked", "aria-checked", nodeBlackList, !1)
                            }
                        ])
                        .directive("ngReadonly", [
                            "$aria",
                            function ($aria) {
                                return $aria.$$watchExpr("ngReadonly", "aria-readonly", nodeBlackList, !1)
                            }
                        ])
                        .directive("ngRequired", [
                            "$aria",
                            function ($aria) {
                                return $aria.$$watchExpr("ngRequired", "aria-required", nodeBlackList, !1)
                            }
                        ])
                        .directive("ngModel", [
                            "$aria",
                            function ($aria) {
                                function shouldAttachAttr(attr, normalizedAttr, elem, allowBlacklistEls) {
                                    return $aria.config(normalizedAttr) && !elem.attr(attr) && (
                                        allowBlacklistEls || !isNodeOneOf(elem, nodeBlackList)
                                    )
                                }
                                function shouldAttachRole(role, elem) {
                                    return !elem.attr("role") && elem.attr("type") === role && !isNodeOneOf(
                                        elem,
                                        nodeBlackList
                                    )
                                }
                                function getShape(attr, elem) {
                                    var type = attr.type,
                                        role = attr.role;
                                    return "checkbox" === (type || role) || "menuitemcheckbox" === role
                                        ? "checkbox"
                                        : "radio" === (type || role) || "menuitemradio" === role
                                            ? "radio"
                                            : "range" === type || "progressbar" === role || "slider" === role
                                                ? "range"
                                                : ""
                                }
                                return {
                                    restrict: "A",
                                    require: "ngModel",
                                    priority: 200,
                                    compile: function (elem, attr) {
                                        var shape = getShape(attr, elem);
                                        return {
                                            post: function (scope, elem, attr, ngModel) {
                                                function ngAriaWatchModelValue() {
                                                    return ngModel.$modelValue
                                                }
                                                function getRadioReaction(newVal) {
                                                    var boolVal = attr.value == ngModel.$viewValue;
                                                    elem.attr("aria-checked", boolVal)
                                                }
                                                function getCheckboxReaction() {
                                                    elem.attr("aria-checked", !ngModel.$isEmpty(ngModel.$viewValue))
                                                }
                                                var needsTabIndex = shouldAttachAttr("tabindex", "tabindex", elem, !1);
                                                switch (shape) {
                                                    case "radio":
                                                    case "checkbox":
                                                        shouldAttachRole(shape, elem) && elem.attr("role", shape),
                                                        shouldAttachAttr("aria-checked", "ariaChecked", elem, !1) && scope.$watch(
                                                            ngAriaWatchModelValue,
                                                            "radio" === shape
                                                                ? getRadioReaction
                                                                : getCheckboxReaction
                                                        ),
                                                        needsTabIndex && elem.attr("tabindex", 0);
                                                        break;
                                                    case "range":
                                                        if (
                                                            shouldAttachRole(shape, elem) && elem.attr("role", "slider"),
                                                            $aria.config("ariaValue")
                                                        ) {
                                                            var needsAriaValuemin = !elem.attr("aria-valuemin") && (
                                                                    attr.hasOwnProperty("min") || attr.hasOwnProperty("ngMin")
                                                                ),
                                                                needsAriaValuemax = !elem.attr("aria-valuemax") && (
                                                                    attr.hasOwnProperty("max") || attr.hasOwnProperty("ngMax")
                                                                ),
                                                                needsAriaValuenow = !elem.attr("aria-valuenow");
                                                            needsAriaValuemin && attr.$observe(
                                                                "min",
                                                                function ngAriaValueMinReaction(newVal) {
                                                                    elem.attr("aria-valuemin", newVal)
                                                                }
                                                            ),
                                                            needsAriaValuemax && attr.$observe(
                                                                "max",
                                                                function ngAriaValueMinReaction(newVal) {
                                                                    elem.attr("aria-valuemax", newVal)
                                                                }
                                                            ),
                                                            needsAriaValuenow && scope.$watch(
                                                                ngAriaWatchModelValue,
                                                                function ngAriaValueNowReaction(newVal) {
                                                                    elem.attr("aria-valuenow", newVal)
                                                                }
                                                            )
                                                        }
                                                        needsTabIndex && elem.attr("tabindex", 0)
                                                }
                                                !attr.hasOwnProperty("ngRequired") && ngModel.$validators.required && shouldAttachAttr(
                                                    "aria-required",
                                                    "ariaRequired",
                                                    elem,
                                                    !1
                                                ) && attr.$observe("required", function () {
                                                    elem.attr("aria-required", !!attr.required)
                                                }),
                                                shouldAttachAttr("aria-invalid", "ariaInvalid", elem, !0) && scope.$watch(
                                                    function ngAriaInvalidWatch() {
                                                        return ngModel.$invalid
                                                    },
                                                    function ngAriaInvalidReaction(newVal) {
                                                        elem.attr("aria-invalid", !!newVal)
                                                    }
                                                )
                                            }
                                        }
                                    }
                                }
                            }
                        ])
                        .directive("ngDisabled", [
                            "$aria",
                            function ($aria) {
                                return $aria.$$watchExpr("ngDisabled", "aria-disabled", nodeBlackList, !1)
                            }
                        ])
                        .directive("ngMessages", function () {
                            return {
                                restrict: "A",
                                require: "?ngMessages",
                                link: function (scope, elem, attr, ngMessages) {
                                    elem.attr("aria-live") || elem.attr("aria-live", "assertive")
                                }
                            }
                        })
                        .directive("ngClick", [
                            "$aria",
                            "$parse",
                            function ($aria, $parse) {
                                return {
                                    restrict: "A",
                                    compile: function (elem, attr) {
                                        var fn = $parse(attr.ngClick, null, !0);
                                        return function (scope, elem, attr) {
                                            isNodeOneOf(elem, nodeBlackList) || (
                                                $aria.config("bindRoleForClick") && !elem.attr("role") && elem.attr("role", "button"),
                                                $aria.config("tabindex") && !elem.attr("tabindex") && elem.attr("tabindex", 0),
                                                !$aria.config("bindKeydown") || attr.ngKeydown || attr.ngKeypress || attr.ngKeyup || elem.on("keydown", function (event) {
                                                    function callback() {
                                                        fn(scope, {$event: event})
                                                    }
                                                    var keyCode = event.which || event.keyCode;
                                                    32 !== keyCode && 13 !== keyCode || scope.$apply(callback)
                                                })
                                            )
                                        }
                                    }
                                }
                            }
                        ])
                        .directive("ngDblclick", [
                            "$aria",
                            function ($aria) {
                                return function (scope, elem, attr) {
                                    !$aria.config("tabindex") || elem.attr("tabindex") || isNodeOneOf(
                                        elem,
                                        nodeBlackList
                                    ) || elem.attr("tabindex", 0)
                                }
                            }
                        ])
                })(window, window.angular)
            },
            function (module, exports, __webpack_require__) {
                __webpack_require__(623),
                module.exports = "ngTouch"
            },
            function (module, exports) {
                (function (window, angular) {
                    "use strict";
                    function nodeName_(element) {
                        return angular.lowercase(element.nodeName || element[0] && element[0].nodeName)
                    }
                    function $TouchProvider($provide, $compileProvider) {
                        var ngClickOverrideEnabled = !1,
                            ngClickDirectiveAdded = !1;
                        this.ngClickOverrideEnabled = function (enabled) {
                            return angular.isDefined(enabled)
                                ? (enabled && !ngClickDirectiveAdded && (
                                    ngClickDirectiveAdded = !0,
                                    ngTouchClickDirectiveFactory.$$moduleName = "ngTouch",
                                    $compileProvider.directive("ngClick", ngTouchClickDirectiveFactory),
                                    $provide.decorator("ngClickDirective", [
                                        "$delegate",
                                        function ($delegate) {
                                            if (ngClickOverrideEnabled) 
                                                $delegate.shift();
                                            else 
                                                for (var i = $delegate.length - 1; i >= 0;) {
                                                    if ("ngTouch" === $delegate[i].$$moduleName) {
                                                        $delegate.splice(i, 1);
                                                        break
                                                    }
                                                    i--
                                                }
                                            return $delegate
                                        }
                                    ])
                                ), ngClickOverrideEnabled = enabled, this)
                                : ngClickOverrideEnabled
                        },
                        this.$get = function () {
                            return {
                                ngClickOverrideEnabled: function () {
                                    return ngClickOverrideEnabled
                                }
                            }
                        }
                    }
                    function makeSwipeDirective(directiveName, direction, eventName) {
                        ngTouch.directive(directiveName, [
                            "$parse",
                            "$swipe",
                            function ($parse, $swipe) {
                                return function (scope, element, attr) {
                                    function validSwipe(coords) {
                                        if (!startCoords) 
                                            return !1;
                                        var deltaY = Math.abs(coords.y - startCoords.y),
                                            deltaX = (coords.x - startCoords.x) * direction;
                                        return valid && deltaY < 75 && deltaX > 0 && deltaX > 30 && deltaY / deltaX < .3
                                    }
                                    var startCoords,
                                        valid,
                                        swipeHandler = $parse(attr[directiveName]),
                                        pointerTypes = ["touch"];
                                    angular.isDefined(attr.ngSwipeDisableMouse) || pointerTypes.push("mouse"),
                                    $swipe.bind(element, {
                                        start: function (coords, event) {
                                            startCoords = coords,
                                            valid = !0
                                        },
                                        cancel: function (event) {
                                            valid = !1
                                        },
                                        end: function (coords, event) {
                                            validSwipe(coords) && scope.$apply(function () {
                                                element.triggerHandler(eventName),
                                                swipeHandler(scope, {$event: event})
                                            })
                                        }
                                    }, pointerTypes)
                                }
                            }
                        ])
                    }
                    var ngTouch = angular.module("ngTouch", []);
                    ngTouch.provider("$touch", $TouchProvider),
                    $TouchProvider.$inject = [
                        "$provide", "$compileProvider"
                    ],
                    ngTouch.factory("$swipe", [
                        function () {
                            function getCoordinates(event) {
                                var originalEvent = event.originalEvent || event,
                                    touches = originalEvent.touches && originalEvent.touches.length
                                        ? originalEvent.touches
                                        : [originalEvent],
                                    e = originalEvent.changedTouches && originalEvent.changedTouches[0] || touches[0];
                                return {x: e.clientX, y: e.clientY}
                            }
                            function getEvents(pointerTypes, eventType) {
                                var res = [];
                                return angular.forEach(pointerTypes, function (pointerType) {
                                    var eventName = POINTER_EVENTS[pointerType][eventType];
                                    eventName && res.push(eventName)
                                }),
                                res.join(" ")
                            }
                            var MOVE_BUFFER_RADIUS = 10,
                                POINTER_EVENTS = {
                                    mouse: {
                                        start: "mousedown",
                                        move: "mousemove",
                                        end: "mouseup"
                                    },
                                    touch: {
                                        start: "touchstart",
                                        move: "touchmove",
                                        end: "touchend",
                                        cancel: "touchcancel"
                                    },
                                    pointer: {
                                        start: "pointerdown",
                                        move: "pointermove",
                                        end: "pointerup",
                                        cancel: "pointercancel"
                                    }
                                };
                            return {
                                bind: function (element, eventHandlers, pointerTypes) {
                                    var totalX,
                                        totalY,
                                        startCoords,
                                        lastPos,
                                        active = !1;
                                    pointerTypes = pointerTypes || [
                                        "mouse", "touch", "pointer"
                                    ],
                                    element.on(getEvents(pointerTypes, "start"), function (event) {
                                        startCoords = getCoordinates(event),
                                        active = !0,
                                        totalX = 0,
                                        totalY = 0,
                                        lastPos = startCoords,
                                        eventHandlers.start && eventHandlers.start(startCoords, event)
                                    });
                                    var events = getEvents(pointerTypes, "cancel");
                                    events && element.on(events, function (event) {
                                        active = !1,
                                        eventHandlers.cancel && eventHandlers.cancel(event)
                                    }),
                                    element.on(getEvents(pointerTypes, "move"), function (event) {
                                        if (active && startCoords) {
                                            var coords = getCoordinates(event);
                                            if (
                                                totalX += Math.abs(coords.x - lastPos.x),
                                                totalY += Math.abs(coords.y - lastPos.y),
                                                lastPos = coords,
                                                !(totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS)
                                            ) 
                                                return totalY > totalX
                                                    ? (active = !1, void(eventHandlers.cancel && eventHandlers.cancel(event)))
                                                    : (
                                                        event.preventDefault(),
                                                        void(eventHandlers.move && eventHandlers.move(coords, event))
                                                    )
                                            }
                                    }),
                                    element.on(getEvents(pointerTypes, "end"), function (event) {
                                        active && (
                                            active = !1,
                                            eventHandlers.end && eventHandlers.end(getCoordinates(event), event)
                                        )
                                    })
                                }
                            }
                        }
                    ]);
                    var ngTouchClickDirectiveFactory = [
                        "$parse",
                        "$timeout",
                        "$rootElement",
                        function ($parse, $timeout, $rootElement) {
                            function hit(x1, y1, x2, y2) {
                                return Math.abs(x1 - x2) < CLICKBUSTER_THRESHOLD && Math.abs(y1 - y2) < CLICKBUSTER_THRESHOLD
                            }
                            function checkAllowableRegions(touchCoordinates, x, y) {
                                for (var i = 0; i < touchCoordinates.length; i += 2) 
                                    if (hit(touchCoordinates[i], touchCoordinates[i + 1], x, y)) 
                                        return touchCoordinates.splice(i, i + 2),
                                        !0;
                            return !1
                            }
                            function onClick(event) {
                                if (!(Date.now() - lastPreventedTime > PREVENT_DURATION)) {
                                    var touches = event.touches && event.touches.length
                                            ? event.touches
                                            : [event],
                                        x = touches[0].clientX,
                                        y = touches[0].clientY;
                                    x < 1 && y < 1 || lastLabelClickCoordinates && lastLabelClickCoordinates[0] === x && lastLabelClickCoordinates[1] === y || (
                                        lastLabelClickCoordinates && (lastLabelClickCoordinates = null),
                                        "label" === nodeName_(event.target) && (lastLabelClickCoordinates = [x, y]),
                                        checkAllowableRegions(touchCoordinates, x, y) || (
                                            event.stopPropagation(),
                                            event.preventDefault(),
                                            event.target && event.target.blur && event.target.blur()
                                        )
                                    )
                                }
                            }
                            function onTouchStart(event) {
                                var touches = event.touches && event.touches.length
                                        ? event.touches
                                        : [event],
                                    x = touches[0].clientX,
                                    y = touches[0].clientY;
                                touchCoordinates.push(x, y),
                                $timeout(function () {
                                    for (var i = 0; i < touchCoordinates.length; i += 2) 
                                        if (touchCoordinates[i] === x && touchCoordinates[i + 1] === y) 
                                            return void touchCoordinates.splice(i, i + 2)
                                }, PREVENT_DURATION, !1)
                            }
                            function preventGhostClick(x, y) {
                                touchCoordinates || (
                                    $rootElement[0].addEventListener("click", onClick, !0),
                                    $rootElement[0].addEventListener("touchstart", onTouchStart, !0),
                                    touchCoordinates = []
                                ),
                                lastPreventedTime = Date.now(),
                                checkAllowableRegions(touchCoordinates, x, y)
                            }
                            var lastPreventedTime,
                                touchCoordinates,
                                lastLabelClickCoordinates,
                                TAP_DURATION = 750,
                                MOVE_TOLERANCE = 12,
                                PREVENT_DURATION = 2500,
                                CLICKBUSTER_THRESHOLD = 25,
                                ACTIVE_CLASS_NAME = "ng-click-active";
                            return function (scope, element, attr) {
                                function resetState() {
                                    tapping = !1,
                                    element.removeClass(ACTIVE_CLASS_NAME)
                                }
                                var tapElement,
                                    startTime,
                                    touchStartX,
                                    touchStartY,
                                    clickHandler = $parse(attr.ngClick),
                                    tapping = !1;
                                element.on("touchstart", function (event) {
                                    tapping = !0,
                                    tapElement = event.target
                                        ? event.target
                                        : event.srcElement,
                                    3 === tapElement.nodeType && (tapElement = tapElement.parentNode),
                                    element.addClass(ACTIVE_CLASS_NAME),
                                    startTime = Date.now();
                                    var originalEvent = event.originalEvent || event,
                                        touches = originalEvent.touches && originalEvent.touches.length
                                            ? originalEvent.touches
                                            : [originalEvent],
                                        e = touches[0];
                                    touchStartX = e.clientX,
                                    touchStartY = e.clientY
                                }),
                                element.on("touchcancel", function (event) {
                                    resetState()
                                }),
                                element.on("touchend", function (event) {
                                    var diff = Date.now() - startTime,
                                        originalEvent = event.originalEvent || event,
                                        touches = originalEvent.changedTouches && originalEvent.changedTouches.length
                                            ? originalEvent.changedTouches
                                            : originalEvent.touches && originalEvent.touches.length
                                                ? originalEvent.touches
                                                : [originalEvent],
                                        e = touches[0],
                                        x = e.clientX,
                                        y = e.clientY,
                                        dist = Math.sqrt(Math.pow(x - touchStartX, 2) + Math.pow(y - touchStartY, 2));
                                    tapping && diff < TAP_DURATION && dist < MOVE_TOLERANCE && (
                                        preventGhostClick(x, y),
                                        tapElement && tapElement.blur(),
                                        angular.isDefined(attr.disabled) && !1 !== attr.disabled || element.triggerHandler("click", [event])
                                    ),
                                    resetState()
                                }),
                                element.onclick = function (event) {},
                                element.on("click", function (event, touchend) {
                                    scope.$apply(function () {
                                        clickHandler(scope, {
                                            $event: touchend || event
                                        })
                                    })
                                }),
                                element.on("mousedown", function (event) {
                                    element.addClass(ACTIVE_CLASS_NAME)
                                }),
                                element.on("mousemove mouseup", function (event) {
                                    element.removeClass(ACTIVE_CLASS_NAME)
                                })
                            }
                        }
                    ];
                    makeSwipeDirective("ngSwipeLeft", -1, "swipeleft"),
                    makeSwipeDirective("ngSwipeRight", 1, "swiperight")
                })(window, window.angular)
            },
            function (module, exports, __webpack_require__) {
                __webpack_require__(625),
                module.exports = "ngSanitize"
            },
            function (module, exports) {
                (function (window, angular) {
                    "use strict";
                    function $SanitizeProvider() {
                        function toMap(str, lowercaseKeys) {
                            var i,
                                obj = {},
                                items = str.split(",");
                            for (i = 0; i < items.length; i++) 
                                obj[
                                    lowercaseKeys
                                        ? lowercase(items[i])
                                        : items[i]
                                ] = !0;
                            return obj
                        }
                        function htmlParserImpl(html, handler) {
                            null === html || void 0 === html
                                ? html = ""
                                : "string" != typeof html && (html = "" + html),
                            inertBodyElement.innerHTML = html;
                            var mXSSAttempts = 5;
                            do {
                                if (0 === mXSSAttempts) 
                                    throw $sanitizeMinErr(
                                        "uinput",
                                        "Failed to sanitize html because the input is unstable"
                                    );
                                mXSSAttempts--,
                                window.document.documentMode && stripCustomNsAttrs(inertBodyElement),
                                html = inertBodyElement.innerHTML,
                                inertBodyElement.innerHTML = html
                            } while (html !== inertBodyElement.innerHTML);
                            for (var node = inertBodyElement.firstChild; node;) {
                                switch (node.nodeType) {
                                    case 1:
                                        handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));
                                        break;
                                    case 3:
                                        handler.chars(node.textContent)
                                }
                                var nextNode;
                                if (!((nextNode = node.firstChild) || (
                                    1 === node.nodeType && handler.end(node.nodeName.toLowerCase()),
                                    nextNode = node.nextSibling
                                ))) 
                                    for (; null == nextNode && (node = node.parentNode) !== inertBodyElement;) 
                                        nextNode = node.nextSibling,
                                        1 === node.nodeType && handler.end(node.nodeName.toLowerCase());
                            node = nextNode
                            }
                            for (; node = inertBodyElement.firstChild;) 
                                inertBodyElement.removeChild(node)
                        }
                        function attrToMap(attrs) {
                            for (var map = {}, i = 0, ii = attrs.length; i < ii; i++) {
                                var attr = attrs[i];
                                map[attr.name] = attr.value
                            }
                            return map
                        }
                        function encodeEntities(value) {
                            return value
                                .replace(/&/g, "&amp;")
                                .replace(SURROGATE_PAIR_REGEXP, function (value) {
                                    return "&#" + (
                                        1024 * (value.charCodeAt(0) - 55296) + (value.charCodeAt(1) - 56320) + 65536
                                    ) + ";"
                                })
                                .replace(NON_ALPHANUMERIC_REGEXP, function (value) {
                                    return "&#" + value.charCodeAt(0) + ";"
                                })
                                .replace(/</g, "&lt;")
                                .replace(/>/g, "&gt;")
                        }
                        function htmlSanitizeWriterImpl(buf, uriValidator) {
                            var ignoreCurrentElement = !1,
                                out = bind(buf, buf.push);
                            return {
                                start: function (tag, attrs) {
                                    tag = lowercase(tag),
                                    !ignoreCurrentElement && blockedElements[tag] && (ignoreCurrentElement = tag),
                                    ignoreCurrentElement || !0 !== validElements[tag] || (
                                        out("<"),
                                        out(tag),
                                        forEach(attrs, function (value, key) {
                                            var lkey = lowercase(key),
                                                isImage = "img" === tag && "src" === lkey || "background" === lkey;
                                            !0 !== validAttrs[lkey] || !0 === uriAttrs[lkey] && !uriValidator(
                                                value,
                                                isImage
                                            ) || (out(" "), out(key), out('="'), out(encodeEntities(value)), out('"'))
                                        }),
                                        out(">")
                                    )
                                },
                                end: function (tag) {
                                    tag = lowercase(tag),
                                    ignoreCurrentElement || !0 !== validElements[tag] || !0 === voidElements[tag] || (
                                        out("</"),
                                        out(tag),
                                        out(">")
                                    ),
                                    tag == ignoreCurrentElement && (ignoreCurrentElement = !1)
                                },
                                chars: function (chars) {
                                    ignoreCurrentElement || out(encodeEntities(chars))
                                }
                            }
                        }
                        function stripCustomNsAttrs(node) {
                            for (; node;) {
                                if (node.nodeType === window.Node.ELEMENT_NODE) 
                                    for (var attrs = node.attributes, i = 0, l = attrs.length; i < l; i++) {
                                        var attrNode = attrs[i],
                                            attrName = attrNode
                                                .name
                                                .toLowerCase();
                                        "xmlns:ns1" !== attrName && 0 !== attrName.lastIndexOf("ns1:", 0) || (
                                            node.removeAttributeNode(attrNode),
                                            i--,
                                            l--
                                        )
                                    }
                                var nextNode = node.firstChild;
                                nextNode && stripCustomNsAttrs(nextNode),
                                node = node.nextSibling
                            }
                        }
                        var svgEnabled = !1;
                        this.$get = [
                            "$$sanitizeUri",
                            function ($$sanitizeUri) {
                                return svgEnabled && extend(validElements, svgElements),
                                function (html) {
                                    var buf = [];
                                    return htmlParser(html, htmlSanitizeWriter(buf, function (uri, isImage) {
                                        return !/^unsafe:/.test($$sanitizeUri(uri, isImage))
                                    })),
                                    buf.join("")
                                }
                            }
                        ],
                        this.enableSvg = function (enableSvg) {
                            return isDefined(enableSvg)
                                ? (svgEnabled = enableSvg, this)
                                : svgEnabled
                        },
                        bind = angular.bind,
                        extend = angular.extend,
                        forEach = angular.forEach,
                        isDefined = angular.isDefined,
                        lowercase = angular.lowercase,
                        noop = angular.noop,
                        htmlParser = htmlParserImpl,
                        htmlSanitizeWriter = htmlSanitizeWriterImpl;
                        var inertBodyElement,
                            SURROGATE_PAIR_REGEXP = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
                            NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g,
                            voidElements = toMap("area,br,col,hr,img,wbr"),
                            optionalEndTagBlockElements = toMap(
                                "colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"
                            ),
                            optionalEndTagInlineElements = toMap("rp,rt"),
                            optionalEndTagElements = extend(
                                {},
                                optionalEndTagInlineElements,
                                optionalEndTagBlockElements
                            ),
                            blockElements = extend({}, optionalEndTagBlockElements, toMap(
                                "address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcapti" +
                            "on,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,t" +
                            "able,ul"
                            )),
                            inlineElements = extend({}, optionalEndTagInlineElements, toMap(
                                "a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label," +
                            "map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var"
                            )),
                            svgElements = toMap(
                                "circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern," +
                            "image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,pol" +
                            "yline,radialGradient,rect,stop,svg,switch,text,title,tspan"
                            ),
                            blockedElements = toMap("script,style"),
                            validElements = extend(
                                {},
                                voidElements,
                                blockElements,
                                inlineElements,
                                optionalEndTagElements
                            ),
                            uriAttrs = toMap("background,cite,href,longdesc,src,xlink:href"),
                            htmlAttrs = toMap(
                                "abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,c" +
                            "ols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang," +
                            "language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,s" +
                            "pan,start,summary,tabindex,target,title,type,valign,value,vspace,width"
                            ),
                            svgAttrs = toMap(
                                "accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bb" +
                                    "ox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx" +
                                    ",dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch," +
                                    "font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits," +
                                    "hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,k" +
                                    "eyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,marke" +
                                    "rWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,ove" +
                                    "rline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,ref" +
                                    "Y,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx," +
                                    "ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethro" +
                                    "ugh-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-" +
                                    "linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,t" +
                                    "ext-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unic" +
                                    "ode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths," +
                                    "x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title" +
                                    ",xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan",
                                !0
                            ),
                            validAttrs = extend({}, uriAttrs, svgAttrs, htmlAttrs);
                        (function (window) {
                            var doc;
                            if (!window.document || !window.document.implementation) 
                                throw $sanitizeMinErr("noinert", "Can't create an inert html document");
                            doc = window
                                .document
                                .implementation
                                .createHTMLDocument("inert");
                            var docElement = doc.documentElement || doc.getDocumentElement(),
                                bodyElements = docElement.getElementsByTagName("body");
                            if (1 === bodyElements.length) 
                                inertBodyElement = bodyElements[0];
                            else {
                                var html = doc.createElement("html");
                                inertBodyElement = doc.createElement("body"),
                                html.appendChild(inertBodyElement),
                                doc.appendChild(html)
                            }
                        })(window)
                    }
                    function sanitizeText(chars) {
                        var buf = [];
                        return htmlSanitizeWriter(buf, noop).chars(chars),
                        buf.join("")
                    }
                    var bind,
                        extend,
                        forEach,
                        isDefined,
                        lowercase,
                        noop,
                        htmlParser,
                        htmlSanitizeWriter,
                        $sanitizeMinErr = angular.$$minErr("$sanitize");
                    angular
                        .module("ngSanitize", [])
                        .provider("$sanitize", $SanitizeProvider),
                    angular
                        .module("ngSanitize")
                        .filter("linky", [
                            "$sanitize",
                            function ($sanitize) {
                                var LINKY_URL_REGEXP = /((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,
                                    MAILTO_REGEXP = /^mailto:/i,
                                    linkyMinErr = angular.$$minErr("linky"),
                                    isDefined = angular.isDefined,
                                    isFunction = angular.isFunction,
                                    isObject = angular.isObject,
                                    isString = angular.isString;
                                return function (text, target, attributes) {
                                    function addText(text) {
                                        text && html.push(sanitizeText(text))
                                    }
                                    function addLink(url, text) {
                                        var key,
                                            linkAttributes = attributesFn(url);
                                        html.push("<a ");
                                        for (key in linkAttributes) 
                                            html.push(key + '="' + linkAttributes[key] + '" ');
                                        
                                        !isDefined(target) || "target" in linkAttributes || html.push(
                                            'target="',
                                            target,
                                            '" '
                                        ),
                                        html.push('href="', url.replace(/"/g, "&quot;"), '">'),
                                        addText(text),
                                        html.push("</a>")
                                    }
                                    if (null == text || "" === text) 
                                        return text;
                                    if (!isString(text)) 
                                        throw linkyMinErr("notstring", "Expected string but received: {0}", text);
                                    for (
                                        var match,
                                        url,
                                        i,
                                        attributesFn = isFunction(attributes)
                                            ? attributes
                                            : isObject(attributes)
                                                ? function getAttributesObject() {
                                                    return attributes
                                                }
                                                : function getEmptyAttributesObject() {
                                                    return {}
                                                },
                                        raw = text,
                                        html = []; match = raw.match(LINKY_URL_REGEXP);
                                    ) 
                                        url = match[0],
                                        match[2] || match[4] || (url = (
                                            match[3]
                                                ? "http://"
                                                : "mailto:"
                                        ) + url),
                                        i = match.index,
                                        addText(raw.substr(0, i)),
                                        addLink(url, match[0].replace(MAILTO_REGEXP, "")),
                                        raw = raw.substring(i + match[0].length);
                                    return addText(raw),
                                    $sanitize(html.join(""))
                                }
                            }
                        ])
                })(window, window.angular)
            },
            function (module, exports, __webpack_require__) {
                __webpack_require__(627),
                module.exports = "ngResource"
            },
            function (module, exports) {
                (function (window, angular) {
                    "use strict";
                    function isValidDottedPath(path) {
                        return null != path && "" !== path && "hasOwnProperty" !== path && MEMBER_NAME_REGEX.test(
                            "." + path
                        )
                    }
                    function lookupDottedPath(obj, path) {
                        if (!isValidDottedPath(path)) 
                            throw $resourceMinErr(
                                "badmember",
                                'Dotted member path "@{0}" is invalid.',
                                path
                            );
                        for (
                            var keys = path.split("."),
                            i = 0,
                            ii = keys.length;
                            i < ii && angular.isDefined(obj);
                            i++
                        ) {
                            var key = keys[i];
                            obj = null !== obj
                                ? obj[key]
                                : void 0
                        }
                        return obj
                    }
                    function shallowClearAndCopy(src, dst) {
                        dst = dst || {},
                        angular.forEach(dst, function (value, key) {
                            delete dst[key]
                        });
                        for (var key in src) 
                            !src.hasOwnProperty(key) || "$" === key.charAt(0) && "$" === key.charAt(1) || (
                                dst[key] = src[key]
                            );
                        return dst
                    }
                    var $resourceMinErr = angular.$$minErr("$resource"),
                        MEMBER_NAME_REGEX = /^(\.[a-zA-Z_$@][0-9a-zA-Z_$@]*)+$/;
                    angular
                        .module("ngResource", ["ng"])
                        .provider("$resource", function ResourceProvider() {
                            var PROTOCOL_AND_IPV6_REGEX = /^https?:\/\/\[[^\]]*][^\/]*/,
                                provider = this;
                            this.defaults = {
                                stripTrailingSlashes: !0,
                                cancellable: !1,
                                actions: {
                                    get: {
                                        method: "GET"
                                    },
                                    save: {
                                        method: "POST"
                                    },
                                    query: {
                                        method: "GET",
                                        isArray: !0
                                    },
                                    remove: {
                                        method: "DELETE"
                                    },
                                    delete: {
                                        method: "DELETE"
                                    }
                                }
                            },
                            this.$get = [
                                "$http",
                                "$log",
                                "$q",
                                "$timeout",
                                function ($http, $log, $q, $timeout) {
                                    function Route(template, defaults) {
                                        this.template = template,
                                        this.defaults = extend({}, provider.defaults, defaults),
                                        this.urlParams = {}
                                    }
                                    function resourceFactory(url, paramDefaults, actions, options) {
                                        function extractParams(data, actionParams) {
                                            var ids = {};
                                            return actionParams = extend({}, paramDefaults, actionParams),
                                            forEach(actionParams, function (value, key) {
                                                isFunction(value) && (value = value(data)),
                                                ids[key] = value && value.charAt && "@" === value.charAt(0)
                                                    ? lookupDottedPath(data, value.substr(1))
                                                    : value
                                            }),
                                            ids
                                        }
                                        function defaultResponseInterceptor(response) {
                                            return response.resource
                                        }
                                        function Resource(value) {
                                            shallowClearAndCopy(value || {}, this)
                                        }
                                        var route = new Route(url, options);
                                        return actions = extend({}, provider.defaults.actions, actions),
                                        Resource.prototype.toJSON = function () {
                                            var data = extend({}, this);
                                            return delete data.$promise,
                                            delete data.$resolved,
                                            data
                                        },
                                        forEach(actions, function (action, name) {
                                            var hasBody = /^(POST|PUT|PATCH)$/i.test(action.method),
                                                numericTimeout = action.timeout,
                                                cancellable = isDefined(action.cancellable)
                                                    ? action.cancellable
                                                    : route.defaults.cancellable;
                                            numericTimeout && !isNumber(numericTimeout) && (
                                                $log.debug(
                                                    "ngResource:\n  Only numeric values are allowed as `timeout`.\n  Promises are n" +
                                                    "ot supported in $resource, because the same value would be used for multiple r" +
                                                    "equests. If you are looking for a way to cancel requests, you should use the `" +
                                                    "cancellable` option."
                                                ),
                                                delete action.timeout,
                                                numericTimeout = null
                                            ),
                                            Resource[name] = function (a1, a2, a3, a4) {
                                                function cancelRequest(value) {
                                                    promise.catch(noop),
                                                    timeoutDeferred.resolve(value)
                                                }
                                                var data,
                                                    success,
                                                    error,
                                                    params = {};
                                                switch (arguments.length) {
                                                    case 4:
                                                        error = a4,
                                                        success = a3;
                                                    case 3:
                                                    case 2:
                                                        if (!isFunction(a2)) {
                                                            params = a1,
                                                            data = a2,
                                                            success = a3;
                                                            break
                                                        }
                                                        if (isFunction(a1)) {
                                                            success = a1,
                                                            error = a2;
                                                            break
                                                        }
                                                        success = a2,
                                                        error = a3;
                                                    case 1:
                                                        isFunction(a1)
                                                            ? success = a1
                                                            : hasBody
                                                                ? data = a1
                                                                : params = a1;
                                                        break;
                                                    case 0:
                                                        break;
                                                    default:
                                                        throw $resourceMinErr(
                                                            "badargs",
                                                            "Expected up to 4 arguments [params, data, success, error], got {0} arguments",
                                                            arguments.length
                                                        )
                                                }
                                                var timeoutDeferred,
                                                    numericTimeoutPromise,
                                                    isInstanceCall = this instanceof Resource,
                                                    value = isInstanceCall
                                                        ? data
                                                        : action.isArray
                                                            ? []
                                                            : new Resource(data),
                                                    httpConfig = {},
                                                    responseInterceptor = action.interceptor && action.interceptor.response || defaultResponseInterceptor,
                                                    responseErrorInterceptor = action.interceptor && action.interceptor.responseError || void 0,
                                                    hasError = !!error,
                                                    hasResponseErrorInterceptor = !!responseErrorInterceptor;
                                                forEach(action, function (value, key) {
                                                    switch (key) {
                                                        default:
                                                            httpConfig[key] = copy(value);
                                                            break;
                                                        case "params":
                                                        case "isArray":
                                                        case "interceptor":
                                                        case "cancellable":
                                                    }
                                                }),
                                                !isInstanceCall && cancellable && (
                                                    timeoutDeferred = $q.defer(),
                                                    httpConfig.timeout = timeoutDeferred.promise,
                                                    numericTimeout && (numericTimeoutPromise = $timeout(timeoutDeferred.resolve, numericTimeout))
                                                ),
                                                hasBody && (httpConfig.data = data),
                                                route.setUrlParams(
                                                    httpConfig,
                                                    extend({}, extractParams(data, action.params || {}), params),
                                                    action.url
                                                );
                                                var promise = $http(httpConfig).then(function (response) {
                                                    var data = response.data;
                                                    if (data) {
                                                        if (isArray(data) !== !!action.isArray) 
                                                            throw $resourceMinErr(
                                                                "badcfg",
                                                                "Error in resource configuration for action `{0}`. Expected response to contain" +
                                                                            " an {1} but got an {2} (Request: {3} {4})",
                                                                name,
                                                                action.isArray
                                                                    ? "array"
                                                                    : "object",
                                                                isArray(data)
                                                                    ? "array"
                                                                    : "object",
                                                                httpConfig.method,
                                                                httpConfig.url
                                                            );
                                                        if (action.isArray) 
                                                            value.length = 0,
                                                            forEach(data, function (item) {
                                                                "object" == typeof item
                                                                    ? value.push(new Resource(item))
                                                                    : value.push(item)
                                                            });
                                                        else {
                                                            var promise = value.$promise;
                                                            shallowClearAndCopy(data, value),
                                                            value.$promise = promise
                                                        }
                                                    }
                                                    return response.resource = value,
                                                    response
                                                });
                                                return promise = promise. finally(function () {
                                                    value.$resolved = !0,
                                                    !isInstanceCall && cancellable && (
                                                        value.$cancelRequest = noop,
                                                        $timeout.cancel(numericTimeoutPromise),
                                                        timeoutDeferred = numericTimeoutPromise = httpConfig.timeout = null
                                                    )
                                                }),
                                                promise = promise.then(
                                                    function (response) {
                                                        var value = responseInterceptor(response);
                                                        return (success || noop)(
                                                            value,
                                                            response.headers,
                                                            response.status,
                                                            response.statusText
                                                        ),
                                                        value
                                                    },
                                                    hasError || hasResponseErrorInterceptor
                                                        ? function (response) {
                                                            return hasError && error(response),
                                                            hasResponseErrorInterceptor
                                                                ? responseErrorInterceptor(response)
                                                                : $q.reject(response)
                                                        }
                                                        : void 0
                                                ),
                                                hasError && !hasResponseErrorInterceptor && promise.catch(noop),
                                                isInstanceCall
                                                    ? promise
                                                    : (
                                                        value.$promise = promise,
                                                        value.$resolved = !1,
                                                        cancellable && (value.$cancelRequest = cancelRequest),
                                                        value
                                                    )
                                            },
                                            Resource.prototype["$" + name] = function (params, success, error) {
                                                isFunction(params) && (error = success, success = params, params = {});
                                                var result = Resource[name].call(this, params, this, success, error);
                                                return result.$promise || result
                                            }
                                        }),
                                        Resource.bind = function (additionalParamDefaults) {
                                            var extendedParamDefaults = extend({}, paramDefaults, additionalParamDefaults);
                                            return resourceFactory(url, extendedParamDefaults, actions, options)
                                        },
                                        Resource
                                    }
                                    var noop = angular.noop,
                                        forEach = angular.forEach,
                                        extend = angular.extend,
                                        copy = angular.copy,
                                        isArray = angular.isArray,
                                        isDefined = angular.isDefined,
                                        isFunction = angular.isFunction,
                                        isNumber = angular.isNumber,
                                        encodeUriQuery = angular.$$encodeUriQuery,
                                        encodeUriSegment = angular.$$encodeUriSegment;
                                    return Route.prototype = {
                                        setUrlParams: function (config, params, actionUrl) {
                                            var val,
                                                encodedVal,
                                                self = this,
                                                url = actionUrl || self.template,
                                                protocolAndIpv6 = "",
                                                urlParams = self.urlParams = Object.create(null);
                                            forEach(url.split(/\W/), function (param) {
                                                if ("hasOwnProperty" === param) 
                                                    throw $resourceMinErr(
                                                        "badname",
                                                        "hasOwnProperty is not a valid parameter name."
                                                    );
                                                
                                                !new RegExp("^\\d+$").test(param) && param && new RegExp(
                                                    "(^|[^\\\\]):" + param + "(\\W|$)"
                                                ).test(url) && (urlParams[param] = {
                                                    isQueryParamValue: new RegExp("\\?.*=:" + param + "(?:\\W|$)").test(url)
                                                })
                                            }),
                                            url = url.replace(/\\:/g, ":"),
                                            url = url.replace(PROTOCOL_AND_IPV6_REGEX, function (match) {
                                                return protocolAndIpv6 = match,
                                                ""
                                            }),
                                            params = params || {},
                                            forEach(self.urlParams, function (paramInfo, urlParam) {
                                                val = params.hasOwnProperty(urlParam)
                                                    ? params[urlParam]
                                                    : self.defaults[urlParam],
                                                isDefined(val) && null !== val
                                                    ? (
                                                        encodedVal = paramInfo.isQueryParamValue
                                                            ? encodeUriQuery(val, !0)
                                                            : encodeUriSegment(val),
                                                        url = url.replace(
                                                            new RegExp(":" + urlParam + "(\\W|$)", "g"),
                                                            function (match, p1) {
                                                                return encodedVal + p1
                                                            }
                                                        )
                                                    )
                                                    : url = url.replace(
                                                        new RegExp("(/?):" + urlParam + "(\\W|$)", "g"),
                                                        function (match, leadingSlashes, tail) {
                                                            return "/" === tail.charAt(0)
                                                                ? tail
                                                                : leadingSlashes + tail
                                                        }
                                                    )
                                            }),
                                            self.defaults.stripTrailingSlashes && (url = url.replace(/\/+$/, "") || "/"),
                                            url = url.replace(/\/\.(?=\w+($|\?))/, "."),
                                            config.url = protocolAndIpv6 + url.replace(/\/\\\./, "/."),
                                            forEach(params, function (value, key) {
                                                self.urlParams[key] || (
                                                    config.params = config.params || {},
                                                    config.params[key] = value
                                                )
                                            })
                                        }
                                    },
                                    resourceFactory
                                }
                            ]
                        })
                })(window, window.angular)
            },
            function (module, exports) {
                (function (window, angular) {
                    "use strict";
                    function jsonStringToDate(string) {
                        var match,
                            R_ISO8061_STR = /^(-?\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d{3}))?)?)?(Z|([+-])(\d\d):?(\d\d)))?$/;
                        if (match = string.match(R_ISO8061_STR)) {
                            var date = new Date(0),
                                tzHour = 0,
                                tzMin = 0;
                            return match[9] && (tzHour = toInt(match[9] + match[10]), tzMin = toInt(
                                match[9] + match[11]
                            )),
                            date.setUTCFullYear(toInt(match[1]), toInt(match[2]) - 1, toInt(match[3])),
                            date.setUTCHours(
                                toInt(match[4] || 0) - tzHour,
                                toInt(match[5] || 0) - tzMin,
                                toInt(match[6] || 0),
                                toInt(match[7] || 0)
                            ),
                            date
                        }
                        return string
                    }
                    function toInt(str) {
                        return parseInt(str, 10)
                    }
                    function padNumberInMock(num, digits, trim) {
                        var neg = "";
                        for (num < 0 && (neg = "-", num = -num), num = "" + num; num.length < digits;) 
                            num = "0" + num;
                        return trim && (num = num.substr(num.length - digits)),
                        neg + num
                    }
                    function createHttpBackendMock($rootScope, $timeout, $delegate, $browser) {
                        function createResponse(status, data, headers, statusText) {
                            return angular.isFunction(status)
                                ? status
                                : function () {
                                    return angular.isNumber(status)
                                        ? [status, data, headers, statusText]
                                        : [200, status, data, headers]
                                }
                        }
                        function $httpBackend(
                            method,
                            url,
                            data,
                            callback,
                            headers,
                            timeout,
                            withCredentials,
                            responseType,
                            eventHandlers,
                            uploadEventHandlers
                        ) {
                            function prettyPrint(data) {
                                return angular.isString(data) || angular.isFunction(data) || data instanceof RegExp
                                    ? data
                                    : angular.toJson(data)
                            }
                            function wrapResponse(wrapped) {
                                function handleResponse() {
                                    var response = wrapped.response(
                                        method,
                                        url,
                                        data,
                                        headers,
                                        wrapped.params(url)
                                    );
                                    xhr.$$respHeaders = response[2],
                                    callback(
                                        copy(response[0]),
                                        copy(response[1]),
                                        xhr.getAllResponseHeaders(),
                                        copy(response[3] || "")
                                    )
                                }
                                function handleTimeout() {
                                    for (var i = 0, ii = responses.length; i < ii; i++) 
                                        if (responses[i] === handleResponse) {
                                            responses.splice(i, 1),
                                            callback(-1, void 0, "");
                                            break
                                        }
                                    }
                                return !$browser && timeout && (
                                    timeout.then
                                        ? timeout.then(handleTimeout)
                                        : $timeout(handleTimeout, timeout)
                                ),
                                handleResponse
                            }
                            var xhr = new MockXhr,
                                expectation = expectations[0],
                                wasExpected = !1;
                            if (
                                xhr.$$events = eventHandlers,
                                xhr.upload.$$events = uploadEventHandlers,
                                expectation && expectation.match(method, url)
                            ) {
                                if (!expectation.matchData(data)) 
                                    throw new Error(
                                        "Expected " + expectation + " with different data\nEXPECTED: " + prettyPrint(expectation.data) +
                                    "\nGOT:      " + data
                                    );
                                if (!expectation.matchHeaders(headers)) 
                                    throw new Error(
                                        "Expected " + expectation + " with different headers\nEXPECTED: " +
                                    prettyPrint(expectation.headers) + "\nGOT:      " + prettyPrint(headers)
                                    );
                                if (expectations.shift(), expectation.response) 
                                    return void responses.push(wrapResponse(expectation));
                                wasExpected = !0
                            }
                            for (var definition, i = -1; definition = definitions[++i];) 
                                if (definition.match(method, url, data, headers || {})) {
                                    if (definition.response) 
                                        (
                                            $browser
                                                ? $browser.defer
                                                : responsesPush
                                        )(wrapResponse(definition));
                                    else {
                                        if (!definition.passThrough) 
                                            throw new Error("No response defined !");
                                        $delegate(
                                            method,
                                            url,
                                            data,
                                            callback,
                                            headers,
                                            timeout,
                                            withCredentials,
                                            responseType,
                                            eventHandlers,
                                            uploadEventHandlers
                                        )
                                    }
                                    return
                                }
                            throw wasExpected? new Error("No response defined !") : new Error(
                                "Unexpected request: " + method + " " + url + "\n" + (
                                    expectation
                                        ? "Expected " + expectation
                                        : "No more request expected"
                                )
                            )
                        }
                        function parseRoute(url) {
                            var ret = {
                                    regexp: url
                                },
                                keys = ret.keys = [];
                            return url && angular.isString(url)
                                ? (
                                    url = url.replace(/([().])/g, "\\$1").replace(/(\/)?:(\w+)([?*])?/g, function (_, slash, key, option) {
                                        var optional = "?" === option
                                                ? option
                                                : null,
                                            star = "*" === option
                                                ? option
                                                : null;
                                        return keys.push({
                                            name: key,
                                            optional: !!optional
                                        }),
                                        slash = slash || "",
                                        (
                                            optional
                                                ? ""
                                                : slash
                                        ) + "(?:" + (
                                            optional
                                                ? slash
                                                : ""
                                        ) + (star && "(.+?)" || "([^/]+)") + (optional || "") + ")" + (
                                            optional || ""
                                        )
                                    }).replace(/([\/$*])/g, "\\$1"),
                                    ret.regexp = new RegExp("^" + url, "i"),
                                    ret
                                )
                                : ret
                        }
                        function createShortMethods(prefix) {
                            angular.forEach([
                                "GET", "DELETE", "JSONP", "HEAD"
                            ], function (method) {
                                $httpBackend[prefix + method] = function (url, headers, keys) {
                                    return assertArgDefined(arguments, 0, "url"),
                                    angular.isUndefined(url) && (url = null),
                                    $httpBackend[prefix](method, url, void 0, headers, keys)
                                }
                            }),
                            angular.forEach([
                                "PUT", "POST", "PATCH"
                            ], function (method) {
                                $httpBackend[prefix + method] = function (url, data, headers, keys) {
                                    return assertArgDefined(arguments, 0, "url"),
                                    angular.isUndefined(url) && (url = null),
                                    $httpBackend[prefix](method, url, data, headers, keys)
                                }
                            })
                        }
                        var definitions = [],
                            expectations = [],
                            responses = [],
                            responsesPush = angular.bind(responses, responses.push),
                            copy = angular.copy;
                        return $httpBackend.when = function (method, url, data, headers, keys) {
                            assertArgDefined(arguments, 1, "url");
                            var definition = new MockHttpExpectation(method, url, data, headers, keys),
                                chain = {
                                    respond: function (status, data, headers, statusText) {
                                        return definition.passThrough = void 0,
                                        definition.response = createResponse(status, data, headers, statusText),
                                        chain
                                    }
                                };
                            return $browser && (chain.passThrough = function () {
                                return definition.response = void 0,
                                definition.passThrough = !0,
                                chain
                            }),
                            definitions.push(definition),
                            chain
                        },
                        createShortMethods("when"),
                        $httpBackend.whenRoute = function (method, url) {
                            var pathObj = parseRoute(url);
                            return $httpBackend.when(method, pathObj.regexp, void 0, void 0, pathObj.keys)
                        },
                        $httpBackend.expect = function (method, url, data, headers, keys) {
                            assertArgDefined(arguments, 1, "url");
                            var expectation = new MockHttpExpectation(method, url, data, headers, keys),
                                chain = {
                                    respond: function (status, data, headers, statusText) {
                                        return expectation.response = createResponse(status, data, headers, statusText),
                                        chain
                                    }
                                };
                            return expectations.push(expectation),
                            chain
                        },
                        createShortMethods("expect"),
                        $httpBackend.expectRoute = function (method, url) {
                            var pathObj = parseRoute(url);
                            return $httpBackend.expect(
                                method,
                                pathObj.regexp,
                                void 0,
                                void 0,
                                pathObj.keys
                            )
                        },
                        $httpBackend.flush = function (count, skip, digest) {
                            if (
                                !1 !== digest && $rootScope.$digest(),
                                (skip = skip || 0) >= responses.length
                            ) 
                                throw new Error("No pending request to flush !");
                            if (angular.isDefined(count) && null !== count) 
                                for (; count--;) {
                                    var part = responses.splice(skip, 1);
                                    if (!part.length) 
                                        throw new Error("No more pending request to flush !");
                                    part[0]()
                                }
                            else 
                                for (; responses.length > skip;) 
                                    responses.splice(skip, 1)[0]();
                        $httpBackend.verifyNoOutstandingExpectation(digest)
                        },
                        $httpBackend.verifyNoOutstandingExpectation = function (digest) {
                            if (!1 !== digest && $rootScope.$digest(), expectations.length) 
                                throw new Error("Unsatisfied requests: " + expectations.join(", "))
                        },
                        $httpBackend.verifyNoOutstandingRequest = function (digest) {
                            if (!1 !== digest && $rootScope.$digest(), responses.length) 
                                throw new Error("Unflushed requests: " + responses.length)
                        },
                        $httpBackend.resetExpectations = function () {
                            expectations.length = 0,
                            responses.length = 0
                        },
                        $httpBackend
                    }
                    function assertArgDefined(args, index, name) {
                        if (args.length > index && angular.isUndefined(args[index])) 
                            throw new Error(
                                "Undefined argument `" + name + "`; the argument is provided but not defined"
                            )
                    }
                    function MockHttpExpectation(method, url, data, headers, keys) {
                        function getUrlParams(u) {
                            return u
                                .slice(u.indexOf("?") + 1)
                                .split("&")
                                .sort()
                        }
                        function compareUrl(u) {
                            return url.slice(0, url.indexOf("?")) === u.slice(0, u.indexOf("?")) && getUrlParams(
                                url
                            ).join() === getUrlParams(u).join()
                        }
                        this.data = data,
                        this.headers = headers,
                        this.match = function (m, u, d, h) {
                            return method === m && (
                                !!this.matchUrl(u) && (!(angular.isDefined(d) && !this.matchData(d)) && !(angular.isDefined(h) && !this.matchHeaders(h)))
                            )
                        },
                        this.matchUrl = function (u) {
                            return !url || (
                                angular.isFunction(url.test)
                                    ? url.test(u)
                                    : angular.isFunction(url)
                                        ? url(u)
                                        : url === u || compareUrl(u)
                            )
                        },
                        this.matchHeaders = function (h) {
                            return !!angular.isUndefined(headers) || (
                                angular.isFunction(headers)
                                    ? headers(h)
                                    : angular.equals(headers, h)
                            )
                        },
                        this.matchData = function (d) {
                            return !!angular.isUndefined(data) || (
                                data && angular.isFunction(data.test)
                                    ? data.test(d)
                                    : data && angular.isFunction(data)
                                        ? data(d)
                                        : data && !angular.isString(data)
                                            ? angular.equals(angular.fromJson(angular.toJson(data)), angular.fromJson(d))
                                            : data == d
                            )
                        },
                        this.toString = function () {
                            return method + " " + url
                        },
                        this.params = function (u) {
                            function pathParams() {
                                var keyObj = {};
                                if (!url || !angular.isFunction(url.test) || !keys || 0 === keys.length) 
                                    return keyObj;
                                var m = url.exec(u);
                                if (!m) 
                                    return keyObj;
                                for (var i = 1, len = m.length; i < len; ++i) {
                                    var key = keys[i - 1],
                                        val = m[i];
                                    key && val && (keyObj[key.name || key] = val)
                                }
                                return keyObj
                            }
                            function parseQuery() {
                                var key_value,
                                    key,
                                    obj = {},
                                    queryStr = u.indexOf("?") > -1
                                        ? u.substring(u.indexOf("?") + 1)
                                        : "";
                                return angular.forEach(queryStr.split("&"), function (keyValue) {
                                    if (keyValue && (
                                        key_value = keyValue.replace(/\+/g, "%20").split("="),
                                        key = tryDecodeURIComponent(key_value[0]),
                                        angular.isDefined(key)
                                    )) {
                                        var val = !angular.isDefined(key_value[1]) || tryDecodeURIComponent(
                                            key_value[1]
                                        );
                                        hasOwnProperty.call(obj, key)
                                            ? angular.isArray(obj[key])
                                                ? obj[key].push(val)
                                                : obj[key] = [obj[key], val]
                                            : obj[key] = val
                                    }
                                }),
                                obj
                            }
                            function tryDecodeURIComponent(value) {
                                try {
                                    return decodeURIComponent(value)
                                } catch (e) {}
                            }
                            return angular.extend(parseQuery(), pathParams())
                        }
                    }
                    function MockXhr() {
                        MockXhr.$$lastInstance = this,
                        this.open = function (method, url, async) {
                            this.$$method = method,
                            this.$$url = url,
                            this.$$async = async,
                            this.$$reqHeaders = {},
                            this.$$respHeaders = {}
                        },
                        this.send = function (data) {
                            this.$$data = data
                        },
                        this.setRequestHeader = function (key, value) {
                            this.$$reqHeaders[key] = value
                        },
                        this.getResponseHeader = function (name) {
                            var header = this.$$respHeaders[name];
                            return header || (
                                name = angular.lowercase(name),
                                (header = this.$$respHeaders[name])
                                    ? header
                                    : (
                                        header = void 0,
                                        angular.forEach(this.$$respHeaders, function (headerVal, headerName) {
                                            header || angular.lowercase(headerName) !== name || (header = headerVal)
                                        }),
                                        header
                                    )
                            )
                        },
                        this.getAllResponseHeaders = function () {
                            var lines = [];
                            return angular.forEach(this.$$respHeaders, function (value, key) {
                                lines.push(key + ": " + value)
                            }),
                            lines.join("\n")
                        },
                        this.abort = angular.noop,
                        this.$$events = {},
                        this.addEventListener = function (name, listener) {
                            angular.isUndefined(this.$$events[name]) && (this.$$events[name] = []),
                            this
                                .$$events[name]
                                .push(listener)
                        },
                        this.upload = {
                            $$events: {},
                            addEventListener: this.addEventListener
                        }
                    }
                    function createControllerDecorator(compileProvider) {
                        return angular.mock.$ControllerDecorator = [
                            "$delegate",
                            function ($delegate) {
                                return function (expression, locals, later, ident) {
                                    if (later && "object" == typeof later) {
                                        var preAssignBindingsEnabled = compileProvider.preAssignBindingsEnabled(),
                                            instantiate = $delegate(expression, locals, !0, ident);
                                        preAssignBindingsEnabled && angular.extend(instantiate.instance, later);
                                        var instance = instantiate();
                                        return preAssignBindingsEnabled && instance === instantiate.instance || angular.extend(
                                            instance,
                                            later
                                        ),
                                        instance
                                    }
                                    return $delegate(expression, locals, later, ident)
                                }
                            }
                        ],
                        angular.mock.$ControllerDecorator
                    }
                    angular.mock = {},
                    angular.mock.$BrowserProvider = function () {
                        this.$get = function () {
                            return new angular.mock.$Browser
                        }
                    },
                    angular.mock.$Browser = function () {
                        var self = this;
                        this.isMock = !0,
                        self.$$url = "http://server/",
                        self.$$lastUrl = self.$$url,
                        self.pollFns = [],
                        self.$$completeOutstandingRequest = angular.noop,
                        self.$$incOutstandingRequestCount = angular.noop,
                        self.onUrlChange = function (listener) {
                            return self
                                .pollFns
                                .push(function () {
                                    self.$$lastUrl === self.$$url && self.$$state === self.$$lastState || (
                                        self.$$lastUrl = self.$$url,
                                        self.$$lastState = self.$$state,
                                        listener(self.$$url, self.$$state)
                                    )
                                }),
                            listener
                        },
                        self.$$applicationDestroyed = angular.noop,
                        self.$$checkUrlChange = angular.noop,
                        self.deferredFns = [],
                        self.deferredNextId = 0,
                        self.defer = function (fn, delay) {
                            return delay = delay || 0,
                            self
                                .deferredFns
                                .push({
                                    time: self.defer.now + delay,
                                    fn: fn,
                                    id: self.deferredNextId
                                }),
                            self
                                .deferredFns
                                .sort(function (a, b) {
                                    return a.time - b.time
                                }),
                            self.deferredNextId++
                        },
                        self.defer.now = 0,
                        self.defer.cancel = function (deferId) {
                            var fnIndex;
                            return angular.forEach(self.deferredFns, function (fn, index) {
                                fn.id === deferId && (fnIndex = index)
                            }),
                            !!angular.isDefined(fnIndex) && (self.deferredFns.splice(fnIndex, 1), !0)
                        },
                        self.defer.flush = function (delay) {
                            var nextTime;
                            if (angular.isDefined(delay)) 
                                nextTime = self.defer.now + delay;
                            else {
                                if (!self.deferredFns.length) 
                                    throw new Error("No deferred tasks to be flushed");
                                nextTime = self
                                    .deferredFns[self.deferredFns.length - 1]
                                    .time
                            }
                            for (; self.deferredFns.length && self.deferredFns[0].time <= nextTime;) 
                                self.defer.now = self
                                    .deferredFns[0]
                                    .time,
                                self
                                    .deferredFns
                                    .shift()
                                    .fn();
                            self.defer.now = nextTime
                        },
                        self.$$baseHref = "/",
                        self.baseHref = function () {
                            return this.$$baseHref
                        }
                    },
                    angular.mock.$Browser.prototype = {
                        poll: function poll() {
                            angular.forEach(this.pollFns, function (pollFn) {
                                pollFn()
                            })
                        },
                        url: function (url, replace, state) {
                            return angular.isUndefined(state) && (state = null),
                            url
                                ? (this.$$url = url, this.$$state = angular.copy(state), this)
                                : this.$$url
                        },
                        state: function () {
                            return this.$$state
                        },
                        notifyWhenNoOutstandingRequests: function (fn) {
                            fn()
                        }
                    },
                    angular.mock.$ExceptionHandlerProvider = function () {
                        var handler;
                        this.mode = function (mode) {
                            switch (mode) {
                                case "log":
                                case "rethrow":
                                    var errors = [];
                                    handler = function (e) {
                                        if (
                                            1 === arguments.length
                                                ? errors.push(e)
                                                : errors.push([].slice.call(arguments, 0)),
                                            "rethrow" === mode
                                        ) 
                                            throw e
                                    },
                                    handler.errors = errors;
                                    break;
                                default:
                                    throw new Error(
                                        "Unknown mode '" + mode + "', only 'log'/'rethrow' modes are allowed!"
                                    )
                            }
                        },
                        this.$get = function () {
                            return handler
                        },
                        this.mode("rethrow")
                    },
                    angular.mock.$LogProvider = function () {
                        function concat(array1, array2, index) {
                            return array1.concat(Array.prototype.slice.call(array2, index))
                        }
                        var debug = !0;
                        this.debugEnabled = function (flag) {
                            return angular.isDefined(flag)
                                ? (debug = flag, this)
                                : debug
                        },
                        this.$get = function () {
                            var $log = {
                                log: function () {
                                    $log
                                        .log
                                        .logs
                                        .push(concat([], arguments, 0))
                                },
                                warn: function () {
                                    $log
                                        .warn
                                        .logs
                                        .push(concat([], arguments, 0))
                                },
                                info: function () {
                                    $log
                                        .info
                                        .logs
                                        .push(concat([], arguments, 0))
                                },
                                error: function () {
                                    $log
                                        .error
                                        .logs
                                        .push(concat([], arguments, 0))
                                },
                                debug: function () {
                                    debug && $log
                                        .debug
                                        .logs
                                        .push(concat([], arguments, 0))
                                }
                            };
                            return $log.reset = function () {
                                $log.log.logs = [],
                                $log.info.logs = [],
                                $log.warn.logs = [],
                                $log.error.logs = [],
                                $log.debug.logs = []
                            },
                            $log.assertEmpty = function () {
                                var errors = [];
                                if (angular.forEach([
                                    "error", "warn", "info", "log", "debug"
                                ], function (logLevel) {
                                    angular.forEach($log[logLevel].logs, function (log) {
                                        angular.forEach(log, function (logItem) {
                                            errors.push("MOCK $log (" + logLevel + "): " + String(logItem) + "\n" + (
                                                logItem.stack || ""
                                            ))
                                        })
                                    })
                                }), errors.length) 
                                    throw errors.unshift(
                                        "Expected $log to be empty! Either a message was logged unexpectedly, or an exp" +
                                    "ected log message was not checked and removed:"
                                    ),
                                    errors.push(""),
                                    new Error(errors.join("\n---------\n"))
                            },
                            $log.reset(),
                            $log
                        }
                    },
                    angular.mock.$IntervalProvider = function () {
                        this.$get = [
                            "$browser",
                            "$rootScope",
                            "$q",
                            "$$q",
                            function ($browser, $rootScope, $q, $$q) {
                                var repeatFns = [],
                                    nextRepeatId = 0,
                                    now = 0,
                                    $interval = function (fn, delay, count, invokeApply) {
                                        function tick() {
                                            if (deferred.notify(iteration++), count > 0 && iteration >= count) {
                                                var fnIndex;
                                                deferred.resolve(iteration),
                                                angular.forEach(repeatFns, function (fn, index) {
                                                    fn.id === promise.$$intervalId && (fnIndex = index)
                                                }),
                                                angular.isDefined(fnIndex) && repeatFns.splice(fnIndex, 1)
                                            }
                                            skipApply
                                                ? $browser
                                                    .defer
                                                    .flush()
                                                : $rootScope.$apply()
                                        }
                                        var hasParams = arguments.length > 4,
                                            args = hasParams
                                                ? Array
                                                    .prototype
                                                    .slice
                                                    .call(arguments, 4)
                                                : [],
                                            iteration = 0,
                                            skipApply = angular.isDefined(invokeApply) && !invokeApply,
                                            deferred = (
                                                skipApply
                                                    ? $$q
                                                    : $q
                                            ).defer(),
                                            promise = deferred.promise;
                                        return count = angular.isDefined(count)
                                            ? count
                                            : 0,
                                        promise.then(
                                            null,
                                            function () {},
                                            hasParams
                                                ? function () {
                                                    fn.apply(null, args)
                                                }
                                                : fn
                                        ),
                                        promise.$$intervalId = nextRepeatId,
                                        repeatFns.push({
                                            nextTime: now + delay,
                                            delay: delay,
                                            fn: tick,
                                            id: nextRepeatId,
                                            deferred: deferred
                                        }),
                                        repeatFns.sort(function (a, b) {
                                            return a.nextTime - b.nextTime
                                        }),
                                        nextRepeatId++,
                                        promise
                                    };
                                return $interval.cancel = function (promise) {
                                    if (!promise) 
                                        return !1;
                                    var fnIndex;
                                    return angular.forEach(repeatFns, function (fn, index) {
                                        fn.id === promise.$$intervalId && (fnIndex = index)
                                    }),
                                    !!angular.isDefined(fnIndex) && (
                                        repeatFns[fnIndex].deferred.promise.then(void 0, function () {}),
                                        repeatFns[fnIndex].deferred.reject("canceled"),
                                        repeatFns.splice(fnIndex, 1),
                                        !0
                                    )
                                },
                                $interval.flush = function (millis) {
                                    for (now += millis; repeatFns.length && repeatFns[0].nextTime <= now;) {
                                        var task = repeatFns[0];
                                        task.fn(),
                                        task.nextTime += task.delay,
                                        repeatFns.sort(function (a, b) {
                                            return a.nextTime - b.nextTime
                                        })
                                    }
                                    return millis
                                },
                                $interval
                            }
                        ]
                    },
                    angular.mock.TzDate = function (offset, timestamp) {
                        var self = new Date(0);
                        if (angular.isString(timestamp)) {
                            var tsStr = timestamp;
                            if (
                                self.origDate = jsonStringToDate(timestamp),
                                timestamp = self.origDate.getTime(),
                                isNaN(timestamp)
                            ) 
                                throw {
                                    name : "Illegal Argument",
                                    message: "Arg '" + tsStr +
                                        "' passed into TzDate constructor is not a valid date string"
                                }
                            } else 
                            self.origDate = new Date(timestamp);
                        var localOffset = new Date(timestamp).getTimezoneOffset();
                        self.offsetDiff = 60 * localOffset * 1e3 - 1e3 * offset * 60 * 60,
                        self.date = new Date(timestamp + self.offsetDiff),
                        self.getTime = function () {
                            return self
                                .date
                                .getTime() - self.offsetDiff
                        },
                        self.toLocaleDateString = function () {
                            return self
                                .date
                                .toLocaleDateString()
                        },
                        self.getFullYear = function () {
                            return self
                                .date
                                .getFullYear()
                        },
                        self.getMonth = function () {
                            return self
                                .date
                                .getMonth()
                        },
                        self.getDate = function () {
                            return self
                                .date
                                .getDate()
                        },
                        self.getHours = function () {
                            return self
                                .date
                                .getHours()
                        },
                        self.getMinutes = function () {
                            return self
                                .date
                                .getMinutes()
                        },
                        self.getSeconds = function () {
                            return self
                                .date
                                .getSeconds()
                        },
                        self.getMilliseconds = function () {
                            return self
                                .date
                                .getMilliseconds()
                        },
                        self.getTimezoneOffset = function () {
                            return 60 * offset
                        },
                        self.getUTCFullYear = function () {
                            return self
                                .origDate
                                .getUTCFullYear()
                        },
                        self.getUTCMonth = function () {
                            return self
                                .origDate
                                .getUTCMonth()
                        },
                        self.getUTCDate = function () {
                            return self
                                .origDate
                                .getUTCDate()
                        },
                        self.getUTCHours = function () {
                            return self
                                .origDate
                                .getUTCHours()
                        },
                        self.getUTCMinutes = function () {
                            return self
                                .origDate
                                .getUTCMinutes()
                        },
                        self.getUTCSeconds = function () {
                            return self
                                .origDate
                                .getUTCSeconds()
                        },
                        self.getUTCMilliseconds = function () {
                            return self
                                .origDate
                                .getUTCMilliseconds()
                        },
                        self.getDay = function () {
                            return self
                                .date
                                .getDay()
                        },
                        self.toISOString && (self.toISOString = function () {
                            return padNumberInMock(self.origDate.getUTCFullYear(), 4) + "-" +
                                padNumberInMock(self.origDate.getUTCMonth() + 1, 2) + "-" +
                                padNumberInMock(self.origDate.getUTCDate(), 2) + "T" +
                                padNumberInMock(self.origDate.getUTCHours(), 2) + ":" +
                                padNumberInMock(self.origDate.getUTCMinutes(), 2) + ":" +
                                padNumberInMock(self.origDate.getUTCSeconds(), 2) + "." +
                                padNumberInMock(self.origDate.getUTCMilliseconds(), 3) + "Z"
                        });
                        var unimplementedMethods = [
                            "getUTCDay",
                            "getYear",
                            "setDate",
                            "setFullYear",
                            "setHours",
                            "setMilliseconds",
                            "setMinutes",
                            "setMonth",
                            "setSeconds",
                            "setTime",
                            "setUTCDate",
                            "setUTCFullYear",
                            "setUTCHours",
                            "setUTCMilliseconds",
                            "setUTCMinutes",
                            "setUTCMonth",
                            "setUTCSeconds",
                            "setYear",
                            "toDateString",
                            "toGMTString",
                            "toJSON",
                            "toLocaleFormat",
                            "toLocaleString",
                            "toLocaleTimeString",
                            "toSource",
                            "toString",
                            "toTimeString",
                            "toUTCString",
                            "valueOf"
                        ];
                        return angular.forEach(unimplementedMethods, function (methodName) {
                            self[methodName] = function () {
                                throw new Error(
                                    "Method '" + methodName + "' is not implemented in the TzDate mock"
                                )
                            }
                        }),
                        self
                    },
                    angular.mock.TzDate.prototype = Date.prototype,
                    angular.mock.animate = angular
                        .module("ngAnimateMock", ["ng"])
                        .config([
                            "$provide",
                            function ($provide) {
                                $provide.factory("$$forceReflow", function () {
                                    function reflowFn() {
                                        reflowFn.totalReflows++
                                    }
                                    return reflowFn.totalReflows = 0,
                                    reflowFn
                                }),
                                $provide.factory("$$animateAsyncRun", function () {
                                    var queue = [],
                                        queueFn = function () {
                                            return function (fn) {
                                                queue.push(fn)
                                            }
                                        };
                                    return queueFn.flush = function () {
                                        if (0 === queue.length) 
                                            return !1;
                                        for (var i = 0; i < queue.length; i++) 
                                            queue[i]();
                                        return queue = [],
                                        !0
                                    },
                                    queueFn
                                }),
                                $provide.decorator("$$animateJs", [
                                    "$delegate",
                                    function ($delegate) {
                                        var runners = [],
                                            animateJsConstructor = function () {
                                                var animator = $delegate.apply($delegate, arguments);
                                                return animator && runners.push(animator),
                                                animator
                                            };
                                        return animateJsConstructor.$closeAndFlush = function () {
                                            runners.forEach(function (runner) {
                                                runner.end()
                                            }),
                                            runners = []
                                        },
                                        animateJsConstructor
                                    }
                                ]),
                                $provide.decorator("$animateCss", [
                                    "$delegate",
                                    function ($delegate) {
                                        var runners = [],
                                            animateCssConstructor = function (element, options) {
                                                var animator = $delegate(element, options);
                                                return runners.push(animator),
                                                animator
                                            };
                                        return animateCssConstructor.$closeAndFlush = function () {
                                            runners.forEach(function (runner) {
                                                runner.end()
                                            }),
                                            runners = []
                                        },
                                        animateCssConstructor
                                    }
                                ]),
                                $provide.decorator("$animate", [
                                    "$delegate",
                                    "$timeout",
                                    "$browser",
                                    "$$rAF",
                                    "$animateCss",
                                    "$$animateJs",
                                    "$$forceReflow",
                                    "$$animateAsyncRun",
                                    "$rootScope",
                                    function (
                                        $delegate,
                                        $timeout,
                                        $browser,
                                        $$rAF,
                                        $animateCss,
                                        $$animateJs,
                                        $$forceReflow,
                                        $$animateAsyncRun,
                                        $rootScope
                                    ) {
                                        var animate = {
                                            queue: [],
                                            cancel: $delegate.cancel,
                                            on: $delegate.on,
                                            off: $delegate.off,
                                            pin: $delegate.pin,
                                            get reflows() {
                                                return $$forceReflow.totalReflows
                                            },
                                            enabled: $delegate.enabled,
                                            closeAndFlush: function () {
                                                this.flush(!0),
                                                $animateCss.$closeAndFlush(),
                                                $$animateJs.$closeAndFlush(),
                                                this.flush()
                                            },
                                            flush: function (hideErrors) {
                                                $rootScope.$digest();
                                                var doNextRun,
                                                    somethingFlushed = !1;
                                                do {
                                                    doNextRun = !1,
                                                    $$rAF.queue.length && ($$rAF.flush(), doNextRun = somethingFlushed = !0),
                                                    $$animateAsyncRun.flush() && (doNextRun = somethingFlushed = !0)
                                                } while (doNextRun);
                                                if (!somethingFlushed && !hideErrors) 
                                                    throw new Error("No pending animations ready to be closed or flushed");
                                                $rootScope.$digest()
                                            }
                                        };
                                        return angular.forEach([
                                            "animate",
                                            "enter",
                                            "leave",
                                            "move",
                                            "addClass",
                                            "removeClass",
                                            "setClass"
                                        ], function (method) {
                                            animate[method] = function () {
                                                return animate
                                                    .queue
                                                    .push({
                                                        event: method,
                                                        element: arguments[0],
                                                        options: arguments[arguments.length - 1],
                                                        args: arguments
                                                    }),
                                                $delegate[method].apply($delegate, arguments)
                                            }
                                        }),
                                        animate
                                    }
                                ])
                            }
                        ]),
                    angular.mock.dump = function (object) {
                        function serialize(object) {
                            var out;
                            return angular.isElement(object)
                                ? (
                                    object = angular.element(object),
                                    out = angular.element("<div></div>"),
                                    angular.forEach(object, function (element) {
                                        out.append(angular.element(element).clone())
                                    }),
                                    out = out.html()
                                )
                                : angular.isArray(object)
                                    ? (
                                        out = [],
                                        angular.forEach(object, function (o) {
                                            out.push(serialize(o))
                                        }),
                                        out = "[ " + out.join(", ") + " ]"
                                    )
                                    : out = angular.isObject(object)
                                        ? angular.isFunction(object.$eval) && angular.isFunction(object.$apply)
                                            ? serializeScope(object)
                                            : object instanceof Error
                                                ? object.stack || object.name + ": " + object.message
                                                : angular.toJson(object, !0)
                                        : String(object),
                            out
                        }
                        function serializeScope(scope, offset) {
                            offset = offset || "  ";
                            var log = [offset + "Scope(" + scope.$id + "): {"];
                            for (var key in scope) 
                                Object
                                    .prototype
                                    .hasOwnProperty
                                    .call(scope, key) && !key.match(/^(\$|this)/) && log.push(
                                    "  " + key + ": " + angular.toJson(scope[key])
                                );
                            for (var child = scope.$$childHead; child;) 
                                log.push(serializeScope(child, offset + "  ")),
                                child = child.$$nextSibling;
                            return log.push("}"),
                            log.join("\n" + offset)
                        }
                        return serialize(object)
                    },
                    angular.mock.$HttpBackendProvider = function () {
                        this.$get = ["$rootScope", "$timeout", createHttpBackendMock]
                    },
                    angular.mock.$TimeoutDecorator = [
                        "$delegate",
                        "$browser",
                        function ($delegate, $browser) {
                            function formatPendingTasksAsString(tasks) {
                                var result = [];
                                return angular.forEach(tasks, function (task) {
                                    result.push("{id: " + task.id + ", time: " + task.time + "}")
                                }),
                                result.join(", ")
                            }
                            return $delegate.flush = function (delay) {
                                $browser
                                    .defer
                                    .flush(delay)
                            },
                            $delegate.verifyNoPendingTasks = function () {
                                if ($browser.deferredFns.length) 
                                    throw new Error(
                                        "Deferred tasks to flush (" + $browser.deferredFns.length + "): " +
                                        formatPendingTasksAsString($browser.deferredFns)
                                    )
                            },
                            $delegate
                        }
                    ],
                    angular.mock.$RAFDecorator = [
                        "$delegate",
                        function ($delegate) {
                            var rafFn = function (fn) {
                                var index = rafFn.queue.length;
                                return rafFn
                                    .queue
                                    .push(fn),
                                function () {
                                    rafFn
                                        .queue
                                        .splice(index, 1)
                                }
                            };
                            return rafFn.queue = [],
                            rafFn.supported = $delegate.supported,
                            rafFn.flush = function () {
                                if (0 === rafFn.queue.length) 
                                    throw new Error("No rAF callbacks present");
                                for (var length = rafFn.queue.length, i = 0; i < length; i++) 
                                    rafFn.queue[i]();
                                rafFn.queue = rafFn
                                    .queue
                                    .slice(i)
                            },
                            rafFn
                        }
                    ];
                    var originalRootElement;
                    angular.mock.$RootElementProvider = function () {
                        this.$get = [
                            "$injector",
                            function ($injector) {
                                return originalRootElement = angular
                                    .element("<div ng-app></div>")
                                    .data("$injector", $injector)
                            }
                        ]
                    },
                    angular.mock.$ComponentControllerProvider = [
                        "$compileProvider",
                        function ComponentControllerProvider($compileProvider) {
                            this.$get = [
                                "$controller",
                                "$injector",
                                "$rootScope",
                                function ($controller, $injector, $rootScope) {
                                    return function $componentController(componentName, locals, bindings, ident) {
                                        var directives = $injector.get(componentName + "Directive"),
                                            candidateDirectives = directives.filter(function (directiveInfo) {
                                                return directiveInfo.controller && directiveInfo.controllerAs && "E" === directiveInfo.restrict
                                            });
                                        if (0 === candidateDirectives.length) 
                                            throw new Error("No component found");
                                        if (candidateDirectives.length > 1) 
                                            throw new Error("Too many components found");
                                        var directiveInfo = candidateDirectives[0];
                                        return locals = locals || {},
                                        locals.$scope = locals.$scope || $rootScope.$new(!0),
                                        $controller(
                                            directiveInfo.controller,
                                            locals,
                                            bindings,
                                            ident || directiveInfo.controllerAs
                                        )
                                    }
                                }
                            ]
                        }
                    ],
                    angular
                        .module("ngMock", ["ng"])
                        .provider({
                            $browser: angular.mock.$BrowserProvider,
                            $exceptionHandler: angular.mock.$ExceptionHandlerProvider,
                            $log: angular.mock.$LogProvider,
                            $interval: angular.mock.$IntervalProvider,
                            $httpBackend: angular.mock.$HttpBackendProvider,
                            $rootElement: angular.mock.$RootElementProvider,
                            $componentController: angular.mock.$ComponentControllerProvider
                        })
                        .config([
                            "$provide",
                            "$compileProvider",
                            function ($provide, $compileProvider) {
                                $provide.decorator("$timeout", angular.mock.$TimeoutDecorator),
                                $provide.decorator("$$rAF", angular.mock.$RAFDecorator),
                                $provide.decorator("$rootScope", angular.mock.$RootScopeDecorator),
                                $provide.decorator("$controller", createControllerDecorator($compileProvider))
                            }
                        ]),
                    angular
                        .module("ngMockE2E", ["ng"])
                        .config([
                            "$provide",
                            function ($provide) {
                                $provide.value("$httpBackend", angular.injector(["ng"]).get("$httpBackend")),
                                $provide.decorator("$httpBackend", angular.mock.e2e.$httpBackendDecorator)
                            }
                        ]),
                    angular.mock.e2e = {},
                    angular.mock.e2e.$httpBackendDecorator = [
                        "$rootScope", "$timeout", "$delegate", "$browser", createHttpBackendMock
                    ],
                    angular.mock.$RootScopeDecorator = [
                        "$delegate",
                        function ($delegate) {
                            function countChildScopes() {
                                for (
                                    var currentScope,
                                    count = 0,
                                    pendingChildHeads = [this.$$childHead];
                                    pendingChildHeads.length;
                                ) 
                                    for (currentScope = pendingChildHeads.shift(); currentScope;) 
                                        count += 1,
                                        pendingChildHeads.push(currentScope.$$childHead),
                                        currentScope = currentScope.$$nextSibling;
                            return count
                            }
                            function countWatchers() {
                                for (
                                    var currentScope,
                                    count = this.$$watchers
                                        ? this.$$watchers.length
                                        : 0,
                                    pendingChildHeads = [this.$$childHead]; pendingChildHeads.length;
                                ) 
                                    for (currentScope = pendingChildHeads.shift(); currentScope;) 
                                        count += currentScope.$$watchers
                                            ? currentScope.$$watchers.length
                                            : 0,
                                        pendingChildHeads.push(currentScope.$$childHead),
                                        currentScope = currentScope.$$nextSibling;
                            return count
                            }
                            var $rootScopePrototype = Object.getPrototypeOf($delegate);
                            return $rootScopePrototype.$countChildScopes = countChildScopes,
                            $rootScopePrototype.$countWatchers = countWatchers,
                            $delegate
                        }
                    ],
                    function (jasmineOrMocha) {
                        function InjectorState() {
                            this.shared = !1,
                            this.sharedError = null,
                            this.cleanupAfterEach = function () {
                                return !this.shared || this.sharedError
                            }
                        }
                        if (jasmineOrMocha) {
                            var currentSpec = null,
                                injectorState = new InjectorState,
                                annotatedFunctions = [],
                                wasInjectorCreated = function () {
                                    return !!currentSpec
                                };
                            angular.mock.$$annotate = angular.injector.$$annotate,
                            angular.injector.$$annotate = function (fn) {
                                return "function" != typeof fn || fn.$inject || annotatedFunctions.push(fn),
                                angular
                                    .mock
                                    .$$annotate
                                    .apply(this, arguments)
                            };
                            var module = window.module = angular.mock.module = function () {
                                function workFn() {
                                    if (currentSpec.$injector) 
                                        throw new Error("Injector already created, can not register a module!");
                                    var fn,
                                        modules = currentSpec.$modules || (currentSpec.$modules = []);
                                    angular.forEach(moduleFns, function (module) {
                                        fn = angular.isObject(module) && !angular.isArray(module)
                                            ? [
                                                "$provide",
                                                function ($provide) {
                                                    angular.forEach(module, function (value, key) {
                                                        $provide.value(key, value)
                                                    })
                                                }
                                            ]
                                            : module,
                                        currentSpec.$providerInjector
                                            ? currentSpec
                                                .$providerInjector
                                                .invoke(fn)
                                            : modules.push(fn)
                                    })
                                }
                                var moduleFns = Array
                                    .prototype
                                    .slice
                                    .call(arguments, 0);
                                return wasInjectorCreated()
                                    ? workFn()
                                    : workFn
                            };
                            module.$$beforeAllHook = window.before || window.beforeAll,
                            module.$$afterAllHook = window.after || window.afterAll,
                            module.$$currentSpec = function (to) {
                                if (0 === arguments.length) 
                                    return to;
                                currentSpec = to
                            },
                            module.sharedInjector = function () {
                                if (!module.$$beforeAllHook || !module.$$afterAllHook) 
                                    throw Error(
                                        "sharedInjector() cannot be used unless your test runner defines beforeAll/afte" +
                                    "rAll"
                                    );
                                var initialized = !1;
                                module.$$beforeAllHook(function () {
                                    if (injectorState.shared) 
                                        throw injectorState.sharedError = Error(
                                            "sharedInjector() cannot be called inside a context that has already called sha" +
                                        "redInjector()"
                                        ),
                                        injectorState.sharedError;
                                    initialized = !0,
                                    currentSpec = this,
                                    injectorState.shared = !0
                                }),
                                module.$$afterAllHook(function () {
                                    initialized
                                        ? (injectorState = new InjectorState, module.$$cleanup())
                                        : injectorState.sharedError = null
                                })
                            },
                            module.$$beforeEach = function () {
                                if (injectorState.shared && currentSpec && currentSpec !== this) {
                                    var state = currentSpec;
                                    currentSpec = this,
                                    angular.forEach([
                                        "$injector", "$modules", "$providerInjector", "$injectorStrict"
                                    ], function (k) {
                                        currentSpec[k] = state[k],
                                        state[k] = null
                                    })
                                } else 
                                    currentSpec = this,
                                    originalRootElement = null,
                                    annotatedFunctions = []
                            },
                            module.$$afterEach = function () {
                                injectorState.cleanupAfterEach() && module.$$cleanup()
                            },
                            module.$$cleanup = function () {
                                var injector = currentSpec.$injector;
                                if (
                                    annotatedFunctions.forEach(function (fn) {
                                        delete fn.$inject
                                    }),
                                    angular.forEach(currentSpec.$modules, function (module) {
                                        module && module.$$hashKey && (module.$$hashKey = void 0)
                                    }),
                                    currentSpec.$injector = null,
                                    currentSpec.$modules = null,
                                    currentSpec.$providerInjector = null,
                                    currentSpec = null,
                                    injector
                                ) {
                                    var $rootElement = injector.get("$rootElement"),
                                        rootNode = $rootElement && $rootElement[0],
                                        cleanUpNodes = originalRootElement
                                            ? [originalRootElement[0]]
                                            : [];
                                    !rootNode || originalRootElement && rootNode === originalRootElement[0] || cleanUpNodes.push(
                                        rootNode
                                    ),
                                    angular
                                        .element
                                        .cleanData(cleanUpNodes);
                                    var $rootScope = injector.get("$rootScope");
                                    $rootScope && $rootScope.$destroy && $rootScope.$destroy()
                                }
                                angular.forEach(angular.element.fragments, function (val, key) {
                                    delete angular
                                        .element
                                        .fragments[key]
                                }),
                                MockXhr.$$lastInstance = null,
                                angular.forEach(angular.callbacks, function (val, key) {
                                    delete angular.callbacks[key]
                                }),
                                angular.callbacks.$$counter = 0
                            },
                            (window.beforeEach || window.setup)(module.$$beforeEach),
                            (window.afterEach || window.teardown)(module.$$afterEach);
                            var ErrorAddingDeclarationLocationStack = function ErrorAddingDeclarationLocationStack(
                                e,
                                errorForStack
                            ) {
                                this.message = e.message,
                                this.name = e.name,
                                e.line && (this.line = e.line),
                                e.sourceId && (this.sourceId = e.sourceId),
                                e.stack && errorForStack && (this.stack = e.stack + "\n" + errorForStack.stack),
                                e.stackArray && (this.stackArray = e.stackArray)
                            };
                            ErrorAddingDeclarationLocationStack.prototype = Error.prototype,
                            window.inject = angular.mock.inject = function () {
                                function WorkFn() {
                                    var modules = currentSpec.$modules || [],
                                        strictDi = !!currentSpec.$injectorStrict;
                                    modules.unshift([
                                        "$injector",
                                        function ($injector) {
                                            currentSpec.$providerInjector = $injector
                                        }
                                    ]),
                                    modules.unshift("ngMock"),
                                    modules.unshift("ng");
                                    var injector = currentSpec.$injector;
                                    injector || (
                                        strictDi && angular.forEach(modules, function (moduleFn) {
                                            "function" == typeof moduleFn && angular
                                                .injector
                                                .$$annotate(moduleFn)
                                        }),
                                        injector = currentSpec.$injector = angular.injector(modules, strictDi),
                                        currentSpec.$injectorStrict = strictDi
                                    );
                                    for (var i = 0, ii = blockFns.length; i < ii; i++) {
                                        currentSpec.$injectorStrict && injector.annotate(blockFns[i]);
                                        try {
                                            injector.invoke(blockFns[i] || angular.noop, this)
                                        } catch (e) {
                                            if (e.stack && errorForStack) 
                                                throw new ErrorAddingDeclarationLocationStack(e, errorForStack);
                                            throw e
                                        } finally {
                                            errorForStack = null
                                        }
                                    }
                                }
                                var blockFns = Array
                                        .prototype
                                        .slice
                                        .call(arguments, 0),
                                    errorForStack = new Error("Declaration Location");
                                if (!errorForStack.stack) 
                                    try {
                                        throw errorForStack
                                    } catch (e) {}
                                return wasInjectorCreated()
                                    ? WorkFn.call(currentSpec)
                                    : WorkFn
                            },
                            angular.mock.inject.strictDi = function (value) {
                                function workFn() {
                                    if (value !== currentSpec.$injectorStrict) {
                                        if (currentSpec.$injector) 
                                            throw new Error("Injector already created, can not modify strict annotations");
                                        currentSpec.$injectorStrict = value
                                    }
                                }
                                return value = !arguments.length || !!value,
                                wasInjectorCreated()
                                    ? workFn()
                                    : workFn
                            }
                        }
                    }(window.jasmine || window.mocha),
                    function () {
                        function supportsTouchEvents() {
                            if ("_cached" in supportsTouchEvents) 
                                return supportsTouchEvents._cached;
                            if (!window.document.createTouch || !window.document.createTouchList) 
                                return supportsTouchEvents._cached = !1,
                                !1;
                            try {
                                window
                                    .document
                                    .createEvent("TouchEvent")
                            } catch (e) {
                                return supportsTouchEvents._cached = !1,
                                !1
                            }
                            return supportsTouchEvents._cached = !0,
                            !0
                        }
                        function createTouchEvent(element, eventType, x, y) {
                            var evnt = new window.Event(eventType);
                            x = x || 0,
                            y = y || 0;
                            var touch = window
                                    .document
                                    .createTouch(window, element, Date.now(), x, y, x, y),
                                touches = window
                                    .document
                                    .createTouchList(touch);
                            return evnt.touches = touches,
                            evnt
                        }
                        function supportsEventBubblingInDetachedTree() {
                            if ("_cached" in supportsEventBubblingInDetachedTree) 
                                return supportsEventBubblingInDetachedTree._cached;
                            supportsEventBubblingInDetachedTree._cached = !1;
                            var doc = window.document;
                            if (doc) {
                                var parent = doc.createElement("div"),
                                    child = parent.cloneNode();
                                parent.appendChild(child),
                                parent.addEventListener("e", function () {
                                    supportsEventBubblingInDetachedTree._cached = !0
                                });
                                var evnt = window
                                    .document
                                    .createEvent("Events");
                                evnt.initEvent("e", !0, !0),
                                child.dispatchEvent(evnt)
                            }
                            return supportsEventBubblingInDetachedTree._cached
                        }
                        function triggerForPath(element, evnt) {
                            var stop = !1,
                                _stopPropagation = evnt.stopPropagation;
                            evnt.stopPropagation = function () {
                                stop = !0,
                                _stopPropagation.apply(evnt, arguments)
                            },
                            patchEventTargetForBubbling(evnt, element);
                            do {
                                element.dispatchEvent(evnt)
                            } while (!stop && (element = element.parentNode))
                        }
                        function patchEventTargetForBubbling(event, target) {
                            event._target = target,
                            Object.defineProperty(event, "target", {
                                get: function () {
                                    return this._target
                                }
                            })
                        }
                        function isAttachedToDocument(element) {
                            for (; element = element.parentNode;) 
                                if (element === window) 
                                    return !0;
                        return !1
                        }
                        window.browserTrigger = function browserTrigger(element, eventType, eventData) {
                            function pressed(key) {
                                return -1 !== keys.indexOf(key)
                            }
                            if (element && !element.nodeName && (element = element[0]), element) {
                                eventData = eventData || {};
                                var relatedTarget = eventData.relatedTarget || element,
                                    keys = eventData.keys,
                                    x = eventData.x,
                                    y = eventData.y,
                                    inputType = element.type
                                        ? element
                                            .type
                                            .toLowerCase()
                                        : null,
                                    nodeName = element
                                        .nodeName
                                        .toLowerCase();
                                eventType || (
                                    eventType = {
                                        text: "change",
                                        textarea: "change",
                                        hidden: "change",
                                        password: "change",
                                        button: "click",
                                        submit: "click",
                                        reset: "click",
                                        image: "click",
                                        checkbox: "click",
                                        radio: "click",
                                        "select-one": "change",
                                        "select-multiple": "change",
                                        _default_: "click"
                                    }[inputType || "_default_"]
                                ),
                                "option" === nodeName && (
                                    element.parentNode.value = element.value,
                                    element = element.parentNode,
                                    eventType = "change"
                                ),
                                keys = keys || [];
                                var evnt;
                                if (/transitionend/.test(eventType)) 
                                    if (window.WebKitTransitionEvent) 
                                        evnt = new window.WebKitTransitionEvent(eventType, eventData),
                                        evnt.initEvent(eventType, !1, !0);
                                    else 
                                        try {
                                            evnt = new window.TransitionEvent(eventType, eventData)
                                        } catch (e) {
                                            evnt = window
                                                .document
                                                .createEvent("TransitionEvent"),
                                            evnt.initTransitionEvent(
                                                eventType,
                                                null,
                                                null,
                                                null,
                                                eventData.elapsedTime || 0
                                            )
                                        }
                                    else if (/animationend/.test(eventType)) 
                                        if (window.WebKitAnimationEvent) 
                                            evnt = new window.WebKitAnimationEvent(eventType, eventData),
                                            evnt.initEvent(eventType, !1, !0);
                                        else 
                                            try {
                                                evnt = new window.AnimationEvent(eventType, eventData)
                                            } catch (e) {
                                                evnt = window
                                                    .document
                                                    .createEvent("AnimationEvent"),
                                                evnt.initAnimationEvent(
                                                    eventType,
                                                    null,
                                                    null,
                                                    null,
                                                    eventData.elapsedTime || 0
                                                )
                                            }
                                        else 
                                    /touch/.test(eventType) && supportsTouchEvents()
                                        ? evnt = createTouchEvent(element, eventType, x, y)
                                        : /key/.test(eventType)
                                            ? (
                                                evnt = window.document.createEvent("Events"),
                                                evnt.initEvent(eventType, eventData.bubbles, eventData.cancelable),
                                                evnt.view = window,
                                                evnt.ctrlKey = pressed("ctrl"),
                                                evnt.altKey = pressed("alt"),
                                                evnt.shiftKey = pressed("shift"),
                                                evnt.metaKey = pressed("meta"),
                                                evnt.keyCode = eventData.keyCode,
                                                evnt.charCode = eventData.charCode,
                                                evnt.which = eventData.which
                                            )
                                            : (
                                                evnt = window.document.createEvent("MouseEvents"),
                                                x = x || 0,
                                                y = y || 0,
                                                evnt.initMouseEvent(
                                                    eventType,
                                                    !0,
                                                    !0,
                                                    window,
                                                    0,
                                                    x,
                                                    y,
                                                    x,
                                                    y,
                                                    pressed("ctrl"),
                                                    pressed("alt"),
                                                    pressed("shift"),
                                                    pressed("meta"),
                                                    0,
                                                    relatedTarget
                                                )
                                            );
                                if (evnt.$manualTimeStamp = eventData.timeStamp, evnt) {
                                    var finalProcessDefault,
                                        originalPreventDefault = evnt.preventDefault,
                                        appWindow = element.ownerDocument.defaultView,
                                        fakeProcessDefault = !0,
                                        angular = appWindow.angular || {};
                                    return angular["ff-684208-preventDefault"] = !1,
                                    evnt.preventDefault = function () {
                                        return fakeProcessDefault = !1,
                                        originalPreventDefault.apply(evnt, arguments)
                                    },
                                    !eventData.bubbles || supportsEventBubblingInDetachedTree() || isAttachedToDocument(
                                        element
                                    )
                                        ? element.dispatchEvent(evnt)
                                        : triggerForPath(element, evnt),
                                    finalProcessDefault = !(
                                        angular["ff-684208-preventDefault"] || !fakeProcessDefault
                                    ),
                                    delete angular["ff-684208-preventDefault"],
                                    finalProcessDefault
                                }
                            }
                        }
                    }()
                })(window, window.angular)
            },
            function (module, __webpack_exports__, __webpack_require__) {
                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", {
                    value: !0
                });
                var __WEBPACK_IMPORTED_MODULE_0__interface__ = __webpack_require__(630);
                __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__interface__);
                for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__interface__) 
                    ["core", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0 && function (key) {
                        __webpack_require__.d(__webpack_exports__, key, function () {
                            return __WEBPACK_IMPORTED_MODULE_0__interface__[key]
                        })
                    }
                (__WEBPACK_IMPORT_KEY__);
                var __WEBPACK_IMPORTED_MODULE_1__services__ = __webpack_require__(247);
                __webpack_require__.d(__webpack_exports__, "watchDigests", function () {
                    return __WEBPACK_IMPORTED_MODULE_1__services__.b
                }),
                __webpack_require__.d(__webpack_exports__, "getLocals", function () {
                    return __WEBPACK_IMPORTED_MODULE_1__services__.a
                });
                var __WEBPACK_IMPORTED_MODULE_2__statebuilders_views__ = __webpack_require__(
                    168
                );
                __webpack_require__.d(
                    __webpack_exports__,
                    "getNg1ViewConfigFactory",
                    function () {
                        return __WEBPACK_IMPORTED_MODULE_2__statebuilders_views__.b
                    }
                ),
                __webpack_require__.d(__webpack_exports__, "ng1ViewsBuilder", function () {
                    return __WEBPACK_IMPORTED_MODULE_2__statebuilders_views__.c
                }),
                __webpack_require__.d(__webpack_exports__, "Ng1ViewConfig", function () {
                    return __WEBPACK_IMPORTED_MODULE_2__statebuilders_views__.a
                });
                var __WEBPACK_IMPORTED_MODULE_3__stateProvider__ = __webpack_require__(275);
                __webpack_require__.d(__webpack_exports__, "StateProvider", function () {
                    return __WEBPACK_IMPORTED_MODULE_3__stateProvider__.a
                });
                var __WEBPACK_IMPORTED_MODULE_4__urlRouterProvider__ = __webpack_require__(276);
                __webpack_require__.d(__webpack_exports__, "UrlRouterProvider", function () {
                    return __WEBPACK_IMPORTED_MODULE_4__urlRouterProvider__.a
                });
                var __WEBPACK_IMPORTED_MODULE_5__injectables__ = __webpack_require__(645),
                    __WEBPACK_IMPORTED_MODULE_10__uirouter_core__ = (
                        __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__injectables__),
                        __webpack_require__(646),
                        __webpack_require__(647),
                        __webpack_require__(648),
                        __webpack_require__(649),
                        __webpack_require__(24)
                    );
                __webpack_require__.d(__webpack_exports__, "core", function () {
                    return __WEBPACK_IMPORTED_MODULE_10__uirouter_core__
                });
                for (
                    var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_10__uirouter_core__
                ) 
                    [
                        "core",
                        "watchDigests",
                        "getLocals",
                        "getNg1ViewConfigFactory",
                        "ng1ViewsBuilder",
                        "Ng1ViewConfig",
                        "StateProvider",
                        "UrlRouterProvider",
                        "default"
                    ].indexOf(__WEBPACK_IMPORT_KEY__) < 0 && function (key) {
                        __webpack_require__.d(__webpack_exports__, key, function () {
                            return __WEBPACK_IMPORTED_MODULE_10__uirouter_core__[key]
                        })
                    }
                (__WEBPACK_IMPORT_KEY__);
                __webpack_exports__.default = "ui.router"
            },
            function (module, exports) {},
            function (module, exports) {},
            function (
                module,
                __webpack_exports__,
                __webpack_require__
            ) {
                "use strict";
                function initDefaultTypes() {
                    var makeDefaultType = function (def) {
                        var valToString = function (val) {
                                return null != val
                                    ? val.toString()
                                    : val
                            },
                            defaultTypeBase = {
                                encode: valToString,
                                decode: valToString,
                                is: Object(__WEBPACK_IMPORTED_MODULE_2__common_hof__.h)(String),
                                pattern: /.*/,
                                equals: function (a, b) {
                                    return a == b
                                }
                            };
                        return Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                            {},
                            defaultTypeBase,
                            def
                        )
                    };
                    Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(ParamTypes.prototype, {
                        string: makeDefaultType({}),
                        path: makeDefaultType({pattern: /[^\/]*/}),
                        query: makeDefaultType({}),
                        hash: makeDefaultType({
                            inherit: !1
                        }),
                        int: makeDefaultType({
                            decode: function (val) {
                                return parseInt(val, 10)
                            },
                            is: function (val) {
                                return !Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.g)(val) && this.decode(
                                    val.toString()
                                ) === val
                            },
                            pattern: /-?\d+/
                        }),
                        bool: makeDefaultType({
                            encode: function (val) {
                                return val && 1 || 0
                            },
                            decode: function (val) {
                                return 0 !== parseInt(val, 10)
                            },
                            is: Object(__WEBPACK_IMPORTED_MODULE_2__common_hof__.h)(Boolean),
                            pattern: /0|1/
                        }),
                        date: makeDefaultType({
                            encode: function (val) {
                                return this.is(val)
                                    ? [
                                        val.getFullYear(),
                                        ("0" + (
                                            val.getMonth() + 1
                                        )).slice(-2),
                                        ("0" + val.getDate()).slice(-2)
                                    ].join("-")
                                    : void 0
                            },
                            decode: function (val) {
                                if (this.is(val)) 
                                    return val;
                                var match = this
                                    .capture
                                    .exec(val);
                                return match
                                    ? new Date(match[1], match[2] - 1, match[3])
                                    : void 0
                            },
                            is: function (val) {
                                return val instanceof Date && !isNaN(val.valueOf())
                            },
                            equals: function (l, r) {
                                return ["getFullYear", "getMonth", "getDate"].reduce(function (acc, fn) {
                                    return acc && l[fn]() === r[fn]()
                                }, !0)
                            },
                            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
                            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
                        }),
                        json: makeDefaultType({
                            encode: __WEBPACK_IMPORTED_MODULE_0__common_common__.Q,
                            decode: __WEBPACK_IMPORTED_MODULE_0__common_common__.x,
                            is: Object(__WEBPACK_IMPORTED_MODULE_2__common_hof__.h)(Object),
                            equals: __WEBPACK_IMPORTED_MODULE_0__common_common__.q,
                            pattern: /[^\/]*/
                        }),
                        any: makeDefaultType({
                            encode: __WEBPACK_IMPORTED_MODULE_0__common_common__.y,
                            decode: __WEBPACK_IMPORTED_MODULE_0__common_common__.y,
                            is: function () {
                                return !0
                            },
                            equals: __WEBPACK_IMPORTED_MODULE_0__common_common__.q
                        })
                    })
                }
                __webpack_require__.d(__webpack_exports__, "a", function () {
                    return ParamTypes
                });
                var __WEBPACK_IMPORTED_MODULE_0__common_common__ = __webpack_require__(8),
                    __WEBPACK_IMPORTED_MODULE_1__common_predicates__ = __webpack_require__(10),
                    __WEBPACK_IMPORTED_MODULE_2__common_hof__ = __webpack_require__(14),
                    __WEBPACK_IMPORTED_MODULE_3__common_coreservices__ = __webpack_require__(20),
                    __WEBPACK_IMPORTED_MODULE_4__paramType__ = __webpack_require__(159),
                    ParamTypes = function () {
                        function ParamTypes() {
                            this.enqueue = !0,
                            this.typeQueue = [],
                            this.defaultTypes = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.H)(
                                ParamTypes.prototype,
                                [
                                    "hash",
                                    "string",
                                    "query",
                                    "path",
                                    "int",
                                    "bool",
                                    "date",
                                    "json",
                                    "any"
                                ]
                            );
                            var makeType = function (definition, name) {
                                return new __WEBPACK_IMPORTED_MODULE_4__paramType__.a(
                                    Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                                        {
                                            name: name
                                        },
                                        definition
                                    )
                                )
                            };
                            this.types = Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.A)(
                                Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.B)(
                                    this.defaultTypes,
                                    makeType
                                ),
                                {}
                            )
                        }
                        return ParamTypes.prototype.dispose = function () {
                            this.types = {}
                        },
                        ParamTypes.prototype.type = function (name, definition, definitionFn) {
                            if (!Object(__WEBPACK_IMPORTED_MODULE_1__common_predicates__.c)(definition)) 
                                return this.types[name];
                            if (this.types.hasOwnProperty(name)) 
                                throw new Error(
                                    "A type named '" + name + "' has already been defined."
                                );
                            return this.types[name] = new __WEBPACK_IMPORTED_MODULE_4__paramType__.a(
                                Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                                    {
                                        name: name
                                    },
                                    definition
                                )
                            ),
                            definitionFn && (
                                this.typeQueue.push({name: name, def: definitionFn}),
                                this.enqueue || this._flushTypeQueue()
                            ),
                            this
                        },
                        ParamTypes.prototype._flushTypeQueue = function () {
                            for (; this.typeQueue.length;) {
                                var type = this
                                    .typeQueue
                                    .shift();
                                if (type.pattern) 
                                    throw new Error("You cannot override a type's .pattern at runtime.");
                                Object(__WEBPACK_IMPORTED_MODULE_0__common_common__.r)(
                                    this.types[type.name],
                                    __WEBPACK_IMPORTED_MODULE_3__common_coreservices__.b.$injector.invoke(type.def)
                                )
                            }
                        },
                        ParamTypes
                    }();
                initDefaultTypes()
            },
            function (module, __webpack_exports__, __webpack_require__) {
                "use strict";
                var __WEBPACK_IMPORTED_MODULE_0__pathNode__ = __webpack_require__(160);
                __webpack_require__.d(__webpack_exports__, "a", function () {
                    return __WEBPACK_IMPORTED_MODULE_0__pathNode__.a
                });
                var __WEBPACK_IMPORTED_MODULE_1__pathUtils__ = __webpack_require__(110);
                __webpack_require__.d(__webpack_exports__, "b", function () {
                    return __WEBPACK_IMPORTED_MODULE_1__pathUtils__.a
                })
            },
            function (module, exports) {},
            function (
                module,
                __webpack_exports__,
                __webpack_require__
            ) {
                "use strict";
                var __WEBPACK_IMPORTED_MODULE_0__interface__ = __webpack_require__(70);
                __webpack_require__.d(__webpack_exports__, "h", function () {
                    return __WEBPACK_IMPORTED_MODULE_0__interface__.a
                }),
                __webpack_require__.d(__webpack_exports__, "i", function () {
                    return __WEBPACK_IMPORTED_MODULE_0__interface__.b
                });
                var __WEBPACK_IMPORTED_MODULE_1__hookBuilder__ = __webpack_require__(257);
                __webpack_require__.d(__webpack_exports__, "a", function () {
                    return __WEBPACK_IMPORTED_MODULE_1__hookBuilder__.a
                });
                var __WEBPACK_IMPORTED_MODULE_2__hookRegistry__ = __webpack_require__(165);
                __webpack_require__.d(__webpack_exports__, "b", function () {
                    return __WEBPACK_IMPORTED_MODULE_2__hookRegistry__.a
                }),
                __webpack_require__.d(__webpack_exports__, "l", function () {
                    return __WEBPACK_IMPORTED_MODULE_2__hookRegistry__.b
                }),
                __webpack_require__.d(__webpack_exports__, "m", function () {
                    return __WEBPACK_IMPORTED_MODULE_2__hookRegistry__.c
                });
                var __WEBPACK_IMPORTED_MODULE_3__rejectFactory__ = __webpack_require__(69);
                __webpack_require__.d(__webpack_exports__, "c", function () {
                    return __WEBPACK_IMPORTED_MODULE_3__rejectFactory__.a
                }),
                __webpack_require__.d(__webpack_exports__, "d", function () {
                    return __WEBPACK_IMPORTED_MODULE_3__rejectFactory__.b
                });
                var __WEBPACK_IMPORTED_MODULE_4__transition__ = __webpack_require__(164);
                __webpack_require__.d(__webpack_exports__, "e", function () {
                    return __WEBPACK_IMPORTED_MODULE_4__transition__.a
                });
                var __WEBPACK_IMPORTED_MODULE_5__transitionHook__ = __webpack_require__(83);
                __webpack_require__.d(__webpack_exports__, "g", function () {
                    return __WEBPACK_IMPORTED_MODULE_5__transitionHook__.a
                });
                var __WEBPACK_IMPORTED_MODULE_6__transitionEventType__ = __webpack_require__(
                    267
                );
                __webpack_require__.d(__webpack_exports__, "f", function () {
                    return __WEBPACK_IMPORTED_MODULE_6__transitionEventType__.a
                });
                var __WEBPACK_IMPORTED_MODULE_7__transitionService__ = __webpack_require__(163);
                __webpack_require__.d(__webpack_exports__, "j", function () {
                    return __WEBPACK_IMPORTED_MODULE_7__transitionService__.a
                }),
                __webpack_require__.d(__webpack_exports__, "k", function () {
                    return __WEBPACK_IMPORTED_MODULE_7__transitionService__.b
                })
            },
            function (module, __webpack_exports__, __webpack_require__) {
                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", {
                    value: !0
                });
                var __WEBPACK_IMPORTED_MODULE_0__interface__ = __webpack_require__(637);
                __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__interface__);
                for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__interface__) 
                    ["UrlRules", "UrlConfig", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0 && function (
                        key
                    ) {
                        __webpack_require__.d(__webpack_exports__, key, function () {
                            return __WEBPACK_IMPORTED_MODULE_0__interface__[key]
                        })
                    }
                (__WEBPACK_IMPORT_KEY__);
                var __WEBPACK_IMPORTED_MODULE_1__urlMatcher__ = __webpack_require__(113);
                __webpack_require__.d(__webpack_exports__, "UrlMatcher", function () {
                    return __WEBPACK_IMPORTED_MODULE_1__urlMatcher__.a
                });
                var __WEBPACK_IMPORTED_MODULE_2__urlMatcherFactory__ = __webpack_require__(259);
                __webpack_require__.d(__webpack_exports__, "ParamFactory", function () {
                    return __WEBPACK_IMPORTED_MODULE_2__urlMatcherFactory__.a
                }),
                __webpack_require__.d(__webpack_exports__, "UrlMatcherFactory", function () {
                    return __WEBPACK_IMPORTED_MODULE_2__urlMatcherFactory__.b
                });
                var __WEBPACK_IMPORTED_MODULE_3__urlRouter__ = __webpack_require__(260);
                __webpack_require__.d(__webpack_exports__, "UrlRouter", function () {
                    return __WEBPACK_IMPORTED_MODULE_3__urlRouter__.a
                });
                var __WEBPACK_IMPORTED_MODULE_4__urlRule__ = __webpack_require__(166);
                __webpack_require__.d(__webpack_exports__, "UrlRuleFactory", function () {
                    return __WEBPACK_IMPORTED_MODULE_4__urlRule__.b
                }),
                __webpack_require__.d(__webpack_exports__, "BaseUrlRule", function () {
                    return __WEBPACK_IMPORTED_MODULE_4__urlRule__.a
                });
                var __WEBPACK_IMPORTED_MODULE_5__urlService__ = __webpack_require__(263);
                __webpack_require__.d(__webpack_exports__, "UrlService", function () {
                    return __WEBPACK_IMPORTED_MODULE_5__urlService__.a
                });
                var __WEBPACK_IMPORTED_MODULE_6__urlRules__ = __webpack_require__(264);
                __webpack_require__.d(__webpack_exports__, "UrlRules", function () {
                    return __WEBPACK_IMPORTED_MODULE_6__urlRules__.a
                });
                var __WEBPACK_IMPORTED_MODULE_7__urlConfig__ = __webpack_require__(265);
                __webpack_require__.d(__webpack_exports__, "UrlConfig", function () {
                    return __WEBPACK_IMPORTED_MODULE_7__urlConfig__.a
                })
            },
            function (module, exports) {},
            function (
                module,
                __webpack_exports__,
                __webpack_require__
            ) {
                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", {
                    value: !0
                });
                var __WEBPACK_IMPORTED_MODULE_0__interface__ = __webpack_require__(639);
                __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__interface__);
                for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__interface__) 
                    "default" !== __WEBPACK_IMPORT_KEY__ && function (key) {
                        __webpack_require__.d(__webpack_exports__, key, function () {
                            return __WEBPACK_IMPORTED_MODULE_0__interface__[key]
                        })
                    }
                (__WEBPACK_IMPORT_KEY__);
                var __WEBPACK_IMPORTED_MODULE_1__view__ = __webpack_require__(261);
                __webpack_require__.d(__webpack_exports__, "ViewService", function () {
                    return __WEBPACK_IMPORTED_MODULE_1__view__.a
                })
            },
            function (module, exports) {},
            function (
                module,
                __webpack_exports__,
                __webpack_require__
            ) {
                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", {
                    value: !0
                });
                var __WEBPACK_IMPORTED_MODULE_0__vanilla_index__ = __webpack_require__(641);
                for (
                    var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__vanilla_index__
                ) 
                    "default" !== __WEBPACK_IMPORT_KEY__ && function (key) {
                        __webpack_require__.d(__webpack_exports__, key, function () {
                            return __WEBPACK_IMPORTED_MODULE_0__vanilla_index__[key]
                        })
                    }
                (__WEBPACK_IMPORT_KEY__)
            },
            function (module, __webpack_exports__, __webpack_require__) {
                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", {
                    value: !0
                });
                var __WEBPACK_IMPORTED_MODULE_0__interface__ = __webpack_require__(642);
                __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__interface__);
                for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__interface__) 
                    "default" !== __WEBPACK_IMPORT_KEY__ && function (key) {
                        __webpack_require__.d(__webpack_exports__, key, function () {
                            return __WEBPACK_IMPORTED_MODULE_0__interface__[key]
                        })
                    }
                (__WEBPACK_IMPORT_KEY__);
                var __WEBPACK_IMPORTED_MODULE_1__q__ = __webpack_require__(268);
                __webpack_require__.d(__webpack_exports__, "$q", function () {
                    return __WEBPACK_IMPORTED_MODULE_1__q__.a
                });
                var __WEBPACK_IMPORTED_MODULE_2__injector__ = __webpack_require__(269);
                __webpack_require__.d(__webpack_exports__, "$injector", function () {
                    return __WEBPACK_IMPORTED_MODULE_2__injector__.a
                });
                var __WEBPACK_IMPORTED_MODULE_3__baseLocationService__ = __webpack_require__(
                    114
                );
                __webpack_require__.d(
                    __webpack_exports__,
                    "BaseLocationServices",
                    function () {
                        return __WEBPACK_IMPORTED_MODULE_3__baseLocationService__.a
                    }
                );
                var __WEBPACK_IMPORTED_MODULE_4__hashLocationService__ = __webpack_require__(
                    270
                );
                __webpack_require__.d(__webpack_exports__, "HashLocationService", function () {
                    return __WEBPACK_IMPORTED_MODULE_4__hashLocationService__.a
                });
                var __WEBPACK_IMPORTED_MODULE_5__memoryLocationService__ = __webpack_require__(
                    271
                );
                __webpack_require__.d(
                    __webpack_exports__,
                    "MemoryLocationService",
                    function () {
                        return __WEBPACK_IMPORTED_MODULE_5__memoryLocationService__.a
                    }
                );
                var __WEBPACK_IMPORTED_MODULE_6__pushStateLocationService__ = __webpack_require__(
                    272
                );
                __webpack_require__.d(
                    __webpack_exports__,
                    "PushStateLocationService",
                    function () {
                        return __WEBPACK_IMPORTED_MODULE_6__pushStateLocationService__.a
                    }
                );
                var __WEBPACK_IMPORTED_MODULE_7__memoryLocationConfig__ = __webpack_require__(
                    273
                );
                __webpack_require__.d(
                    __webpack_exports__,
                    "MemoryLocationConfig",
                    function () {
                        return __WEBPACK_IMPORTED_MODULE_7__memoryLocationConfig__.a
                    }
                );
                var __WEBPACK_IMPORTED_MODULE_8__browserLocationConfig__ = __webpack_require__(
                    274
                );
                __webpack_require__.d(
                    __webpack_exports__,
                    "BrowserLocationConfig",
                    function () {
                        return __WEBPACK_IMPORTED_MODULE_8__browserLocationConfig__.a
                    }
                );
                var __WEBPACK_IMPORTED_MODULE_9__utils__ = __webpack_require__(167);
                __webpack_require__.d(__webpack_exports__, "keyValsToObjectR", function () {
                    return __WEBPACK_IMPORTED_MODULE_9__utils__.c
                }),
                __webpack_require__.d(__webpack_exports__, "getParams", function () {
                    return __WEBPACK_IMPORTED_MODULE_9__utils__.b
                }),
                __webpack_require__.d(__webpack_exports__, "parseUrl", function () {
                    return __WEBPACK_IMPORTED_MODULE_9__utils__.e
                }),
                __webpack_require__.d(__webpack_exports__, "buildUrl", function () {
                    return __WEBPACK_IMPORTED_MODULE_9__utils__.a
                }),
                __webpack_require__.d(
                    __webpack_exports__,
                    "locationPluginFactory",
                    function () {
                        return __WEBPACK_IMPORTED_MODULE_9__utils__.d
                    }
                );
                var __WEBPACK_IMPORTED_MODULE_10__plugins__ = __webpack_require__(643);
                __webpack_require__.d(__webpack_exports__, "servicesPlugin", function () {
                    return __WEBPACK_IMPORTED_MODULE_10__plugins__.d
                }),
                __webpack_require__.d(__webpack_exports__, "hashLocationPlugin", function () {
                    return __WEBPACK_IMPORTED_MODULE_10__plugins__.a
                }),
                __webpack_require__.d(
                    __webpack_exports__,
                    "pushStateLocationPlugin",
                    function () {
                        return __WEBPACK_IMPORTED_MODULE_10__plugins__.c
                    }
                ),
                __webpack_require__.d(
                    __webpack_exports__,
                    "memoryLocationPlugin",
                    function () {
                        return __WEBPACK_IMPORTED_MODULE_10__plugins__.b
                    }
                )
            },
            function (module, exports) {},
            function (
                module,
                __webpack_exports__,
                __webpack_require__
            ) {
                "use strict";
                function servicesPlugin(router) {
                    return __WEBPACK_IMPORTED_MODULE_8__common_coreservices__.b.$injector = __WEBPACK_IMPORTED_MODULE_6__injector__.a,
                    __WEBPACK_IMPORTED_MODULE_8__common_coreservices__.b.$q = __WEBPACK_IMPORTED_MODULE_7__q__.a, {
                        name: "vanilla.services",
                        $q: __WEBPACK_IMPORTED_MODULE_7__q__.a,
                        $injector: __WEBPACK_IMPORTED_MODULE_6__injector__.a,
                        dispose: function () {
                            return null
                        }
                    }
                }
                __webpack_exports__.d = servicesPlugin,
                __webpack_require__.d(__webpack_exports__, "a", function () {
                    return hashLocationPlugin
                }),
                __webpack_require__.d(__webpack_exports__, "c", function () {
                    return pushStateLocationPlugin
                }),
                __webpack_require__.d(__webpack_exports__, "b", function () {
                    return memoryLocationPlugin
                });
                var __WEBPACK_IMPORTED_MODULE_0__browserLocationConfig__ = __webpack_require__(
                        274
                    ),
                    __WEBPACK_IMPORTED_MODULE_1__hashLocationService__ = __webpack_require__(270),
                    __WEBPACK_IMPORTED_MODULE_2__utils__ = __webpack_require__(167),
                    __WEBPACK_IMPORTED_MODULE_3__pushStateLocationService__ = __webpack_require__(
                        272
                    ),
                    __WEBPACK_IMPORTED_MODULE_4__memoryLocationService__ = __webpack_require__(271),
                    __WEBPACK_IMPORTED_MODULE_5__memoryLocationConfig__ = __webpack_require__(273),
                    __WEBPACK_IMPORTED_MODULE_6__injector__ = __webpack_require__(269),
                    __WEBPACK_IMPORTED_MODULE_7__q__ = __webpack_require__(268),
                    __WEBPACK_IMPORTED_MODULE_8__common_coreservices__ = __webpack_require__(20),
                    hashLocationPlugin = Object(__WEBPACK_IMPORTED_MODULE_2__utils__.d)(
                        "vanilla.hashBangLocation",
                        !1,
                        __WEBPACK_IMPORTED_MODULE_1__hashLocationService__.a,
                        __WEBPACK_IMPORTED_MODULE_0__browserLocationConfig__.a
                    ),
                    pushStateLocationPlugin = Object(__WEBPACK_IMPORTED_MODULE_2__utils__.d)(
                        "vanilla.pushStateLocation",
                        !0,
                        __WEBPACK_IMPORTED_MODULE_3__pushStateLocationService__.a,
                        __WEBPACK_IMPORTED_MODULE_0__browserLocationConfig__.a
                    ),
                    memoryLocationPlugin = Object(__WEBPACK_IMPORTED_MODULE_2__utils__.d)(
                        "vanilla.memoryLocation",
                        !1,
                        __WEBPACK_IMPORTED_MODULE_4__memoryLocationService__.a,
                        __WEBPACK_IMPORTED_MODULE_5__memoryLocationConfig__.a
                    )
            },
            function (module, __webpack_exports__, __webpack_require__) {
                "use strict";
                __webpack_require__.d(__webpack_exports__, "a", function () {
                    return UIRouterPluginBase
                });
                var UIRouterPluginBase = function () {
                    function UIRouterPluginBase() {}
                    return UIRouterPluginBase.prototype.dispose = function (router) {},
                    UIRouterPluginBase
                }()
            },
            function (module, exports) {},
            function (
                module,
                __webpack_exports__,
                __webpack_require__
            ) {
                "use strict";
                function parseStateRef(ref) {
                    var paramsOnly = ref.match(/^\s*({[^}]*})\s*$/);
                    paramsOnly && (ref = "(" + paramsOnly[1] + ")");
                    var parsed = ref
                        .replace(/\n/g, " ")
                        .match(/^\s*([^(]*?)\s*(\((.*)\))?\s*$/);
                    if (!parsed || 4 !== parsed.length) 
                        throw new Error("Invalid state ref '" + ref + "'");
                    return {
                        state: parsed[1] || null,
                        paramExpr: parsed[3] || null
                    }
                }
                function stateContext(el) {
                    var $uiView = el
                            .parent()
                            .inheritedData("$uiView"),
                        path = Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.parse)("$cfg.path")(
                            $uiView
                        );
                    return path
                        ? Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.tail)(path).state.name
                        : void 0
                }
                function processedDef($state, $element, def) {
                    var uiState = def.uiState || $state.current.name,
                        uiStateOpts = Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.extend)(
                            defaultOpts($element, $state),
                            def.uiStateOpts || {}
                        ),
                        href = $state.href(uiState, def.uiStateParams, uiStateOpts);
                    return {uiState: uiState, uiStateParams: def.uiStateParams, uiStateOpts: uiStateOpts, href: href}
                }
                function getTypeInfo(el) {
                    var isSvg = "[object SVGAnimatedString]" === Object
                            .prototype
                            .toString
                            .call(el.prop("href")),
                        isForm = "FORM" === el[0].nodeName;
                    return {
                        attr: isForm
                            ? "action"
                            : isSvg
                                ? "xlink:href"
                                : "href",
                        isAnchor: "A" === el
                            .prop("tagName")
                            .toUpperCase(),
                        clickable: !isForm
                    }
                }
                function clickHook(el, $state, $timeout, type, getDef) {
                    return function (e) {
                        var button = e.which || e.button,
                            target = getDef();
                        if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || el.attr("target"))) {
                            var transition_1 = $timeout(function () {
                                el.attr("disabled") || $state.go(
                                    target.uiState,
                                    target.uiStateParams,
                                    target.uiStateOpts
                                )
                            });
                            e.preventDefault();
                            var ignorePreventDefaultCount_1 = type.isAnchor && !target.href
                                ? 1
                                : 0;
                            e.preventDefault = function () {
                                ignorePreventDefaultCount_1-- <= 0 && $timeout.cancel(transition_1)
                            }
                        }
                    }
                }
                function defaultOpts(el, $state) {
                    return {
                        relative: stateContext(el) || $state.$current,
                        inherit: !0,
                        source: "sref"
                    }
                }
                function bindEvents(element, scope, hookFn, uiStateOpts) {
                    var events;
                    uiStateOpts && (events = uiStateOpts.events),
                    Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.isArray)(events) || (
                        events = ["click"]
                    );
                    for (
                        var on = element.on
                            ? "on"
                            : "bind",
                        _i = 0,
                        events_1 = events; _i < events_1.length; _i++
                    ) {
                        var event_1 = events_1[_i];
                        element[on](event_1, hookFn)
                    }
                    scope.$on("$destroy", function () {
                        for (
                            var off = element.off
                                ? "off"
                                : "unbind",
                            _i = 0,
                            events_2 = events; _i < events_2.length; _i++
                        ) {
                            var event_2 = events_2[_i];
                            element[off](event_2, hookFn)
                        }
                    })
                }
                var uiSrefDirective,
                    __WEBPACK_IMPORTED_MODULE_0__angular__ = __webpack_require__(68),
                    __WEBPACK_IMPORTED_MODULE_1__uirouter_core__ = __webpack_require__(24);
                uiSrefDirective = [
                    "$uiRouter",
                    "$timeout",
                    function $StateRefDirective($uiRouter, $timeout) {
                        var $state = $uiRouter.stateService;
                        return {
                            restrict: "A",
                            require: [
                                "?^uiSrefActive", "?^uiSrefActiveEq"
                            ],
                            link: function (scope, element, attrs, uiSrefActive) {
                                function update() {
                                    var def = getDef();
                                    unlinkInfoFn && unlinkInfoFn(),
                                    active && (
                                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams)
                                    ),
                                    null != def.href && attrs.$set(type.attr, def.href)
                                }
                                var type = getTypeInfo(element),
                                    active = uiSrefActive[1] || uiSrefActive[0],
                                    unlinkInfoFn = null,
                                    rawDef = {},
                                    getDef = function () {
                                        return processedDef($state, element, rawDef)
                                    },
                                    ref = parseStateRef(attrs.uiSref);
                                if (
                                    rawDef.uiState = ref.state,
                                    rawDef.uiStateOpts = attrs.uiSrefOpts
                                        ? scope.$eval(attrs.uiSrefOpts)
                                        : {},
                                    ref.paramExpr && (
                                        scope.$watch(ref.paramExpr, function (val) {
                                            rawDef.uiStateParams = Object(
                                                __WEBPACK_IMPORTED_MODULE_1__uirouter_core__.extend
                                            )({}, val),
                                            update()
                                        }, !0),
                                        rawDef.uiStateParams = Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.extend)(
                                            {},
                                            scope.$eval(ref.paramExpr)
                                        )
                                    ),
                                    update(),
                                    scope.$on("$destroy", $uiRouter.stateRegistry.onStatesChanged(update)),
                                    scope.$on("$destroy", $uiRouter.transitionService.onSuccess({}, update)),
                                    type.clickable
                                ) {
                                    var hookFn = clickHook(element, $state, $timeout, type, getDef);
                                    bindEvents(element, scope, hookFn, rawDef.uiStateOpts)
                                }
                            }
                        }
                    }
                ];
                var uiStateDirective;
                uiStateDirective = [
                    "$uiRouter",
                    "$timeout",
                    function $StateRefDynamicDirective($uiRouter, $timeout) {
                        var $state = $uiRouter.stateService;
                        return {
                            restrict: "A",
                            require: [
                                "?^uiSrefActive", "?^uiSrefActiveEq"
                            ],
                            link: function (scope, element, attrs, uiSrefActive) {
                                function update() {
                                    var def = getDef();
                                    unlinkInfoFn && unlinkInfoFn(),
                                    active && (
                                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams)
                                    ),
                                    null != def.href && attrs.$set(type.attr, def.href)
                                }
                                var hookFn,
                                    type = getTypeInfo(element),
                                    active = uiSrefActive[1] || uiSrefActive[0],
                                    unlinkInfoFn = null,
                                    rawDef = {},
                                    getDef = function () {
                                        return processedDef($state, element, rawDef)
                                    },
                                    inputAttrs = [
                                        "uiState", "uiStateParams", "uiStateOpts"
                                    ],
                                    watchDeregFns = inputAttrs.reduce(function (acc, attr) {
                                        return acc[attr] = __WEBPACK_IMPORTED_MODULE_1__uirouter_core__.noop,
                                        acc
                                    }, {});
                                inputAttrs.forEach(function (field) {
                                    rawDef[field] = attrs[field]
                                        ? scope.$eval(attrs[field])
                                        : null,
                                    attrs.$observe(field, function (expr) {
                                        watchDeregFns[field](),
                                        watchDeregFns[field] = scope.$watch(expr, function (newval) {
                                            rawDef[field] = newval,
                                            update()
                                        }, !0)
                                    })
                                }),
                                update(),
                                scope.$on("$destroy", $uiRouter.stateRegistry.onStatesChanged(update)),
                                scope.$on("$destroy", $uiRouter.transitionService.onSuccess({}, update)),
                                type.clickable && (
                                    hookFn = clickHook(element, $state, $timeout, type, getDef),
                                    bindEvents(element, scope, hookFn, rawDef.uiStateOpts)
                                )
                            }
                        }
                    }
                ];
                var uiSrefActiveDirective;
                uiSrefActiveDirective = [
                    "$state",
                    "$stateParams",
                    "$interpolate",
                    "$uiRouter",
                    function $StateRefActiveDirective(
                        $state,
                        $stateParams,
                        $interpolate,
                        $uiRouter
                    ) {
                        return {
                            restrict: "A",
                            controller: [
                                "$scope",
                                "$element",
                                "$attrs",
                                function ($scope, $element, $attrs) {
                                    function updateAfterTransition(trans) {
                                        trans
                                            .promise
                                            .then(update, __WEBPACK_IMPORTED_MODULE_1__uirouter_core__.noop)
                                    }
                                    function setupEventListeners() {
                                        var deregisterStatesChangedListener = $uiRouter
                                                .stateRegistry
                                                .onStatesChanged(handleStatesChanged),
                                            deregisterOnStartListener = $uiRouter
                                                .transitionService
                                                .onStart({}, updateAfterTransition),
                                            deregisterStateChangeSuccessListener = $scope.$on(
                                                "$stateChangeSuccess",
                                                update
                                            );
                                        return function cleanUp() {
                                            deregisterStatesChangedListener(),
                                            deregisterOnStartListener(),
                                            deregisterStateChangeSuccessListener()
                                        }
                                    }
                                    function handleStatesChanged() {
                                        setStatesFromDefinitionObject(uiSrefActive)
                                    }
                                    function setStatesFromDefinitionObject(statesDefinition) {
                                        Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.isObject)(statesDefinition) && (
                                            states = [],
                                            Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.forEach)(
                                                statesDefinition,
                                                function (stateOrName, activeClass) {
                                                    var addStateForClass = function (stateOrName, activeClass) {
                                                        var ref = parseStateRef(stateOrName);
                                                        addState(ref.state, $scope.$eval(ref.paramExpr), activeClass)
                                                    };
                                                    Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.isString)(stateOrName)
                                                        ? addStateForClass(stateOrName, activeClass)
                                                        : Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.isArray)(stateOrName) && Object(
                                                            __WEBPACK_IMPORTED_MODULE_1__uirouter_core__.forEach
                                                        )(stateOrName, function (stateOrName) {
                                                            addStateForClass(stateOrName, activeClass)
                                                        })
                                                }
                                            )
                                        )
                                    }
                                    function addState(stateName, stateParams, activeClass) {
                                        var state = $state.get(stateName, stateContext($element)),
                                            stateInfo = {
                                                state: state || {
                                                    name: stateName
                                                },
                                                params: stateParams,
                                                activeClass: activeClass
                                            };
                                        return states.push(stateInfo),
                                        function removeState() {
                                            Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.removeFrom)(states)(
                                                stateInfo
                                            )
                                        }
                                    }
                                    function update() {
                                        var splitClasses = function (str) {
                                                return str
                                                    .split(/\s/)
                                                    .filter(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.identity)
                                            },
                                            getClasses = function (stateList) {
                                                return stateList
                                                    .map(function (x) {
                                                        return x.activeClass
                                                    })
                                                    .map(splitClasses)
                                                    .reduce(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.unnestR, [])
                                            },
                                            allClasses = getClasses(states)
                                                .concat(splitClasses(activeEqClass))
                                                .reduce(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.uniqR, []),
                                            fuzzyClasses = getClasses(states.filter(function (x) {
                                                return $state.includes(x.state.name, x.params)
                                            })),
                                            exactlyMatchesAny = !!states
                                                .filter(function (x) {
                                                    return $state.is(x.state.name, x.params)
                                                })
                                                .length,
                                            exactClasses = exactlyMatchesAny
                                                ? splitClasses(activeEqClass)
                                                : [],
                                            addClasses = fuzzyClasses
                                                .concat(exactClasses)
                                                .reduce(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.uniqR, []),
                                            removeClasses = allClasses.filter(function (cls) {
                                                return !Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.inArray)(
                                                    addClasses,
                                                    cls
                                                )
                                            });
                                        $scope.$evalAsync(function () {
                                            addClasses.forEach(function (className) {
                                                return $element.addClass(className)
                                            }),
                                            removeClasses.forEach(function (className) {
                                                return $element.removeClass(className)
                                            })
                                        })
                                    }
                                    var activeEqClass,
                                        uiSrefActive,
                                        states = [];
                                    activeEqClass = $interpolate($attrs.uiSrefActiveEq || "", !1)($scope);
                                    try {
                                        uiSrefActive = $scope.$eval($attrs.uiSrefActive)
                                    } catch (e) {}
                                    uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || "", !1)(
                                        $scope
                                    ),
                                    setStatesFromDefinitionObject(uiSrefActive),
                                    this.$$addStateInfo = function (newState, newParams) {
                                        if (!(Object(__WEBPACK_IMPORTED_MODULE_1__uirouter_core__.isObject)(
                                            uiSrefActive
                                        ) && states.length > 0)) {
                                            var deregister = addState(newState, newParams, uiSrefActive);
                                            return update(),
                                            deregister
                                        }
                                    },
                                    $scope.$on("$destroy", setupEventListeners()),
                                    $uiRouter.globals.transition && updateAfterTransition(
                                        $uiRouter.globals.transition
                                    ),
                                    update()
                                }
                            ]
                        }
                    }
                ],
                __WEBPACK_IMPORTED_MODULE_0__angular__
                    .a
                    .module("ui.router.state")
                    .directive("uiSref", uiSrefDirective)
                    .directive("uiSrefActive", uiSrefActiveDirective)
                    .directive("uiSrefActiveEq", uiSrefActiveDirective)
                    .directive("uiState", uiStateDirective)
            },
            function (module, __webpack_exports__, __webpack_require__) {
                "use strict";
                function $IsStateFilter($state) {
                    var isFilter = function (state, params, options) {
                        return $state.is(state, params, options)
                    };
                    return isFilter.$stateful = !0,
                    isFilter
                }
                function $IncludedByStateFilter($state) {
                    var includesFilter = function (state, params, options) {
                        return $state.includes(state, params, options)
                    };
                    return includesFilter.$stateful = !0,
                    includesFilter
                }
                var __WEBPACK_IMPORTED_MODULE_0__angular__ = __webpack_require__(68);
                $IsStateFilter.$inject = ["$state"],
                $IncludedByStateFilter.$inject = ["$state"],
                __WEBPACK_IMPORTED_MODULE_0__angular__
                    .a
                    .module("ui.router.state")
                    .filter("isState", $IsStateFilter)
                    .filter("includedByState", $IncludedByStateFilter)
            },
            function (module, __webpack_exports__, __webpack_require__) {
                "use strict";
                function $ViewDirectiveFill($compile, $controller, $transitions, $view, $q) {
                    var getControllerAs = Object(
                            __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.parse
                        )("viewDecl.controllerAs"),
                        getResolveAs = Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.parse)(
                            "viewDecl.resolveAs"
                        );
                    return {
                        restrict: "ECA",
                        priority: -400,
                        compile: function (tElement) {
                            var initial = tElement.html();
                            return tElement.empty(),
                            function (scope, $element) {
                                var data = $element.data("$uiView");
                                if (!data) 
                                    return $element.html(initial),
                                    void $compile($element.contents())(scope);
                                var cfg = data.$cfg || {
                                        viewDecl: {},
                                        getTemplate: __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.noop
                                    },
                                    resolveCtx = cfg.path && new __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.ResolveContext(
                                        cfg.path
                                    );
                                $element.html(cfg.getTemplate($element, resolveCtx) || initial),
                                __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                                    .trace
                                    .traceUIViewFill(data.$uiView, $element.html());
                                var link = $compile($element.contents()),
                                    controller = cfg.controller,
                                    controllerAs = getControllerAs(cfg),
                                    resolveAs = getResolveAs(cfg),
                                    locals = resolveCtx && Object(__WEBPACK_IMPORTED_MODULE_2__services__.a)(
                                        resolveCtx
                                    );
                                if (scope[resolveAs] = locals, controller) {
                                    var controllerInstance = $controller(
                                        controller,
                                        Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.extend)(
                                            {},
                                            locals,
                                            {
                                                $scope: scope,
                                                $element: $element
                                            }
                                        )
                                    );
                                    controllerAs && (
                                        scope[controllerAs] = controllerInstance,
                                        scope[controllerAs][resolveAs] = locals
                                    ),
                                    $element.data("$ngControllerController", controllerInstance),
                                    $element
                                        .children()
                                        .data("$ngControllerController", controllerInstance),
                                    registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg)
                                }
                                if (Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isString)(
                                    cfg.component
                                )) 
                                    var kebobName = Object(
                                            __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.kebobString
                                        )(cfg.component),
                                        tagRegexp_1 = new RegExp("^(x-|data-)?" + kebobName + "$", "i"),
                                        getComponentController = function () {
                                            var directiveEl = []
                                                .slice
                                                .call($element[0].children)
                                                .filter(function (el) {
                                                    return el && el.tagName && tagRegexp_1.exec(el.tagName)
                                                });
                                            return directiveEl && __WEBPACK_IMPORTED_MODULE_1__angular__
                                                .a
                                                .element(directiveEl)
                                                .data("$" + cfg.component + "Controller")
                                        }
                                    ,
                                    deregisterWatch_1 = scope.$watch(
                                        getComponentController,
                                        function (ctrlInstance) {
                                            ctrlInstance && (
                                                registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg),
                                                deregisterWatch_1()
                                            )
                                        }
                                    );
                                link(scope)
                            }
                        }
                    }
                }
                function registerControllerCallbacks(
                    $q,
                    $transitions,
                    controllerInstance,
                    $scope,
                    cfg
                ) {
                    !Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isFunction)(
                        controllerInstance.$onInit
                    ) || (cfg.viewDecl.component || cfg.viewDecl.componentProvider) && hasComponentImpl || controllerInstance.$onInit();
                    var viewState = Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.tail)(
                            cfg.path
                        ).state.self,
                        hookOptions = {
                            bind: controllerInstance
                        };
                    if (Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isFunction)(
                        controllerInstance.uiOnParamsChanged
                    )) {
                        var resolveContext = new __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.ResolveContext(
                                cfg.path
                            ),
                            viewCreationTrans_1 = resolveContext
                                .getResolvable("$transition$")
                                .data,
                            paramsUpdated = function ($transition$) {
                                if ($transition$ !== viewCreationTrans_1 && -1 === $transition$.exiting().indexOf(viewState)) {
                                    var toParams = $transition$.params("to"),
                                        fromParams = $transition$.params("from"),
                                        getNodeSchema = function (node) {
                                            return node.paramSchema
                                        },
                                        toSchema = $transition$
                                            .treeChanges("to")
                                            .map(getNodeSchema)
                                            .reduce(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.unnestR, []),
                                        fromSchema = $transition$
                                            .treeChanges("from")
                                            .map(getNodeSchema)
                                            .reduce(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.unnestR, []),
                                        changedToParams = toSchema.filter(function (param) {
                                            var idx = fromSchema.indexOf(param);
                                            return -1 === idx || !fromSchema[idx]
                                                .type
                                                .equals(toParams[param.id], fromParams[param.id])
                                        });
                                    if (changedToParams.length) {
                                        var changedKeys_1 = changedToParams.map(function (x) {
                                                return x.id
                                            }),
                                            newValues = Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.filter)(
                                                toParams,
                                                function (val, key) {
                                                    return -1 !== changedKeys_1.indexOf(key)
                                                }
                                            );
                                        controllerInstance.uiOnParamsChanged(newValues, $transition$)
                                    }
                                }
                            };
                        $scope.$on("$destroy", $transitions.onSuccess({}, paramsUpdated, hookOptions))
                    }
                    if (Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isFunction)(
                        controllerInstance.uiCanExit
                    )) {
                        var id_1 = _uiCanExitId++,
                            cacheProp_1 = "_uiCanExitIds",
                            prevTruthyAnswer_1 = function (trans) {
                                return !!trans && (
                                    trans[cacheProp_1] && !0 === trans[cacheProp_1][id_1] || prevTruthyAnswer_1(
                                        trans.redirectedFrom()
                                    )
                                )
                            },
                            wrappedHook = function (trans) {
                                var promise,
                                    ids = trans[cacheProp_1] = trans[cacheProp_1] || {};
                                return prevTruthyAnswer_1(trans) || (
                                    promise = $q.when(controllerInstance.uiCanExit(trans)),
                                    promise.then(function (val) {
                                        return ids[id_1] = !1 !== val
                                    })
                                ),
                                promise
                            },
                            criteria = {
                                exiting: viewState.name
                            };
                        $scope.$on(
                            "$destroy",
                            $transitions.onBefore(criteria, wrappedHook, hookOptions)
                        )
                    }
                }
                var uiView,
                    __WEBPACK_IMPORTED_MODULE_0__uirouter_core__ = __webpack_require__(24),
                    __WEBPACK_IMPORTED_MODULE_1__angular__ = __webpack_require__(68),
                    __WEBPACK_IMPORTED_MODULE_2__services__ = __webpack_require__(247),
                    __WEBPACK_IMPORTED_MODULE_3__statebuilders_views__ = __webpack_require__(168);
                uiView = [
                    "$view",
                    "$animate",
                    "$uiViewScroll",
                    "$interpolate",
                    "$q",
                    function $ViewDirective($view, $animate, $uiViewScroll, $interpolate, $q) {
                        function getRenderer() {
                            return {
                                enter: function (element, target, cb) {
                                    __WEBPACK_IMPORTED_MODULE_1__angular__.a.version.minor > 2
                                        ? $animate
                                            .enter(element, null, target)
                                            .then(cb)
                                        : $animate.enter(element, null, target, cb)
                                },
                                leave: function (element, cb) {
                                    __WEBPACK_IMPORTED_MODULE_1__angular__.a.version.minor > 2
                                        ? $animate
                                            .leave(element)
                                            .then(cb)
                                        : $animate.leave(element, cb)
                                }
                            }
                        }
                        function configsEqual(config1, config2) {
                            return config1 === config2
                        }
                        var rootData = {
                                $cfg: {
                                    viewDecl: {
                                        $context: $view
                                            ._pluginapi
                                            ._rootViewContext()
                                    }
                                },
                                $uiView: {}
                            },
                            directive = {
                                count: 0,
                                restrict: "ECA",
                                terminal: !0,
                                priority: 400,
                                transclude: "element",
                                compile: function (tElement, tAttrs, $transclude) {
                                    return function (scope, $element, attrs) {
                                        function configUpdatedCallback(config) {
                                            (
                                                !config || config instanceof __WEBPACK_IMPORTED_MODULE_3__statebuilders_views__.a
                                            ) && (configsEqual(viewConfig, config) || (
                                                __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context),
                                                viewConfig = config,
                                                updateView(config)
                                            ))
                                        }
                                        function cleanupLastView() {
                                            if (
                                                previousEl && (
                                                    __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.trace.traceUIViewEvent("Removing (previous) el", previousEl.data("$uiView")),
                                                    previousEl.remove(),
                                                    previousEl = null
                                                ),
                                                currentScope && (
                                                    __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.trace.traceUIViewEvent("Destroying scope", activeUIView),
                                                    currentScope.$destroy(),
                                                    currentScope = null
                                                ),
                                                currentEl
                                            ) {
                                                var _viewData_1 = currentEl.data("$uiViewAnim");
                                                __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                                                    .trace
                                                    .traceUIViewEvent("Animate out", _viewData_1),
                                                renderer.leave(currentEl, function () {
                                                    _viewData_1
                                                        .$$animLeave
                                                        .resolve(),
                                                    previousEl = null
                                                }),
                                                previousEl = currentEl,
                                                currentEl = null
                                            }
                                        }
                                        function updateView(config) {
                                            var newScope = scope.$new(),
                                                animEnter = $q.defer(),
                                                animLeave = $q.defer(),
                                                $uiViewData = {
                                                    $cfg: config,
                                                    $uiView: activeUIView
                                                },
                                                $uiViewAnim = {
                                                    $animEnter: animEnter.promise,
                                                    $animLeave: animLeave.promise,
                                                    $$animLeave: animLeave
                                                };
                                            newScope.$emit("$viewContentLoading", name);
                                            var cloned = $transclude(newScope, function (clone) {
                                                clone.data("$uiViewAnim", $uiViewAnim),
                                                clone.data("$uiView", $uiViewData),
                                                renderer.enter(clone, $element, function onUIViewEnter() {
                                                    animEnter.resolve(),
                                                    currentScope && currentScope.$emit("$viewContentAnimationEnded"),
                                                    (
                                                        Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.isDefined)(autoScrollExp) && !autoScrollExp || scope.$eval(
                                                            autoScrollExp
                                                        )
                                                    ) && $uiViewScroll(clone)
                                                }),
                                                cleanupLastView()
                                            });
                                            currentEl = cloned,
                                            currentScope = newScope,
                                            currentScope.$emit("$viewContentLoaded", config || viewConfig),
                                            currentScope.$eval(onloadExp)
                                        }
                                        var previousEl,
                                            currentEl,
                                            currentScope,
                                            viewConfig,
                                            onloadExp = attrs.onload || "",
                                            autoScrollExp = attrs.autoscroll,
                                            renderer = getRenderer(),
                                            inherited = $element.inheritedData("$uiView") || rootData,
                                            name = $interpolate(attrs.uiView || attrs.name || "")(scope) || "$default",
                                            activeUIView = {
                                                $type: "ng1",
                                                id: directive.count++,
                                                name: name,
                                                fqn: inherited.$uiView.fqn
                                                    ? inherited.$uiView.fqn + "." + name
                                                    : name,
                                                config: null,
                                                configUpdated: configUpdatedCallback,
                                                get creationContext() {
                                                    var fromParentTagConfig = Object(
                                                            __WEBPACK_IMPORTED_MODULE_0__uirouter_core__.parse
                                                        )("$cfg.viewDecl.$context")(inherited),
                                                        fromParentTag = Object(__WEBPACK_IMPORTED_MODULE_0__uirouter_core__.parse)(
                                                            "$uiView.creationContext"
                                                        )(inherited);
                                                    return fromParentTagConfig || fromParentTag
                                                }
                                            };
                                        __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                                            .trace
                                            .traceUIViewEvent("Linking", activeUIView),
                                        $element.data("$uiView", {$uiView: activeUIView}),
                                        updateView();
                                        var unregister = $view.registerUIView(activeUIView);
                                        scope.$on("$destroy", function () {
                                            __WEBPACK_IMPORTED_MODULE_0__uirouter_core__
                                                .trace
                                                .traceUIViewEvent("Destroying/Unregistering", activeUIView),
                                            unregister()
                                        })
                                    }
                                }
                            };
                        return directive
                    }
                ],
                $ViewDirectiveFill.$inject = ["$compile", "$controller", "$transitions", "$view", "$q"];
                var hasComponentImpl = "function" == typeof __WEBPACK_IMPORTED_MODULE_1__angular__
                        .a
                        .module("ui.router")
                        .component,
                    _uiCanExitId = 0;
                __WEBPACK_IMPORTED_MODULE_1__angular__
                    .a
                    .module("ui.router.state")
                    .directive("uiView", uiView),
                __WEBPACK_IMPORTED_MODULE_1__angular__
                    .a
                    .module("ui.router.state")
                    .directive("uiView", $ViewDirectiveFill)
            },
            function (module, __webpack_exports__, __webpack_require__) {
                "use strict";
                function $ViewScrollProvider() {
                    var useAnchorScroll = !1;
                    this.useAnchorScroll = function () {
                        useAnchorScroll = !0
                    },
                    this.$get = [
                        "$anchorScroll",
                        "$timeout",
                        function ($anchorScroll, $timeout) {
                            return useAnchorScroll
                                ? $anchorScroll
                                : function ($element) {
                                    return $timeout(function () {
                                        $element[0].scrollIntoView()
                                    }, 0, !1)
                                }
                        }
                    ]
                }
                __webpack_require__(68)
                    .a
                    .module("ui.router.state")
                    .provider("$uiViewScroll", $ViewScrollProvider)
            },
            function (module, exports, __webpack_require__) {
                var __WEBPACK_AMD_DEFINE_ARRAY__,
                    __WEBPACK_AMD_DEFINE_RESULT__;
                (function (root, factory) {
                    __WEBPACK_AMD_DEFINE_ARRAY__ = [],
                    void 0 !== (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                        return factory()
                    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) && (
                        module.exports = __WEBPACK_AMD_DEFINE_RESULT__
                    )
                })(0, function () {
                    function runTranslate($translate) {
                        "use strict";
                        var key = $translate.storageKey(),
                            storage = $translate.storage(),
                            fallbackFromIncorrectStorageValue = function () {
                                var preferred = $translate.preferredLanguage();
                                angular.isString(preferred)
                                    ? $translate.use(preferred)
                                    : storage.put(key, $translate.use())
                            };
                        fallbackFromIncorrectStorageValue.displayName = "fallbackFromIncorrectStorageValue",
                        storage
                            ? storage.get(key)
                                ? $translate
                                    .use(storage.get(key))
                                    .catch(fallbackFromIncorrectStorageValue)
                                : fallbackFromIncorrectStorageValue()
                            : angular.isString($translate.preferredLanguage()) && $translate.use(
                                $translate.preferredLanguage()
                            )
                    }
                    function $translateSanitizationProvider() {
                        "use strict";
                        var $sanitize,
                            $sce,
                            strategies,
                            currentStrategy = null,
                            hasConfiguredStrategy = !1,
                            hasShownNoStrategyConfiguredWarning = !1;
                        strategies = {
                            sanitize: function (value, mode) {
                                return "text" === mode && (value = htmlSanitizeValue(value)),
                                value
                            },
                            escape: function (value, mode) {
                                return "text" === mode && (value = htmlEscapeValue(value)),
                                value
                            },
                            sanitizeParameters: function (value, mode) {
                                return "params" === mode && (
                                    value = mapInterpolationParameters(value, htmlSanitizeValue)
                                ),
                                value
                            },
                            escapeParameters: function (value, mode) {
                                return "params" === mode && (
                                    value = mapInterpolationParameters(value, htmlEscapeValue)
                                ),
                                value
                            },
                            sce: function (value, mode, context) {
                                return "text" === mode
                                    ? value = htmlTrustValue(value)
                                    : "params" === mode && "filter" !== context && (
                                        value = mapInterpolationParameters(value, htmlEscapeValue)
                                    ),
                                value
                            },
                            sceParameters: function (value, mode) {
                                return "params" === mode && (
                                    value = mapInterpolationParameters(value, htmlTrustValue)
                                ),
                                value
                            }
                        },
                        strategies.escaped = strategies.escapeParameters,
                        this.addStrategy = function (strategyName, strategyFunction) {
                            return strategies[strategyName] = strategyFunction,
                            this
                        },
                        this.removeStrategy = function (strategyName) {
                            return delete strategies[strategyName],
                            this
                        },
                        this.useStrategy = function (strategy) {
                            return hasConfiguredStrategy = !0,
                            currentStrategy = strategy,
                            this
                        },
                        this.$get = [
                            "$injector",
                            "$log",
                            function ($injector, $log) {
                                var cachedStrategyMap = {},
                                    applyStrategies = function (value, mode, context, selectedStrategies) {
                                        return angular.forEach(selectedStrategies, function (selectedStrategy) {
                                            if (angular.isFunction(selectedStrategy)) 
                                                value = selectedStrategy(value, mode, context);
                                            else if (angular.isFunction(strategies[selectedStrategy])) 
                                                value = strategies[selectedStrategy](value, mode, context);
                                            else {
                                                if (!angular.isString(strategies[selectedStrategy])) 
                                                    throw new Error(
                                                        "pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: " +
                                                        "'" + selectedStrategy + "'"
                                                    );
                                                if (!cachedStrategyMap[strategies[selectedStrategy]]) 
                                                    try {
                                                        cachedStrategyMap[strategies[selectedStrategy]] = $injector.get(
                                                            strategies[selectedStrategy]
                                                        )
                                                    } catch (e) {
                                                        throw cachedStrategyMap[strategies[selectedStrategy]] = function () {},
                                                        new Error(
                                                            "pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: " +
                                                            "'" + selectedStrategy + "'"
                                                        )
                                                    }
                                                value = cachedStrategyMap[strategies[selectedStrategy]](value, mode, context)
                                            }
                                        }),
                                        value
                                    },
                                    showNoStrategyConfiguredWarning = function () {
                                        hasConfiguredStrategy || hasShownNoStrategyConfiguredWarning || (
                                            $log.warn(
                                                "pascalprecht.translate.$translateSanitization: No sanitization strategy has be" +
                                                "en configured. This can have serious security implications. See http://angular" +
                                                "-translate.github.io/docs/#/guide/19_security for details."
                                            ),
                                            hasShownNoStrategyConfiguredWarning = !0
                                        )
                                    };
                                return $injector.has("$sanitize") && ($sanitize = $injector.get("$sanitize")),
                                $injector.has("$sce") && ($sce = $injector.get("$sce")), {
                                    useStrategy: function (self) {
                                        return function (strategy) {
                                            self.useStrategy(strategy)
                                        }
                                    }(this),
                                    sanitize: function (value, mode, strategy, context) {
                                        if (
                                            currentStrategy || showNoStrategyConfiguredWarning(),
                                            strategy || null === strategy || (strategy = currentStrategy),
                                            !strategy
                                        ) 
                                            return value;
                                        context || (context = "service");
                                        var selectedStrategies = angular.isArray(strategy)
                                            ? strategy
                                            : [strategy];
                                        return applyStrategies(value, mode, context, selectedStrategies)
                                    }
                                }
                            }
                        ];
                        var htmlEscapeValue = function (value) {
                                var element = angular.element("<div></div>");
                                return element.text(value),
                                element.html()
                            },
                            htmlSanitizeValue = function (value) {
                                if (!$sanitize) 
                                    throw new Error(
                                        "pascalprecht.translate.$translateSanitization: Error cannot find $sanitize ser" +
                                    "vice. Either include the ngSanitize module (https://docs.angularjs.org/api/ngS" +
                                    "anitize) or use a sanitization strategy which does not depend on $sanitize, su" +
                                    "ch as 'escape'."
                                    );
                                return $sanitize(value)
                            },
                            htmlTrustValue = function (value) {
                                if (!$sce) 
                                    throw new Error(
                                        "pascalprecht.translate.$translateSanitization: Error cannot find $sce service."
                                    );
                                return $sce.trustAsHtml(value)
                            },
                            mapInterpolationParameters = function (value, iteratee, stack) {
                                if (angular.isDate(value)) 
                                    return value;
                                if (angular.isObject(value)) {
                                    var result = angular.isArray(value)
                                        ? []
                                        : {};
                                    if (stack) {
                                        if (stack.indexOf(value) > -1) 
                                            throw new Error(
                                                "pascalprecht.translate.$translateSanitization: Error cannot interpolate parame" +
                                            "ter due recursive object"
                                            )
                                    } else 
                                        stack = [];
                                    return stack.push(value),
                                    angular.forEach(value, function (propertyValue, propertyKey) {
                                        angular.isFunction(propertyValue) || (
                                            result[propertyKey] = mapInterpolationParameters(propertyValue, iteratee, stack)
                                        )
                                    }),
                                    stack.splice(-1, 1),
                                    result
                                }
                                return angular.isNumber(value)
                                    ? value
                                    : !0 === value || !1 === value
                                        ? value
                                        : angular.isUndefined(value) || null === value
                                            ? value
                                            : iteratee(value)
                            }
                    }
                    function $translate(
                        $STORAGE_KEY,
                        $windowProvider,
                        $translateSanitizationProvider,
                        pascalprechtTranslateOverrider
                    ) {
                        "use strict";
                        var $preferredLanguage,
                            $languageKeyAliases,
                            $fallbackLanguage,
                            $fallbackWasString,
                            $uses,
                            $nextLang,
                            $storageFactory,
                            $storagePrefix,
                            $missingTranslationHandlerFactory,
                            $interpolationFactory,
                            $loaderFactory,
                            $loaderOptions,
                            $notFoundIndicatorLeft,
                            $notFoundIndicatorRight,
                            loaderCache,
                            postProcessFn,
                            $translationTable = {},
                            $availableLanguageKeys = [],
                            $storageKey = $STORAGE_KEY,
                            $interpolatorFactories = [],
                            $cloakClassName = "translate-cloak",
                            $postCompilingEnabled = !1,
                            $forceAsyncReloadEnabled = !1,
                            $nestedObjectDelimeter = ".",
                            $isReady = !1,
                            $keepContent = !1,
                            directivePriority = 0,
                            statefulFilter = !0,
                            uniformLanguageTagResolver = "default",
                            languageTagResolver = {
                                default: function (tag) {
                                    return (tag || "")
                                        .split("-")
                                        .join("_")
                                },
                                java: function (tag) {
                                    var temp = (tag || "")
                                            .split("-")
                                            .join("_"),
                                        parts = temp.split("_");
                                    return parts.length > 1
                                        ? parts[0].toLowerCase() + "_" + parts[1].toUpperCase()
                                        : temp
                                },
                                bcp47: function (tag) {
                                    var temp = (tag || "")
                                            .split("_")
                                            .join("-"),
                                        parts = temp.split("-");
                                    switch (parts.length) {
                                        case 1:
                                            parts[0] = parts[0].toLowerCase();
                                            break;
                                        case 2:
                                            parts[0] = parts[0].toLowerCase(),
                                            4 === parts[1].length
                                                ? parts[1] = parts[1]
                                                    .charAt(0)
                                                    .toUpperCase() + parts[1]
                                                    .slice(1)
                                                    .toLowerCase()
                                                : parts[1] = parts[1].toUpperCase();
                                            break;
                                        case 3:
                                            parts[0] = parts[0].toLowerCase(),
                                            parts[1] = parts[1]
                                                .charAt(0)
                                                .toUpperCase() + parts[1]
                                                .slice(1)
                                                .toLowerCase(),
                                            parts[2] = parts[2].toUpperCase();
                                            break;
                                        default:
                                            return temp
                                    }
                                    return parts.join("-")
                                },
                                "iso639-1": function (tag) {
                                    return (tag || "")
                                        .split("_")
                                        .join("-")
                                        .split("-")[0]
                                        .toLowerCase()
                                }
                            },
                            version = "2.18.3",
                            getFirstBrowserLanguage = function () {
                                if (angular.isFunction(pascalprechtTranslateOverrider.getLocale)) 
                                    return pascalprechtTranslateOverrider.getLocale();
                                var i,
                                    language,
                                    nav = $windowProvider
                                        .$get()
                                        .navigator,
                                    browserLanguagePropertyKeys = ["language", "browserLanguage", "systemLanguage", "userLanguage"];
                                if (angular.isArray(nav.languages)) 
                                    for (i = 0; i < nav.languages.length; i++) 
                                        if ((language = nav.languages[i]) && language.length) 
                                            return language;
                            for (i = 0; i < browserLanguagePropertyKeys.length; i++) 
                                    if ((language = nav[browserLanguagePropertyKeys[i]]) && language.length) 
                                        return language;
                            return null
                            };
                        getFirstBrowserLanguage.displayName = "angular-translate/service: getFirstBrowserLanguage";
                        var getLocale = function () {
                            var locale = getFirstBrowserLanguage() || "";
                            return languageTagResolver[uniformLanguageTagResolver] && (
                                locale = languageTagResolver[uniformLanguageTagResolver](locale)
                            ),
                            locale
                        };
                        getLocale.displayName = "angular-translate/service: getLocale";
                        var indexOf = function (array, searchElement) {
                                for (var i = 0, len = array.length; i < len; i++) 
                                    if (array[i] === searchElement) 
                                        return i;
                            return -1
                            },
                            trim = function () {
                                return this
                                    .toString()
                                    .replace(/^\s+|\s+$/g, "")
                            },
                            lowercase = function (string) {
                                return angular.isString(string)
                                    ? string.toLowerCase()
                                    : string
                            },
                            negotiateLocale = function (preferred) {
                                if (preferred) {
                                    for (
                                        var avail = [],
                                        locale = lowercase(preferred),
                                        i = 0,
                                        n = $availableLanguageKeys.length;
                                        i < n;
                                        i++
                                    ) 
                                        avail.push(lowercase($availableLanguageKeys[i]));
                                    if ((i = indexOf(avail, locale)) > -1) 
                                        return $availableLanguageKeys[i];
                                    if ($languageKeyAliases) {
                                        var alias;
                                        for (var langKeyAlias in $languageKeyAliases) 
                                            if ($languageKeyAliases.hasOwnProperty(langKeyAlias)) {
                                                var hasWildcardKey = !1,
                                                    hasExactKey = Object
                                                        .prototype
                                                        .hasOwnProperty
                                                        .call($languageKeyAliases, langKeyAlias) && lowercase(langKeyAlias) === lowercase(
                                                            preferred
                                                        );
                                                if (
                                                    "*" === langKeyAlias.slice(-1) && (hasWildcardKey = lowercase(langKeyAlias.slice(0, -1)) === lowercase(preferred.slice(0, langKeyAlias.length - 1))),
                                                    (hasExactKey || hasWildcardKey) && (alias = $languageKeyAliases[langKeyAlias], indexOf(avail, lowercase(alias)) > -1)
                                                ) 
                                                    return alias
                                            }
                                        }
                                    var parts = preferred.split("_");
                                    return parts.length > 1 && indexOf(avail, lowercase(parts[0])) > -1
                                        ? parts[0]
                                        : void 0
                                }
                            },
                            translations = function (langKey, translationTable) {
                                if (!langKey && !translationTable) 
                                    return $translationTable;
                                if (langKey && !translationTable) {
                                    if (angular.isString(langKey)) 
                                        return $translationTable[langKey]
                                } else 
                                    angular.isObject($translationTable[langKey]) || (
                                        $translationTable[langKey] = {}
                                    ),
                                    angular.extend($translationTable[langKey], flatObject(translationTable));
                                return this
                            };
                        this.translations = translations,
                        this.cloakClassName = function (name) {
                            return name
                                ? ($cloakClassName = name, this)
                                : $cloakClassName
                        },
                        this.nestedObjectDelimeter = function (delimiter) {
                            return delimiter
                                ? ($nestedObjectDelimeter = delimiter, this)
                                : $nestedObjectDelimeter
                        };
                        var flatObject = function (data, path, result, prevKey) {
                            var key,
                                keyWithPath,
                                keyWithShortPath,
                                val;
                            path || (path = []),
                            result || (result = {});
                            for (key in data) 
                                Object
                                    .prototype
                                    .hasOwnProperty
                                    .call(data, key) && (
                                        val = data[key],
                                        angular.isObject(val)
                                            ? flatObject(val, path.concat(key), result, key)
                                            : (
                                                keyWithPath = path.length
                                                    ? "" + path.join($nestedObjectDelimeter) +
                                                                $nestedObjectDelimeter + key
                                                    : key,
                                                path.length && key === prevKey && (
                                                    keyWithShortPath = "" + path.join($nestedObjectDelimeter),
                                                    result[keyWithShortPath] = "@:" + keyWithPath
                                                ),
                                                result[keyWithPath] = val
                                            )
                                    );
                            return result
                        };
                        flatObject.displayName = "flatObject",
                        this.addInterpolation = function (factory) {
                            return $interpolatorFactories.push(factory),
                            this
                        },
                        this.useMessageFormatInterpolation = function () {
                            return this.useInterpolation("$translateMessageFormatInterpolation")
                        },
                        this.useInterpolation = function (factory) {
                            return $interpolationFactory = factory,
                            this
                        },
                        this.useSanitizeValueStrategy = function (value) {
                            return $translateSanitizationProvider.useStrategy(value),
                            this
                        },
                        this.preferredLanguage = function (langKey) {
                            return langKey
                                ? (setupPreferredLanguage(langKey), this)
                                : $preferredLanguage
                        };
                        var setupPreferredLanguage = function (langKey) {
                            return langKey && ($preferredLanguage = langKey),
                            $preferredLanguage
                        };
                        this.translationNotFoundIndicator = function (indicator) {
                            return this.translationNotFoundIndicatorLeft(indicator),
                            this.translationNotFoundIndicatorRight(indicator),
                            this
                        },
                        this.translationNotFoundIndicatorLeft = function (indicator) {
                            return indicator
                                ? ($notFoundIndicatorLeft = indicator, this)
                                : $notFoundIndicatorLeft
                        },
                        this.translationNotFoundIndicatorRight = function (indicator) {
                            return indicator
                                ? ($notFoundIndicatorRight = indicator, this)
                                : $notFoundIndicatorRight
                        },
                        this.fallbackLanguage = function (langKey) {
                            return fallbackStack(langKey),
                            this
                        };
                        var fallbackStack = function (langKey) {
                            return langKey
                                ? (
                                    angular.isString(langKey)
                                        ? ($fallbackWasString = !0, $fallbackLanguage = [langKey])
                                        : angular.isArray(langKey) && (
                                            $fallbackWasString = !1,
                                            $fallbackLanguage = langKey
                                        ),
                                    angular.isString($preferredLanguage) && indexOf(
                                        $fallbackLanguage,
                                        $preferredLanguage
                                    ) < 0 && $fallbackLanguage.push($preferredLanguage),
                                    this
                                )
                                : $fallbackWasString
                                    ? $fallbackLanguage[0]
                                    : $fallbackLanguage
                        };
                        this.use = function (langKey) {
                            if (langKey) {
                                if (!$translationTable[langKey] && !$loaderFactory) 
                                    throw new Error(
                                        "$translateProvider couldn't find translationTable for langKey: '" + langKey +
                                    "'"
                                    );
                                return $uses = langKey,
                                this
                            }
                            return $uses
                        },
                        this.resolveClientLocale = function () {
                            return getLocale()
                        };
                        var storageKey = function (key) {
                            return key
                                ? ($storageKey = key, this)
                                : $storagePrefix
                                    ? $storagePrefix + $storageKey
                                    : $storageKey
                        };
                        this.storageKey = storageKey,
                        this.useUrlLoader = function (url, options) {
                            return this.useLoader("$translateUrlLoader", angular.extend({
                                url: url
                            }, options))
                        },
                        this.useStaticFilesLoader = function (options) {
                            return this.useLoader("$translateStaticFilesLoader", options)
                        },
                        this.useLoader = function (loaderFactory, options) {
                            return $loaderFactory = loaderFactory,
                            $loaderOptions = options || {},
                            this
                        },
                        this.useLocalStorage = function () {
                            return this.useStorage("$translateLocalStorage")
                        },
                        this.useCookieStorage = function () {
                            return this.useStorage("$translateCookieStorage")
                        },
                        this.useStorage = function (storageFactory) {
                            return $storageFactory = storageFactory,
                            this
                        },
                        this.storagePrefix = function (prefix) {
                            return prefix
                                ? ($storagePrefix = prefix, this)
                                : prefix
                        },
                        this.useMissingTranslationHandlerLog = function () {
                            return this.useMissingTranslationHandler(
                                "$translateMissingTranslationHandlerLog"
                            )
                        },
                        this.useMissingTranslationHandler = function (factory) {
                            return $missingTranslationHandlerFactory = factory,
                            this
                        },
                        this.usePostCompiling = function (value) {
                            return $postCompilingEnabled = !!value,
                            this
                        },
                        this.forceAsyncReload = function (value) {
                            return $forceAsyncReloadEnabled = !!value,
                            this
                        },
                        this.uniformLanguageTag = function (options) {
                            return options
                                ? angular.isString(options) && (options = {
                                    standard: options
                                })
                                : options = {},
                            uniformLanguageTagResolver = options.standard,
                            this
                        },
                        this.determinePreferredLanguage = function (fn) {
                            var locale = fn && angular.isFunction(fn)
                                ? fn()
                                : getLocale();
                            return $preferredLanguage = $availableLanguageKeys.length
                                ? negotiateLocale(locale) || locale
                                : locale,
                            this
                        },
                        this.registerAvailableLanguageKeys = function (languageKeys, aliases) {
                            return languageKeys
                                ? (
                                    $availableLanguageKeys = languageKeys,
                                    aliases && ($languageKeyAliases = aliases),
                                    this
                                )
                                : $availableLanguageKeys
                        },
                        this.useLoaderCache = function (cache) {
                            return !1 === cache
                                ? loaderCache = void 0
                                : !0 === cache
                                    ? loaderCache = !0
                                    : void 0 === cache
                                        ? loaderCache = "$translationCache"
                                        : cache && (loaderCache = cache),
                            this
                        },
                        this.directivePriority = function (priority) {
                            return void 0 === priority
                                ? directivePriority
                                : (directivePriority = priority, this)
                        },
                        this.statefulFilter = function (state) {
                            return void 0 === state
                                ? statefulFilter
                                : (statefulFilter = state, this)
                        },
                        this.postProcess = function (fn) {
                            return postProcessFn = fn || void 0,
                            this
                        },
                        this.keepContent = function (value) {
                            return $keepContent = !!value,
                            this
                        },
                        this.$get = [
                            "$log",
                            "$injector",
                            "$rootScope",
                            "$q",
                            function ($log, $injector, $rootScope, $q) {
                                var Storage,
                                    fallbackIndex,
                                    startFallbackIteration,
                                    defaultInterpolator = $injector.get(
                                        $interpolationFactory || "$translateDefaultInterpolation"
                                    ),
                                    pendingLoader = !1,
                                    interpolatorHashMap = {},
                                    langPromises = {},
                                    $translate = function (
                                        translationId,
                                        interpolateParams,
                                        interpolationId,
                                        defaultTranslationText,
                                        forceLanguage,
                                        sanitizeStrategy
                                    ) {
                                        !$uses && $preferredLanguage && ($uses = $preferredLanguage);
                                        var uses = forceLanguage && forceLanguage !== $uses
                                            ? negotiateLocale(forceLanguage) || forceLanguage
                                            : $uses;
                                        if (
                                            forceLanguage && loadTranslationsIfMissing(forceLanguage),
                                            angular.isArray(translationId)
                                        ) {
                                            return function (translationIds) {
                                                for (
                                                    var results = {},
                                                    promises = [],
                                                    translate = function (translationId) {
                                                        var deferred = $q.defer(),
                                                            regardless = function (value) {
                                                                results[translationId] = value,
                                                                deferred.resolve([translationId, value])
                                                            };
                                                        return $translate(
                                                            translationId,
                                                            interpolateParams,
                                                            interpolationId,
                                                            defaultTranslationText,
                                                            forceLanguage,
                                                            sanitizeStrategy
                                                        ).then(regardless, regardless),
                                                        deferred.promise
                                                    },
                                                    i = 0,
                                                    c = translationIds.length; i < c; i++
                                                ) 
                                                    promises.push(translate(translationIds[i]));
                                                return $q
                                                    .all(promises)
                                                    .then(function () {
                                                        return results
                                                    })
                                            }(translationId)
                                        }
                                        var deferred = $q.defer();
                                        if (!translationId) 
                                            throw new TypeError("translationId must be a not empty string");
                                        translationId = trim.apply(translationId);
                                        var promiseToWaitFor = function () {
                                            var promise = langPromises[uses] || langPromises[$preferredLanguage];
                                            if (fallbackIndex = 0, $storageFactory && !promise) {
                                                var langKey = Storage.get($storageKey);
                                                if (
                                                    promise = langPromises[langKey],
                                                    $fallbackLanguage && $fallbackLanguage.length
                                                ) {
                                                    var index = indexOf($fallbackLanguage, langKey);
                                                    fallbackIndex = 0 === index
                                                        ? 1
                                                        : 0,
                                                    indexOf($fallbackLanguage, $preferredLanguage) < 0 && $fallbackLanguage.push(
                                                        $preferredLanguage
                                                    )
                                                }
                                            }
                                            return promise
                                        }();
                                        if (promiseToWaitFor) {
                                            var promiseResolved = function () {
                                                forceLanguage || (uses = $uses),
                                                determineTranslation(
                                                    translationId,
                                                    interpolateParams,
                                                    interpolationId,
                                                    defaultTranslationText,
                                                    uses,
                                                    sanitizeStrategy
                                                ).then(deferred.resolve, deferred.reject)
                                            };
                                            promiseResolved.displayName = "promiseResolved",
                                            promiseToWaitFor
                                                . finally(promiseResolved)
                                                .catch(angular.noop)
                                            } else 
                                            determineTranslation(
                                                translationId,
                                                interpolateParams,
                                                interpolationId,
                                                defaultTranslationText,
                                                uses,
                                                sanitizeStrategy
                                            ).then(deferred.resolve, deferred.reject);
                                        return deferred.promise
                                    },
                                    applyNotFoundIndicators = function (translationId) {
                                        return $notFoundIndicatorLeft && (
                                            translationId = [$notFoundIndicatorLeft, translationId].join(" ")
                                        ),
                                        $notFoundIndicatorRight && (
                                            translationId = [translationId, $notFoundIndicatorRight].join(" ")
                                        ),
                                        translationId
                                    },
                                    useLanguage = function (key) {
                                        $uses = key,
                                        $storageFactory && Storage.put($translate.storageKey(), $uses),
                                        $rootScope.$emit("$translateChangeSuccess", {language: key}),
                                        defaultInterpolator.setLocale($uses);
                                        var eachInterpolator = function (interpolator, id) {
                                            interpolatorHashMap[id].setLocale($uses)
                                        };
                                        eachInterpolator.displayName = "eachInterpolatorLocaleSetter",
                                        angular.forEach(interpolatorHashMap, eachInterpolator),
                                        $rootScope.$emit("$translateChangeEnd", {language: key})
                                    },
                                    loadAsync = function (key) {
                                        if (!key) 
                                            throw "No language key specified for loading.";
                                        var deferred = $q.defer();
                                        $rootScope.$emit("$translateLoadingStart", {language: key}),
                                        pendingLoader = !0;
                                        var cache = loaderCache;
                                        "string" == typeof cache && (cache = $injector.get(cache));
                                        var loaderOptions = angular.extend({}, $loaderOptions, {
                                                key: key,
                                                $http: angular.extend({}, {
                                                    cache: cache
                                                }, $loaderOptions.$http)
                                            }),
                                            onLoaderSuccess = function (data) {
                                                var translationTable = {};
                                                $rootScope.$emit("$translateLoadingSuccess", {language: key}),
                                                angular.isArray(data)
                                                    ? angular.forEach(data, function (table) {
                                                        angular.extend(translationTable, flatObject(table))
                                                    })
                                                    : angular.extend(translationTable, flatObject(data)),
                                                pendingLoader = !1,
                                                deferred.resolve({key: key, table: translationTable}),
                                                $rootScope.$emit("$translateLoadingEnd", {language: key})
                                            };
                                        onLoaderSuccess.displayName = "onLoaderSuccess";
                                        var onLoaderError = function (key) {
                                            $rootScope.$emit("$translateLoadingError", {language: key}),
                                            deferred.reject(key),
                                            $rootScope.$emit("$translateLoadingEnd", {language: key})
                                        };
                                        return onLoaderError.displayName = "onLoaderError",
                                        $injector
                                            .get($loaderFactory)(loaderOptions)
                                            .then(onLoaderSuccess, onLoaderError),
                                        deferred.promise
                                    };
                                if ($storageFactory && (Storage = $injector.get($storageFactory), !Storage.get || !Storage.put)) 
                                    throw new Error(
                                        "Couldn't use storage '" + $storageFactory +
                                        "', missing get() or put() method!"
                                    );
                                if ($interpolatorFactories.length) {
                                    var eachInterpolationFactory = function (interpolatorFactory) {
                                        var interpolator = $injector.get(interpolatorFactory);
                                        interpolator.setLocale($preferredLanguage || $uses),
                                        interpolatorHashMap[interpolator.getInterpolationIdentifier()] = interpolator
                                    };
                                    eachInterpolationFactory.displayName = "interpolationFactoryAdder",
                                    angular.forEach($interpolatorFactories, eachInterpolationFactory)
                                }
                                var getTranslationTable = function (langKey) {
                                        var deferred = $q.defer();
                                        if (Object.prototype.hasOwnProperty.call($translationTable, langKey)) 
                                            deferred.resolve($translationTable[langKey]);
                                        else if (langPromises[langKey]) {
                                            var onResolve = function (data) {
                                                translations(data.key, data.table),
                                                deferred.resolve(data.table)
                                            };
                                            onResolve.displayName = "translationTableResolver",
                                            langPromises[langKey].then(onResolve, deferred.reject)
                                        } else 
                                            deferred.reject();
                                        return deferred.promise
                                    },
                                    getFallbackTranslation = function (
                                        langKey,
                                        translationId,
                                        interpolateParams,
                                        Interpolator,
                                        sanitizeStrategy
                                    ) {
                                        var deferred = $q.defer(),
                                            onResolve = function (translationTable) {
                                                if (Object.prototype.hasOwnProperty.call(translationTable, translationId) && null !== translationTable[translationId]) {
                                                    Interpolator.setLocale(langKey);
                                                    var translation = translationTable[translationId];
                                                    if ("@:" === translation.substr(0, 2)) 
                                                        getFallbackTranslation(
                                                            langKey,
                                                            translation.substr(2),
                                                            interpolateParams,
                                                            Interpolator,
                                                            sanitizeStrategy
                                                        ).then(deferred.resolve, deferred.reject);
                                                    else {
                                                        var interpolatedValue = Interpolator.interpolate(
                                                            translationTable[translationId],
                                                            interpolateParams,
                                                            "service",
                                                            sanitizeStrategy,
                                                            translationId
                                                        );
                                                        interpolatedValue = applyPostProcessing(
                                                            translationId,
                                                            translationTable[translationId],
                                                            interpolatedValue,
                                                            interpolateParams,
                                                            langKey
                                                        ),
                                                        deferred.resolve(interpolatedValue)
                                                    }
                                                    Interpolator.setLocale($uses)
                                                } else 
                                                    deferred.reject()
                                            };
                                        return onResolve.displayName = "fallbackTranslationResolver",
                                        getTranslationTable(langKey).then(onResolve, deferred.reject),
                                        deferred.promise
                                    },
                                    getFallbackTranslationInstant = function (
                                        langKey,
                                        translationId,
                                        interpolateParams,
                                        Interpolator,
                                        sanitizeStrategy
                                    ) {
                                        var result,
                                            translationTable = $translationTable[langKey];
                                        if (translationTable && Object.prototype.hasOwnProperty.call(translationTable, translationId) && null !== translationTable[translationId]) {
                                            if (Interpolator.setLocale(langKey), result = Interpolator.interpolate(
                                                translationTable[translationId],
                                                interpolateParams,
                                                "filter",
                                                sanitizeStrategy,
                                                translationId
                                            ), result = applyPostProcessing(
                                                translationId,
                                                translationTable[translationId],
                                                result,
                                                interpolateParams,
                                                langKey,
                                                sanitizeStrategy
                                            ), !angular.isString(result) && angular.isFunction(result.$$unwrapTrustedValue)) {
                                                var result2 = result.$$unwrapTrustedValue();
                                                if ("@:" === result2.substr(0, 2)) 
                                                    return getFallbackTranslationInstant(
                                                        langKey,
                                                        result2.substr(2),
                                                        interpolateParams,
                                                        Interpolator,
                                                        sanitizeStrategy
                                                    )
                                            } else if ("@:" === result.substr(0, 2)) 
                                                return getFallbackTranslationInstant(
                                                    langKey,
                                                    result.substr(2),
                                                    interpolateParams,
                                                    Interpolator,
                                                    sanitizeStrategy
                                                );
                                            Interpolator.setLocale($uses)
                                        }
                                        return result
                                    },
                                    translateByHandler = function (
                                        translationId,
                                        interpolateParams,
                                        defaultTranslationText,
                                        sanitizeStrategy
                                    ) {
                                        return $missingTranslationHandlerFactory
                                            ? $injector.get($missingTranslationHandlerFactory)(
                                                translationId,
                                                $uses,
                                                interpolateParams,
                                                defaultTranslationText,
                                                sanitizeStrategy
                                            )
                                            : translationId
                                    },
                                    resolveForFallbackLanguage = function (
                                        fallbackLanguageIndex,
                                        translationId,
                                        interpolateParams,
                                        Interpolator,
                                        defaultTranslationText,
                                        sanitizeStrategy
                                    ) {
                                        var deferred = $q.defer();
                                        if (fallbackLanguageIndex < $fallbackLanguage.length) {
                                            var langKey = $fallbackLanguage[fallbackLanguageIndex];
                                            getFallbackTranslation(
                                                langKey,
                                                translationId,
                                                interpolateParams,
                                                Interpolator,
                                                sanitizeStrategy
                                            ).then(function (data) {
                                                deferred.resolve(data)
                                            }, function () {
                                                return resolveForFallbackLanguage(
                                                    fallbackLanguageIndex + 1,
                                                    translationId,
                                                    interpolateParams,
                                                    Interpolator,
                                                    defaultTranslationText,
                                                    sanitizeStrategy
                                                ).then(deferred.resolve, deferred.reject)
                                            })
                                        } else if (defaultTranslationText) 
                                            deferred.resolve(defaultTranslationText);
                                        else {
                                            var missingTranslationHandlerTranslation = translateByHandler(
                                                translationId,
                                                interpolateParams,
                                                defaultTranslationText
                                            );
                                            $missingTranslationHandlerFactory && missingTranslationHandlerTranslation
                                                ? deferred.resolve(missingTranslationHandlerTranslation)
                                                : deferred.reject(applyNotFoundIndicators(translationId))
                                        }
                                        return deferred.promise
                                    },
                                    resolveForFallbackLanguageInstant = function (
                                        fallbackLanguageIndex,
                                        translationId,
                                        interpolateParams,
                                        Interpolator,
                                        sanitizeStrategy
                                    ) {
                                        var result;
                                        if (fallbackLanguageIndex < $fallbackLanguage.length) {
                                            var langKey = $fallbackLanguage[fallbackLanguageIndex];
                                            result = getFallbackTranslationInstant(
                                                langKey,
                                                translationId,
                                                interpolateParams,
                                                Interpolator,
                                                sanitizeStrategy
                                            ),
                                            result || "" === result || (result = resolveForFallbackLanguageInstant(
                                                fallbackLanguageIndex + 1,
                                                translationId,
                                                interpolateParams,
                                                Interpolator
                                            ))
                                        }
                                        return result
                                    },
                                    fallbackTranslation = function (
                                        translationId,
                                        interpolateParams,
                                        Interpolator,
                                        defaultTranslationText,
                                        sanitizeStrategy
                                    ) {
                                        return resolveForFallbackLanguage(
                                            startFallbackIteration > 0
                                                ? startFallbackIteration
                                                : fallbackIndex,
                                            translationId,
                                            interpolateParams,
                                            Interpolator,
                                            defaultTranslationText,
                                            sanitizeStrategy
                                        )
                                    },
                                    fallbackTranslationInstant = function (
                                        translationId,
                                        interpolateParams,
                                        Interpolator,
                                        sanitizeStrategy
                                    ) {
                                        return resolveForFallbackLanguageInstant(
                                            startFallbackIteration > 0
                                                ? startFallbackIteration
                                                : fallbackIndex,
                                            translationId,
                                            interpolateParams,
                                            Interpolator,
                                            sanitizeStrategy
                                        )
                                    },
                                    determineTranslation = function (
                                        translationId,
                                        interpolateParams,
                                        interpolationId,
                                        defaultTranslationText,
                                        uses,
                                        sanitizeStrategy
                                    ) {
                                        var deferred = $q.defer(),
                                            table = uses
                                                ? $translationTable[uses]
                                                : $translationTable,
                                            Interpolator = interpolationId
                                                ? interpolatorHashMap[interpolationId]
                                                : defaultInterpolator;
                                        if (table && Object.prototype.hasOwnProperty.call(table, translationId) && null !== table[translationId]) {
                                            var translation = table[translationId];
                                            if ("@:" === translation.substr(0, 2)) 
                                                $translate(
                                                    translation.substr(2),
                                                    interpolateParams,
                                                    interpolationId,
                                                    defaultTranslationText,
                                                    uses,
                                                    sanitizeStrategy
                                                ).then(deferred.resolve, deferred.reject);
                                            else {
                                                var resolvedTranslation = Interpolator.interpolate(
                                                    translation,
                                                    interpolateParams,
                                                    "service",
                                                    sanitizeStrategy,
                                                    translationId
                                                );
                                                resolvedTranslation = applyPostProcessing(
                                                    translationId,
                                                    translation,
                                                    resolvedTranslation,
                                                    interpolateParams,
                                                    uses
                                                ),
                                                deferred.resolve(resolvedTranslation)
                                            }
                                        } else {
                                            var missingTranslationHandlerTranslation;
                                            $missingTranslationHandlerFactory && !pendingLoader && (
                                                missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams, defaultTranslationText)
                                            ),
                                            uses && $fallbackLanguage && $fallbackLanguage.length
                                                ? fallbackTranslation(
                                                    translationId,
                                                    interpolateParams,
                                                    Interpolator,
                                                    defaultTranslationText,
                                                    sanitizeStrategy
                                                ).then(function (translation) {
                                                    deferred.resolve(translation)
                                                }, function (_translationId) {
                                                    deferred.reject(applyNotFoundIndicators(_translationId))
                                                })
                                                : $missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation
                                                    ? defaultTranslationText
                                                        ? deferred.resolve(defaultTranslationText)
                                                        : deferred.resolve(missingTranslationHandlerTranslation)
                                                    : defaultTranslationText
                                                        ? deferred.resolve(defaultTranslationText)
                                                        : deferred.reject(applyNotFoundIndicators(translationId))
                                        }
                                        return deferred.promise
                                    },
                                    determineTranslationInstant = function (
                                        translationId,
                                        interpolateParams,
                                        interpolationId,
                                        uses,
                                        sanitizeStrategy
                                    ) {
                                        var result,
                                            table = uses
                                                ? $translationTable[uses]
                                                : $translationTable,
                                            Interpolator = defaultInterpolator;
                                        if (
                                            interpolatorHashMap && Object.prototype.hasOwnProperty.call(interpolatorHashMap, interpolationId) && (Interpolator = interpolatorHashMap[interpolationId]),
                                            table && Object.prototype.hasOwnProperty.call(table, translationId) && null !== table[translationId]
                                        ) {
                                            var translation = table[translationId];
                                            "@:" === translation.substr(0, 2)
                                                ? result = determineTranslationInstant(
                                                    translation.substr(2),
                                                    interpolateParams,
                                                    interpolationId,
                                                    uses,
                                                    sanitizeStrategy
                                                )
                                                : (
                                                    result = Interpolator.interpolate(translation, interpolateParams, "filter", sanitizeStrategy, translationId),
                                                    result = applyPostProcessing(translationId, translation, result, interpolateParams, uses, sanitizeStrategy)
                                                )
                                        } else {
                                            var missingTranslationHandlerTranslation;
                                            $missingTranslationHandlerFactory && !pendingLoader && (
                                                missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams, sanitizeStrategy)
                                            ),
                                            uses && $fallbackLanguage && $fallbackLanguage.length
                                                ? (
                                                    fallbackIndex = 0,
                                                    result = fallbackTranslationInstant(translationId, interpolateParams, Interpolator, sanitizeStrategy)
                                                )
                                                : result = $missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation
                                                    ? missingTranslationHandlerTranslation
                                                    : applyNotFoundIndicators(translationId)
                                        }
                                        return result
                                    },
                                    clearNextLangAndPromise = function (key) {
                                        $nextLang === key && ($nextLang = void 0),
                                        langPromises[key] = void 0
                                    },
                                    applyPostProcessing = function (
                                        translationId,
                                        translation,
                                        resolvedTranslation,
                                        interpolateParams,
                                        uses,
                                        sanitizeStrategy
                                    ) {
                                        var fn = postProcessFn;
                                        return fn && ("string" == typeof fn && (fn = $injector.get(fn)), fn)
                                            ? fn(
                                                translationId,
                                                translation,
                                                resolvedTranslation,
                                                interpolateParams,
                                                uses,
                                                sanitizeStrategy
                                            )
                                            : resolvedTranslation
                                    },
                                    loadTranslationsIfMissing = function (key) {
                                        $translationTable[key] || !$loaderFactory || langPromises[key] || (
                                            langPromises[key] = loadAsync(key).then(function (translation) {
                                                return translations(translation.key, translation.table),
                                                translation
                                            })
                                        )
                                    };
                                $translate.preferredLanguage = function (langKey) {
                                    return langKey && setupPreferredLanguage(langKey),
                                    $preferredLanguage
                                },
                                $translate.cloakClassName = function () {
                                    return $cloakClassName
                                },
                                $translate.nestedObjectDelimeter = function () {
                                    return $nestedObjectDelimeter
                                },
                                $translate.fallbackLanguage = function (langKey) {
                                    if (void 0 !== langKey && null !== langKey) {
                                        if (
                                            fallbackStack(langKey),
                                            $loaderFactory && $fallbackLanguage && $fallbackLanguage.length
                                        ) 
                                            for (var i = 0, len = $fallbackLanguage.length; i < len; i++) 
                                                langPromises[$fallbackLanguage[i]] || (
                                                    langPromises[$fallbackLanguage[i]] = loadAsync($fallbackLanguage[i])
                                                );
                                    $translate.use($translate.use())
                                    }
                                    return $fallbackWasString
                                        ? $fallbackLanguage[0]
                                        : $fallbackLanguage
                                },
                                $translate.useFallbackLanguage = function (langKey) {
                                    if (void 0 !== langKey && null !== langKey) 
                                        if (langKey) {
                                            var langKeyPosition = indexOf($fallbackLanguage, langKey);
                                            langKeyPosition > -1 && (startFallbackIteration = langKeyPosition)
                                        } else 
                                            startFallbackIteration = 0
                                },
                                $translate.proposedLanguage = function () {
                                    return $nextLang
                                },
                                $translate.storage = function () {
                                    return Storage
                                },
                                $translate.negotiateLocale = negotiateLocale,
                                $translate.use = function (key) {
                                    if (!key) 
                                        return $uses;
                                    var deferred = $q.defer();
                                    deferred
                                        .promise
                                        .then(null, angular.noop),
                                    $rootScope.$emit("$translateChangeStart", {language: key});
                                    var aliasedKey = negotiateLocale(key);
                                    return $availableLanguageKeys.length > 0 && !aliasedKey
                                        ? $q.reject(key)
                                        : (
                                            aliasedKey && (key = aliasedKey),
                                            $nextLang = key,
                                            !$forceAsyncReloadEnabled && $translationTable[key] || !$loaderFactory || langPromises[key]
                                                ? langPromises[key]
                                                    ? langPromises[key].then(function (translation) {
                                                        return $nextLang === translation.key && useLanguage(translation.key),
                                                        deferred.resolve(translation.key),
                                                        translation
                                                    }, function (key) {
                                                        return !$uses && $fallbackLanguage && $fallbackLanguage.length > 0 && $fallbackLanguage[0] !== key
                                                            ? $translate
                                                                .use($fallbackLanguage[0])
                                                                .then(deferred.resolve, deferred.reject)
                                                            : deferred.reject(key)
                                                    })
                                                    : (deferred.resolve(key), useLanguage(key))
                                                : (
                                                    langPromises[key] = loadAsync(key).then(function (translation) {
                                                        return translations(translation.key, translation.table),
                                                        deferred.resolve(translation.key),
                                                        $nextLang === key && useLanguage(translation.key),
                                                        translation
                                                    }, function (key) {
                                                        return $rootScope.$emit("$translateChangeError", {language: key}),
                                                        deferred.reject(key),
                                                        $rootScope.$emit("$translateChangeEnd", {language: key}),
                                                        $q.reject(key)
                                                    }),
                                                    langPromises[key]. finally(function () {
                                                        clearNextLangAndPromise(key)
                                                    }).catch(angular.noop)
                                                ),
                                            deferred.promise
                                        )
                                },
                                $translate.resolveClientLocale = function () {
                                    return getLocale()
                                },
                                $translate.storageKey = function () {
                                    return storageKey()
                                },
                                $translate.isPostCompilingEnabled = function () {
                                    return $postCompilingEnabled
                                },
                                $translate.isForceAsyncReloadEnabled = function () {
                                    return $forceAsyncReloadEnabled
                                },
                                $translate.isKeepContent = function () {
                                    return $keepContent
                                },
                                $translate.refresh = function (langKey) {
                                    function loadNewData(languageKey) {
                                        var promise = loadAsync(languageKey);
                                        return langPromises[languageKey] = promise,
                                        promise.then(function (data) {
                                            $translationTable[languageKey] = {},
                                            translations(languageKey, data.table),
                                            updatedLanguages[languageKey] = !0
                                        }, angular.noop),
                                        promise
                                    }
                                    if (!$loaderFactory) 
                                        throw new Error("Couldn't refresh translation table, no loader registered!");
                                    $rootScope.$emit("$translateRefreshStart", {language: langKey});
                                    var deferred = $q.defer(),
                                        updatedLanguages = {};
                                    if (deferred.promise.then(function () {
                                        for (var key in $translationTable) 
                                            $translationTable.hasOwnProperty(key) && (
                                                key in updatedLanguages || delete $translationTable[key]
                                            );
                                        $uses && useLanguage($uses)
                                    }, angular.noop). finally(function () {
                                        $rootScope.$emit("$translateRefreshEnd", {language: langKey})
                                    }), langKey) 
                                        $translationTable[langKey]
                                            ? loadNewData(langKey).then(deferred.resolve, deferred.reject)
                                            : deferred.reject();
                                    else {
                                        var languagesToReload = $fallbackLanguage && $fallbackLanguage.slice() || [];
                                        $uses && -1 === languagesToReload.indexOf($uses) && languagesToReload.push(
                                            $uses
                                        ),
                                        $q
                                            .all(languagesToReload.map(loadNewData))
                                            .then(deferred.resolve, deferred.reject)
                                    }
                                    return deferred.promise
                                },
                                $translate.instant = function (
                                    translationId,
                                    interpolateParams,
                                    interpolationId,
                                    forceLanguage,
                                    sanitizeStrategy
                                ) {
                                    var uses = forceLanguage && forceLanguage !== $uses
                                        ? negotiateLocale(forceLanguage) || forceLanguage
                                        : $uses;
                                    if (null === translationId || angular.isUndefined(translationId)) 
                                        return translationId;
                                    if (
                                        forceLanguage && loadTranslationsIfMissing(forceLanguage),
                                        angular.isArray(translationId)
                                    ) {
                                        for (var results = {}, i = 0, c = translationId.length; i < c; i++) 
                                            results[translationId[i]] = $translate.instant(
                                                translationId[i],
                                                interpolateParams,
                                                interpolationId,
                                                forceLanguage,
                                                sanitizeStrategy
                                            );
                                        return results
                                    }
                                    if (angular.isString(translationId) && translationId.length < 1) 
                                        return translationId;
                                    translationId && (translationId = trim.apply(translationId));
                                    var result,
                                        possibleLangKeys = [];
                                    $preferredLanguage && possibleLangKeys.push($preferredLanguage),
                                    uses && possibleLangKeys.push(uses),
                                    $fallbackLanguage && $fallbackLanguage.length && (
                                        possibleLangKeys = possibleLangKeys.concat($fallbackLanguage)
                                    );
                                    for (var j = 0, d = possibleLangKeys.length; j < d; j++) {
                                        var possibleLangKey = possibleLangKeys[j];
                                        if (
                                            $translationTable[possibleLangKey] && void 0 !== $translationTable[possibleLangKey][translationId] && (
                                                result = determineTranslationInstant(translationId, interpolateParams, interpolationId, uses, sanitizeStrategy)
                                            ),
                                            void 0 !== result
                                        ) 
                                            break
                                    }
                                    if (!result && "" !== result) 
                                        if ($notFoundIndicatorLeft || $notFoundIndicatorRight) 
                                            result = applyNotFoundIndicators(translationId);
                                        else {
                                            result = defaultInterpolator.interpolate(
                                                translationId,
                                                interpolateParams,
                                                "filter",
                                                sanitizeStrategy
                                            );
                                            var missingTranslationHandlerTranslation;
                                            $missingTranslationHandlerFactory && !pendingLoader && (
                                                missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams, sanitizeStrategy)
                                            ),
                                            $missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation && (
                                                result = missingTranslationHandlerTranslation
                                            )
                                        }
                                    return result
                                },
                                $translate.versionInfo = function () {
                                    return version
                                },
                                $translate.loaderCache = function () {
                                    return loaderCache
                                },
                                $translate.directivePriority = function () {
                                    return directivePriority
                                },
                                $translate.statefulFilter = function () {
                                    return statefulFilter
                                },
                                $translate.isReady = function () {
                                    return $isReady
                                };
                                var $onReadyDeferred = $q.defer();
                                $onReadyDeferred
                                    .promise
                                    .then(function () {
                                        $isReady = !0
                                    }),
                                $translate.onReady = function (fn) {
                                    var deferred = $q.defer();
                                    return angular.isFunction(fn) && deferred
                                        .promise
                                        .then(fn),
                                    $isReady
                                        ? deferred.resolve()
                                        : $onReadyDeferred
                                            .promise
                                            .then(deferred.resolve),
                                    deferred.promise
                                },
                                $translate.getAvailableLanguageKeys = function () {
                                    return $availableLanguageKeys.length > 0
                                        ? $availableLanguageKeys
                                        : null
                                },
                                $translate.getTranslationTable = function (langKey) {
                                    return langKey = langKey || $translate.use(),
                                    langKey && $translationTable[langKey]
                                        ? angular.copy($translationTable[langKey])
                                        : null
                                };
                                var globalOnReadyListener = $rootScope.$on("$translateReady", function () {
                                        $onReadyDeferred.resolve(),
                                        globalOnReadyListener(),
                                        globalOnReadyListener = null
                                    }),
                                    globalOnChangeListener = $rootScope.$on("$translateChangeEnd", function () {
                                        $onReadyDeferred.resolve(),
                                        globalOnChangeListener(),
                                        globalOnChangeListener = null
                                    });
                                if ($loaderFactory) {
                                    if (
                                        angular.equals($translationTable, {}) && $translate.use() && $translate.use($translate.use()),
                                        $fallbackLanguage && $fallbackLanguage.length
                                    ) 
                                        for (
                                            var processAsyncResult = function (translation) {
                                                return translations(translation.key, translation.table),
                                                $rootScope.$emit("$translateChangeEnd", {language: translation.key}),
                                                translation
                                            },
                                            i = 0,
                                            len = $fallbackLanguage.length; i < len; i++
                                        ) {
                                            var fallbackLanguageId = $fallbackLanguage[i];
                                            !$forceAsyncReloadEnabled && $translationTable[fallbackLanguageId] || (
                                                langPromises[fallbackLanguageId] = loadAsync(fallbackLanguageId).then(processAsyncResult)
                                            )
                                        }
                                    } else 
                                    $rootScope.$emit("$translateReady", {language: $translate.use()});
                                return $translate
                            }
                        ]
                    }
                    function $translateDefaultInterpolation($interpolate, $translateSanitization) {
                        "use strict";
                        var $locale,
                            $translateInterpolator = {};
                        return $translateInterpolator.setLocale = function (locale) {
                            $locale = locale
                        },
                        $translateInterpolator.getInterpolationIdentifier = function () {
                            return "default"
                        },
                        $translateInterpolator.useSanitizeValueStrategy = function (value) {
                            return $translateSanitization.useStrategy(value),
                            this
                        },
                        $translateInterpolator.interpolate = function (
                            value,
                            interpolationParams,
                            context,
                            sanitizeStrategy,
                            translationId
                        ) {
                            interpolationParams = interpolationParams || {},
                            interpolationParams = $translateSanitization.sanitize(
                                interpolationParams,
                                "params",
                                sanitizeStrategy,
                                context
                            );
                            var interpolatedText;
                            return angular.isNumber(value)
                                ? interpolatedText = "" + value
                                : angular.isString(value)
                                    ? (
                                        interpolatedText = $interpolate(value)(interpolationParams),
                                        interpolatedText = $translateSanitization.sanitize(
                                            interpolatedText,
                                            "text",
                                            sanitizeStrategy,
                                            context
                                        )
                                    )
                                    : interpolatedText = "",
                            interpolatedText
                        },
                        $translateInterpolator
                    }
                    function translateDirective(
                        $translate,
                        $interpolate,
                        $compile,
                        $parse,
                        $rootScope
                    ) {
                        "use strict";
                        var trim = function () {
                                return this
                                    .toString()
                                    .replace(/^\s+|\s+$/g, "")
                            },
                            lowercase = function (string) {
                                return angular.isString(string)
                                    ? string.toLowerCase()
                                    : string
                            };
                        return {
                            restrict: "AE",
                            scope: !0,
                            priority: $translate.directivePriority(),
                            compile: function (tElement, tAttr) {
                                var translateValuesExist = tAttr.translateValues
                                        ? tAttr.translateValues
                                        : void 0,
                                    translateInterpolation = tAttr.translateInterpolation
                                        ? tAttr.translateInterpolation
                                        : void 0,
                                    translateSanitizeStrategyExist = tAttr.translateSanitizeStrategy
                                        ? tAttr.translateSanitizeStrategy
                                        : void 0,
                                    translateValueExist = tElement[0]
                                        .outerHTML
                                        .match(/translate-value-+/i),
                                    interpolateRegExp = "^(.*)(" + $interpolate.startSymbol() + ".*" +
                                        $interpolate.endSymbol() + ")(.*)",
                                    watcherRegExp = "^(.*)" + $interpolate.startSymbol() + "(.*)" +
                                        $interpolate.endSymbol() + "(.*)";
                                return function linkFn(scope, iElement, iAttr) {
                                    scope.interpolateParams = {},
                                    scope.preText = "",
                                    scope.postText = "",
                                    scope.translateNamespace = getTranslateNamespace(scope);
                                    var translationIds = {},
                                        initInterpolationParams = function (interpolateParams, iAttr, tAttr) {
                                            if (
                                                iAttr.translateValues && angular.extend(interpolateParams, $parse(iAttr.translateValues)(
                                                    scope.$parent
                                                )),
                                                translateValueExist
                                            ) 
                                                for (var attr in tAttr) 
                                                    if (Object.prototype.hasOwnProperty.call(iAttr, attr) && "translateValue" === attr.substr(0, 14) && "translateValues" !== attr) {
                                                        var attributeName = lowercase(attr.substr(14, 1)) + attr.substr(15);
                                                        interpolateParams[attributeName] = tAttr[attr]
                                                    }
                                                },
                                        observeElementTranslation = function (translationId) {
                                            if (angular.isFunction(observeElementTranslation._unwatchOld) && (
                                                observeElementTranslation._unwatchOld(),
                                                observeElementTranslation._unwatchOld = void 0
                                            ), angular.equals(translationId, "") || !angular.isDefined(translationId)) {
                                                var iElementText = trim
                                                        .apply(iElement.text())
                                                        .replace(/\n/g, " "),
                                                    interpolateMatches = iElementText.match(interpolateRegExp);
                                                if (angular.isArray(interpolateMatches)) {
                                                    scope.preText = interpolateMatches[1],
                                                    scope.postText = interpolateMatches[3],
                                                    translationIds.translate = $interpolate(interpolateMatches[2])(scope.$parent);
                                                    var watcherMatches = iElementText.match(watcherRegExp);
                                                    angular.isArray(watcherMatches) && watcherMatches[2] && watcherMatches[2].length && (
                                                        observeElementTranslation._unwatchOld = scope.$watch(watcherMatches[2], function (newValue) {
                                                            translationIds.translate = newValue,
                                                            updateTranslations()
                                                        })
                                                    )
                                                } else 
                                                    translationIds.translate = iElementText || void 0
                                            } else 
                                                translationIds.translate = translationId;
                                            updateTranslations()
                                        },
                                        observeAttributeTranslation = function (translateAttr) {
                                            iAttr.$observe(translateAttr, function (translationId) {
                                                translationIds[translateAttr] = translationId,
                                                updateTranslations()
                                            })
                                        };
                                    initInterpolationParams(scope.interpolateParams, iAttr, tAttr);
                                    var firstAttributeChangedEvent = !0;
                                    iAttr.$observe("translate", function (translationId) {
                                        void 0 === translationId
                                            ? observeElementTranslation("")
                                            : "" === translationId && firstAttributeChangedEvent || (
                                                translationIds.translate = translationId,
                                                updateTranslations()
                                            ),
                                        firstAttributeChangedEvent = !1
                                    });
                                    for (var translateAttr in iAttr) 
                                        iAttr.hasOwnProperty(translateAttr) && "translateAttr" === translateAttr.substr(
                                            0,
                                            13
                                        ) && translateAttr.length > 13 && observeAttributeTranslation(translateAttr);
                                    if (
                                        iAttr.$observe("translateDefault", function (value) {
                                            scope.defaultText = value,
                                            updateTranslations()
                                        }),
                                        translateSanitizeStrategyExist && iAttr.$observe("translateSanitizeStrategy", function (value) {
                                            scope.sanitizeStrategy = $parse(value)(scope.$parent),
                                            updateTranslations()
                                        }),
                                        translateValuesExist && iAttr.$observe("translateValues", function (interpolateParams) {
                                            interpolateParams && scope
                                                .$parent
                                                .$watch(function () {
                                                    angular.extend(scope.interpolateParams, $parse(interpolateParams)(
                                                        scope.$parent
                                                    ))
                                                })
                                        }),
                                        translateValueExist
                                    ) {
                                        var observeValueAttribute = function (attrName) {
                                            iAttr.$observe(attrName, function (value) {
                                                var attributeName = lowercase(attrName.substr(14, 1)) + attrName.substr(15);
                                                scope.interpolateParams[attributeName] = value
                                            })
                                        };
                                        for (var attr in iAttr) 
                                            Object
                                                .prototype
                                                .hasOwnProperty
                                                .call(iAttr, attr) && "translateValue" === attr.substr(0, 14) && "translateValues" !== attr && observeValueAttribute(
                                                    attr
                                                )
                                        }
                                    var updateTranslations = function () {
                                            for (var key in translationIds) 
                                                translationIds.hasOwnProperty(key) && void 0 !== translationIds[key] && updateTranslation(
                                                    key,
                                                    translationIds[key],
                                                    scope,
                                                    scope.interpolateParams,
                                                    scope.defaultText,
                                                    scope.translateNamespace
                                                )
                                        },
                                        updateTranslation = function (
                                            translateAttr,
                                            translationId,
                                            scope,
                                            interpolateParams,
                                            defaultTranslationText,
                                            translateNamespace
                                        ) {
                                            translationId
                                                ? (
                                                    translateNamespace && "." === translationId.charAt(0) && (translationId = translateNamespace + translationId),
                                                    $translate(
                                                        translationId,
                                                        interpolateParams,
                                                        translateInterpolation,
                                                        defaultTranslationText,
                                                        scope.translateLanguage,
                                                        scope.sanitizeStrategy
                                                    ).then(function (translation) {
                                                        applyTranslation(translation, scope, !0, translateAttr)
                                                    }, function (translationId) {
                                                        applyTranslation(translationId, scope, !1, translateAttr)
                                                    })
                                                )
                                                : applyTranslation(translationId, scope, !1, translateAttr)
                                        },
                                        applyTranslation = function (value, scope, successful, translateAttr) {
                                            if (
                                                successful || void 0 !== scope.defaultText && (value = scope.defaultText),
                                                "translate" === translateAttr
                                            ) {
                                                (
                                                    successful || !successful && !$translate.isKeepContent() && void 0 === iAttr.translateKeepContent
                                                ) && iElement
                                                    .empty()
                                                    .append(scope.preText + value + scope.postText);
                                                var globallyEnabled = $translate.isPostCompilingEnabled(),
                                                    locallyDefined = void 0 !== tAttr.translateCompile,
                                                    locallyEnabled = locallyDefined && "false" !== tAttr.translateCompile;
                                                (globallyEnabled && !locallyDefined || locallyEnabled) && $compile(
                                                    iElement.contents()
                                                )(scope)
                                            } else {
                                                var attributeName = iAttr.$attr[translateAttr];
                                                "data-" === attributeName.substr(0, 5) && (
                                                    attributeName = attributeName.substr(5)
                                                ),
                                                attributeName = attributeName.substr(15),
                                                iElement.attr(attributeName, value)
                                            }
                                        };
                                    (translateValuesExist || translateValueExist || iAttr.translateDefault) && scope.$watch(
                                        "interpolateParams",
                                        updateTranslations,
                                        !0
                                    ),
                                    scope.$on("translateLanguageChanged", updateTranslations);
                                    var unbind = $rootScope.$on("$translateChangeSuccess", updateTranslations);
                                    iElement
                                        .text()
                                        .length
                                            ? observeElementTranslation(
                                                iAttr.translate
                                                    ? iAttr.translate
                                                    : ""
                                            )
                                            : iAttr.translate && observeElementTranslation(iAttr.translate),
                                    updateTranslations(),
                                    scope.$on("$destroy", unbind)
                                }
                            }
                        }
                    }
                    function getTranslateNamespace(scope) {
                        "use strict";
                        return scope.translateNamespace
                            ? scope.translateNamespace
                            : scope.$parent
                                ? getTranslateNamespace(scope.$parent)
                                : void 0
                    }
                    function translateAttrDirective($translate, $rootScope) {
                        "use strict";
                        return {
                            restrict: "A",
                            priority: $translate.directivePriority(),
                            link: function linkFn(scope, element, attr) {
                                var translateAttr,
                                    translateValues,
                                    translateSanitizeStrategy,
                                    previousAttributes = {},
                                    updateTranslations = function () {
                                        angular.forEach(translateAttr, function (translationId, attributeName) {
                                            translationId && (
                                                previousAttributes[attributeName] = !0,
                                                scope.translateNamespace && "." === translationId.charAt(0) && (translationId = scope.translateNamespace + translationId),
                                                $translate(
                                                    translationId,
                                                    translateValues,
                                                    attr.translateInterpolation,
                                                    void 0,
                                                    scope.translateLanguage,
                                                    translateSanitizeStrategy
                                                ).then(function (translation) {
                                                    element.attr(attributeName, translation)
                                                }, function (translationId) {
                                                    element.attr(attributeName, translationId)
                                                })
                                            )
                                        }),
                                        angular.forEach(previousAttributes, function (flag, attributeName) {
                                            translateAttr[attributeName] || (
                                                element.removeAttr(attributeName),
                                                delete previousAttributes[attributeName]
                                            )
                                        })
                                    };
                                watchAttribute(scope, attr.translateAttr, function (newValue) {
                                    translateAttr = newValue
                                }, updateTranslations),
                                watchAttribute(scope, attr.translateValues, function (newValue) {
                                    translateValues = newValue
                                }, updateTranslations),
                                watchAttribute(scope, attr.translateSanitizeStrategy, function (newValue) {
                                    translateSanitizeStrategy = newValue
                                }, updateTranslations),
                                attr.translateValues && scope.$watch(
                                    attr.translateValues,
                                    updateTranslations,
                                    !0
                                ),
                                scope.$on("translateLanguageChanged", updateTranslations);
                                var unbind = $rootScope.$on("$translateChangeSuccess", updateTranslations);
                                updateTranslations(),
                                scope.$on("$destroy", unbind)
                            }
                        }
                    }
                    function watchAttribute(scope, attribute, valueCallback, changeCallback) {
                        "use strict";
                        attribute && (
                            "::" === attribute.substr(0, 2)
                                ? attribute = attribute.substr(2)
                                : scope.$watch(attribute, function (newValue) {
                                    valueCallback(newValue),
                                    changeCallback()
                                }, !0),
                            valueCallback(scope.$eval(attribute))
                        )
                    }
                    function translateCloakDirective($translate, $rootScope) {
                        "use strict";
                        return {
                            compile: function (tElement) {
                                var applyCloak = function (element) {
                                        element.addClass($translate.cloakClassName())
                                    },
                                    removeCloak = function (element) {
                                        element.removeClass($translate.cloakClassName())
                                    };
                                return applyCloak(tElement),
                                function linkFn(scope, iElement, iAttr) {
                                    var iRemoveCloak = removeCloak.bind(this, iElement),
                                        iApplyCloak = applyCloak.bind(this, iElement);
                                    iAttr.translateCloak && iAttr.translateCloak.length
                                        ? (
                                            iAttr.$observe("translateCloak", function (translationId) {
                                                $translate(translationId).then(iRemoveCloak, iApplyCloak)
                                            }),
                                            $rootScope.$on("$translateChangeSuccess", function () {
                                                $translate(iAttr.translateCloak).then(iRemoveCloak, iApplyCloak)
                                            })
                                        )
                                        : $translate.onReady(iRemoveCloak)
                                }
                            }
                        }
                    }
                    function translateNamespaceDirective() {
                        "use strict";
                        return {
                            restrict: "A",
                            scope: !0,
                            compile: function () {
                                return {
                                    pre: function (scope, iElement, iAttrs) {
                                        scope.translateNamespace = _getTranslateNamespace(scope),
                                        scope.translateNamespace && "." === iAttrs
                                            .translateNamespace
                                            .charAt(0)
                                                ? scope.translateNamespace += iAttrs.translateNamespace
                                                : scope.translateNamespace = iAttrs.translateNamespace
                                    }
                                }
                            }
                        }
                    }
                    function _getTranslateNamespace(scope) {
                        "use strict";
                        return scope.translateNamespace
                            ? scope.translateNamespace
                            : scope.$parent
                                ? _getTranslateNamespace(scope.$parent)
                                : void 0
                    }
                    function translateLanguageDirective() {
                        "use strict";
                        return {
                            restrict: "A",
                            scope: !0,
                            compile: function () {
                                return function linkFn(scope, iElement, iAttrs) {
                                    iAttrs.$observe("translateLanguage", function (newTranslateLanguage) {
                                        scope.translateLanguage = newTranslateLanguage
                                    }),
                                    scope.$watch("translateLanguage", function () {
                                        scope.$broadcast("translateLanguageChanged")
                                    })
                                }
                            }
                        }
                    }
                    function translateFilterFactory($parse, $translate) {
                        "use strict";
                        var translateFilter = function (
                            translationId,
                            interpolateParams,
                            interpolation,
                            forceLanguage
                        ) {
                            if (!angular.isObject(interpolateParams)) {
                                var ctx = this || {
                                    __SCOPE_IS_NOT_AVAILABLE: "More info at https://github.com/angular/angular.js/commit/8863b9d04c722b278fa9" +
                                        "3c5d66ad1e578ad6eb1f"
                                };
                                interpolateParams = $parse(interpolateParams)(ctx)
                            }
                            return $translate.instant(
                                translationId,
                                interpolateParams,
                                interpolation,
                                forceLanguage
                            )
                        };
                        return $translate.statefulFilter() && (translateFilter.$stateful = !0),
                        translateFilter
                    }
                    function $translationCache($cacheFactory) {
                        "use strict";
                        return $cacheFactory("translations")
                    }
                    return runTranslate.$inject = ["$translate"],
                    $translate.$inject = [
                        "$STORAGE_KEY", "$windowProvider", "$translateSanitizationProvider", "pascalprechtTranslateOverrider"
                    ],
                    $translateDefaultInterpolation.$inject = [
                        "$interpolate", "$translateSanitization"
                    ],
                    translateDirective.$inject = [
                        "$translate", "$interpolate", "$compile", "$parse", "$rootScope"
                    ],
                    translateAttrDirective.$inject = [
                        "$translate", "$rootScope"
                    ],
                    translateCloakDirective.$inject = [
                        "$translate", "$rootScope"
                    ],
                    translateFilterFactory.$inject = [
                        "$parse", "$translate"
                    ],
                    $translationCache.$inject = ["$cacheFactory"],
                    angular
                        .module("pascalprecht.translate", ["ng"])
                        .run(runTranslate),
                    runTranslate.displayName = "runTranslate",
                    angular
                        .module("pascalprecht.translate")
                        .provider("$translateSanitization", $translateSanitizationProvider),
                    angular
                        .module("pascalprecht.translate")
                        .constant("pascalprechtTranslateOverrider", {})
                        .provider("$translate", $translate),
                    $translate.displayName = "displayName",
                    angular
                        .module("pascalprecht.translate")
                        .factory("$translateDefaultInterpolation", $translateDefaultInterpolation),
                    $translateDefaultInterpolation.displayName = "$translateDefaultInterpolation",
                    angular
                        .module("pascalprecht.translate")
                        .constant("$STORAGE_KEY", "NG_TRANSLATE_LANG_KEY"),
                    angular
                        .module("pascalprecht.translate")
                        .directive("translate", translateDirective),
                    translateDirective.displayName = "translateDirective",
                    angular
                        .module("pascalprecht.translate")
                        .directive("translateAttr", translateAttrDirective),
                    translateAttrDirective.displayName = "translateAttrDirective",
                    angular
                        .module("pascalprecht.translate")
                        .directive("translateCloak", translateCloakDirective),
                    translateCloakDirective.displayName = "translateCloakDirective",
                    angular
                        .module("pascalprecht.translate")
                        .directive("translateNamespace", translateNamespaceDirective),
                    translateNamespaceDirective.displayName = "translateNamespaceDirective",
                    angular
                        .module("pascalprecht.translate")
                        .directive("translateLanguage", translateLanguageDirective),
                    translateLanguageDirective.displayName = "translateLanguageDirective",
                    angular
                        .module("pascalprecht.translate")
                        .filter("translate", translateFilterFactory),
                    translateFilterFactory.displayName = "translateFilterFactory",
                    angular
                        .module("pascalprecht.translate")
                        .factory("$translationCache", $translationCache),
                    $translationCache.displayName = "$translationCache",
                    "pascalprecht.translate"
                })
            },
            function (module, exports, __webpack_require__) {
                (function (qrcode) {
                    angular
                        .module("monospaced.qrcode", [])
                        .directive("qrcode", [
                            "$window",
                            function ($window) {
                                var canvas2D = !!$window.CanvasRenderingContext2D,
                                    levels = {
                                        L: "Low",
                                        M: "Medium",
                                        Q: "Quartile",
                                        H: "High"
                                    },
                                    draw = function (context, qr, modules, tile) {
                                        for (var row = 0; row < modules; row++) 
                                            for (var col = 0; col < modules; col++) {
                                                var w = Math.ceil((col + 1) * tile) - Math.floor(col * tile),
                                                    h = Math.ceil((row + 1) * tile) - Math.floor(row * tile);
                                                context.fillStyle = qr.isDark(row, col)
                                                    ? "#000"
                                                    : "#fff",
                                                context.fillRect(Math.round(col * tile), Math.round(row * tile), w, h)
                                            }
                                        };
                                return {
                                    restrict: "E",
                                    template: '<canvas class="qrcode"></canvas>',
                                    link: function (scope, element, attrs) {
                                        var error,
                                            version,
                                            errorCorrectionLevel,
                                            data,
                                            size,
                                            modules,
                                            tile,
                                            qr,
                                            $img,
                                            domElement = element[0],
                                            $canvas = element.find("canvas"),
                                            canvas = $canvas[0],
                                            context = canvas2D
                                                ? canvas.getContext("2d")
                                                : null,
                                            download = "download" in attrs,
                                            href = attrs.href,
                                            link = download || href
                                                ? document.createElement("a")
                                                : "",
                                            trim = /^\s+|\s+$/g,
                                            setVersion = function (value) {
                                                version = Math.max(1, Math.min(parseInt(value, 10), 40)) || 5
                                            },
                                            setErrorCorrectionLevel = function (value) {
                                                errorCorrectionLevel = value in levels
                                                    ? value
                                                    : "M"
                                            },
                                            setData = function (value) {
                                                if (value) {
                                                    data = value.replace(trim, ""),
                                                    qr = qrcode(version, errorCorrectionLevel),
                                                    qr.addData(data);
                                                    try {
                                                        qr.make()
                                                    } catch (e) {
                                                        return void(error = e.message)
                                                    }
                                                    error = !1,
                                                    modules = qr.getModuleCount()
                                                }
                                            },
                                            setSize = function (value) {
                                                size = parseInt(value, 10) || 2 * modules,
                                                tile = size / modules,
                                                canvas.width = canvas.height = size
                                            },
                                            render = function () {
                                                if (qr) {
                                                    if (error) 
                                                        return link && (
                                                            link.removeAttribute("download"),
                                                            link.title = "",
                                                            link.href = "#_"
                                                        ),
                                                        canvas2D || (
                                                            domElement.innerHTML = '<img src width="' + size + '"height="' + size + '"class' +
                                                            '="qrcode">'
                                                        ),
                                                        void scope.$emit("qrcode:error", error);
                                                    if (
                                                        download && (domElement.download = "qrcode.png", domElement.title = "Download QR code"),
                                                        canvas2D
                                                    ) {
                                                        if (draw(context, qr, modules, tile), download) 
                                                            return void(domElement.href = canvas.toDataURL("image/png"))
                                                    } else if (
                                                        domElement.innerHTML = qr.createImgTag(tile, 0),
                                                        $img = element.find("img"),
                                                        $img.addClass("qrcode"),
                                                        download
                                                    ) 
                                                        return void(domElement.href = $img[0].src);
                                                    href && (domElement.href = href)
                                                }
                                            };
                                        link && (
                                            link.className = "qrcode-link",
                                            $canvas.wrap(link),
                                            domElement = domElement.firstChild
                                        ),
                                        setVersion(attrs.version),
                                        setErrorCorrectionLevel(attrs.errorCorrectionLevel),
                                        setSize(attrs.size),
                                        attrs.$observe("version", function (value) {
                                            value && (setVersion(value), setData(data), setSize(size), render())
                                        }),
                                        attrs.$observe("errorCorrectionLevel", function (value) {
                                            value && (
                                                setErrorCorrectionLevel(value),
                                                setData(data),
                                                setSize(size),
                                                render()
                                            )
                                        }),
                                        attrs.$observe("data", function (value) {
                                            value && (setData(value), setSize(size), render())
                                        }),
                                        attrs.$observe("size", function (value) {
                                            value && (setSize(value), render())
                                        }),
                                        attrs.$observe("href", function (value) {
                                            value && (href = value, render())
                                        })
                                    }
                                }
                            }
                        ])
                }).call(exports, __webpack_require__(652))
            },
            function (module, exports, __webpack_require__) {
                var __WEBPACK_AMD_DEFINE_FACTORY__,
                    __WEBPACK_AMD_DEFINE_ARRAY__,
                    __WEBPACK_AMD_DEFINE_RESULT__,
                    qrcode = function () {
                        function qrPolynomial(num, shift) {
                            if (void 0 === num.length) 
                                throw new Error(num.length + "/" + shift);
                            var _num = function () {
                                    for (var offset = 0; offset < num.length && 0 == num[offset];) 
                                        offset += 1;
                                    for (
                                        var _num = new Array(num.length - offset + shift),
                                        i = 0;
                                        i < num.length - offset;
                                        i += 1
                                    ) 
                                        _num[i] = num[i + offset];
                                    return _num
                                }(),
                                _this = {};
                            return _this.getAt = function (index) {
                                return _num[index]
                            },
                            _this.getLength = function () {
                                return _num.length
                            },
                            _this.multiply = function (e) {
                                for (
                                    var num = new Array(_this.getLength() + e.getLength() - 1),
                                    i = 0;
                                    i < _this.getLength();
                                    i += 1
                                ) 
                                    for (var j = 0; j < e.getLength(); j += 1) 
                                        num[i + j] ^= QRMath.gexp(
                                            QRMath.glog(_this.getAt(i)) + QRMath.glog(e.getAt(j))
                                        );
                            return qrPolynomial(num, 0)
                            },
                            _this.mod = function (e) {
                                if (_this.getLength() - e.getLength() < 0) 
                                    return _this;
                                for (
                                    var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e.getAt(0)),
                                    num = new Array(_this.getLength()),
                                    i = 0;
                                    i < _this.getLength();
                                    i += 1
                                ) 
                                    num[i] = _this.getAt(i);
                                for (var i = 0; i < e.getLength(); i += 1) 
                                    num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i)) + ratio);
                                return qrPolynomial(num, 0).mod(e)
                            },
                            _this
                        }
                        var qrcode = function (typeNumber, errorCorrectLevel) {
                            var PAD0 = 236,
                                PAD1 = 17,
                                _typeNumber = typeNumber,
                                _errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel],
                                _modules = null,
                                _moduleCount = 0,
                                _dataCache = null,
                                _dataList = new Array,
                                _this = {},
                                makeImpl = function (test, maskPattern) {
                                    _moduleCount = 4 * _typeNumber + 17,
                                    _modules = function (moduleCount) {
                                        for (
                                            var modules = new Array(moduleCount),
                                            row = 0;
                                            row < moduleCount;
                                            row += 1
                                        ) {
                                            modules[row] = new Array(moduleCount);
                                            for (var col = 0; col < moduleCount; col += 1) 
                                                modules[row][col] = null
                                        }
                                        return modules
                                    }(_moduleCount),
                                    setupPositionProbePattern(0, 0),
                                    setupPositionProbePattern(_moduleCount - 7, 0),
                                    setupPositionProbePattern(0, _moduleCount - 7),
                                    setupPositionAdjustPattern(),
                                    setupTimingPattern(),
                                    setupTypeInfo(test, maskPattern),
                                    _typeNumber >= 7 && setupTypeNumber(test),
                                    null == _dataCache && (
                                        _dataCache = createData(_typeNumber, _errorCorrectLevel, _dataList)
                                    ),
                                    mapData(_dataCache, maskPattern)
                                },
                                setupPositionProbePattern = function (row, col) {
                                    for (var r = -1; r <= 7; r += 1) 
                                        if (!(row + r <= -1 || _moduleCount <= row + r)) 
                                            for (var c = -1; c <= 7; c += 1) 
                                                col + c <= -1 || _moduleCount <= col + c || (
                                                    _modules[row + r][col + c] = 0 <= r && r <= 6 && (0 == c || 6 == c) || 0 <= c && c <= 6 && (0 == r || 6 == r) || 2 <= r && r <= 4 && 2 <= c && c <= 4
                                                )
                                },
                                getBestMaskPattern = function () {
                                    for (var minLostPoint = 0, pattern = 0, i = 0; i < 8; i += 1) {
                                        makeImpl(!0, i);
                                        var lostPoint = QRUtil.getLostPoint(_this);
                                        (0 == i || minLostPoint > lostPoint) && (minLostPoint = lostPoint, pattern = i)
                                    }
                                    return pattern
                                },
                                setupTimingPattern = function () {
                                    for (var r = 8; r < _moduleCount - 8; r += 1) 
                                        null == _modules[r][6] && (_modules[r][6] = r % 2 == 0);
                                    for (var c = 8; c < _moduleCount - 8; c += 1) 
                                        null == _modules[6][c] && (_modules[6][c] = c % 2 == 0)
                                },
                                setupPositionAdjustPattern = function () {
                                    for (
                                        var pos = QRUtil.getPatternPosition(_typeNumber),
                                        i = 0;
                                        i < pos.length;
                                        i += 1
                                    ) 
                                        for (var j = 0; j < pos.length; j += 1) {
                                            var row = pos[i],
                                                col = pos[j];
                                            if (null == _modules[row][col]) 
                                                for (var r = -2; r <= 2; r += 1) 
                                                    for (var c = -2; c <= 2; c += 1) 
                                                        _modules[row + r][col + c] = -2 == r || 2 == r || -2 == c || 2 == c || 0 == r && 0 == c
                                        }
                                    },
                                setupTypeNumber = function (test) {
                                    for (var bits = QRUtil.getBCHTypeNumber(_typeNumber), i = 0; i < 18; i += 1) {
                                        var mod = !test && 1 == (bits >> i & 1);
                                        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod
                                    }
                                    for (var i = 0; i < 18; i += 1) {
                                        var mod = !test && 1 == (bits >> i & 1);
                                        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod
                                    }
                                },
                                setupTypeInfo = function (test, maskPattern) {
                                    for (
                                        var data = _errorCorrectLevel << 3 | maskPattern,
                                        bits = QRUtil.getBCHTypeInfo(data),
                                        i = 0;
                                        i < 15;
                                        i += 1
                                    ) {
                                        var mod = !test && 1 == (bits >> i & 1);
                                        i < 6
                                            ? _modules[i][8] = mod
                                            : i < 8
                                                ? _modules[i + 1][8] = mod
                                                : _modules[_moduleCount - 15 + i][8] = mod
                                    }
                                    for (var i = 0; i < 15; i += 1) {
                                        var mod = !test && 1 == (bits >> i & 1);
                                        i < 8
                                            ? _modules[8][_moduleCount - i - 1] = mod
                                            : i < 9
                                                ? _modules[8][15 - i - 1 + 1] = mod
                                                : _modules[8][15 - i - 1] = mod
                                    }
                                    _modules[_moduleCount - 8][8] = !test
                                },
                                mapData = function (data, maskPattern) {
                                    for (
                                        var inc = -1,
                                        row = _moduleCount - 1,
                                        bitIndex = 7,
                                        byteIndex = 0,
                                        maskFunc = QRUtil.getMaskFunction(maskPattern),
                                        col = _moduleCount - 1;
                                        col > 0;
                                        col -= 2
                                    ) 
                                        for (6 == col && (col -= 1);;) {
                                            for (var c = 0; c < 2; c += 1) 
                                                if (null == _modules[row][col - c]) {
                                                    var dark = !1;
                                                    byteIndex < data.length && (dark = 1 == (data[byteIndex] >>> bitIndex & 1));
                                                    var mask = maskFunc(row, col - c);
                                                    mask && (dark = !dark),
                                                    _modules[row][col - c] = dark,
                                                    bitIndex -= 1,
                                                    -1 == bitIndex && (byteIndex += 1, bitIndex = 7)
                                                }
                                            if ((row += inc) < 0 || _moduleCount <= row) {
                                                row -= inc,
                                                inc = -inc;
                                                break
                                            }
                                        }
                                    },
                                createBytes = function (buffer, rsBlocks) {
                                    for (
                                        var offset = 0,
                                        maxDcCount = 0,
                                        maxEcCount = 0,
                                        dcdata = new Array(rsBlocks.length),
                                        ecdata = new Array(rsBlocks.length),
                                        r = 0;
                                        r < rsBlocks.length;
                                        r += 1
                                    ) {
                                        var dcCount = rsBlocks[r].dataCount,
                                            ecCount = rsBlocks[r].totalCount - dcCount;
                                        maxDcCount = Math.max(maxDcCount, dcCount),
                                        maxEcCount = Math.max(maxEcCount, ecCount),
                                        dcdata[r] = new Array(dcCount);
                                        for (var i = 0; i < dcdata[r].length; i += 1) 
                                            dcdata[r][i] = 255 & buffer.getBuffer()[i + offset];
                                        offset += dcCount;
                                        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount),
                                            rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1),
                                            modPoly = rawPoly.mod(rsPoly);
                                        ecdata[r] = new Array(rsPoly.getLength() - 1);
                                        for (var i = 0; i < ecdata[r].length; i += 1) {
                                            var modIndex = i + modPoly.getLength() - ecdata[r].length;
                                            ecdata[r][i] = modIndex >= 0
                                                ? modPoly.getAt(modIndex)
                                                : 0
                                        }
                                    }
                                    for (var totalCodeCount = 0, i = 0; i < rsBlocks.length; i += 1) 
                                        totalCodeCount += rsBlocks[i].totalCount;
                                    for (
                                        var data = new Array(totalCodeCount),
                                        index = 0,
                                        i = 0;
                                        i < maxDcCount;
                                        i += 1
                                    ) 
                                        for (var r = 0; r < rsBlocks.length; r += 1) 
                                            i < dcdata[r].length && (data[index] = dcdata[r][i], index += 1);
                                for (var i = 0; i < maxEcCount; i += 1) 
                                        for (var r = 0; r < rsBlocks.length; r += 1) 
                                            i < ecdata[r].length && (data[index] = ecdata[r][i], index += 1);
                                return data
                                },
                                createData = function (typeNumber, errorCorrectLevel, dataList) {
                                    for (
                                        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel),
                                        buffer = qrBitBuffer(),
                                        i = 0;
                                        i < dataList.length;
                                        i += 1
                                    ) {
                                        var data = dataList[i];
                                        buffer.put(data.getMode(), 4),
                                        buffer.put(
                                            data.getLength(),
                                            QRUtil.getLengthInBits(data.getMode(), typeNumber)
                                        ),
                                        data.write(buffer)
                                    }
                                    for (var totalDataCount = 0, i = 0; i < rsBlocks.length; i += 1) 
                                        totalDataCount += rsBlocks[i].dataCount;
                                    if (buffer.getLengthInBits() > 8 * totalDataCount) 
                                        throw new Error(
                                            "code length overflow. (" + buffer.getLengthInBits() + ">" + 8 * totalDataCount + ")"
                                        );
                                    for (
                                        buffer.getLengthInBits() + 4 <= 8 * totalDataCount && buffer.put(0, 4);
                                        buffer.getLengthInBits() % 8 != 0;
                                    ) 
                                        buffer.putBit(!1);
                                    for (;;) {
                                        if (buffer.getLengthInBits() >= 8 * totalDataCount) 
                                            break;
                                        if (buffer.put(PAD0, 8), buffer.getLengthInBits() >= 8 * totalDataCount) 
                                            break;
                                        buffer.put(PAD1, 8)
                                    }
                                    return createBytes(buffer, rsBlocks)
                                };
                            return _this.addData = function (data) {
                                var newData = qr8BitByte(data);
                                _dataList.push(newData),
                                _dataCache = null
                            },
                            _this.isDark = function (row, col) {
                                if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) 
                                    throw new Error(row + "," + col);
                                return _modules[row][col]
                            },
                            _this.getModuleCount = function () {
                                return _moduleCount
                            },
                            _this.make = function () {
                                makeImpl(!1, getBestMaskPattern())
                            },
                            _this.createTableTag = function (cellSize, margin) {
                                cellSize = cellSize || 2,
                                margin = void 0 === margin
                                    ? 4 * cellSize
                                    : margin;
                                var qrHtml = "";
                                qrHtml += '<table style="',
                                qrHtml += " border-width: 0px; border-style: none;",
                                qrHtml += " border-collapse: collapse;",
                                qrHtml += " padding: 0px; margin: " + margin + "px;",
                                qrHtml += '">',
                                qrHtml += "<tbody>";
                                for (var r = 0; r < _this.getModuleCount(); r += 1) {
                                    qrHtml += "<tr>";
                                    for (var c = 0; c < _this.getModuleCount(); c += 1) 
                                        qrHtml += '<td style="',
                                        qrHtml += " border-width: 0px; border-style: none;",
                                        qrHtml += " border-collapse: collapse;",
                                        qrHtml += " padding: 0px; margin: 0px;",
                                        qrHtml += " width: " + cellSize + "px;",
                                        qrHtml += " height: " + cellSize + "px;",
                                        qrHtml += " background-color: ",
                                        qrHtml += _this.isDark(r, c)
                                            ? "#000000"
                                            : "#ffffff",
                                        qrHtml += ";",
                                        qrHtml += '"/>';
                                    qrHtml += "</tr>"
                                }
                                return qrHtml += "</tbody>",
                                qrHtml += "</table>"
                            },
                            _this.createSvgTag = function (cellSize, margin) {
                                cellSize = cellSize || 2,
                                margin = void 0 === margin
                                    ? 4 * cellSize
                                    : margin;
                                var c,
                                    mc,
                                    r,
                                    mr,
                                    rect,
                                    size = _this.getModuleCount() * cellSize + 2 * margin,
                                    qrSvg = "";
                                for (
                                    rect = "l" + cellSize + ",0 0," + cellSize + " -" + cellSize + ",0 0,-" +
                                            cellSize + "z ",
                                    qrSvg += "<svg",
                                    qrSvg += ' width="' + size + 'px"',
                                    qrSvg += ' height="' + size + 'px"',
                                    qrSvg += ' xmlns="http://www.w3.org/2000/svg"',
                                    qrSvg += ">",
                                    qrSvg += '<path d="',
                                    r = 0; r < _this.getModuleCount(); r += 1
                                ) 
                                    for (mr = r * cellSize + margin, c = 0; c < _this.getModuleCount(); c += 1) 
                                        _this.isDark(r, c) && (
                                            mc = c * cellSize + margin,
                                            qrSvg += "M" + mc + "," + mr + rect
                                        );
                            return qrSvg += '" stroke="transparent" fill="black"/>',
                                qrSvg += "</svg>"
                            },
                            _this.createImgTag = function (cellSize, margin) {
                                cellSize = cellSize || 2,
                                margin = void 0 === margin
                                    ? 4 * cellSize
                                    : margin;
                                var size = _this.getModuleCount() * cellSize + 2 * margin,
                                    min = margin,
                                    max = size - margin;
                                return createImgTag(size, size, function (x, y) {
                                    if (min <= x && x < max && min <= y && y < max) {
                                        var c = Math.floor((x - min) / cellSize),
                                            r = Math.floor((y - min) / cellSize);
                                        return _this.isDark(r, c)
                                            ? 0
                                            : 1
                                    }
                                    return 1
                                })
                            },
                            _this
                        };
                        qrcode.stringToBytes = function (s) {
                            for (var bytes = new Array, i = 0; i < s.length; i += 1) {
                                var c = s.charCodeAt(i);
                                bytes.push(255 & c)
                            }
                            return bytes
                        },
                        qrcode.createStringToBytes = function (unicodeData, numChars) {
                            var unicodeMap = function () {
                                    for (
                                        var bin = base64DecodeInputStream(unicodeData),
                                        read = function () {
                                            var b = bin.read();
                                            if (-1 == b) 
                                                throw new Error;
                                            return b
                                        },
                                        count = 0,
                                        unicodeMap = {};;
                                    ) {
                                        var b0 = bin.read();
                                        if (-1 == b0) 
                                            break;
                                        var b1 = read(),
                                            b2 = read(),
                                            b3 = read(),
                                            k = String.fromCharCode(b0 << 8 | b1),
                                            v = b2 << 8 | b3;
                                        unicodeMap[k] = v,
                                        count += 1
                                    }
                                    if (count != numChars) 
                                        throw new Error(count + " != " + numChars);
                                    return unicodeMap
                                }(),
                                unknownChar = "?".charCodeAt(0);
                            return function (s) {
                                for (var bytes = new Array, i = 0; i < s.length; i += 1) {
                                    var c = s.charCodeAt(i);
                                    if (c < 128) 
                                        bytes.push(c);
                                    else {
                                        var b = unicodeMap[s.charAt(i)];
                                        "number" == typeof b
                                            ? (255 & b) == b
                                                ? bytes.push(b)
                                                : (bytes.push(b >>> 8), bytes.push(255 & b))
                                            : bytes.push(unknownChar)
                                    }
                                }
                                return bytes
                            }
                        };
                        var QRMode = {
                                MODE_NUMBER: 1,
                                MODE_ALPHA_NUM: 2,
                                MODE_8BIT_BYTE: 4,
                                MODE_KANJI: 8
                            },
                            QRErrorCorrectLevel = {
                                L: 1,
                                M: 0,
                                Q: 3,
                                H: 2
                            },
                            QRMaskPattern = {
                                PATTERN000: 0,
                                PATTERN001: 1,
                                PATTERN010: 2,
                                PATTERN011: 3,
                                PATTERN100: 4,
                                PATTERN101: 5,
                                PATTERN110: 6,
                                PATTERN111: 7
                            },
                            QRUtil = function () {
                                var PATTERN_POSITION_TABLE = [
                                        [],
                                        [
                                            6, 18
                                        ],
                                        [
                                            6, 22
                                        ],
                                        [
                                            6, 26
                                        ],
                                        [
                                            6, 30
                                        ],
                                        [
                                            6, 34
                                        ],
                                        [
                                            6, 22, 38
                                        ],
                                        [
                                            6, 24, 42
                                        ],
                                        [
                                            6, 26, 46
                                        ],
                                        [
                                            6, 28, 50
                                        ],
                                        [
                                            6, 30, 54
                                        ],
                                        [
                                            6, 32, 58
                                        ],
                                        [
                                            6, 34, 62
                                        ],
                                        [
                                            6, 26, 46, 66
                                        ],
                                        [
                                            6, 26, 48, 70
                                        ],
                                        [
                                            6, 26, 50, 74
                                        ],
                                        [
                                            6, 30, 54, 78
                                        ],
                                        [
                                            6, 30, 56, 82
                                        ],
                                        [
                                            6, 30, 58, 86
                                        ],
                                        [
                                            6, 34, 62, 90
                                        ],
                                        [
                                            6, 28, 50, 72, 94
                                        ],
                                        [
                                            6, 26, 50, 74, 98
                                        ],
                                        [
                                            6, 30, 54, 78, 102
                                        ],
                                        [
                                            6, 28, 54, 80, 106
                                        ],
                                        [
                                            6, 32, 58, 84, 110
                                        ],
                                        [
                                            6, 30, 58, 86, 114
                                        ],
                                        [
                                            6, 34, 62, 90, 118
                                        ],
                                        [
                                            6,
                                            26,
                                            50,
                                            74,
                                            98,
                                            122
                                        ],
                                        [
                                            6,
                                            30,
                                            54,
                                            78,
                                            102,
                                            126
                                        ],
                                        [
                                            6,
                                            26,
                                            52,
                                            78,
                                            104,
                                            130
                                        ],
                                        [
                                            6,
                                            30,
                                            56,
                                            82,
                                            108,
                                            134
                                        ],
                                        [
                                            6,
                                            34,
                                            60,
                                            86,
                                            112,
                                            138
                                        ],
                                        [
                                            6,
                                            30,
                                            58,
                                            86,
                                            114,
                                            142
                                        ],
                                        [
                                            6,
                                            34,
                                            62,
                                            90,
                                            118,
                                            146
                                        ],
                                        [
                                            6,
                                            30,
                                            54,
                                            78,
                                            102,
                                            126,
                                            150
                                        ],
                                        [
                                            6,
                                            24,
                                            50,
                                            76,
                                            102,
                                            128,
                                            154
                                        ],
                                        [
                                            6,
                                            28,
                                            54,
                                            80,
                                            106,
                                            132,
                                            158
                                        ],
                                        [
                                            6,
                                            32,
                                            58,
                                            84,
                                            110,
                                            136,
                                            162
                                        ],
                                        [
                                            6,
                                            26,
                                            54,
                                            82,
                                            110,
                                            138,
                                            166
                                        ],
                                        [
                                            6,
                                            30,
                                            58,
                                            86,
                                            114,
                                            142,
                                            170
                                        ]
                                    ],
                                    G15 = 1335,
                                    G18 = 7973,
                                    _this = {},
                                    getBCHDigit = function (data) {
                                        for (var digit = 0; 0 != data;) 
                                            digit += 1,
                                            data >>>= 1;
                                        return digit
                                    };
                                return _this.getBCHTypeInfo = function (data) {
                                    for (var d = data << 10; getBCHDigit(d) - getBCHDigit(G15) >= 0;) 
                                        d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);
                                    return 21522 ^ (data << 10 | d)
                                },
                                _this.getBCHTypeNumber = function (data) {
                                    for (var d = data << 12; getBCHDigit(d) - getBCHDigit(G18) >= 0;) 
                                        d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);
                                    return data << 12 | d
                                },
                                _this.getPatternPosition = function (typeNumber) {
                                    return PATTERN_POSITION_TABLE[typeNumber - 1]
                                },
                                _this.getMaskFunction = function (maskPattern) {
                                    switch (maskPattern) {
                                        case QRMaskPattern.PATTERN000:
                                            return function (i, j) {
                                                return (i + j) % 2 == 0
                                            };
                                        case QRMaskPattern.PATTERN001:
                                            return function (i, j) {
                                                return i % 2 == 0
                                            };
                                        case QRMaskPattern.PATTERN010:
                                            return function (i, j) {
                                                return j % 3 == 0
                                            };
                                        case QRMaskPattern.PATTERN011:
                                            return function (i, j) {
                                                return (i + j) % 3 == 0
                                            };
                                        case QRMaskPattern.PATTERN100:
                                            return function (i, j) {
                                                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0
                                            };
                                        case QRMaskPattern.PATTERN101:
                                            return function (i, j) {
                                                return i * j % 2 + i * j % 3 == 0
                                            };
                                        case QRMaskPattern.PATTERN110:
                                            return function (i, j) {
                                                return (i * j % 2 + i * j % 3) % 2 == 0
                                            };
                                        case QRMaskPattern.PATTERN111:
                                            return function (i, j) {
                                                return (i * j % 3 + (i + j) % 2) % 2 == 0
                                            };
                                        default:
                                            throw new Error("bad maskPattern:" + maskPattern)
                                    }
                                },
                                _this.getErrorCorrectPolynomial = function (errorCorrectLength) {
                                    for (var a = qrPolynomial([1], 0), i = 0; i < errorCorrectLength; i += 1) 
                                        a = a.multiply(qrPolynomial([
                                            1, QRMath.gexp(i)
                                        ], 0));
                                    return a
                                },
                                _this.getLengthInBits = function (mode, type) {
                                    if (1 <= type && type < 10) 
                                        switch (mode) {
                                            case QRMode.MODE_NUMBER:
                                                return 10;
                                            case QRMode.MODE_ALPHA_NUM:
                                                return 9;
                                            case QRMode.MODE_8BIT_BYTE:
                                            case QRMode.MODE_KANJI:
                                                return 8;
                                            default:
                                                throw new Error("mode:" + mode)
                                        }
                                    else if (type < 27) 
                                        switch (mode) {
                                            case QRMode.MODE_NUMBER:
                                                return 12;
                                            case QRMode.MODE_ALPHA_NUM:
                                                return 11;
                                            case QRMode.MODE_8BIT_BYTE:
                                                return 16;
                                            case QRMode.MODE_KANJI:
                                                return 10;
                                            default:
                                                throw new Error("mode:" + mode)
                                        }
                                    else {
                                        if (!(type < 41)) 
                                            throw new Error("type:" + type);
                                        switch (mode) {
                                            case QRMode.MODE_NUMBER:
                                                return 14;
                                            case QRMode.MODE_ALPHA_NUM:
                                                return 13;
                                            case QRMode.MODE_8BIT_BYTE:
                                                return 16;
                                            case QRMode.MODE_KANJI:
                                                return 12;
                                            default:
                                                throw new Error("mode:" + mode)
                                        }
                                    }
                                },
                                _this.getLostPoint = function (qrcode) {
                                    for (
                                        var moduleCount = qrcode.getModuleCount(),
                                        lostPoint = 0,
                                        row = 0;
                                        row < moduleCount;
                                        row += 1
                                    ) 
                                        for (var col = 0; col < moduleCount; col += 1) {
                                            for (var sameCount = 0, dark = qrcode.isDark(row, col), r = -1; r <= 1; r += 1) 
                                                if (!(row + r < 0 || moduleCount <= row + r)) 
                                                    for (var c = -1; c <= 1; c += 1) 
                                                        col + c < 0 || moduleCount <= col + c || 0 == r && 0 == c || dark == qrcode.isDark(
                                                            row + r,
                                                            col + c
                                                        ) && (sameCount += 1);
                                        sameCount > 5 && (lostPoint += 3 + sameCount - 5)
                                        }
                                    for (var row = 0; row < moduleCount - 1; row += 1) 
                                        for (var col = 0; col < moduleCount - 1; col += 1) {
                                            var count = 0;
                                            qrcode.isDark(row, col) && (count += 1),
                                            qrcode.isDark(row + 1, col) && (count += 1),
                                            qrcode.isDark(row, col + 1) && (count += 1),
                                            qrcode.isDark(row + 1, col + 1) && (count += 1),
                                            0 != count && 4 != count || (lostPoint += 3)
                                        }
                                    for (var row = 0; row < moduleCount; row += 1) 
                                        for (var col = 0; col < moduleCount - 6; col += 1) 
                                            qrcode.isDark(row, col) && !qrcode.isDark(row, col + 1) && qrcode.isDark(
                                                row,
                                                col + 2
                                            ) && qrcode.isDark(row, col + 3) && qrcode.isDark(row, col + 4) && !qrcode.isDark(
                                                row,
                                                col + 5
                                            ) && qrcode.isDark(row, col + 6) && (lostPoint += 40);
                                for (var col = 0; col < moduleCount; col += 1) 
                                        for (var row = 0; row < moduleCount - 6; row += 1) 
                                            qrcode.isDark(row, col) && !qrcode.isDark(row + 1, col) && qrcode.isDark(
                                                row + 2,
                                                col
                                            ) && qrcode.isDark(row + 3, col) && qrcode.isDark(row + 4, col) && !qrcode.isDark(
                                                row + 5,
                                                col
                                            ) && qrcode.isDark(row + 6, col) && (lostPoint += 40);
                                for (var darkCount = 0, col = 0; col < moduleCount; col += 1) 
                                        for (var row = 0; row < moduleCount; row += 1) 
                                            qrcode.isDark(row, col) && (darkCount += 1);
                                return lostPoint += Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5 * 10
                                },
                                _this
                            }(),
                            QRMath = function () {
                                for (
                                    var EXP_TABLE = new Array(256),
                                    LOG_TABLE = new Array(256),
                                    i = 0;
                                    i < 8;
                                    i += 1
                                ) 
                                    EXP_TABLE[i] = 1 << i;
                                for (var i = 8; i < 256; i += 1) 
                                    EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];
                                for (var i = 0; i < 255; i += 1) 
                                    LOG_TABLE[EXP_TABLE[i]] = i;
                                var _this = {};
                                return _this.glog = function (n) {
                                    if (n < 1) 
                                        throw new Error("glog(" + n + ")");
                                    return LOG_TABLE[n]
                                },
                                _this.gexp = function (n) {
                                    for (; n < 0;) 
                                        n += 255;
                                    for (; n >= 256;) 
                                        n -= 255;
                                    return EXP_TABLE[n]
                                },
                                _this
                            }(),
                            QRRSBlock = function () {
                                var RS_BLOCK_TABLE = [
                                        [
                                            1, 26, 19
                                        ],
                                        [
                                            1, 26, 16
                                        ],
                                        [
                                            1, 26, 13
                                        ],
                                        [
                                            1, 26, 9
                                        ],
                                        [
                                            1, 44, 34
                                        ],
                                        [
                                            1, 44, 28
                                        ],
                                        [
                                            1, 44, 22
                                        ],
                                        [
                                            1, 44, 16
                                        ],
                                        [
                                            1, 70, 55
                                        ],
                                        [
                                            1, 70, 44
                                        ],
                                        [
                                            2, 35, 17
                                        ],
                                        [
                                            2, 35, 13
                                        ],
                                        [
                                            1, 100, 80
                                        ],
                                        [
                                            2, 50, 32
                                        ],
                                        [
                                            2, 50, 24
                                        ],
                                        [
                                            4, 25, 9
                                        ],
                                        [
                                            1, 134, 108
                                        ],
                                        [
                                            2, 67, 43
                                        ],
                                        [
                                            2,
                                            33,
                                            15,
                                            2,
                                            34,
                                            16
                                        ],
                                        [
                                            2,
                                            33,
                                            11,
                                            2,
                                            34,
                                            12
                                        ],
                                        [
                                            2, 86, 68
                                        ],
                                        [
                                            4, 43, 27
                                        ],
                                        [
                                            4, 43, 19
                                        ],
                                        [
                                            4, 43, 15
                                        ],
                                        [
                                            2, 98, 78
                                        ],
                                        [
                                            4, 49, 31
                                        ],
                                        [
                                            2,
                                            32,
                                            14,
                                            4,
                                            33,
                                            15
                                        ],
                                        [
                                            4,
                                            39,
                                            13,
                                            1,
                                            40,
                                            14
                                        ],
                                        [
                                            2, 121, 97
                                        ],
                                        [
                                            2,
                                            60,
                                            38,
                                            2,
                                            61,
                                            39
                                        ],
                                        [
                                            4,
                                            40,
                                            18,
                                            2,
                                            41,
                                            19
                                        ],
                                        [
                                            4,
                                            40,
                                            14,
                                            2,
                                            41,
                                            15
                                        ],
                                        [
                                            2, 146, 116
                                        ],
                                        [
                                            3,
                                            58,
                                            36,
                                            2,
                                            59,
                                            37
                                        ],
                                        [
                                            4,
                                            36,
                                            16,
                                            4,
                                            37,
                                            17
                                        ],
                                        [
                                            4,
                                            36,
                                            12,
                                            4,
                                            37,
                                            13
                                        ],
                                        [
                                            2,
                                            86,
                                            68,
                                            2,
                                            87,
                                            69
                                        ],
                                        [
                                            4,
                                            69,
                                            43,
                                            1,
                                            70,
                                            44
                                        ],
                                        [
                                            6,
                                            43,
                                            19,
                                            2,
                                            44,
                                            20
                                        ],
                                        [
                                            6,
                                            43,
                                            15,
                                            2,
                                            44,
                                            16
                                        ],
                                        [
                                            4, 101, 81
                                        ],
                                        [
                                            1,
                                            80,
                                            50,
                                            4,
                                            81,
                                            51
                                        ],
                                        [
                                            4,
                                            50,
                                            22,
                                            4,
                                            51,
                                            23
                                        ],
                                        [
                                            3,
                                            36,
                                            12,
                                            8,
                                            37,
                                            13
                                        ],
                                        [
                                            2,
                                            116,
                                            92,
                                            2,
                                            117,
                                            93
                                        ],
                                        [
                                            6,
                                            58,
                                            36,
                                            2,
                                            59,
                                            37
                                        ],
                                        [
                                            4,
                                            46,
                                            20,
                                            6,
                                            47,
                                            21
                                        ],
                                        [
                                            7,
                                            42,
                                            14,
                                            4,
                                            43,
                                            15
                                        ],
                                        [
                                            4, 133, 107
                                        ],
                                        [
                                            8,
                                            59,
                                            37,
                                            1,
                                            60,
                                            38
                                        ],
                                        [
                                            8,
                                            44,
                                            20,
                                            4,
                                            45,
                                            21
                                        ],
                                        [
                                            12,
                                            33,
                                            11,
                                            4,
                                            34,
                                            12
                                        ],
                                        [
                                            3,
                                            145,
                                            115,
                                            1,
                                            146,
                                            116
                                        ],
                                        [
                                            4,
                                            64,
                                            40,
                                            5,
                                            65,
                                            41
                                        ],
                                        [
                                            11,
                                            36,
                                            16,
                                            5,
                                            37,
                                            17
                                        ],
                                        [
                                            11,
                                            36,
                                            12,
                                            5,
                                            37,
                                            13
                                        ],
                                        [
                                            5,
                                            109,
                                            87,
                                            1,
                                            110,
                                            88
                                        ],
                                        [
                                            5,
                                            65,
                                            41,
                                            5,
                                            66,
                                            42
                                        ],
                                        [
                                            5,
                                            54,
                                            24,
                                            7,
                                            55,
                                            25
                                        ],
                                        [
                                            11,
                                            36,
                                            12,
                                            7,
                                            37,
                                            13
                                        ],
                                        [
                                            5,
                                            122,
                                            98,
                                            1,
                                            123,
                                            99
                                        ],
                                        [
                                            7,
                                            73,
                                            45,
                                            3,
                                            74,
                                            46
                                        ],
                                        [
                                            15,
                                            43,
                                            19,
                                            2,
                                            44,
                                            20
                                        ],
                                        [
                                            3,
                                            45,
                                            15,
                                            13,
                                            46,
                                            16
                                        ],
                                        [
                                            1,
                                            135,
                                            107,
                                            5,
                                            136,
                                            108
                                        ],
                                        [
                                            10,
                                            74,
                                            46,
                                            1,
                                            75,
                                            47
                                        ],
                                        [
                                            1,
                                            50,
                                            22,
                                            15,
                                            51,
                                            23
                                        ],
                                        [
                                            2,
                                            42,
                                            14,
                                            17,
                                            43,
                                            15
                                        ],
                                        [
                                            5,
                                            150,
                                            120,
                                            1,
                                            151,
                                            121
                                        ],
                                        [
                                            9,
                                            69,
                                            43,
                                            4,
                                            70,
                                            44
                                        ],
                                        [
                                            17,
                                            50,
                                            22,
                                            1,
                                            51,
                                            23
                                        ],
                                        [
                                            2,
                                            42,
                                            14,
                                            19,
                                            43,
                                            15
                                        ],
                                        [
                                            3,
                                            141,
                                            113,
                                            4,
                                            142,
                                            114
                                        ],
                                        [
                                            3,
                                            70,
                                            44,
                                            11,
                                            71,
                                            45
                                        ],
                                        [
                                            17,
                                            47,
                                            21,
                                            4,
                                            48,
                                            22
                                        ],
                                        [
                                            9,
                                            39,
                                            13,
                                            16,
                                            40,
                                            14
                                        ],
                                        [
                                            3,
                                            135,
                                            107,
                                            5,
                                            136,
                                            108
                                        ],
                                        [
                                            3,
                                            67,
                                            41,
                                            13,
                                            68,
                                            42
                                        ],
                                        [
                                            15,
                                            54,
                                            24,
                                            5,
                                            55,
                                            25
                                        ],
                                        [
                                            15,
                                            43,
                                            15,
                                            10,
                                            44,
                                            16
                                        ],
                                        [
                                            4,
                                            144,
                                            116,
                                            4,
                                            145,
                                            117
                                        ],
                                        [
                                            17, 68, 42
                                        ],
                                        [
                                            17,
                                            50,
                                            22,
                                            6,
                                            51,
                                            23
                                        ],
                                        [
                                            19,
                                            46,
                                            16,
                                            6,
                                            47,
                                            17
                                        ],
                                        [
                                            2,
                                            139,
                                            111,
                                            7,
                                            140,
                                            112
                                        ],
                                        [
                                            17, 74, 46
                                        ],
                                        [
                                            7,
                                            54,
                                            24,
                                            16,
                                            55,
                                            25
                                        ],
                                        [
                                            34, 37, 13
                                        ],
                                        [
                                            4,
                                            151,
                                            121,
                                            5,
                                            152,
                                            122
                                        ],
                                        [
                                            4,
                                            75,
                                            47,
                                            14,
                                            76,
                                            48
                                        ],
                                        [
                                            11,
                                            54,
                                            24,
                                            14,
                                            55,
                                            25
                                        ],
                                        [
                                            16,
                                            45,
                                            15,
                                            14,
                                            46,
                                            16
                                        ],
                                        [
                                            6,
                                            147,
                                            117,
                                            4,
                                            148,
                                            118
                                        ],
                                        [
                                            6,
                                            73,
                                            45,
                                            14,
                                            74,
                                            46
                                        ],
                                        [
                                            11,
                                            54,
                                            24,
                                            16,
                                            55,
                                            25
                                        ],
                                        [
                                            30,
                                            46,
                                            16,
                                            2,
                                            47,
                                            17
                                        ],
                                        [
                                            8,
                                            132,
                                            106,
                                            4,
                                            133,
                                            107
                                        ],
                                        [
                                            8,
                                            75,
                                            47,
                                            13,
                                            76,
                                            48
                                        ],
                                        [
                                            7,
                                            54,
                                            24,
                                            22,
                                            55,
                                            25
                                        ],
                                        [
                                            22,
                                            45,
                                            15,
                                            13,
                                            46,
                                            16
                                        ],
                                        [
                                            10,
                                            142,
                                            114,
                                            2,
                                            143,
                                            115
                                        ],
                                        [
                                            19,
                                            74,
                                            46,
                                            4,
                                            75,
                                            47
                                        ],
                                        [
                                            28,
                                            50,
                                            22,
                                            6,
                                            51,
                                            23
                                        ],
                                        [
                                            33,
                                            46,
                                            16,
                                            4,
                                            47,
                                            17
                                        ],
                                        [
                                            8,
                                            152,
                                            122,
                                            4,
                                            153,
                                            123
                                        ],
                                        [
                                            22,
                                            73,
                                            45,
                                            3,
                                            74,
                                            46
                                        ],
                                        [
                                            8,
                                            53,
                                            23,
                                            26,
                                            54,
                                            24
                                        ],
                                        [
                                            12,
                                            45,
                                            15,
                                            28,
                                            46,
                                            16
                                        ],
                                        [
                                            3,
                                            147,
                                            117,
                                            10,
                                            148,
                                            118
                                        ],
                                        [
                                            3,
                                            73,
                                            45,
                                            23,
                                            74,
                                            46
                                        ],
                                        [
                                            4,
                                            54,
                                            24,
                                            31,
                                            55,
                                            25
                                        ],
                                        [
                                            11,
                                            45,
                                            15,
                                            31,
                                            46,
                                            16
                                        ],
                                        [
                                            7,
                                            146,
                                            116,
                                            7,
                                            147,
                                            117
                                        ],
                                        [
                                            21,
                                            73,
                                            45,
                                            7,
                                            74,
                                            46
                                        ],
                                        [
                                            1,
                                            53,
                                            23,
                                            37,
                                            54,
                                            24
                                        ],
                                        [
                                            19,
                                            45,
                                            15,
                                            26,
                                            46,
                                            16
                                        ],
                                        [
                                            5,
                                            145,
                                            115,
                                            10,
                                            146,
                                            116
                                        ],
                                        [
                                            19,
                                            75,
                                            47,
                                            10,
                                            76,
                                            48
                                        ],
                                        [
                                            15,
                                            54,
                                            24,
                                            25,
                                            55,
                                            25
                                        ],
                                        [
                                            23,
                                            45,
                                            15,
                                            25,
                                            46,
                                            16
                                        ],
                                        [
                                            13,
                                            145,
                                            115,
                                            3,
                                            146,
                                            116
                                        ],
                                        [
                                            2,
                                            74,
                                            46,
                                            29,
                                            75,
                                            47
                                        ],
                                        [
                                            42,
                                            54,
                                            24,
                                            1,
                                            55,
                                            25
                                        ],
                                        [
                                            23,
                                            45,
                                            15,
                                            28,
                                            46,
                                            16
                                        ],
                                        [
                                            17, 145, 115
                                        ],
                                        [
                                            10,
                                            74,
                                            46,
                                            23,
                                            75,
                                            47
                                        ],
                                        [
                                            10,
                                            54,
                                            24,
                                            35,
                                            55,
                                            25
                                        ],
                                        [
                                            19,
                                            45,
                                            15,
                                            35,
                                            46,
                                            16
                                        ],
                                        [
                                            17,
                                            145,
                                            115,
                                            1,
                                            146,
                                            116
                                        ],
                                        [
                                            14,
                                            74,
                                            46,
                                            21,
                                            75,
                                            47
                                        ],
                                        [
                                            29,
                                            54,
                                            24,
                                            19,
                                            55,
                                            25
                                        ],
                                        [
                                            11,
                                            45,
                                            15,
                                            46,
                                            46,
                                            16
                                        ],
                                        [
                                            13,
                                            145,
                                            115,
                                            6,
                                            146,
                                            116
                                        ],
                                        [
                                            14,
                                            74,
                                            46,
                                            23,
                                            75,
                                            47
                                        ],
                                        [
                                            44,
                                            54,
                                            24,
                                            7,
                                            55,
                                            25
                                        ],
                                        [
                                            59,
                                            46,
                                            16,
                                            1,
                                            47,
                                            17
                                        ],
                                        [
                                            12,
                                            151,
                                            121,
                                            7,
                                            152,
                                            122
                                        ],
                                        [
                                            12,
                                            75,
                                            47,
                                            26,
                                            76,
                                            48
                                        ],
                                        [
                                            39,
                                            54,
                                            24,
                                            14,
                                            55,
                                            25
                                        ],
                                        [
                                            22,
                                            45,
                                            15,
                                            41,
                                            46,
                                            16
                                        ],
                                        [
                                            6,
                                            151,
                                            121,
                                            14,
                                            152,
                                            122
                                        ],
                                        [
                                            6,
                                            75,
                                            47,
                                            34,
                                            76,
                                            48
                                        ],
                                        [
                                            46,
                                            54,
                                            24,
                                            10,
                                            55,
                                            25
                                        ],
                                        [
                                            2,
                                            45,
                                            15,
                                            64,
                                            46,
                                            16
                                        ],
                                        [
                                            17,
                                            152,
                                            122,
                                            4,
                                            153,
                                            123
                                        ],
                                        [
                                            29,
                                            74,
                                            46,
                                            14,
                                            75,
                                            47
                                        ],
                                        [
                                            49,
                                            54,
                                            24,
                                            10,
                                            55,
                                            25
                                        ],
                                        [
                                            24,
                                            45,
                                            15,
                                            46,
                                            46,
                                            16
                                        ],
                                        [
                                            4,
                                            152,
                                            122,
                                            18,
                                            153,
                                            123
                                        ],
                                        [
                                            13,
                                            74,
                                            46,
                                            32,
                                            75,
                                            47
                                        ],
                                        [
                                            48,
                                            54,
                                            24,
                                            14,
                                            55,
                                            25
                                        ],
                                        [
                                            42,
                                            45,
                                            15,
                                            32,
                                            46,
                                            16
                                        ],
                                        [
                                            20,
                                            147,
                                            117,
                                            4,
                                            148,
                                            118
                                        ],
                                        [
                                            40,
                                            75,
                                            47,
                                            7,
                                            76,
                                            48
                                        ],
                                        [
                                            43,
                                            54,
                                            24,
                                            22,
                                            55,
                                            25
                                        ],
                                        [
                                            10,
                                            45,
                                            15,
                                            67,
                                            46,
                                            16
                                        ],
                                        [
                                            19,
                                            148,
                                            118,
                                            6,
                                            149,
                                            119
                                        ],
                                        [
                                            18,
                                            75,
                                            47,
                                            31,
                                            76,
                                            48
                                        ],
                                        [
                                            34,
                                            54,
                                            24,
                                            34,
                                            55,
                                            25
                                        ],
                                        [
                                            20,
                                            45,
                                            15,
                                            61,
                                            46,
                                            16
                                        ]
                                    ],
                                    qrRSBlock = function (totalCount, dataCount) {
                                        var _this = {};
                                        return _this.totalCount = totalCount,
                                        _this.dataCount = dataCount,
                                        _this
                                    },
                                    _this = {},
                                    getRsBlockTable = function (typeNumber, errorCorrectLevel) {
                                        switch (errorCorrectLevel) {
                                            case QRErrorCorrectLevel.L:
                                                return RS_BLOCK_TABLE[4 * (typeNumber - 1) + 0];
                                            case QRErrorCorrectLevel.M:
                                                return RS_BLOCK_TABLE[4 * (typeNumber - 1) + 1];
                                            case QRErrorCorrectLevel.Q:
                                                return RS_BLOCK_TABLE[4 * (typeNumber - 1) + 2];
                                            case QRErrorCorrectLevel.H:
                                                return RS_BLOCK_TABLE[4 * (typeNumber - 1) + 3];
                                            default:
                                                return
                                        }
                                    };
                                return _this.getRSBlocks = function (typeNumber, errorCorrectLevel) {
                                    var rsBlock = getRsBlockTable(typeNumber, errorCorrectLevel);
                                    if (void 0 === rsBlock) 
                                        throw new Error(
                                            "bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" +
                                        errorCorrectLevel
                                        );
                                    for (
                                        var length = rsBlock.length / 3,
                                        list = new Array,
                                        i = 0;
                                        i < length;
                                        i += 1
                                    ) 
                                        for (
                                            var count = rsBlock[3 * i + 0],
                                            totalCount = rsBlock[3 * i + 1],
                                            dataCount = rsBlock[3 * i + 2],
                                            j = 0;
                                            j < count;
                                            j += 1
                                        ) 
                                            list.push(qrRSBlock(totalCount, dataCount));
                                return list
                                },
                                _this
                            }(),
                            qrBitBuffer = function () {
                                var _buffer = new Array,
                                    _length = 0,
                                    _this = {};
                                return _this.getBuffer = function () {
                                    return _buffer
                                },
                                _this.getAt = function (index) {
                                    var bufIndex = Math.floor(index / 8);
                                    return 1 == (_buffer[bufIndex] >>> 7 - index % 8 & 1)
                                },
                                _this.put = function (num, length) {
                                    for (var i = 0; i < length; i += 1) 
                                        _this.putBit(1 == (num >>> length - i - 1 & 1))
                                },
                                _this.getLengthInBits = function () {
                                    return _length
                                },
                                _this.putBit = function (bit) {
                                    var bufIndex = Math.floor(_length / 8);
                                    _buffer.length <= bufIndex && _buffer.push(0),
                                    bit && (_buffer[bufIndex] |= 128 >>> _length % 8),
                                    _length += 1
                                },
                                _this
                            },
                            qr8BitByte = function (data) {
                                var _mode = QRMode.MODE_8BIT_BYTE,
                                    _bytes = qrcode.stringToBytes(data),
                                    _this = {};
                                return _this.getMode = function () {
                                    return _mode
                                },
                                _this.getLength = function (buffer) {
                                    return _bytes.length
                                },
                                _this.write = function (buffer) {
                                    for (var i = 0; i < _bytes.length; i += 1) 
                                        buffer.put(_bytes[i], 8)
                                },
                                _this
                            },
                            byteArrayOutputStream = function () {
                                var _bytes = new Array,
                                    _this = {};
                                return _this.writeByte = function (b) {
                                    _bytes.push(255 & b)
                                },
                                _this.writeShort = function (i) {
                                    _this.writeByte(i),
                                    _this.writeByte(i >>> 8)
                                },
                                _this.writeBytes = function (b, off, len) {
                                    off = off || 0,
                                    len = len || b.length;
                                    for (var i = 0; i < len; i += 1) 
                                        _this.writeByte(b[i + off])
                                },
                                _this.writeString = function (s) {
                                    for (var i = 0; i < s.length; i += 1) 
                                        _this.writeByte(s.charCodeAt(i))
                                },
                                _this.toByteArray = function () {
                                    return _bytes
                                },
                                _this.toString = function () {
                                    var s = "";
                                    s += "[";
                                    for (var i = 0; i < _bytes.length; i += 1) 
                                        i > 0 && (s += ","),
                                        s += _bytes[i];
                                    return s += "]"
                                },
                                _this
                            },
                            base64EncodeOutputStream = function () {
                                var _buffer = 0,
                                    _buflen = 0,
                                    _length = 0,
                                    _base64 = "",
                                    _this = {},
                                    writeEncoded = function (b) {
                                        _base64 += String.fromCharCode(encode(63 & b))
                                    },
                                    encode = function (n) {
                                        if (n < 0) 
                                        ;
                                        else {
                                            if (n < 26) 
                                                return 65 + n;
                                            if (n < 52) 
                                                return n - 26 + 97;
                                            if (n < 62) 
                                                return n - 52 + 48;
                                            if (62 == n) 
                                                return 43;
                                            if (63 == n) 
                                                return 47
                                        }
                                        throw new Error("n:" + n)
                                    };
                                return _this.writeByte = function (n) {
                                    for (
                                        _buffer = _buffer << 8 | 255 & n,
                                        _buflen += 8,
                                        _length += 1;
                                        _buflen >= 6;
                                    ) 
                                        writeEncoded(_buffer >>> _buflen - 6),
                                        _buflen -= 6
                                },
                                _this.flush = function () {
                                    if (
                                        _buflen > 0 && (writeEncoded(_buffer << 6 - _buflen), _buffer = 0, _buflen = 0),
                                        _length % 3 != 0
                                    ) 
                                        for (var padlen = 3 - _length % 3, i = 0; i < padlen; i += 1) 
                                            _base64 += "="
                                },
                                _this.toString = function () {
                                    return _base64
                                },
                                _this
                            },
                            base64DecodeInputStream = function (str) {
                                var _str = str,
                                    _pos = 0,
                                    _buffer = 0,
                                    _buflen = 0,
                                    _this = {};
                                _this.read = function () {
                                    for (; _buflen < 8;) {
                                        if (_pos >= _str.length) {
                                            if (0 == _buflen) 
                                                return -1;
                                            throw new Error("unexpected end of file./" + _buflen)
                                        }
                                        var c = _str.charAt(_pos);
                                        if (_pos += 1, "=" == c) 
                                            return _buflen = 0,
                                            -1;
                                        c.match(/^\s$/) || (
                                            _buffer = _buffer << 6 | decode(c.charCodeAt(0)),
                                            _buflen += 6
                                        )
                                    }
                                    var n = _buffer >>> _buflen - 8 & 255;
                                    return _buflen -= 8,
                                    n
                                };
                                var decode = function (c) {
                                    if (65 <= c && c <= 90) 
                                        return c - 65;
                                    if (97 <= c && c <= 122) 
                                        return c - 97 + 26;
                                    if (48 <= c && c <= 57) 
                                        return c - 48 + 52;
                                    if (43 == c) 
                                        return 62;
                                    if (47 == c) 
                                        return 63;
                                    throw new Error("c:" + c)
                                };
                                return _this
                            },
                            gifImage = function (width, height) {
                                var _width = width,
                                    _height = height,
                                    _data = new Array(width * height),
                                    _this = {};
                                _this.setPixel = function (x, y, pixel) {
                                    _data[y * _width + x] = pixel
                                },
                                _this.write = function (out) {
                                    out.writeString("GIF87a"),
                                    out.writeShort(_width),
                                    out.writeShort(_height),
                                    out.writeByte(128),
                                    out.writeByte(0),
                                    out.writeByte(0),
                                    out.writeByte(0),
                                    out.writeByte(0),
                                    out.writeByte(0),
                                    out.writeByte(255),
                                    out.writeByte(255),
                                    out.writeByte(255),
                                    out.writeString(","),
                                    out.writeShort(0),
                                    out.writeShort(0),
                                    out.writeShort(_width),
                                    out.writeShort(_height),
                                    out.writeByte(0);
                                    var lzwMinCodeSize = 2,
                                        raster = getLZWRaster(lzwMinCodeSize);
                                    out.writeByte(lzwMinCodeSize);
                                    for (var offset = 0; raster.length - offset > 255;) 
                                        out.writeByte(255),
                                        out.writeBytes(raster, offset, 255),
                                        offset += 255;
                                    out.writeByte(raster.length - offset),
                                    out.writeBytes(raster, offset, raster.length - offset),
                                    out.writeByte(0),
                                    out.writeString(";")
                                };
                                var bitOutputStream = function (out) {
                                        var _out = out,
                                            _bitLength = 0,
                                            _bitBuffer = 0,
                                            _this = {};
                                        return _this.write = function (data, length) {
                                            if (data >>> length != 0) 
                                                throw new Error("length over");
                                            for (; _bitLength + length >= 8;) 
                                                _out.writeByte(255 & (data << _bitLength | _bitBuffer)),
                                                length -= 8 - _bitLength,
                                                data >>>= 8 - _bitLength,
                                                _bitBuffer = 0,
                                                _bitLength = 0;
                                            _bitBuffer |= data << _bitLength,
                                            _bitLength += length
                                        },
                                        _this.flush = function () {
                                            _bitLength > 0 && _out.writeByte(_bitBuffer)
                                        },
                                        _this
                                    },
                                    getLZWRaster = function (lzwMinCodeSize) {
                                        for (
                                            var clearCode = 1 << lzwMinCodeSize,
                                            endCode = 1 + (1 << lzwMinCodeSize),
                                            bitLength = lzwMinCodeSize + 1,
                                            table = lzwTable(),
                                            i = 0;
                                            i < clearCode;
                                            i += 1
                                        ) 
                                            table.add(String.fromCharCode(i));
                                        table.add(String.fromCharCode(clearCode)),
                                        table.add(String.fromCharCode(endCode));
                                        var byteOut = byteArrayOutputStream(),
                                            bitOut = bitOutputStream(byteOut);
                                        bitOut.write(clearCode, bitLength);
                                        var dataIndex = 0,
                                            s = String.fromCharCode(_data[dataIndex]);
                                        for (dataIndex += 1; dataIndex < _data.length;) {
                                            var c = String.fromCharCode(_data[dataIndex]);
                                            dataIndex += 1,
                                            table.contains(s + c)
                                                ? s += c
                                                : (
                                                    bitOut.write(table.indexOf(s), bitLength),
                                                    table.size() < 4095 && (table.size() == 1 << bitLength && (bitLength += 1), table.add(
                                                        s + c
                                                    )),
                                                    s = c
                                                )
                                        }
                                        return bitOut.write(table.indexOf(s), bitLength),
                                        bitOut.write(endCode, bitLength),
                                        bitOut.flush(),
                                        byteOut.toByteArray()
                                    },
                                    lzwTable = function () {
                                        var _map = {},
                                            _size = 0,
                                            _this = {};
                                        return _this.add = function (key) {
                                            if (_this.contains(key)) 
                                                throw new Error("dup key:" + key);
                                            _map[key] = _size,
                                            _size += 1
                                        },
                                        _this.size = function () {
                                            return _size
                                        },
                                        _this.indexOf = function (key) {
                                            return _map[key]
                                        },
                                        _this.contains = function (key) {
                                            return void 0 !== _map[key]
                                        },
                                        _this
                                    };
                                return _this
                            },
                            createImgTag = function (width, height, getPixel, alt) {
                                for (var gif = gifImage(width, height), y = 0; y < height; y += 1) 
                                    for (var x = 0; x < width; x += 1) 
                                        gif.setPixel(x, y, getPixel(x, y));
                            var b = byteArrayOutputStream();
                                gif.write(b);
                                for (
                                    var base64 = base64EncodeOutputStream(),
                                    bytes = b.toByteArray(),
                                    i = 0;
                                    i < bytes.length;
                                    i += 1
                                ) 
                                    base64.writeByte(bytes[i]);
                                base64.flush();
                                var img = "";
                                return img += "<img",
                                img += ' src="',
                                img += "data:image/gif;base64,",
                                img += base64,
                                img += '"',
                                img += ' width="',
                                img += width,
                                img += '"',
                                img += ' height="',
                                img += height,
                                img += '"',
                                alt && (img += ' alt="', img += alt, img += '"'),
                                img += "/>"
                            };
                        return qrcode
                    }();
                (function (factory) {
                    __WEBPACK_AMD_DEFINE_ARRAY__ = [],
                    __WEBPACK_AMD_DEFINE_FACTORY__ = factory,
                    void 0 !== (
                        __WEBPACK_AMD_DEFINE_RESULT__ = "function" == typeof __WEBPACK_AMD_DEFINE_FACTORY__
                            ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)
                            : __WEBPACK_AMD_DEFINE_FACTORY__
                    ) && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)
                })(function () {
                    return qrcode
                })
            },
            function (module, exports) {
                angular
                    .module("uuid", [])
                    .factory("rfc4122", function () {
                        function getRandom(max) {
                            return Math.random() * max
                        }
                        return {
                            v4: function () {
                                var i,
                                    id = "";
                                for (i = 0; i < 36; i++) 
                                    id += 14 === i
                                        ? "4"
                                        : 19 === i
                                            ? "89ab".charAt(getRandom(4))
                                            : 8 === i || 13 === i || 18 === i || 23 === i
                                                ? "-"
                                                : "0123456789abcdef".charAt(getRandom(16));
                                return id
                            }
                        }
                    })
            },
            function (module, exports, __webpack_require__) {
                __webpack_require__(655),
                module.exports = "ngFileUpload"
            },
            function (module, exports) {
                (function () {
                    function patchXHR(fnName, newFn) {
                        window
                            .XMLHttpRequest
                            .prototype[fnName] = newFn(window.XMLHttpRequest.prototype[fnName])
                    }
                    function redefineProp(xhr, prop, fn) {
                        try {
                            Object.defineProperty(xhr, prop, {get: fn})
                        } catch (e) {}
                    }
                    if (window.FileAPI || (window.FileAPI = {}), !window.XMLHttpRequest) 
                        throw "AJAX is not supported. XMLHttpRequest is not defined.";
                    if (
                        FileAPI.shouldLoad = !window.FormData || FileAPI.forceLoad,
                        FileAPI.shouldLoad
                    ) {
                        var initializeUploadListener = function (xhr) {
                            if (!xhr.__listeners) {
                                xhr.upload || (xhr.upload = {}),
                                xhr.__listeners = [];
                                var origAddEventListener = xhr.upload.addEventListener;
                                xhr.upload.addEventListener = function (t, fn) {
                                    xhr.__listeners[t] = fn,
                                    origAddEventListener && origAddEventListener.apply(this, arguments)
                                }
                            }
                        };
                        patchXHR("open", function (orig) {
                            return function (m, url, b) {
                                initializeUploadListener(this),
                                this.__url = url;
                                try {
                                    orig.apply(this, [m, url, b])
                                } catch (e) {
                                    e
                                        .message
                                        .indexOf("Access is denied") > -1 && (
                                            this.__origError = e,
                                            orig.apply(this, [m, "_fix_for_ie_crossdomain__", b])
                                        )
                                }
                            }
                        }),
                        patchXHR("getResponseHeader", function (orig) {
                            return function (h) {
                                return this.__fileApiXHR && this.__fileApiXHR.getResponseHeader
                                    ? this
                                        .__fileApiXHR
                                        .getResponseHeader(h)
                                    : null == orig
                                        ? null
                                        : orig.apply(this, [h])
                            }
                        }),
                        patchXHR("getAllResponseHeaders", function (orig) {
                            return function () {
                                return this.__fileApiXHR && this.__fileApiXHR.getAllResponseHeaders
                                    ? this
                                        .__fileApiXHR
                                        .getAllResponseHeaders()
                                    : null == orig
                                        ? null
                                        : orig.apply(this)
                            }
                        }),
                        patchXHR("abort", function (orig) {
                            return function () {
                                return this.__fileApiXHR && this.__fileApiXHR.abort
                                    ? this
                                        .__fileApiXHR
                                        .abort()
                                    : null == orig
                                        ? null
                                        : orig.apply(this)
                            }
                        }),
                        patchXHR("setRequestHeader", function (orig) {
                            return function (header, value) {
                                if ("__setXHR_" === header) {
                                    initializeUploadListener(this);
                                    var val = value(this);
                                    val instanceof Function && val(this)
                                } else 
                                    this.__requestHeaders = this.__requestHeaders || {}
                                ,
                                this.__requestHeaders[header] = value,
                                orig.apply(this, arguments)
                            }
                        }),
                        patchXHR("send", function (orig) {
                            return function () {
                                var xhr = this;
                                if (arguments[0] && arguments[0].__isFileAPIShim) {
                                    var formData = arguments[0],
                                        config = {
                                            url: xhr.__url,
                                            jsonp: !1,
                                            cache: !0,
                                            complete: function (err, fileApiXHR) {
                                                err && angular.isString(err) && -1 !== err.indexOf("#2174") && (err = null),
                                                xhr.__completed = !0,
                                                !err && xhr.__listeners.load && xhr
                                                    .__listeners
                                                    .load({
                                                        type: "load",
                                                        loaded: xhr.__loaded,
                                                        total: xhr.__total,
                                                        target: xhr,
                                                        lengthComputable: !0
                                                    }),
                                                !err && xhr.__listeners.loadend && xhr
                                                    .__listeners
                                                    .loadend({
                                                        type: "loadend",
                                                        loaded: xhr.__loaded,
                                                        total: xhr.__total,
                                                        target: xhr,
                                                        lengthComputable: !0
                                                    }),
                                                "abort" === err && xhr.__listeners.abort && xhr
                                                    .__listeners
                                                    .abort({
                                                        type: "abort",
                                                        loaded: xhr.__loaded,
                                                        total: xhr.__total,
                                                        target: xhr,
                                                        lengthComputable: !0
                                                    }),
                                                void 0 !== fileApiXHR.status && redefineProp(xhr, "status", function () {
                                                    return 0 === fileApiXHR.status && err && "abort" !== err
                                                        ? 500
                                                        : fileApiXHR.status
                                                }),
                                                void 0 !== fileApiXHR.statusText && redefineProp(
                                                    xhr,
                                                    "statusText",
                                                    function () {
                                                        return fileApiXHR.statusText
                                                    }
                                                ),
                                                redefineProp(xhr, "readyState", function () {
                                                    return 4
                                                }),
                                                void 0 !== fileApiXHR.response && redefineProp(xhr, "response", function () {
                                                    return fileApiXHR.response
                                                });
                                                var resp = fileApiXHR.responseText || (
                                                    err && 0 === fileApiXHR.status && "abort" !== err
                                                        ? err
                                                        : void 0
                                                );
                                                redefineProp(xhr, "responseText", function () {
                                                    return resp
                                                }),
                                                redefineProp(xhr, "response", function () {
                                                    return resp
                                                }),
                                                err && redefineProp(xhr, "err", function () {
                                                    return err
                                                }),
                                                xhr.__fileApiXHR = fileApiXHR,
                                                xhr.onreadystatechange && xhr.onreadystatechange(),
                                                xhr.onload && xhr.onload()
                                            },
                                            progress: function (e) {
                                                if (
                                                    e.target = xhr,
                                                    xhr.__listeners.progress && xhr.__listeners.progress(e),
                                                    xhr.__total = e.total,
                                                    xhr.__loaded = e.loaded,
                                                    e.total === e.loaded
                                                ) {
                                                    var _this = this;
                                                    setTimeout(function () {
                                                        xhr.__completed || (xhr.getAllResponseHeaders = function () {}, _this.complete(
                                                            null,
                                                            {
                                                                status: 204,
                                                                statusText: "No Content"
                                                            }
                                                        ))
                                                    }, FileAPI.noContentTimeout || 1e4)
                                                }
                                            },
                                            headers: xhr.__requestHeaders
                                        };
                                    config.data = {},
                                    config.files = {};
                                    for (var i = 0; i < formData.data.length; i++) {
                                        var item = formData.data[i];
                                        null != item.val && null != item.val.name && null != item.val.size && null != item.val.type
                                            ? config.files[item.key] = item.val
                                            : config.data[item.key] = item.val
                                    }
                                    setTimeout(function () {
                                        if (!FileAPI.hasFlash) 
                                            throw 'Adode Flash Player need to be installed. To check ahead use "FileAPI.hasFlash"';
                                        xhr.__fileApiXHR = FileAPI.upload(config)
                                    }, 1)
                                } else {
                                    if (this.__origError) 
                                        throw this.__origError;
                                    orig.apply(xhr, arguments)
                                }
                            }
                        }),
                        window.XMLHttpRequest.__isFileAPIShim = !0,
                        window.FormData = FormData = function () {
                            return {
                                append: function (key, val, name) {
                                    val.__isFileAPIBlobShim && (val = val.data[0]),
                                    this
                                        .data
                                        .push({key: key, val: val, name: name})
                                },
                                data: [],
                                __isFileAPIShim: !0
                            }
                        },
                        window.Blob = Blob = function (b) {
                            return {
                                data: b,
                                __isFileAPIBlobShim: !0
                            }
                        }
                    }
                })(),
                function () {
                    function isInputTypeFile(elem) {
                        return "input" === elem[0]
                            .tagName
                            .toLowerCase() && elem.attr("type") && "file" === elem
                            .attr("type")
                            .toLowerCase()
                    }
                    function hasFlash() {
                        try {
                            if (new ActiveXObject("ShockwaveFlash.ShockwaveFlash")) 
                                return !0
                        } catch (e) {
                            if (void 0 !== navigator.mimeTypes["application/x-shockwave-flash"]) 
                                return !0
                        }
                        return !1
                    }
                    function getOffset(obj) {
                        var left = 0,
                            top = 0;
                        if (window.jQuery) 
                            return jQuery(obj).offset();
                        if (obj.offsetParent) 
                            do {
                                left += obj.offsetLeft - obj.scrollLeft,
                                top += obj.offsetTop - obj.scrollTop,
                                obj = obj.offsetParent
                            } while (obj);
                        return {left: left, top: top}
                    }
                    if (FileAPI.shouldLoad) {
                        if (
                            FileAPI.hasFlash = hasFlash(),
                            FileAPI.forceLoad && (FileAPI.html5 = !1),
                            !FileAPI.upload
                        ) {
                            var jsUrl,
                                basePath,
                                i,
                                index,
                                src,
                                script = document.createElement("script"),
                                allScripts = document.getElementsByTagName("script");
                            if (window.FileAPI.jsUrl) 
                                jsUrl = window.FileAPI.jsUrl;
                            else if (window.FileAPI.jsPath) 
                                basePath = window.FileAPI.jsPath;
                            else 
                                for (i = 0; i < allScripts.length; i++) 
                                    if (
                                        src = allScripts[i].src,
                                        (index = src.search(/\/ng\-file\-upload[\-a-zA-z0-9\.]*\.js/)) > -1
                                    ) {
                                        basePath = src.substring(0, index + 1);
                                        break
                                    }
                                null == FileAPI.staticPath && (FileAPI.staticPath = basePath),
                            script.setAttribute("src", jsUrl || basePath + "FileAPI.min.js"),
                            document
                                .getElementsByTagName("head")[0]
                                .appendChild(script)
                        }
                        FileAPI.ngfFixIE = function (elem, fileElem, changeFn) {
                            if (!hasFlash()) 
                                throw 'Adode Flash Player need to be installed. To check ahead use "FileAPI.hasFlash"';
                            var fixInputStyle = function () {
                                var label = fileElem.parent();
                                elem.attr("disabled")
                                    ? label && label.removeClass("js-fileapi-wrapper")
                                    : (fileElem.attr("__ngf_flash_") || (
                                        fileElem.unbind("change"),
                                        fileElem.unbind("click"),
                                        fileElem.bind("change", function (evt) {
                                            fileApiChangeFn.apply(this, [evt]),
                                            changeFn.apply(this, [evt])
                                        }),
                                        fileElem.attr("__ngf_flash_", "true")
                                    ), label.addClass("js-fileapi-wrapper"), isInputTypeFile(elem) || (
                                        label.css("position", "absolute").css("top", getOffset(elem[0]).top + "px").css("left", getOffset(elem[0]).left + "px").css("width", elem[0].offsetWidth + "px").css("height", elem[0].offsetHeight + "px").css("filter", "alpha(opacity=0)").css("display", elem.css("display")).css("overflow", "hidden").css("z-index", "900000").css("visibility", "visible"),
                                        fileElem.css("width", elem[0].offsetWidth + "px").css("height", elem[0].offsetHeight + "px").css("position", "absolute").css("top", "0px").css("left", "0px")
                                    ))
                            };
                            elem.bind("mouseenter", fixInputStyle);
                            var fileApiChangeFn = function (evt) {
                                for (var files = FileAPI.getFiles(evt), i = 0; i < files.length; i++) 
                                    void 0 === files[i].size && (files[i].size = 0),
                                    void 0 === files[i].name && (files[i].name = "file"),
                                    void 0 === files[i].type && (files[i].type = "undefined");
                                evt.target || (evt.target = {}),
                                evt.target.files = files,
                                evt.target.files !== files && (evt.__files_ = files),
                                (evt.__files_ || evt.target.files).item = function (i) {
                                    return (evt.__files_ || evt.target.files)[i] || null
                                }
                            }
                        },
                        FileAPI.disableFileInput = function (elem, disable) {
                            disable
                                ? elem.removeClass("js-fileapi-wrapper")
                                : elem.addClass("js-fileapi-wrapper")
                        }
                    }
                }(),
                window.FileReader || (window.FileReader = function () {
                    var _this = this,
                        loadStarted = !1;
                    this.listeners = {},
                    this.addEventListener = function (type, fn) {
                        _this.listeners[type] = _this.listeners[type] || [],
                        _this
                            .listeners[type]
                            .push(fn)
                    },
                    this.removeEventListener = function (type, fn) {
                        _this.listeners[type] && _this
                            .listeners[type]
                            .splice(_this.listeners[type].indexOf(fn), 1)
                    },
                    this.dispatchEvent = function (evt) {
                        var list = _this.listeners[evt.type];
                        if (list) 
                            for (var i = 0; i < list.length; i++) 
                                list[i].call(_this, evt)
                    },
                    this.onabort = this.onerror = this.onload = this.onloadstart = this.onloadend = this.onprogress = null;
                    var constructEvent = function (type, evt) {
                            var e = {
                                type: type,
                                target: _this,
                                loaded: evt.loaded,
                                total: evt.total,
                                error: evt.error
                            };
                            return null != evt.result && (e.target.result = evt.result),
                            e
                        },
                        listener = function (evt) {
                            loadStarted || (
                                loadStarted = !0,
                                _this.onloadstart && _this.onloadstart(constructEvent("loadstart", evt))
                            );
                            var e;
                            "load" === evt.type
                                ? (
                                    _this.onloadend && _this.onloadend(constructEvent("loadend", evt)),
                                    e = constructEvent("load", evt),
                                    _this.onload && _this.onload(e),
                                    _this.dispatchEvent(e)
                                )
                                : "progress" === evt.type
                                    ? (
                                        e = constructEvent("progress", evt),
                                        _this.onprogress && _this.onprogress(e),
                                        _this.dispatchEvent(e)
                                    )
                                    : (
                                        e = constructEvent("error", evt),
                                        _this.onerror && _this.onerror(e),
                                        _this.dispatchEvent(e)
                                    )
                        };
                    this.readAsDataURL = function (file) {
                        FileAPI.readAsDataURL(file, listener)
                    },
                    this.readAsText = function (file) {
                        FileAPI.readAsText(file, listener)
                    }
                }),
                !window.XMLHttpRequest || window.FileAPI && FileAPI.shouldLoad || (
                    window.XMLHttpRequest.prototype.setRequestHeader = function (orig) {
                        return function (header, value) {
                            if ("__setXHR_" === header) {
                                var val = value(this);
                                val instanceof Function && val(this)
                            } else 
                                orig.apply(this, arguments)
                        }
                    }(window.XMLHttpRequest.prototype.setRequestHeader)
                );
                var ngFileUpload = angular.module("ngFileUpload", []);
                ngFileUpload.version = "12.2.13",
                ngFileUpload.service("UploadBase", [
                    "$http",
                    "$q",
                    "$timeout",
                    function ($http, $q, $timeout) {
                        function sendHttp(config) {
                            function notifyProgress(e) {
                                deferred.notify && deferred.notify(e),
                                promise.progressFunc && $timeout(function () {
                                    promise.progressFunc(e)
                                })
                            }
                            function getNotifyEvent(n) {
                                return null != config._start && resumeSupported
                                    ? {
                                        loaded: n.loaded + config._start,
                                        total: config._file && config._file.size || n.total,
                                        type: n.type,
                                        config: config,
                                        lengthComputable: !0,
                                        target: n.target
                                    }
                                    : n
                            }
                            function uploadWithAngular() {
                                $http(config).then(function (r) {
                                    if (resumeSupported && config._chunkSize && !config._finished && config._file) {
                                        var fileSize = config._file && config._file.size || 0;
                                        notifyProgress({
                                            loaded: Math.min(config._end, fileSize),
                                            total: fileSize,
                                            config: config,
                                            type: "progress"
                                        }),
                                        upload.upload(config, !0)
                                    } else 
                                        config._finished && delete config._finished,
                                        deferred.resolve(r)
                                }, function (e) {
                                    deferred.reject(e)
                                }, function (n) {
                                    deferred.notify(n)
                                })
                            }
                            config.method = config.method || "POST",
                            config.headers = config.headers || {};
                            var deferred = config._deferred = config._deferred || $q.defer(),
                                promise = deferred.promise;
                            return config.disableProgress || (config.headers.__setXHR_ = function () {
                                return function (xhr) {
                                    xhr && xhr.upload && xhr.upload.addEventListener && (
                                        config.__XHR = xhr,
                                        config.xhrFn && config.xhrFn(xhr),
                                        xhr.upload.addEventListener("progress", function (e) {
                                            e.config = config,
                                            notifyProgress(getNotifyEvent(e))
                                        }, !1),
                                        xhr.upload.addEventListener("load", function (e) {
                                            e.lengthComputable && (e.config = config, notifyProgress(getNotifyEvent(e)))
                                        }, !1)
                                    )
                                }
                            }),
                            resumeSupported
                                ? config._chunkSize && config._end && !config._finished
                                    ? (
                                        config._start = config._end,
                                        config._end += config._chunkSize,
                                        uploadWithAngular()
                                    )
                                    : config.resumeSizeUrl
                                        ? $http
                                            .get(config.resumeSizeUrl)
                                            .then(function (resp) {
                                                config.resumeSizeResponseReader
                                                    ? config._start = config.resumeSizeResponseReader(resp.data)
                                                    : config._start = parseInt((
                                                        null == resp.data.size
                                                            ? resp.data
                                                            : resp.data.size
                                                    ).toString()),
                                                config._chunkSize && (config._end = config._start + config._chunkSize),
                                                uploadWithAngular()
                                            }, function (e) {
                                                throw e
                                            })
                                        : config.resumeSize
                                            ? config
                                                .resumeSize()
                                                .then(function (size) {
                                                    config._start = size,
                                                    config._chunkSize && (config._end = config._start + config._chunkSize),
                                                    uploadWithAngular()
                                                }, function (e) {
                                                    throw e
                                                })
                                            : (
                                                config._chunkSize && (config._start = 0, config._end = config._start + config._chunkSize),
                                                uploadWithAngular()
                                            )
                                : uploadWithAngular(),
                            promise.success = function (fn) {
                                return promise.then(function (response) {
                                    fn(response.data, response.status, response.headers, config)
                                }),
                                promise
                            },
                            promise.error = function (fn) {
                                return promise.then(null, function (response) {
                                    fn(response.data, response.status, response.headers, config)
                                }),
                                promise
                            },
                            promise.progress = function (fn) {
                                return promise.progressFunc = fn,
                                promise.then(null, null, function (n) {
                                    fn(n)
                                }),
                                promise
                            },
                            promise.abort = promise.pause = function () {
                                return config.__XHR && $timeout(function () {
                                    config
                                        .__XHR
                                        .abort()
                                }),
                                promise
                            },
                            promise.xhr = function (fn) {
                                return config.xhrFn = function (origXhrFn) {
                                    return function () {
                                        origXhrFn && origXhrFn.apply(promise, arguments),
                                        fn.apply(promise, arguments)
                                    }
                                }(config.xhrFn),
                                promise
                            },
                            upload.promisesCount++,
                            promise. finally && promise. finally instanceof Function && promise. finally(
                                function () {
                                    upload.promisesCount--
                                }
                            ),
                            promise
                        }
                        function copy(obj) {
                            var clone = {};
                            for (var key in obj) 
                                obj.hasOwnProperty(key) && (clone[key] = obj[key]);
                            return clone
                        }
                        var upload = this;
                        upload.promisesCount = 0,
                        this.isResumeSupported = function () {
                            return window.Blob && window.Blob.prototype.slice
                        };
                        var resumeSupported = this.isResumeSupported();
                        this.isUploadInProgress = function () {
                            return upload.promisesCount > 0
                        },
                        this.rename = function (file, name) {
                            return file.ngfName = name,
                            file
                        },
                        this.jsonBlob = function (val) {
                            null == val || angular.isString(val) || (val = JSON.stringify(val));
                            var blob = new window.Blob([val], {type: "application/json"});
                            return blob._ngfBlob = !0,
                            blob
                        },
                        this.json = function (val) {
                            return angular.toJson(val)
                        },
                        this.isFile = function (file) {
                            return null != file && (
                                file instanceof window.Blob || file.flashId && file.name && file.size
                            )
                        },
                        this.upload = function (config, internal) {
                            function toResumeFile(file, formData) {
                                if (file._ngfBlob) 
                                    return file;
                                if (
                                    config._file = config._file || file,
                                    null != config._start && resumeSupported
                                ) {
                                    config._end && config._end >= file.size && (
                                        config._finished = !0,
                                        config._end = file.size
                                    );
                                    var slice = file.slice(config._start, config._end || file.size);
                                    return slice.name = file.name,
                                    slice.ngfName = file.ngfName,
                                    config._chunkSize && (
                                        formData.append("_chunkSize", config._chunkSize),
                                        formData.append("_currentChunkSize", config._end - config._start),
                                        formData.append("_chunkNumber", Math.floor(config._start / config._chunkSize)),
                                        formData.append("_totalSize", config._file.size)
                                    ),
                                    slice
                                }
                                return file
                            }
                            function addFieldToFormData(formData, val, key) {
                                if (void 0 !== val) 
                                    if (angular.isDate(val) && (val = val.toISOString()), angular.isString(val)) 
                                        formData.append(key, val);
                                    else if (upload.isFile(val)) {
                                        var file = toResumeFile(val, formData),
                                            split = key.split(",");
                                        split[1] && (file.ngfName = split[1].replace(/^\s+|\s+$/g, ""), key = split[0]),
                                        config._fileKey = config._fileKey || key,
                                        formData.append(key, file, file.ngfName || file.name)
                                    }
                                else if (angular.isObject(val)) {
                                    if (val.$$ngfCircularDetection) 
                                        throw "ngFileUpload: Circular reference in config.data. Make sure specified data for " +
                                                "Upload.upload() has no circular reference: " + key;
                                    val.$$ngfCircularDetection = !0;
                                    try {
                                        for (var k in val) 
                                            if (val.hasOwnProperty(k) && "$$ngfCircularDetection" !== k) {
                                                var objectKey = null == config.objectKey
                                                    ? "[i]"
                                                    : config.objectKey;
                                                val.length && parseInt(k) > -1 && (
                                                    objectKey = null == config.arrayKey
                                                        ? objectKey
                                                        : config.arrayKey
                                                ),
                                                addFieldToFormData(formData, val[k], key + objectKey.replace(/[ik]/g, k))
                                            }
                                        } finally {
                                        delete val.$$ngfCircularDetection
                                    }
                                } else 
                                    formData.append(key, val)
                            }
                            function digestConfig() {
                                config._chunkSize = upload.translateScalars(config.resumeChunkSize),
                                config._chunkSize = config._chunkSize
                                    ? parseInt(config._chunkSize.toString())
                                    : null,
                                config.headers = config.headers || {},
                                config.headers["Content-Type"] = void 0,
                                config.transformRequest = config.transformRequest
                                    ? angular.isArray(config.transformRequest)
                                        ? config.transformRequest
                                        : [config.transformRequest]
                                    : [],
                                config
                                    .transformRequest
                                    .push(function (data) {
                                        var key,
                                            formData = new window.FormData;
                                        data = data || config.fields || {},
                                        config.file && (data.file = config.file);
                                        for (key in data) 
                                            if (data.hasOwnProperty(key)) {
                                                var val = data[key];
                                                config.formDataAppender
                                                    ? config.formDataAppender(formData, key, val)
                                                    : addFieldToFormData(formData, val, key)
                                            }
                                        return formData
                                    })
                            }
                            return internal || (config = copy(config)),
                            config._isDigested || (config._isDigested = !0, digestConfig()),
                            sendHttp(config)
                        },
                        this.http = function (config) {
                            return config = copy(config),
                            config.transformRequest = config.transformRequest || function (data) {
                                return window.ArrayBuffer && data instanceof window.ArrayBuffer || data instanceof window.Blob
                                    ? data
                                    : $http
                                        .defaults
                                        .transformRequest[0]
                                        .apply(this, arguments)
                            },
                            config._chunkSize = upload.translateScalars(config.resumeChunkSize),
                            config._chunkSize = config._chunkSize
                                ? parseInt(config._chunkSize.toString())
                                : null,
                            sendHttp(config)
                        },
                        this.translateScalars = function (str) {
                            if (angular.isString(str)) {
                                if (str.search(/kb/i) === str.length - 2) 
                                    return parseFloat(1024 * str.substring(0, str.length - 2));
                                if (str.search(/mb/i) === str.length - 2) 
                                    return parseFloat(1048576 * str.substring(0, str.length - 2));
                                if (str.search(/gb/i) === str.length - 2) 
                                    return parseFloat(1073741824 * str.substring(0, str.length - 2));
                                if (str.search(/b/i) === str.length - 1) 
                                    return parseFloat(str.substring(0, str.length - 1));
                                if (str.search(/s/i) === str.length - 1) 
                                    return parseFloat(str.substring(0, str.length - 1));
                                if (str.search(/m/i) === str.length - 1) 
                                    return parseFloat(60 * str.substring(0, str.length - 1));
                                if (str.search(/h/i) === str.length - 1) 
                                    return parseFloat(3600 * str.substring(0, str.length - 1))
                            }
                            return str
                        },
                        this.urlToBlob = function (url) {
                            var defer = $q.defer();
                            return $http({url: url, method: "get", responseType: "arraybuffer"}).then(
                                function (resp) {
                                    var arrayBufferView = new Uint8Array(resp.data),
                                        type = resp.headers("content-type") || "image/WebP",
                                        blob = new window.Blob([arrayBufferView], {type: type}),
                                        matches = url.match(/.*\/(.+?)(\?.*)?$/);
                                    matches.length > 1 && (blob.name = matches[1]),
                                    defer.resolve(blob)
                                },
                                function (e) {
                                    defer.reject(e)
                                }
                            ),
                            defer.promise
                        },
                        this.setDefaults = function (defaults) {
                            this.defaults = defaults || {}
                        },
                        this.defaults = {},
                        this.version = ngFileUpload.version
                    }
                ]),
                ngFileUpload.service("Upload", [
                    "$parse",
                    "$timeout",
                    "$compile",
                    "$q",
                    "UploadExif",
                    function ($parse, $timeout, $compile, $q, UploadExif) {
                        function applyExifRotations(files, attr, scope) {
                            var promises = [upload.emptyPromise()];
                            return angular.forEach(files, function (f, i) {
                                0 === f
                                    .type
                                    .indexOf("image/jpeg") && upload.attrGetter(
                                        "ngfFixOrientation",
                                        attr,
                                        scope,
                                        {$file: f}
                                    ) && promises.push(
                                    upload.happyPromise(upload.applyExifRotation(f), f).then(function (fixedFile) {
                                        files.splice(i, 1, fixedFile)
                                    })
                                )
                            }),
                            $q.all(promises)
                        }
                        function resizeFile(files, attr, scope, ngModel) {
                            var resizeVal = upload.attrGetter("ngfResize", attr, scope);
                            if (!resizeVal || !upload.isResizeSupported() || !files.length) 
                                return upload.emptyPromise();
                            if (resizeVal instanceof Function) {
                                var defer = $q.defer();
                                return resizeVal(files).then(function (p) {
                                    resizeWithParams(p, files, attr, scope, ngModel).then(function (r) {
                                        defer.resolve(r)
                                    }, function (e) {
                                        defer.reject(e)
                                    })
                                }, function (e) {
                                    defer.reject(e)
                                })
                            }
                            return resizeWithParams(resizeVal, files, attr, scope, ngModel)
                        }
                        function resizeWithParams(params, files, attr, scope, ngModel) {
                            function handleFile(f, i) {
                                if (0 === f.type.indexOf("image")) {
                                    if (params.pattern && !upload.validatePattern(f, params.pattern)) 
                                        return;
                                    params.resizeIf = function (width, height) {
                                        return upload.attrGetter("ngfResizeIf", attr, scope, {
                                            $width: width,
                                            $height: height,
                                            $file: f
                                        })
                                    };
                                    var promise = upload.resize(f, params);
                                    promises.push(promise),
                                    promise.then(function (resizedFile) {
                                        files.splice(i, 1, resizedFile)
                                    }, function (e) {
                                        f.$error = "resize",
                                        (f.$errorMessages = f.$errorMessages || {}).resize = !0,
                                        f.$errorParam = (
                                            e
                                                ? (
                                                    e.message
                                                        ? e.message
                                                        : e
                                                ) + ": "
                                                : ""
                                        ) + (f && f.name),
                                        ngModel
                                            .$ngfValidations
                                            .push({
                                                name: "resize",
                                                valid: !1
                                            }),
                                        upload.applyModelValidation(ngModel, files)
                                    })
                                }
                            }
                            for (var promises = [upload.emptyPromise()], i = 0; i < files.length; i++) 
                                handleFile(files[i], i);
                            return $q.all(promises)
                        }
                        var upload = UploadExif;
                        return upload.getAttrWithDefaults = function (attr, name) {
                            if (null != attr[name]) 
                                return attr[name];
                            var def = upload.defaults[name];
                            return null == def
                                ? def
                                : angular.isString(def)
                                    ? def
                                    : JSON.stringify(def)
                        },
                        upload.attrGetter = function (name, attr, scope, params) {
                            var attrVal = this.getAttrWithDefaults(attr, name);
                            if (!scope) 
                                return attrVal;
                            try {
                                return params
                                    ? $parse(attrVal)(scope, params)
                                    : $parse(attrVal)(scope)
                            } catch (e) {
                                if (name.search(/min|max|pattern/i)) 
                                    return attrVal;
                                throw e
                            }
                        },
                        upload.shouldUpdateOn = function (type, attr, scope) {
                            var modelOptions = upload.attrGetter("ngfModelOptions", attr, scope);
                            return !modelOptions || !modelOptions.updateOn || modelOptions
                                .updateOn
                                .split(" ")
                                .indexOf(type) > -1
                        },
                        upload.emptyPromise = function () {
                            var d = $q.defer(),
                                args = arguments;
                            return $timeout(function () {
                                d
                                    .resolve
                                    .apply(d, args)
                            }),
                            d.promise
                        },
                        upload.rejectPromise = function () {
                            var d = $q.defer(),
                                args = arguments;
                            return $timeout(function () {
                                d
                                    .reject
                                    .apply(d, args)
                            }),
                            d.promise
                        },
                        upload.happyPromise = function (promise, data) {
                            var d = $q.defer();
                            return promise.then(function (result) {
                                d.resolve(result)
                            }, function (error) {
                                $timeout(function () {
                                    throw error
                                }),
                                d.resolve(data)
                            }),
                            d.promise
                        },
                        upload.updateModel = function (
                            ngModel,
                            attr,
                            scope,
                            fileChange,
                            files,
                            evt,
                            noDelay
                        ) {
                            function update(files, invalidFiles, newFiles, dupFiles, isSingleModel) {
                                attr.$$ngfPrevValidFiles = files,
                                attr.$$ngfPrevInvalidFiles = invalidFiles;
                                var file = files && files.length
                                        ? files[0]
                                        : null,
                                    invalidFile = invalidFiles && invalidFiles.length
                                        ? invalidFiles[0]
                                        : null;
                                ngModel && (upload.applyModelValidation(ngModel, files), ngModel.$setViewValue(
                                    isSingleModel
                                        ? file
                                        : files
                                )),
                                fileChange && $parse(fileChange)(scope, {
                                    $files: files,
                                    $file: file,
                                    $newFiles: newFiles,
                                    $duplicateFiles: dupFiles,
                                    $invalidFiles: invalidFiles,
                                    $invalidFile: invalidFile,
                                    $event: evt
                                });
                                var invalidModel = upload.attrGetter("ngfModelInvalid", attr);
                                invalidModel && $timeout(function () {
                                    $parse(invalidModel).assign(
                                        scope,
                                        isSingleModel
                                            ? invalidFile
                                            : invalidFiles
                                    )
                                }),
                                $timeout(function () {})
                            }
                            function removeDuplicates() {
                                function equals(f1, f2) {
                                    return f1.name === f2.name && (f1.$ngfOrigSize || f1.size) === (
                                        f2.$ngfOrigSize || f2.size
                                    ) && f1.type === f2.type
                                }
                                function isInPrevFiles(f) {
                                    var j;
                                    for (j = 0; j < prevValidFiles.length; j++) 
                                        if (equals(f, prevValidFiles[j])) 
                                            return !0;
                                for (j = 0; j < prevInvalidFiles.length; j++) 
                                        if (equals(f, prevInvalidFiles[j])) 
                                            return !0;
                                return !1
                                }
                                if (files) {
                                    allNewFiles = [],
                                    dupFiles = [];
                                    for (var i = 0; i < files.length; i++) 
                                        isInPrevFiles(files[i])
                                            ? dupFiles.push(files[i])
                                            : allNewFiles.push(files[i])
                                    }
                            }
                            function toArray(v) {
                                return angular.isArray(v)
                                    ? v
                                    : [v]
                            }
                            function resizeAndUpdate() {
                                function updateModel() {
                                    $timeout(
                                        function () {
                                            update(
                                                keep
                                                    ? prevValidFiles.concat(valids)
                                                    : valids,
                                                keep
                                                    ? prevInvalidFiles.concat(invalids)
                                                    : invalids,
                                                files,
                                                dupFiles,
                                                isSingleModel
                                            )
                                        },
                                        options && options.debounce
                                            ? options.debounce.change || options.debounce
                                            : 0
                                    )
                                }
                                var resizingFiles = validateAfterResize
                                    ? allNewFiles
                                    : valids;
                                resizeFile(resizingFiles, attr, scope, ngModel).then(function () {
                                    validateAfterResize
                                        ? upload
                                            .validate(
                                                allNewFiles,
                                                keep
                                                    ? prevValidFiles.length
                                                    : 0,
                                                ngModel,
                                                attr,
                                                scope
                                            )
                                            .then(function (validationResult) {
                                                valids = validationResult.validsFiles,
                                                invalids = validationResult.invalidsFiles,
                                                updateModel()
                                            })
                                        : updateModel()
                                }, function () {
                                    for (var i = 0; i < resizingFiles.length; i++) {
                                        var f = resizingFiles[i];
                                        if ("resize" === f.$error) {
                                            var index = valids.indexOf(f);
                                            index > -1 && (valids.splice(index, 1), invalids.push(f)),
                                            updateModel()
                                        }
                                    }
                                })
                            }
                            var allNewFiles,
                                prevValidFiles,
                                prevInvalidFiles,
                                dupFiles = [],
                                invalids = [],
                                valids = [];
                            prevValidFiles = attr.$$ngfPrevValidFiles || [],
                            prevInvalidFiles = attr.$$ngfPrevInvalidFiles || [],
                            ngModel && ngModel.$modelValue && (
                                prevValidFiles = toArray(ngModel.$modelValue)
                            );
                            var keep = upload.attrGetter("ngfKeep", attr, scope);
                            allNewFiles = (files || []).slice(0),
                            "distinct" !== keep && !0 !== upload.attrGetter("ngfKeepDistinct", attr, scope) || removeDuplicates(
                                attr,
                                scope
                            );
                            var isSingleModel = !keep && !upload.attrGetter("ngfMultiple", attr, scope) && !upload.attrGetter(
                                "multiple",
                                attr
                            );
                            if (!keep || allNewFiles.length) {
                                upload.attrGetter("ngfBeforeModelChange", attr, scope, {
                                    $files: files,
                                    $file: files && files.length
                                        ? files[0]
                                        : null,
                                    $newFiles: allNewFiles,
                                    $duplicateFiles: dupFiles,
                                    $event: evt
                                });
                                var validateAfterResize = upload.attrGetter(
                                        "ngfValidateAfterResize",
                                        attr,
                                        scope
                                    ),
                                    options = upload.attrGetter("ngfModelOptions", attr, scope);
                                upload
                                    .validate(
                                        allNewFiles,
                                        keep
                                            ? prevValidFiles.length
                                            : 0,
                                        ngModel,
                                        attr,
                                        scope
                                    )
                                    .then(function (validationResult) {
                                        noDelay
                                            ? update(allNewFiles, [], files, dupFiles, isSingleModel)
                                            : (
                                                options && options.allowInvalid || validateAfterResize
                                                    ? valids = allNewFiles
                                                    : (
                                                        valids = validationResult.validFiles,
                                                        invalids = validationResult.invalidFiles
                                                    ),
                                                upload.attrGetter("ngfFixOrientation", attr, scope) && upload.isExifSupported()
                                                    ? applyExifRotations(valids, attr, scope).then(function () {
                                                        resizeAndUpdate()
                                                    })
                                                    : resizeAndUpdate()
                                            )
                                    })
                            }
                        },
                        upload
                    }
                ]),
                ngFileUpload.directive("ngfSelect", [
                    "$parse",
                    "$timeout",
                    "$compile",
                    "Upload",
                    function ($parse, $timeout, $compile, Upload) {
                        function isDelayedClickSupported(ua) {
                            var m = ua.match(/Android[^\d]*(\d+)\.(\d+)/);
                            if (m && m.length > 2) {
                                var v = Upload.defaults.androidFixMinorVersion || 4;
                                return parseInt(m[1]) < 4 || parseInt(m[1]) === v && parseInt(m[2]) < v
                            }
                            return -1 === ua.indexOf("Chrome") && /.*Windows.*Safari.*/.test(ua)
                        }
                        function linkFileSelect(
                            scope,
                            elem,
                            attr,
                            ngModel,
                            $parse,
                            $timeout,
                            $compile,
                            upload
                        ) {
                            function isInputTypeFile() {
                                return "input" === elem[0]
                                    .tagName
                                    .toLowerCase() && attr.type && "file" === attr
                                    .type
                                    .toLowerCase()
                            }
                            function fileChangeAttr() {
                                return attrGetter("ngfChange") || attrGetter("ngfSelect")
                            }
                            function changeFn(evt) {
                                if (upload.shouldUpdateOn("change", attr, scope)) {
                                    var fileList = evt.__files_ || evt.target && evt.target.files,
                                        files = [];
                                    if (!fileList) 
                                        return;
                                    for (var i = 0; i < fileList.length; i++) 
                                        files.push(fileList[i]);
                                    upload.updateModel(
                                        ngModel,
                                        attr,
                                        scope,
                                        fileChangeAttr(),
                                        files.length
                                            ? files
                                            : null,
                                        evt
                                    )
                                }
                            }
                            function bindAttrToFileInput(fileElem, label) {
                                function updateId(val) {
                                    fileElem.attr("id", "ngf-" + val),
                                    label.attr("id", "ngf-label-" + val)
                                }
                                for (var i = 0; i < elem[0].attributes.length; i++) {
                                    var attribute = elem[0].attributes[i];
                                    "type" !== attribute.name && "class" !== attribute.name && "style" !== attribute.name && (
                                        "id" === attribute.name
                                            ? (updateId(attribute.value), unwatches.push(attr.$observe("id", updateId)))
                                            : fileElem.attr(
                                                attribute.name,
                                                attribute.value || "required" !== attribute.name && "multiple" !== attribute.name
                                                    ? attribute.value
                                                    : attribute.name
                                            )
                                    )
                                }
                            }
                            function createFileInput() {
                                if (isInputTypeFile()) 
                                    return elem;
                                var fileElem = angular.element('<input type="file">'),
                                    label = angular.element("<label>upload</label>");
                                return label
                                    .css("visibility", "hidden")
                                    .css("position", "absolute")
                                    .css("overflow", "hidden")
                                    .css("width", "0px")
                                    .css("height", "0px")
                                    .css("border", "none")
                                    .css("margin", "0px")
                                    .css("padding", "0px")
                                    .attr("tabindex", "-1"),
                                bindAttrToFileInput(fileElem, label),
                                generatedElems.push({el: elem, ref: label}),
                                document
                                    .body
                                    .appendChild(label.append(fileElem)[0]),
                                fileElem
                            }
                            function clickHandler(evt) {
                                if (elem.attr("disabled")) 
                                    return !1;
                                if (!attrGetter("ngfSelectDisabled", scope)) {
                                    var r = detectSwipe(evt);
                                    if (null != r) 
                                        return r;
                                    resetModel(evt);
                                    try {
                                        isInputTypeFile() || document
                                            .body
                                            .contains(fileElem[0]) || (
                                                generatedElems.push({el: elem, ref: fileElem.parent()}),
                                                document.body.appendChild(fileElem.parent()[0]),
                                                fileElem.bind("change", changeFn)
                                            )
                                    } catch (e) {}
                                    return isDelayedClickSupported(navigator.userAgent)
                                        ? setTimeout(function () {
                                            fileElem[0].click()
                                        }, 0)
                                        : fileElem[0].click(),
                                    !1
                                }
                            }
                            function detectSwipe(evt) {
                                var touches = evt.changedTouches || evt.originalEvent && evt.originalEvent.changedTouches;
                                if (touches) {
                                    if ("touchstart" === evt.type) 
                                        return initialTouchStartX = touches[0].clientX,
                                        initialTouchStartY = touches[0].clientY,
                                        !0;
                                    if ("touchend" === evt.type) {
                                        var currentX = touches[0].clientX,
                                            currentY = touches[0].clientY;
                                        if (Math.abs(currentX - initialTouchStartX) > 20 || Math.abs(currentY - initialTouchStartY) > 20) 
                                            return evt.stopPropagation(),
                                            evt.preventDefault(),
                                            !1
                                    }
                                    return !0
                                }
                            }
                            function resetModel(evt) {
                                upload.shouldUpdateOn("click", attr, scope) && fileElem.val() && (
                                    fileElem.val(null),
                                    upload.updateModel(ngModel, attr, scope, fileChangeAttr(), null, evt, !0)
                                )
                            }
                            function ie10SameFileSelectFix(evt) {
                                if (fileElem && !fileElem.attr("__ngf_ie10_Fix_")) {
                                    if (!fileElem[0].parentNode) 
                                        return void(fileElem = null);
                                    evt.preventDefault(),
                                    evt.stopPropagation(),
                                    fileElem.unbind("click");
                                    var clone = fileElem.clone();
                                    return fileElem.replaceWith(clone),
                                    fileElem = clone,
                                    fileElem.attr("__ngf_ie10_Fix_", "true"),
                                    fileElem.bind("change", changeFn),
                                    fileElem.bind("click", ie10SameFileSelectFix),
                                    fileElem[0].click(),
                                    !1
                                }
                                fileElem.removeAttr("__ngf_ie10_Fix_")
                            }
                            var attrGetter = function (name, scope) {
                                return upload.attrGetter(name, attr, scope)
                            };
                            upload.registerModelChangeValidator(ngModel, attr, scope);
                            var unwatches = [];
                            attrGetter("ngfMultiple") && unwatches.push(
                                scope.$watch(attrGetter("ngfMultiple"), function () {
                                    fileElem.attr("multiple", attrGetter("ngfMultiple", scope))
                                })
                            ),
                            attrGetter("ngfCapture") && unwatches.push(
                                scope.$watch(attrGetter("ngfCapture"), function () {
                                    fileElem.attr("capture", attrGetter("ngfCapture", scope))
                                })
                            ),
                            attrGetter("ngfAccept") && unwatches.push(
                                scope.$watch(attrGetter("ngfAccept"), function () {
                                    fileElem.attr("accept", attrGetter("ngfAccept", scope))
                                })
                            ),
                            unwatches.push(attr.$observe("accept", function () {
                                fileElem.attr("accept", attrGetter("accept"))
                            }));
                            var initialTouchStartY = 0,
                                initialTouchStartX = 0,
                                fileElem = elem;
                            isInputTypeFile() || (fileElem = createFileInput()),
                            fileElem.bind("change", changeFn),
                            isInputTypeFile()
                                ? elem.bind("click", resetModel)
                                : elem.bind("click touchstart touchend", clickHandler),
                            -1 !== navigator
                                .appVersion
                                .indexOf("MSIE 10") && fileElem.bind("click", ie10SameFileSelectFix),
                            ngModel && ngModel
                                .$formatters
                                .push(function (val) {
                                    return null != val && 0 !== val.length || fileElem.val() && fileElem.val(null),
                                    val
                                }),
                            scope.$on("$destroy", function () {
                                isInputTypeFile() || fileElem
                                    .parent()
                                    .remove(),
                                angular.forEach(unwatches, function (unwatch) {
                                    unwatch()
                                })
                            }),
                            $timeout(function () {
                                for (var i = 0; i < generatedElems.length; i++) {
                                    var g = generatedElems[i];
                                    document
                                        .body
                                        .contains(g.el[0]) || (generatedElems.splice(i, 1), g.ref.remove())
                                }
                            }),
                            window.FileAPI && window.FileAPI.ngfFixIE && window
                                .FileAPI
                                .ngfFixIE(elem, fileElem, changeFn)
                        }
                        var generatedElems = [];
                        return {
                            restrict: "AEC",
                            require: "?ngModel",
                            link: function (scope, elem, attr, ngModel) {
                                linkFileSelect(scope, elem, attr, ngModel, $parse, $timeout, $compile, Upload)
                            }
                        }
                    }
                ]),
                function () {
                    function getTagType(el) {
                        return "img" === el
                            .tagName
                            .toLowerCase()
                                ? "image"
                                : "audio" === el
                                    .tagName
                                    .toLowerCase()
                                        ? "audio"
                                        : "video" === el
                                            .tagName
                                            .toLowerCase()
                                                ? "video"
                                                : /./
                    }
                    function linkFileDirective(
                        Upload,
                        $timeout,
                        scope,
                        elem,
                        attr,
                        directiveName,
                        resizeParams,
                        isBackground
                    ) {
                        function constructDataUrl(file) {
                            var disallowObjectUrl = Upload.attrGetter("ngfNoObjectUrl", attr, scope);
                            Upload
                                .dataUrl(file, disallowObjectUrl)
                                . finally(function () {
                                    $timeout(function () {
                                        var src = (
                                            disallowObjectUrl
                                                ? file.$ngfDataUrl
                                                : file.$ngfBlobUrl
                                        ) || file.$ngfDataUrl;
                                        isBackground
                                            ? elem.css("background-image", "url('" + (
                                                src || ""
                                            ) + "')")
                                            : elem.attr("src", src),
                                        src
                                            ? elem.removeClass("ng-hide")
                                            : elem.addClass("ng-hide")
                                    })
                                })
                        }
                        $timeout(function () {
                            var unwatch = scope.$watch(attr[directiveName], function (file) {
                                var size = resizeParams;
                                if ("ngfThumbnail" === directiveName && (size || (size = {
                                    width: elem[0].naturalWidth || elem[0].clientWidth,
                                    height: elem[0].naturalHeight || elem[0].clientHeight
                                }), 0 === size.width && window.getComputedStyle)) {
                                    var style = getComputedStyle(elem[0]);
                                    style.width && style
                                        .width
                                        .indexOf("px") > -1 && style.height && style
                                        .height
                                        .indexOf("px") > -1 && (size = {
                                        width: parseInt(style.width.slice(0, -2)),
                                        height: parseInt(style.height.slice(0, -2))
                                    })
                                }
                                if (angular.isString(file)) 
                                    return elem.removeClass("ng-hide"),
                                    isBackground
                                        ? elem.css("background-image", "url('" + file + "')")
                                        : elem.attr("src", file);
                                
                                !file || !file.type || 0 !== file
                                    .type
                                    .search(getTagType(elem[0])) || isBackground && 0 !== file
                                    .type
                                    .indexOf("image")
                                        ? elem.addClass("ng-hide")
                                        : size && Upload.isResizeSupported()
                                            ? (
                                                size.resizeIf = function (width, height) {
                                                    return Upload.attrGetter("ngfResizeIf", attr, scope, {
                                                        $width: width,
                                                        $height: height,
                                                        $file: file
                                                    })
                                                },
                                                Upload.resize(file, size).then(function (f) {
                                                    constructDataUrl(f)
                                                }, function (e) {
                                                    throw e
                                                })
                                            )
                                            : constructDataUrl(file)
                            });
                            scope.$on("$destroy", function () {
                                unwatch()
                            })
                        })
                    }
                    ngFileUpload.service("UploadDataUrl", [
                        "UploadBase",
                        "$timeout",
                        "$q",
                        function (UploadBase, $timeout, $q) {
                            var upload = UploadBase;
                            return upload.base64DataUrl = function (file) {
                                if (angular.isArray(file)) {
                                    var d = $q.defer(),
                                        count = 0;
                                    return angular.forEach(file, function (f) {
                                        upload
                                            .dataUrl(f, !0)
                                            . finally(function () {
                                                if (++count === file.length) {
                                                    var urls = [];
                                                    angular.forEach(file, function (ff) {
                                                        urls.push(ff.$ngfDataUrl)
                                                    }),
                                                    d.resolve(urls, file)
                                                }
                                            })
                                    }),
                                    d.promise
                                }
                                return upload.dataUrl(file, !0)
                            },
                            upload.dataUrl = function (file, disallowObjectUrl) {
                                if (!file) 
                                    return upload.emptyPromise(file, file);
                                if (disallowObjectUrl && null != file.$ngfDataUrl || !disallowObjectUrl && null != file.$ngfBlobUrl) 
                                    return upload.emptyPromise(
                                        disallowObjectUrl
                                            ? file.$ngfDataUrl
                                            : file.$ngfBlobUrl,
                                        file
                                    );
                                var p = disallowObjectUrl
                                    ? file.$$ngfDataUrlPromise
                                    : file.$$ngfBlobUrlPromise;
                                if (p) 
                                    return p;
                                var deferred = $q.defer();
                                return $timeout(function () {
                                    if (window.FileReader && file && (!window.FileAPI || -1 === navigator.userAgent.indexOf("MSIE 8") || file.size < 2e4) && (!window.FileAPI || -1 === navigator.userAgent.indexOf("MSIE 9") || file.size < 4e6)) {
                                        var URL = window.URL || window.webkitURL;
                                        if (URL && URL.createObjectURL && !disallowObjectUrl) {
                                            var url;
                                            try {
                                                url = URL.createObjectURL(file)
                                            } catch (e) {
                                                return void $timeout(function () {
                                                    file.$ngfBlobUrl = "",
                                                    deferred.reject()
                                                })
                                            }
                                            $timeout(function () {
                                                if (file.$ngfBlobUrl = url, url) {
                                                    deferred.resolve(url, file),
                                                    upload.blobUrls = upload.blobUrls || [],
                                                    upload.blobUrlsTotalSize = upload.blobUrlsTotalSize || 0,
                                                    upload
                                                        .blobUrls
                                                        .push({url: url, size: file.size}),
                                                    upload.blobUrlsTotalSize += file.size || 0;
                                                    for (
                                                        var maxMemory = upload.defaults.blobUrlsMaxMemory || 268435456,
                                                        maxLength = upload.defaults.blobUrlsMaxQueueSize || 200;
                                                        (upload.blobUrlsTotalSize > maxMemory || upload.blobUrls.length > maxLength) && upload.blobUrls.length > 1;
                                                    ) {
                                                        var obj = upload
                                                            .blobUrls
                                                            .splice(0, 1)[0];
                                                        URL.revokeObjectURL(obj.url),
                                                        upload.blobUrlsTotalSize -= obj.size
                                                    }
                                                }
                                            })
                                        } else {
                                            var fileReader = new FileReader;
                                            fileReader.onload = function (e) {
                                                $timeout(function () {
                                                    file.$ngfDataUrl = e.target.result,
                                                    deferred.resolve(e.target.result, file),
                                                    $timeout(function () {
                                                        delete file.$ngfDataUrl
                                                    }, 1e3)
                                                })
                                            },
                                            fileReader.onerror = function () {
                                                $timeout(function () {
                                                    file.$ngfDataUrl = "",
                                                    deferred.reject()
                                                })
                                            },
                                            fileReader.readAsDataURL(file)
                                        }
                                    } else 
                                        $timeout(function () {
                                            file[
                                                disallowObjectUrl
                                                    ? "$ngfDataUrl"
                                                    : "$ngfBlobUrl"
                                            ] = "",
                                            deferred.reject()
                                        })
                                }),
                                p = disallowObjectUrl
                                    ? file.$$ngfDataUrlPromise = deferred.promise
                                    : file.$$ngfBlobUrlPromise = deferred.promise,
                                p. finally(function () {
                                    delete file[
                                        disallowObjectUrl
                                            ? "$$ngfDataUrlPromise"
                                            : "$$ngfBlobUrlPromise"
                                    ]
                                }),
                                p
                            },
                            upload
                        }
                    ]),
                    ngFileUpload.directive("ngfSrc", [
                        "Upload",
                        "$timeout",
                        function (Upload, $timeout) {
                            return {
                                restrict: "AE",
                                link: function (scope, elem, attr) {
                                    linkFileDirective(
                                        Upload,
                                        $timeout,
                                        scope,
                                        elem,
                                        attr,
                                        "ngfSrc",
                                        Upload.attrGetter("ngfResize", attr, scope),
                                        !1
                                    )
                                }
                            }
                        }
                    ]),
                    ngFileUpload.directive("ngfBackground", [
                        "Upload",
                        "$timeout",
                        function (Upload, $timeout) {
                            return {
                                restrict: "AE",
                                link: function (scope, elem, attr) {
                                    linkFileDirective(
                                        Upload,
                                        $timeout,
                                        scope,
                                        elem,
                                        attr,
                                        "ngfBackground",
                                        Upload.attrGetter("ngfResize", attr, scope),
                                        !0
                                    )
                                }
                            }
                        }
                    ]),
                    ngFileUpload.directive("ngfThumbnail", [
                        "Upload",
                        "$timeout",
                        function (Upload, $timeout) {
                            return {
                                restrict: "AE",
                                link: function (scope, elem, attr) {
                                    var size = Upload.attrGetter("ngfSize", attr, scope);
                                    linkFileDirective(
                                        Upload,
                                        $timeout,
                                        scope,
                                        elem,
                                        attr,
                                        "ngfThumbnail",
                                        size,
                                        Upload.attrGetter("ngfAsBackground", attr, scope)
                                    )
                                }
                            }
                        }
                    ]),
                    ngFileUpload.config([
                        "$compileProvider",
                        function ($compileProvider) {
                            $compileProvider.imgSrcSanitizationWhitelist && $compileProvider.imgSrcSanitizationWhitelist(
                                /^\s*(https?|ftp|mailto|tel|webcal|local|file|data|blob):/
                            ),
                            $compileProvider.aHrefSanitizationWhitelist && $compileProvider.aHrefSanitizationWhitelist(
                                /^\s*(https?|ftp|mailto|tel|webcal|local|file|data|blob):/
                            )
                        }
                    ]),
                    ngFileUpload.filter("ngfDataUrl", [
                        "UploadDataUrl",
                        "$sce",
                        function (UploadDataUrl, $sce) {
                            return function (file, disallowObjectUrl, trustedUrl) {
                                if (angular.isString(file)) 
                                    return $sce.trustAsResourceUrl(file);
                                var src = file && ((
                                    disallowObjectUrl
                                        ? file.$ngfDataUrl
                                        : file.$ngfBlobUrl
                                ) || file.$ngfDataUrl);
                                return file && !src
                                    ? (!file.$ngfDataUrlFilterInProgress && angular.isObject(file) && (
                                        file.$ngfDataUrlFilterInProgress = !0,
                                        UploadDataUrl.dataUrl(file, disallowObjectUrl)
                                    ), "")
                                    : (file && delete file.$ngfDataUrlFilterInProgress, (
                                        file && src
                                            ? trustedUrl
                                                ? $sce.trustAsResourceUrl(src)
                                                : src
                                            : file
                                    ) || "")
                            }
                        }
                    ])
                }(),
                ngFileUpload.service("UploadValidate", [
                    "UploadDataUrl",
                    "$q",
                    "$timeout",
                    function (UploadDataUrl, $q, $timeout) {
                        function globStringToRegex(str) {
                            var regexp = "",
                                excludes = [];
                            if (str.length > 2 && "/" === str[0] && "/" === str[str.length - 1]) 
                                regexp = str.substring(1, str.length - 1);
                            else {
                                var split = str.split(",");
                                if (split.length > 1) 
                                    for (var i = 0; i < split.length; i++) {
                                        var r = globStringToRegex(split[i]);
                                        r.regexp
                                            ? (regexp += "(" + r.regexp + ")", i < split.length - 1 && (regexp += "|"))
                                            : excludes = excludes.concat(r.excludes)
                                    }
                                else 
                                    0 === str.indexOf("!")
                                        ? excludes.push(
                                            "^((?!" + globStringToRegex(str.substring(1)).regexp + ").)*$"
                                        )
                                        : (
                                            0 === str.indexOf(".") && (str = "*" + str),
                                            regexp = "^" + str.replace(new RegExp("[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\-]", "g"), "\\$&") +
                                                "$",
                                            regexp = regexp.replace(/\\\*/g, ".*").replace(/\\\?/g, ".")
                                        )
                                }
                            return {regexp: regexp, excludes: excludes}
                        }
                        function markModelAsDirty(ngModel, files) {
                            null == files || ngModel.$dirty || (
                                ngModel.$setDirty
                                    ? ngModel.$setDirty()
                                    : ngModel.$dirty = !0
                            )
                        }
                        var upload = UploadDataUrl;
                        return upload.validatePattern = function (file, val) {
                            if (!val) 
                                return !0;
                            var pattern = globStringToRegex(val),
                                valid = !0;
                            if (pattern.regexp && pattern.regexp.length) {
                                var regexp = new RegExp(pattern.regexp, "i");
                                valid = null != file.type && regexp.test(file.type) || null != file.name && regexp.test(
                                    file.name
                                )
                            }
                            for (var len = pattern.excludes.length; len--;) {
                                var exclude = new RegExp(pattern.excludes[len], "i");
                                valid = valid && (null == file.type || exclude.test(file.type)) && (
                                    null == file.name || exclude.test(file.name)
                                )
                            }
                            return valid
                        },
                        upload.ratioToFloat = function (val) {
                            var r = val.toString(),
                                xIndex = r.search(/[x:]/i);
                            return r = xIndex > -1
                                ? parseFloat(r.substring(0, xIndex)) / parseFloat(r.substring(xIndex + 1))
                                : parseFloat(r)
                        },
                        upload.registerModelChangeValidator = function (ngModel, attr, scope) {
                            ngModel && ngModel
                                .$formatters
                                .push(function (files) {
                                    if (ngModel.$dirty) {
                                        var filesArray = files;
                                        files && !angular.isArray(files) && (filesArray = [files]),
                                        upload
                                            .validate(filesArray, 0, ngModel, attr, scope)
                                            .then(function () {
                                                upload.applyModelValidation(ngModel, filesArray)
                                            })
                                    }
                                    return files
                                })
                        },
                        upload.applyModelValidation = function (ngModel, files) {
                            markModelAsDirty(ngModel, files),
                            angular.forEach(ngModel.$ngfValidations, function (validation) {
                                ngModel.$setValidity(validation.name, validation.valid)
                            })
                        },
                        upload.getValidationAttr = function (attr, scope, name, validationName, file) {
                            var dName = "ngf" + name[0].toUpperCase() + name.substr(1),
                                val = upload.attrGetter(dName, attr, scope, {$file: file});
                            if (null == val && (val = upload.attrGetter("ngfValidate", attr, scope, {$file: file}))) {
                                var split = (validationName || name).split(".");
                                val = val[split[0]],
                                split.length > 1 && (val = val && val[split[1]])
                            }
                            return val
                        },
                        upload.validate = function (files, prevLength, ngModel, attr, scope) {
                            function validateSync(name, validationName, fn) {
                                if (files) {
                                    for (var i = files.length, valid = null; i--;) {
                                        var file = files[i];
                                        if (file) {
                                            var val = upload.getValidationAttr(attr, scope, name, validationName, file);
                                            null != val && (fn(file, val, i) || (
                                                -1 === ignoredErrors.indexOf(name)
                                                    ? (
                                                        file.$error = name,
                                                        (file.$errorMessages = file.$errorMessages || {})[name] = !0,
                                                        file.$errorParam = val,
                                                        -1 === invalidFiles.indexOf(
                                                            file
                                                        ) && invalidFiles.push(file),
                                                        runAllValidation || files.splice(i, 1),
                                                        valid = !1
                                                    )
                                                    : files.splice(i, 1)
                                            ))
                                        }
                                    }
                                    null !== valid && ngModel
                                        .$ngfValidations
                                        .push({name: name, valid: valid})
                                }
                            }
                            function validateAsync(name, validationName, type, asyncFn, fn) {
                                function resolveResult(defer, file, val) {
                                    function resolveInternal(fn) {
                                        if (fn()) 
                                            if (-1 === ignoredErrors.indexOf(name)) {
                                                if (
                                                    file.$error = name,
                                                    (file.$errorMessages = file.$errorMessages || {})[name] = !0,
                                                    file.$errorParam = val,
                                                    -1 === invalidFiles.indexOf(
                                                        file
                                                    ) && invalidFiles.push(file),
                                                    !runAllValidation
                                                ) {
                                                    var i = files.indexOf(file);
                                                    i > -1 && files.splice(i, 1)
                                                }
                                                defer.resolve(!1)
                                            }
                                        else {
                                            var j = files.indexOf(file);
                                            j > -1 && files.splice(j, 1),
                                            defer.resolve(!0)
                                        } else 
                                            defer.resolve(!0)
                                    }
                                    null != val
                                        ? asyncFn(file, val).then(function (d) {
                                            resolveInternal(function () {
                                                return !fn(d, val)
                                            })
                                        }, function () {
                                            resolveInternal(function () {
                                                return attrGetter("ngfValidateForce", {$file: file})
                                            })
                                        })
                                        : defer.resolve(!0)
                                }
                                var promises = [upload.emptyPromise(!0)];
                                files && (
                                    files = void 0 === files.length
                                        ? [files]
                                        : files,
                                    angular.forEach(files, function (file) {
                                        var defer = $q.defer();
                                        if (
                                            promises.push(defer.promise),
                                            type && (null == file.type || 0 !== file.type.search(type))
                                        ) 
                                            return void defer.resolve(!0);
                                        
                                        "dimensions" === name && null != upload.attrGetter("ngfDimensions", attr)
                                            ? upload
                                                .imageDimensions(file)
                                                .then(function (d) {
                                                    resolveResult(defer, file, attrGetter("ngfDimensions", {
                                                        $file: file,
                                                        $width: d.width,
                                                        $height: d.height
                                                    }))
                                                }, function () {
                                                    defer.resolve(!1)
                                                })
                                            : "duration" === name && null != upload.attrGetter("ngfDuration", attr)
                                                ? upload
                                                    .mediaDuration(file)
                                                    .then(function (d) {
                                                        resolveResult(defer, file, attrGetter("ngfDuration", {
                                                            $file: file,
                                                            $duration: d
                                                        }))
                                                    }, function () {
                                                        defer.resolve(!1)
                                                    })
                                                : resolveResult(
                                                    defer,
                                                    file,
                                                    upload.getValidationAttr(attr, scope, name, validationName, file)
                                                )
                                    })
                                );
                                var deffer = $q.defer();
                                return $q
                                    .all(promises)
                                    .then(function (values) {
                                        for (var isValid = !0, i = 0; i < values.length; i++) 
                                            if (!values[i]) {
                                                isValid = !1;
                                                break
                                            }
                                        ngModel
                                            .$ngfValidations
                                            .push({name: name, valid: isValid}),
                                        deffer.resolve(isValid)
                                    }),
                                deffer.promise
                            }
                            ngModel = ngModel || {},
                            ngModel.$ngfValidations = ngModel.$ngfValidations || [],
                            angular.forEach(ngModel.$ngfValidations, function (v) {
                                v.valid = !0
                            });
                            var attrGetter = function (name, params) {
                                    return upload.attrGetter(name, attr, scope, params)
                                },
                                ignoredErrors = (upload.attrGetter("ngfIgnoreInvalid", attr, scope) || "").split(
                                    " "
                                ),
                                runAllValidation = upload.attrGetter("ngfRunAllValidations", attr, scope);
                            if (null == files || 0 === files.length) 
                                return upload.emptyPromise({validFiles: files, invalidFiles: []});
                            files = void 0 === files.length
                                ? [files]
                                : files.slice(0);
                            var invalidFiles = [];
                            validateSync("pattern", null, upload.validatePattern),
                            validateSync("minSize", "size.min", function (file, val) {
                                return file.size + .1 >= upload.translateScalars(val)
                            }),
                            validateSync("maxSize", "size.max", function (file, val) {
                                return file.size - .1 <= upload.translateScalars(val)
                            });
                            var totalSize = 0;
                            if (
                                validateSync("maxTotalSize", null, function (file, val) {
                                    return !((totalSize += file.size) > upload.translateScalars(val)) || (
                                        files.splice(0, files.length),
                                        !1
                                    )
                                }),
                                validateSync("validateFn", null, function (file, r) {
                                    return !0 === r || null === r || "" === r
                                }),
                                !files.length
                            ) 
                                return upload.emptyPromise({validFiles: [], invalidFiles: invalidFiles});
                            var deffer = $q.defer(),
                                promises = [];
                            return promises.push(
                                validateAsync("maxHeight", "height.max", /image/, this.imageDimensions, function (d, val) {
                                    return d.height <= val
                                })
                            ),
                            promises.push(
                                validateAsync("minHeight", "height.min", /image/, this.imageDimensions, function (d, val) {
                                    return d.height >= val
                                })
                            ),
                            promises.push(
                                validateAsync("maxWidth", "width.max", /image/, this.imageDimensions, function (d, val) {
                                    return d.width <= val
                                })
                            ),
                            promises.push(
                                validateAsync("minWidth", "width.min", /image/, this.imageDimensions, function (d, val) {
                                    return d.width >= val
                                })
                            ),
                            promises.push(validateAsync("dimensions", null, /image/, function (file, val) {
                                return upload.emptyPromise(val)
                            }, function (r) {
                                return r
                            })),
                            promises.push(
                                validateAsync("ratio", null, /image/, this.imageDimensions, function (d, val) {
                                    for (
                                        var split = val.toString().split(","),
                                        valid = !1,
                                        i = 0;
                                        i < split.length;
                                        i++
                                    ) 
                                        Math.abs(d.width / d.height - upload.ratioToFloat(split[i])) < .01 && (
                                            valid = !0
                                        );
                                    return valid
                                })
                            ),
                            promises.push(
                                validateAsync("maxRatio", "ratio.max", /image/, this.imageDimensions, function (d, val) {
                                    return d.width / d.height - upload.ratioToFloat(val) < 1e-4
                                })
                            ),
                            promises.push(
                                validateAsync("minRatio", "ratio.min", /image/, this.imageDimensions, function (d, val) {
                                    return d.width / d.height - upload.ratioToFloat(val) > -1e-4
                                })
                            ),
                            promises.push(validateAsync(
                                "maxDuration",
                                "duration.max",
                                /audio|video/,
                                this.mediaDuration,
                                function (d, val) {
                                    return d <= upload.translateScalars(val)
                                }
                            )),
                            promises.push(validateAsync(
                                "minDuration",
                                "duration.min",
                                /audio|video/,
                                this.mediaDuration,
                                function (d, val) {
                                    return d >= upload.translateScalars(val)
                                }
                            )),
                            promises.push(
                                validateAsync("duration", null, /audio|video/, function (file, val) {
                                    return upload.emptyPromise(val)
                                }, function (r) {
                                    return r
                                })
                            ),
                            promises.push(
                                validateAsync("validateAsyncFn", null, null, function (file, val) {
                                    return val
                                }, function (r) {
                                    return !0 === r || null === r || "" === r
                                })
                            ),
                            $q
                                .all(promises)
                                .then(function () {
                                    if (runAllValidation) 
                                        for (var i = 0; i < files.length; i++) {
                                            var file = files[i];
                                            file.$error && files.splice(i--, 1)
                                        }
                                    runAllValidation = !1,
                                    validateSync("maxFiles", null, function (file, val, i) {
                                        return prevLength + i < val
                                    }),
                                    deffer.resolve({validFiles: files, invalidFiles: invalidFiles})
                                }),
                            deffer.promise
                        },
                        upload.imageDimensions = function (file) {
                            if (file.$ngfWidth && file.$ngfHeight) {
                                var d = $q.defer();
                                return $timeout(function () {
                                    d.resolve({width: file.$ngfWidth, height: file.$ngfHeight})
                                }),
                                d.promise
                            }
                            if (file.$ngfDimensionPromise) 
                                return file.$ngfDimensionPromise;
                            var deferred = $q.defer();
                            return $timeout(function () {
                                if (0 !== file.type.indexOf("image")) 
                                    return void deferred.reject("not image");
                                upload
                                    .dataUrl(file)
                                    .then(function (dataUrl) {
                                        function success() {
                                            var width = img[0].naturalWidth || img[0].clientWidth,
                                                height = img[0].naturalHeight || img[0].clientHeight;
                                            img.remove(),
                                            file.$ngfWidth = width,
                                            file.$ngfHeight = height,
                                            deferred.resolve({width: width, height: height})
                                        }
                                        function error() {
                                            img.remove(),
                                            deferred.reject("load error")
                                        }
                                        function checkLoadErrorInCaseOfNoCallback() {
                                            $timeout(function () {
                                                img[0].parentNode && (
                                                    img[0].clientWidth
                                                        ? success()
                                                        : secondsCounter++ > 10
                                                            ? error()
                                                            : checkLoadErrorInCaseOfNoCallback()
                                                )
                                            }, 1e3)
                                        }
                                        var img = angular
                                            .element("<img>")
                                            .attr("src", dataUrl)
                                            .css("visibility", "hidden")
                                            .css("position", "fixed")
                                            .css("max-width", "none !important")
                                            .css("max-height", "none !important");
                                        img.on("load", success),
                                        img.on("error", error);
                                        var secondsCounter = 0;
                                        checkLoadErrorInCaseOfNoCallback(),
                                        angular
                                            .element(document.getElementsByTagName("body")[0])
                                            .append(img)
                                    }, function () {
                                        deferred.reject("load error")
                                    })
                            }),
                            file.$ngfDimensionPromise = deferred.promise,
                            file
                                .$ngfDimensionPromise
                                . finally(function () {
                                    delete file.$ngfDimensionPromise
                                }),
                            file.$ngfDimensionPromise
                        },
                        upload.mediaDuration = function (file) {
                            if (file.$ngfDuration) {
                                var d = $q.defer();
                                return $timeout(function () {
                                    d.resolve(file.$ngfDuration)
                                }),
                                d.promise
                            }
                            if (file.$ngfDurationPromise) 
                                return file.$ngfDurationPromise;
                            var deferred = $q.defer();
                            return $timeout(function () {
                                if (0 !== file.type.indexOf("audio") && 0 !== file.type.indexOf("video")) 
                                    return void deferred.reject("not media");
                                upload
                                    .dataUrl(file)
                                    .then(function (dataUrl) {
                                        function success() {
                                            var duration = el[0].duration;
                                            file.$ngfDuration = duration,
                                            el.remove(),
                                            deferred.resolve(duration)
                                        }
                                        function error() {
                                            el.remove(),
                                            deferred.reject("load error")
                                        }
                                        function checkLoadError() {
                                            $timeout(function () {
                                                el[0].parentNode && (
                                                    el[0].duration
                                                        ? success()
                                                        : count > 10
                                                            ? error()
                                                            : checkLoadError()
                                                )
                                            }, 1e3)
                                        }
                                        var el = angular
                                            .element(
                                                0 === file.type.indexOf("audio")
                                                    ? "<audio>"
                                                    : "<video>"
                                            )
                                            .attr("src", dataUrl)
                                            .css("visibility", "none")
                                            .css("position", "fixed");
                                        el.on("loadedmetadata", success),
                                        el.on("error", error);
                                        var count = 0;
                                        checkLoadError(),
                                        angular
                                            .element(document.body)
                                            .append(el)
                                    }, function () {
                                        deferred.reject("load error")
                                    })
                            }),
                            file.$ngfDurationPromise = deferred.promise,
                            file
                                .$ngfDurationPromise
                                . finally(function () {
                                    delete file.$ngfDurationPromise
                                }),
                            file.$ngfDurationPromise
                        },
                        upload
                    }
                ]),
                ngFileUpload.service("UploadResize", [
                    "UploadValidate",
                    "$q",
                    function (UploadValidate, $q) {
                        var upload = UploadValidate,
                            calculateAspectRatioFit = function (
                                srcWidth,
                                srcHeight,
                                maxWidth,
                                maxHeight,
                                centerCrop
                            ) {
                                var ratio = centerCrop
                                    ? Math.max(maxWidth / srcWidth, maxHeight / srcHeight)
                                    : Math.min(maxWidth / srcWidth, maxHeight / srcHeight);
                                return {
                                    width: srcWidth * ratio,
                                    height: srcHeight * ratio,
                                    marginX: srcWidth * ratio - maxWidth,
                                    marginY: srcHeight * ratio - maxHeight
                                }
                            },
                            resize = function (
                                imagen,
                                width,
                                height,
                                quality,
                                type,
                                ratio,
                                centerCrop,
                                resizeIf
                            ) {
                                var deferred = $q.defer(),
                                    canvasElement = document.createElement("canvas"),
                                    imageElement = document.createElement("img");
                                return imageElement.setAttribute(
                                    "style",
                                    "visibility:hidden;position:fixed;z-index:-100000"
                                ),
                                document
                                    .body
                                    .appendChild(imageElement),
                                imageElement.onload = function () {
                                    var imgWidth = imageElement.width,
                                        imgHeight = imageElement.height;
                                    if (
                                        imageElement.parentNode.removeChild(imageElement),
                                        null != resizeIf && !1 === resizeIf(imgWidth, imgHeight)
                                    ) 
                                        return void deferred.reject("resizeIf");
                                    try {
                                        if (ratio) {
                                            var ratioFloat = upload.ratioToFloat(ratio);
                                            imgWidth / imgHeight < ratioFloat
                                                ? (width = imgWidth, height = width / ratioFloat)
                                                : (height = imgHeight, width = height * ratioFloat)
                                        }
                                        width || (width = imgWidth),
                                        height || (height = imgHeight);
                                        var dimensions = calculateAspectRatioFit(
                                            imgWidth,
                                            imgHeight,
                                            width,
                                            height,
                                            centerCrop
                                        );
                                        canvasElement.width = Math.min(dimensions.width, width),
                                        canvasElement.height = Math.min(dimensions.height, height);
                                        canvasElement
                                            .getContext("2d")
                                            .drawImage(
                                                imageElement,
                                                Math.min(0, -dimensions.marginX / 2),
                                                Math.min(0, -dimensions.marginY / 2),
                                                dimensions.width,
                                                dimensions.height
                                            ),
                                        deferred.resolve(
                                            canvasElement.toDataURL(type || "image/WebP", quality || .934)
                                        )
                                    } catch (e) {
                                        deferred.reject(e)
                                    }
                                },
                                imageElement.onerror = function () {
                                    imageElement
                                        .parentNode
                                        .removeChild(imageElement),
                                    deferred.reject()
                                },
                                imageElement.src = imagen,
                                deferred.promise
                            };
                        return upload.dataUrltoBlob = function (dataurl, name, origSize) {
                            for (
                                var arr = dataurl.split(","),
                                mime = arr[0].match(/:(.*?);/)[1],
                                bstr = atob(
                                    arr[1]
                                ),
                                n = bstr.length,
                                u8arr = new Uint8Array(n);
                                n--;
                            ) 
                                u8arr[n] = bstr.charCodeAt(n);
                            var blob = new window.Blob([u8arr], {type: mime});
                            return blob.name = name,
                            blob.$ngfOrigSize = origSize,
                            blob
                        },
                        upload.isResizeSupported = function () {
                            var elem = document.createElement("canvas");
                            return window.atob && elem.getContext && elem.getContext("2d") && window.Blob
                        },
                        upload.isResizeSupported() && Object.defineProperty(
                            window.Blob.prototype,
                            "name",
                            {
                                get: function () {
                                    return this.$ngfName
                                },
                                set: function (v) {
                                    this.$ngfName = v
                                },
                                configurable: !0
                            }
                        ),
                        upload.resize = function (file, options) {
                            if (0 !== file.type.indexOf("image")) 
                                return upload.emptyPromise(file);
                            var deferred = $q.defer();
                            return upload
                                .dataUrl(file, !0)
                                .then(function (url) {
                                    resize(
                                        url,
                                        options.width,
                                        options.height,
                                        options.quality,
                                        options.type || file.type,
                                        options.ratio,
                                        options.centerCrop,
                                        options.resizeIf
                                    ).then(function (dataUrl) {
                                        if ("image/jpeg" === file.type && !1 !== options.restoreExif) 
                                            try {
                                                dataUrl = upload.restoreExif(url, dataUrl)
                                            } catch (e) {
                                                setTimeout(function () {
                                                    throw e
                                                }, 1)
                                            }
                                        try {
                                            var blob = upload.dataUrltoBlob(dataUrl, file.name, file.size);
                                            deferred.resolve(blob)
                                        } catch (e) {
                                            deferred.reject(e)
                                        }
                                    }, function (r) {
                                        "resizeIf" === r && deferred.resolve(file),
                                        deferred.reject(r)
                                    })
                                }, function (e) {
                                    deferred.reject(e)
                                }),
                            deferred.promise
                        },
                        upload
                    }
                ]),
                function () {
                    function linkDrop(
                        scope,
                        elem,
                        attr,
                        ngModel,
                        $parse,
                        $timeout,
                        $window,
                        upload,
                        $http,
                        $q
                    ) {
                        function isDisabled() {
                            return elem.attr("disabled") || attrGetter("ngfDropDisabled", scope)
                        }
                        function extractFilesAndUpdateModel(source, evt, updateOnType) {
                            if (source) {
                                var html;
                                try {
                                    html = source && source.getData && source.getData("text/html")
                                } catch (e) {}
                                extractFiles(
                                    source.items,
                                    source.files,
                                    !1 !== attrGetter("ngfAllowDir", scope),
                                    attrGetter("multiple") || attrGetter("ngfMultiple", scope)
                                ).then(function (files) {
                                    files.length
                                        ? updateModel(files, evt)
                                        : extractFilesFromHtml(updateOnType, html).then(function (files) {
                                            updateModel(files, evt)
                                        })
                                })
                            }
                        }
                        function updateModel(files, evt) {
                            upload.updateModel(
                                ngModel,
                                attr,
                                scope,
                                attrGetter("ngfChange") || attrGetter("ngfDrop"),
                                files,
                                evt
                            )
                        }
                        function extractFilesFromHtml(updateOn, html) {
                            if (!upload.shouldUpdateOn(updateOn, attr, scope) || "string" != typeof html) 
                                return upload.rejectPromise([]);
                            var urls = [];
                            html.replace(
                                /<(img src|img [^>]* src) *=\"([^\"]*)\"/gi,
                                function (m, n, src) {
                                    urls.push(src)
                                }
                            );
                            var promises = [],
                                files = [];
                            if (urls.length) {
                                angular.forEach(urls, function (url) {
                                    promises.push(upload.urlToBlob(url).then(function (blob) {
                                        files.push(blob)
                                    }))
                                });
                                var defer = $q.defer();
                                return $q
                                    .all(promises)
                                    .then(function () {
                                        defer.resolve(files)
                                    }, function (e) {
                                        defer.reject(e)
                                    }),
                                defer.promise
                            }
                            return upload.emptyPromise()
                        }
                        function calculateDragOverClass(scope, attr, evt, callback) {
                            var obj = attrGetter("ngfDragOverClass", scope, {$event: evt}),
                                dClass = "dragover";
                            if (angular.isString(obj)) 
                                dClass = obj;
                            else if (obj && (obj.delay && (dragOverDelay = obj.delay), obj.accept || obj.reject)) {
                                var items = evt.dataTransfer.items;
                                if (null != items && items.length) 
                                    for (
                                        var pattern = obj.pattern || attrGetter("ngfPattern", scope, {$event: evt}),
                                        len = items.length;
                                        len--;
                                    ) {
                                        if (!upload.validatePattern(items[len], pattern)) {
                                            dClass = obj.reject;
                                            break
                                        }
                                        dClass = obj.accept
                                    }
                                else 
                                    dClass = obj.accept
                            }
                            callback(dClass)
                        }
                        function extractFiles(items, fileList, allowDir, multiple) {
                            function traverseFileTree(entry, path) {
                                var defer = $q.defer();
                                if (null != entry) 
                                    if (entry.isDirectory) {
                                        var promises = [upload.emptyPromise()];
                                        if (includeDir) {
                                            var file = {
                                                type: "directory"
                                            };
                                            file.name = file.path = (path || "") + entry.name,
                                            files.push(file)
                                        }
                                        var dirReader = entry.createReader(),
                                            entries = [],
                                            readEntries = function () {
                                                dirReader.readEntries(function (results) {
                                                    try {
                                                        results.length
                                                            ? (
                                                                entries = entries.concat(Array.prototype.slice.call(results || [], 0)),
                                                                readEntries()
                                                            )
                                                            : (
                                                                angular.forEach(entries.slice(0), function (e) {
                                                                    files.length <= maxFiles && totalSize <= maxTotalSize && promises.push(
                                                                        traverseFileTree(e, (path || "") + entry.name + "/")
                                                                    )
                                                                }),
                                                                $q.all(promises).then(function () {
                                                                    defer.resolve()
                                                                }, function (e) {
                                                                    defer.reject(e)
                                                                })
                                                            )
                                                    } catch (e) {
                                                        defer.reject(e)
                                                    }
                                                }, function (e) {
                                                    defer.reject(e)
                                                })
                                            };
                                        readEntries()
                                    } else 
                                        entry.file(function (file) {
                                            try {
                                                file.path = (path || "") + file.name,
                                                includeDir && (file = upload.rename(file, file.path)),
                                                files.push(file),
                                                totalSize += file.size,
                                                defer.resolve()
                                            } catch (e) {
                                                defer.reject(e)
                                            }
                                        }, function (e) {
                                            defer.reject(e)
                                        });
                            return defer.promise
                            }
                            var maxFiles = upload.getValidationAttr(attr, scope, "maxFiles");
                            null == maxFiles && (maxFiles = Number.MAX_VALUE);
                            var maxTotalSize = upload.getValidationAttr(attr, scope, "maxTotalSize");
                            null == maxTotalSize && (maxTotalSize = Number.MAX_VALUE);
                            var includeDir = attrGetter("ngfIncludeDir", scope),
                                files = [],
                                totalSize = 0,
                                promises = [upload.emptyPromise()];
                            if (items && items.length > 0 && "file:" !== $window.location.protocol) 
                                for (var i = 0; i < items.length; i++) {
                                    if (items[i].webkitGetAsEntry && items[i].webkitGetAsEntry() && items[i].webkitGetAsEntry().isDirectory) {
                                        var entry = items[i].webkitGetAsEntry();
                                        if (entry.isDirectory && !allowDir) 
                                            continue;
                                        null != entry && promises.push(traverseFileTree(entry))
                                    } else {
                                        var f = items[i].getAsFile();
                                        null != f && (files.push(f), totalSize += f.size)
                                    }
                                    if (files.length > maxFiles || totalSize > maxTotalSize || !multiple && files.length > 0) 
                                        break
                                }
                            else if (null != fileList) 
                                for (var j = 0; j < fileList.length; j++) {
                                    var file = fileList.item(j);
                                    if (
                                        (file.type || file.size > 0) && (files.push(file), totalSize += file.size),
                                        files.length > maxFiles || totalSize > maxTotalSize || !multiple && files.length > 0
                                    ) 
                                        break
                                }
                            var defer = $q.defer();
                            return $q
                                .all(promises)
                                .then(function () {
                                    if (multiple || includeDir || !files.length) 
                                        defer.resolve(files);
                                    else {
                                        for (var i = 0; files[i] && "directory" === files[i].type;) 
                                            i++;
                                        defer.resolve([files[i]])
                                    }
                                }, function (e) {
                                    defer.reject(e)
                                }),
                            defer.promise
                        }
                        var available = dropAvailable(),
                            attrGetter = function (name, scope, params) {
                                return upload.attrGetter(name, attr, scope, params)
                            };
                        if (attrGetter("dropAvailable") && $timeout(function () {
                            scope[attrGetter("dropAvailable")]
                                ? scope[attrGetter("dropAvailable")].value = available
                                : scope[attrGetter("dropAvailable")] = available
                        }), !available) 
                            return void(
                                !0 === attrGetter("ngfHideOnDropNotAvailable", scope) && elem.css("display", "none")
                            );
                        null == attrGetter("ngfSelect") && upload.registerModelChangeValidator(
                            ngModel,
                            attr,
                            scope
                        );
                        var actualDragOverClass,
                            leaveTimeout = null,
                            stopPropagation = $parse(attrGetter("ngfStopPropagation")),
                            dragOverDelay = 1;
                        elem[0].addEventListener("dragover", function (evt) {
                            if (!isDisabled() && upload.shouldUpdateOn("drop", attr, scope)) {
                                if (
                                    evt.preventDefault(),
                                    stopPropagation(scope) && evt.stopPropagation(),
                                    navigator.userAgent.indexOf("Chrome") > -1
                                ) {
                                    var b = evt.dataTransfer.effectAllowed;
                                    evt.dataTransfer.dropEffect = "move" === b || "linkMove" === b
                                        ? "move"
                                        : "copy"
                                }
                                $timeout.cancel(leaveTimeout),
                                actualDragOverClass || (
                                    actualDragOverClass = "C",
                                    calculateDragOverClass(scope, attr, evt, function (clazz) {
                                        actualDragOverClass = clazz,
                                        elem.addClass(actualDragOverClass),
                                        attrGetter("ngfDrag", scope, {
                                            $isDragging: !0,
                                            $class: actualDragOverClass,
                                            $event: evt
                                        })
                                    })
                                )
                            }
                        }, !1),
                        elem[0].addEventListener("dragenter", function (evt) {
                            !isDisabled() && upload.shouldUpdateOn("drop", attr, scope) && (
                                evt.preventDefault(),
                                stopPropagation(scope) && evt.stopPropagation()
                            )
                        }, !1),
                        elem[0].addEventListener("dragleave", function (evt) {
                            !isDisabled() && upload.shouldUpdateOn("drop", attr, scope) && (
                                evt.preventDefault(),
                                stopPropagation(scope) && evt.stopPropagation(),
                                leaveTimeout = $timeout(function () {
                                    actualDragOverClass && elem.removeClass(actualDragOverClass),
                                    actualDragOverClass = null,
                                    attrGetter("ngfDrag", scope, {
                                        $isDragging: !1,
                                        $event: evt
                                    })
                                }, dragOverDelay || 100)
                            )
                        }, !1),
                        elem[0].addEventListener("drop", function (evt) {
                            !isDisabled() && upload.shouldUpdateOn("drop", attr, scope) && (
                                evt.preventDefault(),
                                stopPropagation(scope) && evt.stopPropagation(),
                                actualDragOverClass && elem.removeClass(actualDragOverClass),
                                actualDragOverClass = null,
                                extractFilesAndUpdateModel(evt.dataTransfer, evt, "dropUrl")
                            )
                        }, !1),
                        elem[0].addEventListener("paste", function (evt) {
                            navigator
                                .userAgent
                                .toLowerCase()
                                .indexOf("firefox") > -1 && attrGetter("ngfEnableFirefoxPaste", scope) && evt.preventDefault(),
                            !isDisabled() && upload.shouldUpdateOn("paste", attr, scope) && extractFilesAndUpdateModel(
                                evt.clipboardData || evt.originalEvent.clipboardData,
                                evt,
                                "pasteUrl"
                            )
                        }, !1),
                        navigator
                            .userAgent
                            .toLowerCase()
                            .indexOf("firefox") > -1 && attrGetter("ngfEnableFirefoxPaste", scope) && (
                                elem.attr("contenteditable", !0),
                                elem.on("keypress", function (e) {
                                e.metaKey || e.ctrlKey || e.preventDefault()
                            })
                            )
                    }
                    function dropAvailable() {
                        var div = document.createElement("div");
                        return "draggable" in div && "ondrop" in div && !/Edge\/12./i.test(
                            navigator.userAgent
                        )
                    }
                    ngFileUpload.directive("ngfDrop", [
                        "$parse",
                        "$timeout",
                        "$window",
                        "Upload",
                        "$http",
                        "$q",
                        function ($parse, $timeout, $window, Upload, $http, $q) {
                            return {
                                restrict: "AEC",
                                require: "?ngModel",
                                link: function (scope, elem, attr, ngModel) {
                                    linkDrop(
                                        scope,
                                        elem,
                                        attr,
                                        ngModel,
                                        $parse,
                                        $timeout,
                                        $window,
                                        Upload,
                                        $http,
                                        $q
                                    )
                                }
                            }
                        }
                    ]),
                    ngFileUpload.directive("ngfNoFileDrop", function () {
                        return function (scope, elem) {
                            dropAvailable() && elem.css("display", "none")
                        }
                    }),
                    ngFileUpload.directive("ngfDropAvailable", [
                        "$parse",
                        "$timeout",
                        "Upload",
                        function ($parse, $timeout, Upload) {
                            return function (scope, elem, attr) {
                                if (dropAvailable()) {
                                    var model = $parse(Upload.attrGetter("ngfDropAvailable", attr));
                                    $timeout(function () {
                                        model(scope),
                                        model.assign && model.assign(scope, !0)
                                    })
                                }
                            }
                        }
                    ])
                }(),
                ngFileUpload.service("UploadExif", [
                    "UploadResize",
                    "$q",
                    function (UploadResize, $q) {
                        function applyTransform(ctx, orientation, width, height) {
                            switch (orientation) {
                                case 2:
                                    return ctx.transform(-1, 0, 0, 1, width, 0);
                                case 3:
                                    return ctx.transform(-1, 0, 0, -1, width, height);
                                case 4:
                                    return ctx.transform(1, 0, 0, -1, 0, height);
                                case 5:
                                    return ctx.transform(0, 1, 1, 0, 0, 0);
                                case 6:
                                    return ctx.transform(0, 1, -1, 0, height, 0);
                                case 7:
                                    return ctx.transform(0, -1, -1, 0, height, width);
                                case 8:
                                    return ctx.transform(0, -1, 1, 0, 0, width)
                            }
                        }
                        function arrayBufferToBase64(buffer) {
                            for (
                                var binary = "",
                                bytes = new Uint8Array(buffer),
                                len = bytes.byteLength,
                                i = 0;
                                i < len;
                                i++
                            ) 
                                binary += String.fromCharCode(bytes[i]);
                            return window.btoa(binary)
                        }
                        var upload = UploadResize;
                        return upload.isExifSupported = function () {
                            return window.FileReader && (new FileReader).readAsArrayBuffer && upload.isResizeSupported()
                        },
                        upload.readOrientation = function (file) {
                            var defer = $q.defer(),
                                reader = new FileReader,
                                slicedFile = file.slice
                                    ? file.slice(0, 65536)
                                    : file;
                            return reader.readAsArrayBuffer(slicedFile),
                            reader.onerror = function (e) {
                                return defer.reject(e)
                            },
                            reader.onload = function (e) {
                                var result = {
                                        orientation: 1
                                    },
                                    view = new DataView(this.result);
                                if (65496 !== view.getUint16(0, !1)) 
                                    return defer.resolve(result);
                                for (var length = view.byteLength, offset = 2; offset < length;) {
                                    var marker = view.getUint16(offset, !1);
                                    if (offset += 2, 65505 === marker) {
                                        if (1165519206 !== view.getUint32(offset += 2, !1)) 
                                            return defer.resolve(result);
                                        var little = 18761 === view.getUint16(offset += 6, !1);
                                        offset += view.getUint32(offset + 4, little);
                                        var tags = view.getUint16(offset, little);
                                        offset += 2;
                                        for (var i = 0; i < tags; i++) 
                                            if (274 === view.getUint16(offset + 12 * i, little)) {
                                                var orientation = view.getUint16(offset + 12 * i + 8, little);
                                                return orientation >= 2 && orientation <= 8 && (
                                                    view.setUint16(offset + 12 * i + 8, 1, little),
                                                    result.fixedArrayBuffer = e.target.result
                                                ),
                                                result.orientation = orientation,
                                                defer.resolve(result)
                                            }
                                        } else {
                                        if (65280 != (65280 & marker)) 
                                            break;
                                        offset += view.getUint16(offset, !1)
                                    }
                                }
                                return defer.resolve(result)
                            },
                            defer.promise
                        },
                        upload.applyExifRotation = function (file) {
                            if (0 !== file.type.indexOf("image/jpeg")) 
                                return upload.emptyPromise(file);
                            var deferred = $q.defer();
                            return upload
                                .readOrientation(file)
                                .then(function (result) {
                                    if (result.orientation < 2 || result.orientation > 8) 
                                        return deferred.resolve(file);
                                    upload
                                        .dataUrl(file, !0)
                                        .then(function (url) {
                                            var canvas = document.createElement("canvas"),
                                                img = document.createElement("img");
                                            img.onload = function () {
                                                try {
                                                    canvas.width = result.orientation > 4
                                                        ? img.height
                                                        : img.width,
                                                    canvas.height = result.orientation > 4
                                                        ? img.width
                                                        : img.height;
                                                    var ctx = canvas.getContext("2d");
                                                    applyTransform(ctx, result.orientation, img.width, img.height),
                                                    ctx.drawImage(img, 0, 0);
                                                    var dataUrl = canvas.toDataURL(file.type || "image/WebP", .934);
                                                    dataUrl = upload.restoreExif(
                                                        arrayBufferToBase64(result.fixedArrayBuffer),
                                                        dataUrl
                                                    );
                                                    var blob = upload.dataUrltoBlob(dataUrl, file.name);
                                                    deferred.resolve(blob)
                                                } catch (e) {
                                                    return deferred.reject(e)
                                                }
                                            },
                                            img.onerror = function () {
                                                deferred.reject()
                                            },
                                            img.src = url
                                        }, function (e) {
                                            deferred.reject(e)
                                        })
                                }, function (e) {
                                    deferred.reject(e)
                                }),
                            deferred.promise
                        },
                        upload.restoreExif = function (orig, resized) {
                            var ExifRestorer = {};
                            return ExifRestorer.KEY_STR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                            ExifRestorer.encode64 = function (input) {
                                var chr1,
                                    chr2,
                                    enc1,
                                    enc2,
                                    enc3,
                                    output = "",
                                    chr3 = "",
                                    enc4 = "",
                                    i = 0;
                                do {
                                    chr1 = input[i++],
                                    chr2 = input[i++],
                                    chr3 = input[i++],
                                    enc1 = chr1 >> 2,
                                    enc2 = (3 & chr1) << 4 | chr2 >> 4,
                                    enc3 = (15 & chr2) << 2 | chr3 >> 6,
                                    enc4 = 63 & chr3,
                                    isNaN(chr2)
                                        ? enc3 = enc4 = 64
                                        : isNaN(chr3) && (enc4 = 64),
                                    output = output + this
                                        .KEY_STR
                                        .charAt(enc1) + this
                                        .KEY_STR
                                        .charAt(enc2) + this
                                        .KEY_STR
                                        .charAt(enc3) + this
                                        .KEY_STR
                                        .charAt(enc4),
                                    chr1 = chr2 = chr3 = "",
                                    enc1 = enc2 = enc3 = enc4 = ""
                                } while (i < input.length);
                                return output
                            },
                            ExifRestorer.restore = function (origFileBase64, resizedFileBase64) {
                                origFileBase64.match("data:image/jpeg;base64,") && (
                                    origFileBase64 = origFileBase64.replace("data:image/jpeg;base64,", "")
                                );
                                var rawImage = this.decode64(origFileBase64),
                                    segments = this.slice2Segments(rawImage),
                                    image = this.exifManipulation(resizedFileBase64, segments);
                                return "data:image/jpeg;base64," + this.encode64(image)
                            },
                            ExifRestorer.exifManipulation = function (resizedFileBase64, segments) {
                                var exifArray = this.getExifArray(segments),
                                    newImageArray = this.insertExif(resizedFileBase64, exifArray);
                                return new Uint8Array(newImageArray)
                            },
                            ExifRestorer.getExifArray = function (segments) {
                                for (var seg, x = 0; x < segments.length; x++) 
                                    if (seg = segments[x], 255 === seg[0] & 225 === seg[1]) 
                                        return seg;
                            return []
                            },
                            ExifRestorer.insertExif = function (resizedFileBase64, exifArray) {
                                var imageData = resizedFileBase64.replace("data:image/jpeg;base64,", ""),
                                    buf = this.decode64(imageData),
                                    separatePoint = buf.indexOf(255, 3),
                                    mae = buf.slice(0, separatePoint),
                                    ato = buf.slice(separatePoint),
                                    array = mae;
                                return array = array.concat(exifArray),
                                array = array.concat(ato)
                            },
                            ExifRestorer.slice2Segments = function (rawImageArray) {
                                for (var head = 0, segments = [];;) {
                                    if (255 === rawImageArray[head] & 218 === rawImageArray[head + 1]) 
                                        break;
                                    if (255 === rawImageArray[head] & 216 === rawImageArray[head + 1]) 
                                        head += 2;
                                    else {
                                        var length = 256 * rawImageArray[head + 2] + rawImageArray[head + 3],
                                            endPoint = head + length + 2,
                                            seg = rawImageArray.slice(head, endPoint);
                                        segments.push(seg),
                                        head = endPoint
                                    }
                                    if (head > rawImageArray.length) 
                                        break
                                }
                                return segments
                            },
                            ExifRestorer.decode64 = function (input) {
                                var chr1,
                                    chr2,
                                    enc1,
                                    enc2,
                                    enc3,
                                    chr3 = "",
                                    enc4 = "",
                                    i = 0,
                                    buf = [];
                                /[^A-Za-z0-9\+\/\=]/g.exec(input) && console.log(
                                    "There were invalid base64 characters in the input text.\nValid base64 characte" +
                                    "rs are A-Z, a-z, 0-9, NaNExpect errors in decoding."
                                ),
                                input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                                do {
                                    enc1 = this
                                        .KEY_STR
                                        .indexOf(input.charAt(i++)),
                                    enc2 = this
                                        .KEY_STR
                                        .indexOf(input.charAt(i++)),
                                    enc3 = this
                                        .KEY_STR
                                        .indexOf(input.charAt(i++)),
                                    enc4 = this
                                        .KEY_STR
                                        .indexOf(input.charAt(i++)),
                                    chr1 = enc1 << 2 | enc2 >> 4,
                                    chr2 = (15 & enc2) << 4 | enc3 >> 2,
                                    chr3 = (3 & enc3) << 6 | enc4,
                                    buf.push(chr1),
                                    64 !== enc3 && buf.push(chr2),
                                    64 !== enc4 && buf.push(chr3),
                                    chr1 = chr2 = chr3 = "",
                                    enc1 = enc2 = enc3 = enc4 = ""
                                } while (i < input.length);
                                return buf
                            },
                            ExifRestorer.restore(orig, resized)
                        },
                        upload
                    }
                ])
            },
            function (module, exports) {
                (function (angular, window) {
                    "use strict";
                    var regModules = [
                            "ng", "oc.lazyLoad"
                        ],
                        regInvokes = {},
                        regConfigs = [],
                        modulesToLoad = [],
                        realModules = [],
                        recordDeclarations = [],
                        broadcast = angular.noop,
                        runBlocks = {},
                        justLoaded = [];
                    angular
                        .module("oc.lazyLoad", ["ng"])
                        .provider("$ocLazyLoad", [
                            "$controllerProvider",
                            "$provide",
                            "$compileProvider",
                            "$filterProvider",
                            "$injector",
                            "$animateProvider",
                            function (
                                $controllerProvider,
                                $provide,
                                $compileProvider,
                                $filterProvider,
                                $injector,
                                $animateProvider
                            ) {
                                function _register(providers, registerModules, params) {
                                    if (registerModules) {
                                        var k,
                                            moduleName,
                                            moduleFn,
                                            tempRunBlocks = [];
                                        for (k = registerModules.length - 1; k >= 0; k--) 
                                            if (
                                                moduleName = registerModules[k],
                                                angular.isString(moduleName) || (moduleName = getModuleName(moduleName)),
                                                moduleName && -1 === justLoaded.indexOf(moduleName) && (!modules[moduleName] || -1 !== realModules.indexOf(moduleName))
                                            ) {
                                                var newModule = -1 === regModules.indexOf(moduleName);
                                                if (
                                                    moduleFn = ngModuleFct(moduleName),
                                                    newModule && (regModules.push(moduleName), _register(providers, moduleFn.requires, params)),
                                                    moduleFn._runBlocks.length > 0
                                                ) 
                                                    for (runBlocks[moduleName] = []; moduleFn._runBlocks.length > 0;) 
                                                        runBlocks[moduleName].push(moduleFn._runBlocks.shift());
                                            angular.isDefined(runBlocks[moduleName]) && (newModule || params.rerun) && (
                                                    tempRunBlocks = tempRunBlocks.concat(runBlocks[moduleName])
                                                ),
                                                _invokeQueue(providers, moduleFn._invokeQueue, moduleName, params.reconfig),
                                                _invokeQueue(providers, moduleFn._configBlocks, moduleName, params.reconfig),
                                                broadcast(
                                                    newModule
                                                        ? "ocLazyLoad.moduleLoaded"
                                                        : "ocLazyLoad.moduleReloaded",
                                                    moduleName
                                                ),
                                                registerModules.pop(),
                                                justLoaded.push(moduleName)
                                            }
                                        var instanceInjector = providers.getInstanceInjector();
                                        angular.forEach(tempRunBlocks, function (fn) {
                                            instanceInjector.invoke(fn)
                                        })
                                    }
                                }
                                function _registerInvokeList(args, moduleName) {
                                    function checkHashes(potentialNew, invokes) {
                                        var newHash,
                                            isNew = !0;
                                        return invokes.length && (
                                            newHash = signature(potentialNew),
                                            angular.forEach(invokes, function (invoke) {
                                                isNew = isNew && signature(invoke) !== newHash
                                            })
                                        ),
                                        isNew
                                    }
                                    function signature(data) {
                                        return angular.isArray(data)
                                            ? hashCode(data.toString())
                                            : angular.isObject(data)
                                                ? hashCode(stringify(data))
                                                : angular.isDefined(data) && null !== data
                                                    ? hashCode(data.toString())
                                                    : data
                                    }
                                    var invokeList = args[2][0],
                                        type = args[1],
                                        newInvoke = !1;
                                    angular.isUndefined(regInvokes[moduleName]) && (regInvokes[moduleName] = {}),
                                    angular.isUndefined(regInvokes[moduleName][type]) && (
                                        regInvokes[moduleName][type] = {}
                                    );
                                    var onInvoke = function onInvoke(invokeName, invoke) {
                                        regInvokes[moduleName][type].hasOwnProperty(invokeName) || (
                                            regInvokes[moduleName][type][invokeName] = []
                                        ),
                                        checkHashes(invoke, regInvokes[moduleName][type][invokeName]) && (
                                            newInvoke = !0,
                                            regInvokes[moduleName][type][invokeName].push(
                                                invoke
                                            ),
                                            broadcast("ocLazyLoad.componentLoaded", [moduleName, type, invokeName])
                                        )
                                    };
                                    if (angular.isString(invokeList)) 
                                        onInvoke(invokeList, args[2][1]);
                                    else {
                                        if (!angular.isObject(invokeList)) 
                                            return !1;
                                        angular.forEach(invokeList, function (invoke, key) {
                                            angular.isString(invoke)
                                                ? onInvoke(invoke, invokeList[1])
                                                : onInvoke(key, invoke)
                                        })
                                    }
                                    return newInvoke
                                }
                                function _invokeQueue(providers, queue, moduleName, reconfig) {
                                    if (queue) {
                                        var i,
                                            len,
                                            args,
                                            provider;
                                        for (i = 0, len = queue.length; i < len; i++) 
                                            if (args = queue[i], angular.isArray(args)) {
                                                if (null !== providers) {
                                                    if (!providers.hasOwnProperty(args[0])) 
                                                        throw new Error("unsupported provider " + args[0]);
                                                    provider = providers[args[0]]
                                                }
                                                var isNew = _registerInvokeList(args, moduleName);
                                                if ("invoke" !== args[1]) 
                                                    isNew && angular.isDefined(provider) && provider[args[1]].apply(
                                                        provider,
                                                        args[2]
                                                    );
                                                else {
                                                    var callInvoke = function callInvoke(fct) {
                                                        var invoked = regConfigs.indexOf(moduleName + "-" + fct);
                                                        (-1 === invoked || reconfig) && (-1 === invoked && regConfigs.push(
                                                            moduleName + "-" + fct
                                                        ), angular.isDefined(provider) && provider[args[1]].apply(provider, args[2]))
                                                    };
                                                    if (angular.isFunction(args[2][0])) 
                                                        callInvoke(args[2][0]);
                                                    else if (angular.isArray(args[2][0])) 
                                                        for (var j = 0, jlen = args[2][0].length; j < jlen; j++) 
                                                            angular.isFunction(args[2][0][j]) && callInvoke(args[2][0][j])
                                                }
                                            }
                                        }
                                }
                                function getModuleName(module) {
                                    var moduleName = null;
                                    return angular.isString(module)
                                        ? moduleName = module
                                        : angular.isObject(module) && module.hasOwnProperty("name") && angular.isString(
                                            module.name
                                        ) && (moduleName = module.name),
                                    moduleName
                                }
                                function moduleExists(moduleName) {
                                    if (!angular.isString(moduleName)) 
                                        return !1;
                                    try {
                                        return ngModuleFct(moduleName)
                                    } catch (e) {
                                        if (/No module/.test(e) || e.message.indexOf("$injector:nomod") > -1) 
                                            return !1
                                    }
                                }
                                var modules = {},
                                    providers = {
                                        $controllerProvider: $controllerProvider,
                                        $compileProvider: $compileProvider,
                                        $filterProvider: $filterProvider,
                                        $provide: $provide,
                                        $injector: $injector,
                                        $animateProvider: $animateProvider
                                    },
                                    debug = !1,
                                    events = !1,
                                    moduleCache = [],
                                    modulePromises = {};
                                moduleCache.push = function (value) {
                                    -1 === this.indexOf(value) && Array
                                        .prototype
                                        .push
                                        .apply(this, arguments)
                                },
                                this.config = function (config) {
                                    angular.isDefined(config.modules) && (
                                        angular.isArray(config.modules)
                                            ? angular.forEach(config.modules, function (moduleConfig) {
                                                modules[moduleConfig.name] = moduleConfig
                                            })
                                            : modules[config.modules.name] = config.modules
                                    ),
                                    angular.isDefined(config.debug) && (debug = config.debug),
                                    angular.isDefined(config.events) && (events = config.events)
                                },
                                this._init = function _init(element) {
                                    if (0 === modulesToLoad.length) {
                                        var elements = [element],
                                            names = [
                                                "ng:app", "ng-app", "x-ng-app", "data-ng-app"
                                            ],
                                            NG_APP_CLASS_REGEXP = /\sng[:\-]app(:\s*([\w\d_]+);?)?\s/,
                                            append = function append(elm) {
                                                return elm && elements.push(elm)
                                            };
                                        angular.forEach(names, function (name) {
                                            names[name] = !0,
                                            append(document.getElementById(name)),
                                            name = name.replace(":", "\\:"),
                                            void 0 !== element[0] && element[0].querySelectorAll && (
                                                angular.forEach(element[0].querySelectorAll(
                                                    "." + name
                                                ), append),
                                                angular.forEach(element[0].querySelectorAll("." + name + "\\:"), append),
                                                angular.forEach(element[0].querySelectorAll(
                                                    "[" + name + "]"
                                                ), append)
                                            )
                                        }),
                                        angular.forEach(elements, function (elm) {
                                            if (0 === modulesToLoad.length) {
                                                var className = " " + element.className + " ",
                                                    match = NG_APP_CLASS_REGEXP.exec(className);
                                                match
                                                    ? modulesToLoad.push((match[2] || "").replace(/\s+/g, ","))
                                                    : angular.forEach(elm.attributes, function (attr) {
                                                        0 === modulesToLoad.length && names[attr.name] && modulesToLoad.push(
                                                            attr.value
                                                        )
                                                    })
                                            }
                                        })
                                    }
                                    0 !== modulesToLoad.length || (window.jasmine || window.mocha) && angular.isDefined(
                                        angular.mock
                                    ) || console.error(
                                        "No module found during bootstrap, unable to init ocLazyLoad. You should always" +
                                        " use the ng-app directive or angular.boostrap when you use ocLazyLoad."
                                    );
                                    var addReg = function addReg(moduleName) {
                                        if (-1 === regModules.indexOf(moduleName)) {
                                            regModules.push(moduleName);
                                            var mainModule = angular.module(moduleName);
                                            _invokeQueue(null, mainModule._invokeQueue, moduleName),
                                            _invokeQueue(null, mainModule._configBlocks, moduleName),
                                            angular.forEach(mainModule.requires, addReg)
                                        }
                                    };
                                    angular.forEach(modulesToLoad, function (moduleName) {
                                        addReg(moduleName)
                                    }),
                                    modulesToLoad = [],
                                    recordDeclarations.pop()
                                };
                                var stringify = function stringify(obj) {
                                        try {
                                            return JSON.stringify(obj)
                                        } catch (e) {
                                            var cache = [];
                                            return JSON.stringify(obj, function (key, value) {
                                                if (angular.isObject(value) && null !== value) {
                                                    if (-1 !== cache.indexOf(value)) 
                                                        return;
                                                    cache.push(value)
                                                }
                                                return value
                                            })
                                        }
                                    },
                                    hashCode = function hashCode(str) {
                                        var i,
                                            chr,
                                            len,
                                            hash = 0;
                                        if (0 == str.length) 
                                            return hash;
                                        for (i = 0, len = str.length; i < len; i++) 
                                            chr = str.charCodeAt(i),
                                            hash = (hash << 5) - hash + chr,
                                            hash |= 0;
                                        return hash
                                    };
                                this.$get = [
                                    "$log",
                                    "$rootElement",
                                    "$rootScope",
                                    "$cacheFactory",
                                    "$q",
                                    function ($log, $rootElement, $rootScope, $cacheFactory, $q) {
                                        function reject(e) {
                                            var deferred = $q.defer();
                                            return $log.error(e.message),
                                            deferred.reject(e),
                                            deferred.promise
                                        }
                                        var instanceInjector,
                                            filesCache = $cacheFactory("ocLazyLoad");
                                        return debug || (
                                            $log = {},
                                            $log.error = angular.noop,
                                            $log.warn = angular.noop,
                                            $log.info = angular.noop
                                        ),
                                        providers.getInstanceInjector = function () {
                                            return instanceInjector || (
                                                instanceInjector = $rootElement.data("$injector") || angular.injector()
                                            )
                                        },
                                        broadcast = function broadcast(eventName, params) {
                                            events && $rootScope.$broadcast(eventName, params),
                                            debug && $log.info(eventName, params)
                                        }, {
                                            _broadcast: broadcast,
                                            _$log: $log,
                                            _getFilesCache: function getFilesCache() {
                                                return filesCache
                                            },
                                            toggleWatch: function toggleWatch(watch) {
                                                watch
                                                    ? recordDeclarations.push(!0)
                                                    : recordDeclarations.pop()
                                            },
                                            getModuleConfig: function getModuleConfig(moduleName) {
                                                if (!angular.isString(moduleName)) 
                                                    throw new Error("You need to give the name of the module to get");
                                                return modules[moduleName]
                                                    ? angular.copy(modules[moduleName])
                                                    : null
                                            },
                                            setModuleConfig: function setModuleConfig(moduleConfig) {
                                                if (!angular.isObject(moduleConfig)) 
                                                    throw new Error("You need to give the module config object to set");
                                                return modules[moduleConfig.name] = moduleConfig,
                                                moduleConfig
                                            },
                                            getModules: function getModules() {
                                                return regModules
                                            },
                                            isLoaded: function isLoaded(modulesNames) {
                                                var moduleLoaded = function moduleLoaded(module) {
                                                    var isLoaded = regModules.indexOf(module) > -1;
                                                    return isLoaded || (isLoaded = !!moduleExists(module)),
                                                    isLoaded
                                                };
                                                if (
                                                    angular.isString(modulesNames) && (modulesNames = [modulesNames]),
                                                    angular.isArray(modulesNames)
                                                ) {
                                                    var i,
                                                        len;
                                                    for (i = 0, len = modulesNames.length; i < len; i++) 
                                                        if (!moduleLoaded(modulesNames[i])) 
                                                            return !1;
                                                return !0
                                                }
                                                throw new Error("You need to define the module(s) name(s)")
                                            },
                                            _getModuleName: getModuleName,
                                            _getModule: function getModule(moduleName) {
                                                try {
                                                    return ngModuleFct(moduleName)
                                                } catch (e) {
                                                    throw(/No module/.test(e) || e.message.indexOf("$injector:nomod") > -1) && (
                                                        e.message = 'The module "' + stringify(moduleName) + '" that you are trying to ' +
                                                        'load does not exist. ' + e.message
                                                    ),
                                                    e
                                                }
                                            },
                                            moduleExists: moduleExists,
                                            _loadDependencies: function _loadDependencies(moduleName, localParams) {
                                                var loadedModule,
                                                    requires,
                                                    diff,
                                                    promisesList = [],
                                                    self = this;
                                                if (null === (moduleName = self._getModuleName(moduleName))) 
                                                    return $q.when();
                                                try {
                                                    loadedModule = self._getModule(moduleName)
                                                } catch (e) {
                                                    return reject(e)
                                                }
                                                return requires = self.getRequires(loadedModule),
                                                angular.forEach(requires, function (requireEntry) {
                                                    if (angular.isString(requireEntry)) {
                                                        var config = self.getModuleConfig(requireEntry);
                                                        if (null === config) 
                                                            return void moduleCache.push(requireEntry);
                                                        requireEntry = config,
                                                        config.name = void 0
                                                    }
                                                    if (self.moduleExists(requireEntry.name)) 
                                                        return diff = requireEntry
                                                            .files
                                                            .filter(function (n) {
                                                                return self
                                                                    .getModuleConfig(requireEntry.name)
                                                                    .files
                                                                    .indexOf(n) < 0
                                                            }),
                                                        0 !== diff.length && self
                                                            ._$log
                                                            .warn(
                                                                'Module "',
                                                                moduleName,
                                                                '" attempted to redefine configuration for dependency. "',
                                                                requireEntry.name,
                                                                '"\n Additional Files Loaded:',
                                                                diff
                                                            ),
                                                        angular.isDefined(self.filesLoader)
                                                            ? void promisesList.push(
                                                                self.filesLoader(requireEntry, localParams).then(function () {
                                                                    return self._loadDependencies(requireEntry)
                                                                })
                                                            )
                                                            : reject(new Error(
                                                                "Error: New dependencies need to be loaded from external files (" +
                                                                requireEntry.files + "), but no loader has been defined."
                                                            ));
                                                    if (angular.isArray(requireEntry)) {
                                                        var files = [];
                                                        angular.forEach(requireEntry, function (entry) {
                                                            var config = self.getModuleConfig(entry);
                                                            null === config
                                                                ? files.push(entry)
                                                                : config.files && (files = files.concat(config.files))
                                                        }),
                                                        files.length > 0 && (requireEntry = {
                                                            files: files
                                                        })
                                                    } else 
                                                        angular.isObject(requireEntry) && requireEntry.hasOwnProperty("name") && requireEntry.name && (
                                                            self.setModuleConfig(requireEntry),
                                                            moduleCache.push(requireEntry.name)
                                                        );
                                                    if (angular.isDefined(requireEntry.files) && 0 !== requireEntry.files.length) {
                                                        if (!angular.isDefined(self.filesLoader)) 
                                                            return reject(new Error(
                                                                'Error: the module "' + requireEntry.name +
                                                                '" is defined in external files (' + requireEntry.files + "), but no loader has" +
                                                                " been defined."
                                                            ));
                                                        promisesList.push(
                                                            self.filesLoader(requireEntry, localParams).then(function () {
                                                                return self._loadDependencies(requireEntry)
                                                            })
                                                        )
                                                    }
                                                }),
                                                $q.all(promisesList)
                                            },
                                            inject: function inject(moduleName) {
                                                var localParams = arguments.length <= 1 || void 0 === arguments[1]
                                                        ? {}
                                                        : arguments[1],
                                                    real = !(arguments.length <= 2 || void 0 === arguments[2]) && arguments[2],
                                                    self = this,
                                                    deferred = $q.defer();
                                                if (angular.isDefined(moduleName) && null !== moduleName) {
                                                    if (angular.isArray(moduleName)) {
                                                        var promisesList = [];
                                                        return angular.forEach(moduleName, function (module) {
                                                            promisesList.push(self.inject(module, localParams, real))
                                                        }),
                                                        $q.all(promisesList)
                                                    }
                                                    self._addToLoadList(self._getModuleName(moduleName), !0, real)
                                                }
                                                if (modulesToLoad.length > 0) {
                                                    var res = modulesToLoad.slice();
                                                    (function loadNext(moduleName) {
                                                        moduleCache.push(moduleName),
                                                        modulePromises[moduleName] = deferred.promise,
                                                        self
                                                            ._loadDependencies(moduleName, localParams)
                                                            .then(function success() {
                                                                try {
                                                                    justLoaded = [],
                                                                    _register(providers, moduleCache, localParams)
                                                                } catch (e) {
                                                                    return self
                                                                        ._$log
                                                                        .error(e.message),
                                                                    void deferred.reject(e)
                                                                }
                                                                modulesToLoad.length > 0
                                                                    ? loadNext(modulesToLoad.shift())
                                                                    : deferred.resolve(res)
                                                            }, function error(err) {
                                                                deferred.reject(err)
                                                            })
                                                    })(modulesToLoad.shift())
                                                } else {
                                                    if (localParams && localParams.name && modulePromises[localParams.name]) 
                                                        return modulePromises[localParams.name];
                                                    deferred.resolve()
                                                }
                                                return deferred.promise
                                            },
                                            getRequires: function getRequires(module) {
                                                var requires = [];
                                                return angular.forEach(module.requires, function (requireModule) {
                                                    -1 === regModules.indexOf(requireModule) && requires.push(requireModule)
                                                }),
                                                requires
                                            },
                                            _invokeQueue: _invokeQueue,
                                            _registerInvokeList: _registerInvokeList,
                                            _register: _register,
                                            _addToLoadList: _addToLoadList,
                                            _unregister: function _unregister(modules) {
                                                angular.isDefined(modules) && angular.isArray(modules) && angular.forEach(
                                                    modules,
                                                    function (module) {
                                                        regInvokes[module] = void 0
                                                    }
                                                )
                                            }
                                        }
                                    }
                                ],
                                this._init(angular.element(window.document))
                            }
                        ]);
                    var bootstrapFct = angular.bootstrap;
                    angular.bootstrap = function (element, modules, config) {
                        return regModules = [
                            "ng", "oc.lazyLoad"
                        ],
                        regInvokes = {},
                        regConfigs = [],
                        modulesToLoad = [],
                        realModules = [],
                        recordDeclarations = [],
                        broadcast = angular.noop,
                        runBlocks = {},
                        justLoaded = [],
                        angular.forEach(modules.slice(), function (module) {
                            _addToLoadList(module, !0, !0)
                        }),
                        bootstrapFct(element, modules, config)
                    };
                    var _addToLoadList = function _addToLoadList(name, force, real) {
                            (recordDeclarations.length > 0 || force) && angular.isString(name) && -1 === modulesToLoad.indexOf(
                                name
                            ) && (modulesToLoad.push(name), real && realModules.push(name))
                        },
                        ngModuleFct = angular.module;
                    angular.module = function (name, requires, configFn) {
                        return _addToLoadList(name, !1, !0),
                        ngModuleFct(name, requires, configFn)
                    },
                    void 0 !== module && void 0 !== exports && module.exports === exports && (
                        module.exports = "oc.lazyLoad"
                    )
                })(angular, window),
                function (angular) {
                    "use strict";
                    angular
                        .module("oc.lazyLoad")
                        .directive("ocLazyLoad", [
                            "$ocLazyLoad",
                            "$compile",
                            "$animate",
                            "$parse",
                            "$timeout",
                            function ($ocLazyLoad, $compile, $animate, $parse, $timeout) {
                                return {
                                    restrict: "A",
                                    terminal: !0,
                                    priority: 1e3,
                                    compile: function compile(element, attrs) {
                                        var content = element[0].innerHTML;
                                        return element.html(""),
                                        function ($scope, $element, $attr) {
                                            var model = $parse($attr.ocLazyLoad);
                                            $scope.$watch(function () {
                                                return model($scope) || $attr.ocLazyLoad
                                            }, function (moduleName) {
                                                angular.isDefined(moduleName) && $ocLazyLoad
                                                    .load(moduleName)
                                                    .then(function () {
                                                        $animate.enter(content, $element),
                                                        $compile($element.contents())($scope)
                                                    })
                                            }, !0)
                                        }
                                    }
                                }
                            }
                        ])
                }(angular),
                function (angular) {
                    "use strict";
                    angular
                        .module("oc.lazyLoad")
                        .config([
                            "$provide",
                            function ($provide) {
                                $provide.decorator("$ocLazyLoad", [
                                    "$delegate",
                                    "$q",
                                    "$window",
                                    "$interval",
                                    function ($delegate, $q, $window, $interval) {
                                        var useCssLoadPatch = !1,
                                            anchor = $window
                                                .document
                                                .getElementsByTagName("head")[0] || $window
                                                .document
                                                .getElementsByTagName("body")[0];
                                        return $delegate.buildElement = function buildElement(type, path, params) {
                                            var el,
                                                loaded,
                                                deferred = $q.defer(),
                                                filesCache = $delegate._getFilesCache(),
                                                cacheBuster = function cacheBuster(url) {
                                                    var dc = (new Date).getTime();
                                                    return url.indexOf("?") >= 0
                                                        ? "&" === url.substring(0, url.length - 1)
                                                            ? url + "_dc=" + dc
                                                            : url + "&_dc=" + dc
                                                        : url + "?_dc=" + dc
                                                };
                                            switch (
                                                angular.isUndefined(filesCache.get(path)) && filesCache.put(path, deferred.promise),
                                                type
                                            ) {
                                                case "css":
                                                    el = $window
                                                        .document
                                                        .createElement("link"),
                                                    el.type = "text/css",
                                                    el.rel = "stylesheet",
                                                    el.href = !1 === params.cache
                                                        ? cacheBuster(path)
                                                        : path;
                                                    break;
                                                case "js":
                                                    el = $window
                                                        .document
                                                        .createElement("script"),
                                                    el.src = !1 === params.cache
                                                        ? cacheBuster(path)
                                                        : path;
                                                    break;
                                                default:
                                                    filesCache.remove(path),
                                                    deferred.reject(new Error(
                                                        'Requested type "' + type + '" is not known. Could not inject "' + path + '"'
                                                    ))
                                            }
                                            el.onload = el.onreadystatechange = function (e) {
                                                el.readyState && !/^c|loade/.test(el.readyState) || loaded || (
                                                    el.onload = el.onreadystatechange = null,
                                                    loaded = 1,
                                                    $delegate._broadcast("ocLazyLoad.fileLoaded", path),
                                                    deferred.resolve(el)
                                                )
                                            },
                                            el.onerror = function () {
                                                filesCache.remove(path),
                                                deferred.reject(new Error("Unable to load " + path))
                                            },
                                            el.async = params.serie
                                                ? 0
                                                : 1;
                                            var insertBeforeElem = anchor.lastChild;
                                            if (params.insertBefore) {
                                                var element = angular.element(
                                                    angular.isDefined(window.jQuery)
                                                        ? params.insertBefore
                                                        : document.querySelector(params.insertBefore)
                                                );
                                                element && element.length > 0 && (insertBeforeElem = element[0])
                                            }
                                            if (
                                                insertBeforeElem.parentNode.insertBefore(el, insertBeforeElem),
                                                "css" == type
                                            ) {
                                                var ua = $window
                                                    .navigator
                                                    .userAgent
                                                    .toLowerCase();
                                                if (ua.indexOf("phantomjs/1.9") > -1) 
                                                    useCssLoadPatch = !0;
                                                else if (/iP(hone|od|ad)/.test($window.navigator.platform)) {
                                                    var v = $window
                                                            .navigator
                                                            .appVersion
                                                            .match(/OS (\d+)_(\d+)_?(\d+)?/),
                                                        iOSVersion = parseFloat([
                                                            parseInt(v[1], 10),
                                                            parseInt(v[2], 10),
                                                            parseInt(v[3] || 0, 10)
                                                        ].join("."));
                                                    useCssLoadPatch = iOSVersion < 6
                                                } else if (ua.indexOf("android") > -1) {
                                                    var androidVersion = parseFloat(ua.slice(ua.indexOf("android") + 8));
                                                    useCssLoadPatch = androidVersion < 4.4
                                                } else if (ua.indexOf("safari") > -1) {
                                                    var versionMatch = ua.match(/version\/([\.\d]+)/i);
                                                    useCssLoadPatch = versionMatch && versionMatch[1] && parseFloat(
                                                        versionMatch[1]
                                                    ) < 6
                                                }
                                                if (useCssLoadPatch) 
                                                    var tries = 1e3,
                                                        interval = $interval(function () {
                                                            try {
                                                                el.sheet.cssRules,
                                                                $interval.cancel(interval),
                                                                el.onload()
                                                            } catch (e) {
                                                                --tries <= 0 && el.onerror()
                                                            }
                                                        }, 20)
                                                }
                                            return deferred.promise
                                        },
                                        $delegate
                                    }
                                ])
                            }
                        ])
                }(angular),
                function (angular) {
                    "use strict";
                    angular
                        .module("oc.lazyLoad")
                        .config([
                            "$provide",
                            function ($provide) {
                                $provide.decorator("$ocLazyLoad", [
                                    "$delegate",
                                    "$q",
                                    function ($delegate, $q) {
                                        return $delegate.filesLoader = function filesLoader(config) {
                                            var params = arguments.length <= 1 || void 0 === arguments[1]
                                                    ? {}
                                                    : arguments[1],
                                                cssFiles = [],
                                                templatesFiles = [],
                                                jsFiles = [],
                                                promises = [],
                                                cachePromise = null,
                                                filesCache = $delegate._getFilesCache();
                                            $delegate.toggleWatch(!0),
                                            angular.extend(params, config);
                                            var pushFile = function pushFile(path) {
                                                var m,
                                                    file_type = null;
                                                if (
                                                    angular.isObject(path) && (file_type = path.type, path = path.path),
                                                    cachePromise = filesCache.get(path),
                                                    angular.isUndefined(cachePromise) || !1 === params.cache
                                                ) {
                                                    if (
                                                        null !== (m = /^(css|less|html|htm|js)?(?=!)/.exec(path)) && (file_type = m[1], path = path.substr(
                                                            m[1].length + 1,
                                                            path.length
                                                        )),
                                                        !file_type
                                                    ) 
                                                        if (null !== (m = /[.](css|less|html|htm|js)?((\?|#).*)?$/.exec(path))) 
                                                            file_type = m[1];
                                                        else {
                                                            if ($delegate.jsLoader.hasOwnProperty("ocLazyLoadLoader") || !$delegate.jsLoader.hasOwnProperty("requirejs")) 
                                                                return void $delegate
                                                                    ._$log
                                                                    .error("File type could not be determined. " + path);
                                                            file_type = "js"
                                                        }
                                                    "css" !== file_type && "less" !== file_type || -1 !== cssFiles.indexOf(path)
                                                        ? "html" !== file_type && "htm" !== file_type || -1 !== templatesFiles.indexOf(
                                                            path
                                                        )
                                                            ? "js" === file_type || -1 === jsFiles.indexOf(path)
                                                                ? jsFiles.push(path)
                                                                : $delegate
                                                                    ._$log
                                                                    .error("File type is not valid. " + path)
                                                            : templatesFiles.push(path)
                                                        : cssFiles.push(path)
                                                } else 
                                                    cachePromise && promises.push(cachePromise)
                                            };
                                            if (
                                                params.serie
                                                    ? pushFile(params.files.shift())
                                                    : angular.forEach(params.files, function (path) {
                                                        pushFile(path)
                                                    }),
                                                cssFiles.length > 0
                                            ) {
                                                var cssDeferred = $q.defer();
                                                $delegate.cssLoader(cssFiles, function (err) {
                                                    angular.isDefined(err) && $delegate
                                                        .cssLoader
                                                        .hasOwnProperty("ocLazyLoadLoader")
                                                            ? ($delegate._$log.error(err), cssDeferred.reject(err))
                                                            : cssDeferred.resolve()
                                                }, params),
                                                promises.push(cssDeferred.promise)
                                            }
                                            if (templatesFiles.length > 0) {
                                                var templatesDeferred = $q.defer();
                                                $delegate.templatesLoader(templatesFiles, function (err) {
                                                    angular.isDefined(err) && $delegate
                                                        .templatesLoader
                                                        .hasOwnProperty("ocLazyLoadLoader")
                                                            ? ($delegate._$log.error(err), templatesDeferred.reject(err))
                                                            : templatesDeferred.resolve()
                                                }, params),
                                                promises.push(templatesDeferred.promise)
                                            }
                                            if (jsFiles.length > 0) {
                                                var jsDeferred = $q.defer();
                                                $delegate.jsLoader(jsFiles, function (err) {
                                                    angular.isDefined(err) && (
                                                        $delegate.jsLoader.hasOwnProperty("ocLazyLoadLoader") || $delegate.jsLoader.hasOwnProperty("requirejs")
                                                    )
                                                        ? ($delegate._$log.error(err), jsDeferred.reject(err))
                                                        : jsDeferred.resolve()
                                                }, params),
                                                promises.push(jsDeferred.promise)
                                            }
                                            if (0 === promises.length) {
                                                var deferred = $q.defer(),
                                                    err = "Error: no file to load has been found, if you're trying to load an existing mo" +
                                                            "dule you should use the 'inject' method instead of 'load'.";
                                                return $delegate
                                                    ._$log
                                                    .error(err),
                                                deferred.reject(err),
                                                deferred.promise
                                            }
                                            return params.serie && params.files.length > 0
                                                ? $q
                                                    .all(promises)
                                                    .then(function () {
                                                        return $delegate.filesLoader(config, params)
                                                    })
                                                : $q
                                                    .all(promises)
                                                    . finally(function (res) {
                                                        return $delegate.toggleWatch(!1),
                                                        res
                                                    })
                                        },
                                        $delegate.load = function (originalModule) {
                                            var errText,
                                                originalParams = arguments.length <= 1 || void 0 === arguments[1]
                                                    ? {}
                                                    : arguments[1],
                                                self = this,
                                                config = null,
                                                deferredList = [],
                                                deferred = $q.defer(),
                                                module = angular.copy(originalModule),
                                                params = angular.copy(originalParams);
                                            if (angular.isArray(module)) 
                                                return angular.forEach(module, function (m) {
                                                    deferredList.push(self.load(m, params))
                                                }),
                                                $q
                                                    .all(deferredList)
                                                    .then(function (res) {
                                                        deferred.resolve(res)
                                                    }, function (err) {
                                                        deferred.reject(err)
                                                    }),
                                                deferred.promise;
                                            if (
                                                angular.isString(module)
                                                    ? (config = self.getModuleConfig(module)) || (config = {
                                                        files: [module]
                                                    })
                                                    : angular.isObject(module) && (
                                                        config = angular.isDefined(module.path) && angular.isDefined(module.type)
                                                            ? {
                                                                files: [module]
                                                            }
                                                            : self.setModuleConfig(module)
                                                    ),
                                                null === config
                                            ) {
                                                return errText = 'Module "' + (
                                                    self._getModuleName(module) || "unknown"
                                                ) + '" is not configured, cannot load.',
                                                $delegate
                                                    ._$log
                                                    .error(errText),
                                                deferred.reject(new Error(errText)),
                                                deferred.promise
                                            }
                                            angular.isDefined(config.template) && (
                                                angular.isUndefined(config.files) && (config.files = []),
                                                angular.isString(config.template)
                                                    ? config.files.push(config.template)
                                                    : angular.isArray(config.template) && config.files.concat(config.template)
                                            );
                                            var localParams = angular.extend({}, params, config);
                                            return angular.isUndefined(config.files) && angular.isDefined(config.name) && $delegate.moduleExists(
                                                config.name
                                            )
                                                ? $delegate.inject(config.name, localParams, !0)
                                                : (
                                                    $delegate.filesLoader(config, localParams).then(function () {
                                                        $delegate
                                                            .inject(null, localParams)
                                                            .then(function (res) {
                                                                deferred.resolve(res)
                                                            }, function (err) {
                                                                deferred.reject(err)
                                                            })
                                                    }, function (err) {
                                                        deferred.reject(err)
                                                    }),
                                                    deferred.promise
                                                )
                                        },
                                        $delegate
                                    }
                                ])
                            }
                        ])
                }(angular),
                function (angular) {
                    "use strict";
                    angular
                        .module("oc.lazyLoad")
                        .config([
                            "$provide",
                            function ($provide) {
                                $provide.decorator("$ocLazyLoad", [
                                    "$delegate",
                                    "$q",
                                    function ($delegate, $q) {
                                        return $delegate.cssLoader = function (paths, callback, params) {
                                            var promises = [];
                                            angular.forEach(paths, function (path) {
                                                promises.push($delegate.buildElement("css", path, params))
                                            }),
                                            $q
                                                .all(promises)
                                                .then(function () {
                                                    callback()
                                                }, function (err) {
                                                    callback(err)
                                                })
                                        },
                                        $delegate.cssLoader.ocLazyLoadLoader = !0,
                                        $delegate
                                    }
                                ])
                            }
                        ])
                }(angular),
                function (angular) {
                    "use strict";
                    angular
                        .module("oc.lazyLoad")
                        .config([
                            "$provide",
                            function ($provide) {
                                $provide.decorator("$ocLazyLoad", [
                                    "$delegate",
                                    "$q",
                                    function ($delegate, $q) {
                                        return $delegate.jsLoader = function (paths, callback, params) {
                                            var promises = [];
                                            angular.forEach(paths, function (path) {
                                                promises.push($delegate.buildElement("js", path, params))
                                            }),
                                            $q
                                                .all(promises)
                                                .then(function () {
                                                    callback()
                                                }, function (err) {
                                                    callback(err)
                                                })
                                        },
                                        $delegate.jsLoader.ocLazyLoadLoader = !0,
                                        $delegate
                                    }
                                ])
                            }
                        ])
                }(angular),
                function (angular) {
                    "use strict";
                    angular
                        .module("oc.lazyLoad")
                        .config([
                            "$provide",
                            function ($provide) {
                                $provide.decorator("$ocLazyLoad", [
                                    "$delegate",
                                    "$templateCache",
                                    "$q",
                                    "$http",
                                    function ($delegate, $templateCache, $q, $http) {
                                        return $delegate.templatesLoader = function (paths, callback, params) {
                                            var promises = [],
                                                filesCache = $delegate._getFilesCache();
                                            return angular.forEach(paths, function (url) {
                                                var deferred = $q.defer();
                                                promises.push(deferred.promise),
                                                $http
                                                    .get(url, params)
                                                    .then(function (response) {
                                                        var data = response.data;
                                                        angular.isString(data) && data.length > 0 && angular.forEach(
                                                            angular.element(data),
                                                            function (node) {
                                                                "SCRIPT" === node.nodeName && "text/ng-template" === node.type && $templateCache.put(
                                                                    node.id,
                                                                    node.innerHTML
                                                                )
                                                            }
                                                        ),
                                                        angular.isUndefined(filesCache.get(url)) && filesCache.put(url, !0),
                                                        deferred.resolve()
                                                    })
                                                    .catch(function (response) {
                                                        deferred.reject(new Error(
                                                            'Unable to load template file "' + url + '": ' + response.data
                                                        ))
                                                    })
                                                }),
                                            $q
                                                .all(promises)
                                                .then(function () {
                                                    callback()
                                                }, function (err) {
                                                    callback(err)
                                                })
                                        },
                                        $delegate.templatesLoader.ocLazyLoadLoader = !0,
                                        $delegate
                                    }
                                ])
                            }
                        ])
                }(angular),
                Array.prototype.indexOf || (
                    Array.prototype.indexOf = function (searchElement, fromIndex) {
                        var k;
                        if (null == this) 
                            throw new TypeError('"this" is null or not defined');
                        var O = Object(this),
                            len = O.length >>> 0;
                        if (0 === len) 
                            return -1;
                        var n = +fromIndex || 0;
                        if (Math.abs(n) === 1 / 0 && (n = 0), n >= len) 
                            return -1;
                        for (k = Math.max(
                            n >= 0
                                ? n
                                : len - Math.abs(n),
                            0
                        ); k < len;) {
                            if (k in O && O[k] === searchElement) 
                                return k;
                            k++
                        }
                        return -1
                    }
                )
            },
            function (module, exports, __webpack_require__) {
                __webpack_require__(658),
                __webpack_require__(659),
                module.exports = "ng.deviceDetector"
            },
            function (module, exports, __webpack_require__) {
                (function (module) {
                    (function (module, window, angular) {
                        "use strict";
                        function test(string, regex) {
                            return ("string" == typeof regex || regex instanceof String) && (
                                regex = new RegExp(regex)
                            ),
                            regex instanceof RegExp
                                ? regex.test(string)
                                : regex && Array.isArray(regex.and)
                                    ? regex
                                        .and
                                        .every(function (item) {
                                            return test(string, item)
                                        })
                                    : regex && Array.isArray(regex.or)
                                        ? regex
                                            .or
                                            .some(function (item) {
                                                return test(string, item)
                                            })
                                        : !(!regex || !regex.not) && !test(string, regex.not)
                        }
                        function exec(string, regex) {
                            return ("string" == typeof regex || regex instanceof String) && (
                                regex = new RegExp(regex)
                            ),
                            regex instanceof RegExp
                                ? regex.exec(string)
                                : regex && Array.isArray(regex)
                                    ? regex.reduce(function (res, item) {
                                        return res || exec(string, item)
                                    }, null)
                                    : null
                        }
                        angular && angular
                            .module("reTree", [])
                            .factory("reTree", [
                                function () {
                                    return {test: test, exec: exec}
                                }
                            ]),
                        window && (window.reTree = {
                            test: test,
                            exec: exec
                        }),
                        module && (module.exports = {
                            test: test,
                            exec: exec
                        })
                    })(
                        module,
                        "undefined" == typeof window
                            ? null
                            : window,
                        "undefined" == typeof angular
                            ? null
                            : angular
                    )
                }).call(exports, __webpack_require__(169)(module))
            },
            function (module, exports) {
                (function (angular) {
                    "use strict";
                    angular
                        .module("ng.deviceDetector", ["reTree"])
                        .constant("BROWSERS", {
                            CHROME: "chrome",
                            FIREFOX: "firefox",
                            SAFARI: "safari",
                            OPERA: "opera",
                            IE: "ie",
                            MS_EDGE: "ms-edge",
                            FB_MESSANGER: "fb-messanger",
                            UNKNOWN: "unknown"
                        })
                        .constant("DEVICES", {
                            ANDROID: "android",
                            I_PAD: "ipad",
                            IPHONE: "iphone",
                            I_POD: "ipod",
                            BLACKBERRY: "blackberry",
                            FIREFOX_OS: "firefox-os",
                            CHROME_BOOK: "chrome-book",
                            WINDOWS_PHONE: "windows-phone",
                            PS4: "ps4",
                            VITA: "vita",
                            CHROMECAST: "chromecast",
                            APPLE_TV: "apple-tv",
                            GOOGLE_TV: "google-tv",
                            UNKNOWN: "unknown"
                        })
                        .constant("OS", {
                            WINDOWS: "windows",
                            MAC: "mac",
                            IOS: "ios",
                            ANDROID: "android",
                            LINUX: "linux",
                            UNIX: "unix",
                            FIREFOX_OS: "firefox-os",
                            CHROME_OS: "chrome-os",
                            WINDOWS_PHONE: "windows-phone",
                            UNKNOWN: "unknown"
                        })
                        .constant("OS_VERSIONS", {
                            WINDOWS_3_11: "windows-3-11",
                            WINDOWS_95: "windows-95",
                            WINDOWS_ME: "windows-me",
                            WINDOWS_98: "windows-98",
                            WINDOWS_CE: "windows-ce",
                            WINDOWS_2000: "windows-2000",
                            WINDOWS_XP: "windows-xp",
                            WINDOWS_SERVER_2003: "windows-server-2003",
                            WINDOWS_VISTA: "windows-vista",
                            WINDOWS_7: "windows-7",
                            WINDOWS_8_1: "windows-8-1",
                            WINDOWS_8: "windows-8",
                            WINDOWS_10: "windows-10",
                            WINDOWS_PHONE_7_5: "windows-phone-7-5",
                            WINDOWS_PHONE_8_1: "windows-phone-8-1",
                            WINDOWS_PHONE_10: "windows-phone-10",
                            WINDOWS_NT_4_0: "windows-nt-4-0",
                            UNKNOWN: "unknown"
                        })
                        .service("detectUtils", [
                            "deviceDetector",
                            "DEVICES",
                            "BROWSERS",
                            "OS",
                            function (deviceDetector, DEVICES, BROWSERS, OS) {
                                var deviceInfo = deviceDetector;
                                this.isMobile = function () {
                                    return "unknown" !== deviceInfo.device
                                },
                                this.isAndroid = function () {
                                    return deviceInfo.device === DEVICES.ANDROID || deviceInfo.OS === OS.ANDROID
                                },
                                this.isIOS = function () {
                                    return deviceInfo.os === OS.IOS || deviceInfo.device === DEVICES.I_POD || deviceInfo.device === DEVICES.IPHONE
                                }
                            }
                        ])
                        .factory("deviceDetector", [
                            "$window",
                            "DEVICES",
                            "BROWSERS",
                            "OS",
                            "OS_VERSIONS",
                            "reTree",
                            function ($window, DEVICES, BROWSERS, OS, OS_VERSIONS, reTree) {
                                Object.keys || (Object.keys = function () {
                                    var hasOwnProperty = Object.prototype.hasOwnProperty,
                                        hasDontEnumBug = !{
                                            toString: null
                                        }.propertyIsEnumerable("toString"),
                                        dontEnums = [
                                            "toString",
                                            "toLocaleString",
                                            "valueOf",
                                            "hasOwnProperty",
                                            "isPrototypeOf",
                                            "propertyIsEnumerable",
                                            "constructor"
                                        ],
                                        dontEnumsLength = dontEnums.length;
                                    return function (obj) {
                                        if ("object" != typeof obj && ("function" != typeof obj || null === obj)) 
                                            throw new TypeError("Object.keys called on non-object");
                                        var prop,
                                            i,
                                            result = [];
                                        for (prop in obj) 
                                            hasOwnProperty.call(obj, prop) && result.push(prop);
                                        if (hasDontEnumBug) 
                                            for (i = 0; i < dontEnumsLength; i++) 
                                                hasOwnProperty.call(obj, dontEnums[i]) && result.push(dontEnums[i]);
                                    return result
                                    }
                                }()),
                                Array.prototype.reduce || (Array.prototype.reduce = function (callback) {
                                    if (null == this) 
                                        throw new TypeError("Array.prototype.reduce called on null or undefined");
                                    if ("function" != typeof callback) 
                                        throw new TypeError(callback + " is not a function");
                                    var value,
                                        t = Object(this),
                                        len = t.length >>> 0,
                                        k = 0;
                                    if (2 == arguments.length) 
                                        value = arguments[1];
                                    else {
                                        for (; k < len && !(k in t);) 
                                            k++;
                                        if (k >= len) 
                                            throw new TypeError("Reduce of empty array with no initial value");
                                        value = t[k++]
                                    }
                                    for (; k < len; k++) 
                                        k in t && (value = callback(value, t[k], k, t));
                                    return value
                                });
                                var OS_RE = {
                                        WINDOWS: {
                                            and: [
                                                {
                                                    or: [/\bWindows|(Win\d\d)\b/, /\bWin 9x\b/]
                                                }, {
                                                    not: /\bWindows Phone\b/
                                                }
                                            ]
                                        },
                                        MAC: {
                                            and: [
                                                /\bMac OS\b/, {
                                                    not: /Windows Phone/
                                                }
                                            ]
                                        },
                                        IOS: {
                                            and: [
                                                {
                                                    or: [/\biPad\b/, /\biPhone\b/, /\biPod\b/]
                                                }, {
                                                    not: /Windows Phone/
                                                }
                                            ]
                                        },
                                        ANDROID: {
                                            and: [
                                                /\bAndroid\b/, {
                                                    not: /Windows Phone/
                                                }
                                            ]
                                        },
                                        LINUX: /\bLinux\b/,
                                        UNIX: /\bUNIX\b/,
                                        FIREFOX_OS: {
                                            and: [/\bFirefox\b/, /Mobile\b/]
                                        },
                                        CHROME_OS: /\bCrOS\b/,
                                        WINDOWS_PHONE: {
                                            or: [/\bIEMobile\b/, /\bWindows Phone\b/]
                                        },
                                        PS4: /\bMozilla\/5.0 \(PlayStation 4\b/,
                                        VITA: /\bMozilla\/5.0 \(Play(S|s)tation Vita\b/
                                    },
                                    BROWSERS_RE = {
                                        CHROME: {
                                            and: [
                                                {
                                                    or: [/\bChrome\b/, /\bCriOS\b/]
                                                }, {
                                                    not: {
                                                        or: [/\bOPR\b/, /\bEdge\b/]
                                                    }
                                                }
                                            ]
                                        },
                                        FIREFOX: /\bFirefox\b/,
                                        SAFARI: {
                                            and: [
                                                /^((?!CriOS).)*\Safari\b.*$/, {
                                                    not: {
                                                        or: [/\bOPR\b/, /\bEdge\b/, /Windows Phone/]
                                                    }
                                                }
                                            ]
                                        },
                                        OPERA: {
                                            or: [/Opera\b/, /\bOPR\b/]
                                        },
                                        IE: {
                                            or: [/\bMSIE\b/, /\bTrident\b/, /^Mozilla\/5\.0 \(Windows NT 10\.0; Win64; x64\)$/]
                                        },
                                        MS_EDGE: {
                                            or: [/\bEdge\b/]
                                        },
                                        PS4: /\bMozilla\/5.0 \(PlayStation 4\b/,
                                        VITA: /\bMozilla\/5.0 \(Play(S|s)tation Vita\b/,
                                        FB_MESSANGER: /\bFBAN\/MessengerForiOS\b/
                                    },
                                    DEVICES_RE = {
                                        ANDROID: {
                                            and: [
                                                /\bAndroid\b/, {
                                                    not: /Windows Phone/
                                                }
                                            ]
                                        },
                                        I_PAD: /\biPad\b/,
                                        IPHONE: {
                                            and: [
                                                /\biPhone\b/, {
                                                    not: /Windows Phone/
                                                }
                                            ]
                                        },
                                        I_POD: /\biPod\b/,
                                        BLACKBERRY: /\bblackberry\b/,
                                        FIREFOX_OS: {
                                            and: [/\bFirefox\b/, /\bMobile\b/]
                                        },
                                        CHROME_BOOK: /\bCrOS\b/,
                                        WINDOWS_PHONE: {
                                            or: [/\bIEMobile\b/, /\bWindows Phone\b/]
                                        },
                                        PS4: /\bMozilla\/5.0 \(PlayStation 4\b/,
                                        CHROMECAST: /\bCrKey\b/,
                                        APPLE_TV: /^iTunes-AppleTV\/4.1$/,
                                        GOOGLE_TV: /\bGoogleTV\b/,
                                        VITA: /\bMozilla\/5.0 \(Play(S|s)tation Vita\b/
                                    },
                                    OS_VERSIONS_RE = {
                                        WINDOWS_3_11: /Win16/,
                                        WINDOWS_95: /(Windows 95|Win95|Windows_95)/,
                                        WINDOWS_ME: /(Win 9x 4.90|Windows ME)/,
                                        WINDOWS_98: /(Windows 98|Win98)/,
                                        WINDOWS_CE: /Windows CE/,
                                        WINDOWS_2000: /(Windows NT 5.0|Windows 2000)/,
                                        WINDOWS_XP: /(Windows NT 5.1|Windows XP)/,
                                        WINDOWS_SERVER_2003: /Windows NT 5.2/,
                                        WINDOWS_VISTA: /Windows NT 6.0/,
                                        WINDOWS_7: /(Windows 7|Windows NT 6.1)/,
                                        WINDOWS_8_1: /(Windows 8.1|Windows NT 6.3)/,
                                        WINDOWS_8: /(Windows 8|Windows NT 6.2)/,
                                        WINDOWS_10: /(Windows NT 10.0)/,
                                        WINDOWS_PHONE_7_5: /(Windows Phone OS 7.5)/,
                                        WINDOWS_PHONE_8_1: /(Windows Phone 8.1)/,
                                        WINDOWS_PHONE_10: /(Windows Phone 10)/,
                                        WINDOWS_NT_4_0: {
                                            and: [
                                                /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/, {
                                                    not: /Windows NT 10.0/
                                                }
                                            ]
                                        }
                                    },
                                    BROWSER_VERSIONS_RE_MAP = {
                                        CHROME: [
                                            /\bChrome\/([\d\.]+)\b/, /\bCriOS\/([\d\.]+)\b/
                                        ],
                                        FIREFOX: /\bFirefox\/([\d\.]+)\b/,
                                        SAFARI: /\bVersion\/([\d\.]+)\b/,
                                        OPERA: [
                                            /\bVersion\/([\d\.]+)\b/, /\bOPR\/([\d\.]+)\b/
                                        ],
                                        IE: [
                                            /\bMSIE ([\d\.]+\w?)\b/, /\brv:([\d\.]+\w?)\b/
                                        ],
                                        MS_EDGE: /\bEdge\/([\d\.]+)\b/
                                    },
                                    BROWSER_VERSIONS_RE = Object
                                        .keys(BROWSER_VERSIONS_RE_MAP)
                                        .reduce(function (obj, key) {
                                            return obj[BROWSERS[key]] = BROWSER_VERSIONS_RE_MAP[key],
                                            obj
                                        }, {}),
                                    ua = $window.navigator.userAgent,
                                    deviceInfo = {
                                        raw: {
                                            userAgent: ua,
                                            os: {},
                                            browser: {},
                                            device: {}
                                        }
                                    };
                                if (
                                    deviceInfo.raw.os = Object.keys(OS).reduce(function (obj, item) {
                                        return obj[OS[item]] = reTree.test(ua, OS_RE[item]),
                                        obj
                                    }, {}),
                                    deviceInfo.raw.browser = Object.keys(BROWSERS).reduce(function (obj, item) {
                                        return obj[BROWSERS[item]] = reTree.test(ua, BROWSERS_RE[item]),
                                        obj
                                    }, {}),
                                    deviceInfo.raw.device = Object.keys(DEVICES).reduce(function (obj, item) {
                                        return obj[DEVICES[item]] = reTree.test(ua, DEVICES_RE[item]),
                                        obj
                                    }, {}),
                                    deviceInfo.raw.os_version = Object.keys(OS_VERSIONS).reduce(function (obj, item) {
                                        return obj[OS_VERSIONS[item]] = reTree.test(ua, OS_VERSIONS_RE[item]),
                                        obj
                                    }, {}),
                                    deviceInfo.os = [
                                        OS.WINDOWS,
                                        OS.IOS,
                                        OS.MAC,
                                        OS.ANDROID,
                                        OS.LINUX,
                                        OS.UNIX,
                                        OS.FIREFOX_OS,
                                        OS.CHROME_OS,
                                        OS.WINDOWS_PHONE
                                    ].reduce(function (previousValue, currentValue) {
                                        return previousValue === OS.UNKNOWN && deviceInfo
                                            .raw
                                            .os[currentValue]
                                                ? currentValue
                                                : previousValue
                                    }, OS.UNKNOWN),
                                    deviceInfo.browser = [
                                        BROWSERS.CHROME,
                                        BROWSERS.FIREFOX,
                                        BROWSERS.SAFARI,
                                        BROWSERS.OPERA,
                                        BROWSERS.IE,
                                        BROWSERS.MS_EDGE,
                                        BROWSERS.FB_MESSANGER
                                    ].reduce(function (previousValue, currentValue) {
                                        return previousValue === BROWSERS.UNKNOWN && deviceInfo
                                            .raw
                                            .browser[currentValue]
                                                ? currentValue
                                                : previousValue
                                    }, BROWSERS.UNKNOWN),
                                    deviceInfo.device = [
                                        DEVICES.ANDROID,
                                        DEVICES.I_PAD,
                                        DEVICES.IPHONE,
                                        DEVICES.I_POD,
                                        DEVICES.BLACKBERRY,
                                        DEVICES.FIREFOX_OS,
                                        DEVICES.CHROME_BOOK,
                                        DEVICES.WINDOWS_PHONE,
                                        DEVICES.PS4,
                                        DEVICES.CHROMECAST,
                                        DEVICES.APPLE_TV,
                                        DEVICES.GOOGLE_TV,
                                        DEVICES.VITA
                                    ].reduce(function (previousValue, currentValue) {
                                        return previousValue === DEVICES.UNKNOWN && deviceInfo
                                            .raw
                                            .device[currentValue]
                                                ? currentValue
                                                : previousValue
                                    }, DEVICES.UNKNOWN),
                                    deviceInfo.os_version = [
                                        OS_VERSIONS.WINDOWS_3_11,
                                        OS_VERSIONS.WINDOWS_95,
                                        OS_VERSIONS.WINDOWS_ME,
                                        OS_VERSIONS.WINDOWS_98,
                                        OS_VERSIONS.WINDOWS_CE,
                                        OS_VERSIONS.WINDOWS_2000,
                                        OS_VERSIONS.WINDOWS_XP,
                                        OS_VERSIONS.WINDOWS_SERVER_2003,
                                        OS_VERSIONS.WINDOWS_VISTA,
                                        OS_VERSIONS.WINDOWS_7,
                                        OS_VERSIONS.WINDOWS_8_1,
                                        OS_VERSIONS.WINDOWS_8,
                                        OS_VERSIONS.WINDOWS_10,
                                        OS_VERSIONS.WINDOWS_PHONE_7_5,
                                        OS_VERSIONS.WINDOWS_PHONE_8_1,
                                        OS_VERSIONS.WINDOWS_PHONE_10,
                                        OS_VERSIONS.WINDOWS_NT_4_0
                                    ].reduce(function (previousValue, currentValue) {
                                        return previousValue === OS_VERSIONS.UNKNOWN && deviceInfo
                                            .raw
                                            .os_version[currentValue]
                                                ? currentValue
                                                : previousValue
                                    }, OS_VERSIONS.UNKNOWN),
                                    deviceInfo.browser_version = "0",
                                    deviceInfo.browser !== BROWSERS.UNKNOWN
                                ) {
                                    var re = BROWSER_VERSIONS_RE[deviceInfo.browser],
                                        res = reTree.exec(ua, re);
                                    res && (deviceInfo.browser_version = res[1])
                                }
                                return deviceInfo.isMobile = function () {
                                    return [
                                        DEVICES.ANDROID,
                                        DEVICES.I_PAD,
                                        DEVICES.IPHONE,
                                        DEVICES.I_POD,
                                        DEVICES.BLACKBERRY,
                                        DEVICES.FIREFOX_OS,
                                        DEVICES.WINDOWS_PHONE,
                                        DEVICES.VITA
                                    ].some(function (item) {
                                        return deviceInfo.device == item
                                    })
                                },
                                deviceInfo.isTablet = function () {
                                    return [DEVICES.I_PAD, DEVICES.FIREFOX_OS].some(function (item) {
                                        return deviceInfo.device == item
                                    })
                                },
                                deviceInfo.isDesktop = function () {
                                    return [DEVICES.PS4, DEVICES.CHROME_BOOK, DEVICES.UNKNOWN].some(
                                        function (item) {
                                            return deviceInfo.device == item
                                        }
                                    )
                                },
                                deviceInfo
                            }
                        ])
                        .directive("deviceDetector", [
                            "deviceDetector",
                            function (deviceDetector) {
                                return {
                                    restrict: "A",
                                    link: function (scope, elm) {
                                        elm.addClass("os-" + deviceDetector.os),
                                        elm.addClass("browser-" + deviceDetector.browser),
                                        elm.addClass("device-" + deviceDetector.device)
                                    }
                                }
                            }
                        ])
                })(angular)
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _CODE = __webpack_require__(661),
                    _CODE2 = __webpack_require__(662),
                    _EAN_UPC = __webpack_require__(668),
                    _ITF = __webpack_require__(674),
                    _MSI = __webpack_require__(677),
                    _pharmacode = __webpack_require__(682),
                    _codabar = __webpack_require__(683),
                    _GenericBarcode = __webpack_require__(684);
                exports.default = {
                    CODE39: _CODE.CODE39,
                    CODE128: _CODE2.CODE128,
                    CODE128A: _CODE2.CODE128A,
                    CODE128B: _CODE2.CODE128B,
                    CODE128C: _CODE2.CODE128C,
                    EAN13: _EAN_UPC.EAN13,
                    EAN8: _EAN_UPC.EAN8,
                    EAN5: _EAN_UPC.EAN5,
                    EAN2: _EAN_UPC.EAN2,
                    UPC: _EAN_UPC.UPC,
                    UPCE: _EAN_UPC.UPCE,
                    ITF14: _ITF.ITF14,
                    ITF: _ITF.ITF,
                    MSI: _MSI.MSI,
                    MSI10: _MSI.MSI10,
                    MSI11: _MSI.MSI11,
                    MSI1010: _MSI.MSI1010,
                    MSI1110: _MSI.MSI1110,
                    pharmacode: _pharmacode.pharmacode,
                    codabar: _codabar.codabar,
                    GenericBarcode: _GenericBarcode.GenericBarcode
                }
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                function getEncoding(character) {
                    return getBinary(characterValue(character))
                }
                function getBinary(characterValue) {
                    return encodings[characterValue].toString(2)
                }
                function getCharacter(characterValue) {
                    return characters[characterValue]
                }
                function characterValue(character) {
                    return characters.indexOf(character)
                }
                function mod43checksum(data) {
                    for (var checksum = 0, i = 0; i < data.length; i++) 
                        checksum += characterValue(data[i]);
                    return checksum %= 43
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.CODE39 = void 0;
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _Barcode2 = __webpack_require__(29),
                    _Barcode3 = _interopRequireDefault(_Barcode2),
                    CODE39 = function (_Barcode) {
                        function CODE39(data, options) {
                            return _classCallCheck(this, CODE39),
                            data = data.toUpperCase(),
                            options.mod43 && (data += getCharacter(mod43checksum(data))),
                            _possibleConstructorReturn(
                                this,
                                (CODE39.__proto__ || Object.getPrototypeOf(CODE39)).call(this, data, options)
                            )
                        }
                        return _inherits(CODE39, _Barcode),
                        _createClass(CODE39, [
                            {
                                key: "encode",
                                value: function encode() {
                                    for (var result = getEncoding("*"), i = 0; i < this.data.length; i++) 
                                        result += getEncoding(this.data[i]) + "0";
                                    return result += getEncoding("*"), {
                                        data: result,
                                        text: this.text
                                    }
                                }
                            }, {
                                key: "valid",
                                value: function valid() {
                                    return -1 !== this
                                        .data
                                        .search(/^[0-9A-Z\-\.\ \$\/\+\%]+$/)
                                }
                            }
                        ]),
                        CODE39
                    }(_Barcode3.default),
                    characters = [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "A",
                        "B",
                        "C",
                        "D",
                        "E",
                        "F",
                        "G",
                        "H",
                        "I",
                        "J",
                        "K",
                        "L",
                        "M",
                        "N",
                        "O",
                        "P",
                        "Q",
                        "R",
                        "S",
                        "T",
                        "U",
                        "V",
                        "W",
                        "X",
                        "Y",
                        "Z",
                        "-",
                        ".",
                        " ",
                        "$",
                        "/",
                        "+",
                        "%",
                        "*"
                    ],
                    encodings = [
                        20957,
                        29783,
                        23639,
                        30485,
                        20951,
                        29813,
                        23669,
                        20855,
                        29789,
                        23645,
                        29975,
                        23831,
                        30533,
                        22295,
                        30149,
                        24005,
                        21623,
                        29981,
                        23837,
                        22301,
                        30023,
                        23879,
                        30545,
                        22343,
                        30161,
                        24017,
                        21959,
                        30065,
                        23921,
                        22385,
                        29015,
                        18263,
                        29141,
                        17879,
                        29045,
                        18293,
                        17783,
                        29021,
                        18269,
                        17477,
                        17489,
                        17681,
                        20753,
                        35770
                    ];
                exports.CODE39 = CODE39
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.CODE128C = exports.CODE128B = exports.CODE128A = exports.CODE128 = void 0;
                var _CODE128_AUTO = __webpack_require__(663),
                    _CODE128_AUTO2 = _interopRequireDefault(_CODE128_AUTO),
                    _CODE128A = __webpack_require__(665),
                    _CODE128A2 = _interopRequireDefault(_CODE128A),
                    _CODE128B = __webpack_require__(666),
                    _CODE128B2 = _interopRequireDefault(_CODE128B),
                    _CODE128C = __webpack_require__(667),
                    _CODE128C2 = _interopRequireDefault(_CODE128C);
                exports.CODE128 = _CODE128_AUTO2.default,
                exports.CODE128A = _CODE128A2.default,
                exports.CODE128B = _CODE128B2.default,
                exports.CODE128C = _CODE128C2.default
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _CODE2 = __webpack_require__(115),
                    _CODE3 = _interopRequireDefault(_CODE2),
                    _auto = __webpack_require__(664),
                    _auto2 = _interopRequireDefault(_auto),
                    CODE128AUTO = function (_CODE) {
                        function CODE128AUTO(data, options) {
                            if (_classCallCheck(this, CODE128AUTO), /^[\x00-\x7F\xC8-\xD3]+$/.test(data)) 
                                var _this = _possibleConstructorReturn(
                                    this,
                                    (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, (0, _auto2.default)(
                                        data
                                    ), options)
                                );
                            else 
                                var _this = _possibleConstructorReturn(
                                    this,
                                    (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, data, options)
                                );
                            return _possibleConstructorReturn(_this)
                        }
                        return _inherits(CODE128AUTO, _CODE),
                        CODE128AUTO
                    }(_CODE3.default);
                exports.default = CODE128AUTO
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function autoSelectFromAB(string, isA) {
                    var ranges = isA
                            ? _constants.A_CHARS
                            : _constants.B_CHARS,
                        untilC = string.match(new RegExp(
                            "^(" + ranges + "+?)(([0-9]{2}){2,})([^0-9]|$)"
                        ));
                    if (untilC) 
                        return untilC[1] + String.fromCharCode(204) + autoSelectFromC(
                            string.substring(untilC[1].length)
                        );
                    var chars = string.match(new RegExp("^" + ranges + "+"))[0];
                    return chars.length === string.length
                        ? string
                        : chars + String.fromCharCode(
                            isA
                                ? 205
                                : 206
                        ) + autoSelectFromAB(string.substring(chars.length), !isA)
                }
                function autoSelectFromC(string) {
                    var cMatch = matchSetC(string),
                        length = cMatch.length;
                    if (length === string.length) 
                        return string;
                    string = string.substring(length);
                    var isA = matchSetALength(string) >= matchSetBLength(string);
                    return cMatch + String.fromCharCode(
                        isA
                            ? 206
                            : 205
                    ) + autoSelectFromAB(string, isA)
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _constants = __webpack_require__(84),
                    matchSetALength = function matchSetALength(string) {
                        return string
                            .match(new RegExp("^" + _constants.A_CHARS + "*"))[0]
                            .length
                    },
                    matchSetBLength = function matchSetBLength(string) {
                        return string
                            .match(new RegExp("^" + _constants.B_CHARS + "*"))[0]
                            .length
                    },
                    matchSetC = function matchSetC(string) {
                        return string.match(new RegExp("^" + _constants.C_CHARS + "*"))[0]
                    };
                exports.default = function (string) {
                    var newString = void 0;
                    if (matchSetC(string).length >= 2) 
                        newString = _constants.C_START_CHAR + autoSelectFromC(string);
                    else {
                        var isA = matchSetALength(string) > matchSetBLength(string);
                        newString = (
                            isA
                                ? _constants.A_START_CHAR
                                : _constants.B_START_CHAR
                        ) + autoSelectFromAB(string, isA)
                    }
                    return newString.replace(/[\xCD\xCE]([^])[\xCD\xCE]/, function (match, char) {
                        return String.fromCharCode(203) + char
                    })
                }
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _CODE2 = __webpack_require__(115),
                    _CODE3 = _interopRequireDefault(_CODE2),
                    _constants = __webpack_require__(84),
                    CODE128A = function (_CODE) {
                        function CODE128A(string, options) {
                            return _classCallCheck(this, CODE128A),
                            _possibleConstructorReturn(
                                this,
                                (CODE128A.__proto__ || Object.getPrototypeOf(CODE128A)).call(this, _constants.A_START_CHAR + string, options)
                            )
                        }
                        return _inherits(CODE128A, _CODE),
                        _createClass(CODE128A, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return new RegExp("^" + _constants.A_CHARS + "+$").test(this.data)
                                }
                            }
                        ]),
                        CODE128A
                    }(_CODE3.default);
                exports.default = CODE128A
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _CODE2 = __webpack_require__(115),
                    _CODE3 = _interopRequireDefault(_CODE2),
                    _constants = __webpack_require__(84),
                    CODE128B = function (_CODE) {
                        function CODE128B(string, options) {
                            return _classCallCheck(this, CODE128B),
                            _possibleConstructorReturn(
                                this,
                                (CODE128B.__proto__ || Object.getPrototypeOf(CODE128B)).call(this, _constants.B_START_CHAR + string, options)
                            )
                        }
                        return _inherits(CODE128B, _CODE),
                        _createClass(CODE128B, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return new RegExp("^" + _constants.B_CHARS + "+$").test(this.data)
                                }
                            }
                        ]),
                        CODE128B
                    }(_CODE3.default);
                exports.default = CODE128B
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _CODE2 = __webpack_require__(115),
                    _CODE3 = _interopRequireDefault(_CODE2),
                    _constants = __webpack_require__(84),
                    CODE128C = function (_CODE) {
                        function CODE128C(string, options) {
                            return _classCallCheck(this, CODE128C),
                            _possibleConstructorReturn(
                                this,
                                (CODE128C.__proto__ || Object.getPrototypeOf(CODE128C)).call(this, _constants.C_START_CHAR + string, options)
                            )
                        }
                        return _inherits(CODE128C, _CODE),
                        _createClass(CODE128C, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return new RegExp("^" + _constants.C_CHARS + "+$").test(this.data)
                                }
                            }
                        ]),
                        CODE128C
                    }(_CODE3.default);
                exports.default = CODE128C
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.UPCE = exports.UPC = exports.EAN2 = exports.EAN5 = exports.EAN8 = exports.EAN13 = void 0;
                var _EAN = __webpack_require__(669),
                    _EAN2 = _interopRequireDefault(_EAN),
                    _EAN3 = __webpack_require__(670),
                    _EAN4 = _interopRequireDefault(_EAN3),
                    _EAN5 = __webpack_require__(671),
                    _EAN6 = _interopRequireDefault(_EAN5),
                    _EAN7 = __webpack_require__(672),
                    _EAN8 = _interopRequireDefault(_EAN7),
                    _UPC = __webpack_require__(279),
                    _UPC2 = _interopRequireDefault(_UPC),
                    _UPCE = __webpack_require__(673),
                    _UPCE2 = _interopRequireDefault(_UPCE);
                exports.EAN13 = _EAN2.default,
                exports.EAN8 = _EAN4.default,
                exports.EAN5 = _EAN6.default,
                exports.EAN2 = _EAN8.default,
                exports.UPC = _UPC2.default,
                exports.UPCE = _UPCE2.default
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _get = function get(object, property, receiver) {
                        null === object && (object = Function.prototype);
                        var desc = Object.getOwnPropertyDescriptor(object, property);
                        if (void 0 === desc) {
                            var parent = Object.getPrototypeOf(object);
                            return null === parent
                                ? void 0
                                : get(parent, property, receiver)
                        }
                        if ("value" in desc) 
                            return desc.value;
                        var getter = desc.get;
                        if (void 0 !== getter) 
                            return getter.call(receiver)
                    },
                    _constants = __webpack_require__(85),
                    _EAN2 = __webpack_require__(278),
                    _EAN3 = _interopRequireDefault(_EAN2),
                    checksum = function checksum(number) {
                        return (10 - number.substr(0, 12).split("").map(function (n) {
                            return + n
                        }).reduce(function (sum, a, idx) {
                            return idx % 2
                                ? sum + 3 * a
                                : sum + a
                        }, 0) % 10) % 10
                    },
                    EAN13 = function (_EAN) {
                        function EAN13(data, options) {
                            _classCallCheck(this, EAN13),
                            -1 !== data.search(/^[0-9]{12}$/) && (data += checksum(data));
                            var _this = _possibleConstructorReturn(
                                this,
                                (EAN13.__proto__ || Object.getPrototypeOf(EAN13)).call(this, data, options)
                            );
                            return _this.lastChar = options.lastChar,
                            _this
                        }
                        return _inherits(EAN13, _EAN),
                        _createClass(EAN13, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return -1 !== this
                                        .data
                                        .search(/^[0-9]{13}$/) &&+ this
                                        .data[12] === checksum(this.data)
                                }
                            }, {
                                key: "leftText",
                                value: function leftText() {
                                    return _get(
                                        EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype),
                                        "leftText",
                                        this
                                    ).call(this, 1, 6)
                                }
                            }, {
                                key: "leftEncode",
                                value: function leftEncode() {
                                    var data = this
                                            .data
                                            .substr(1, 6),
                                        structure = _constants.EAN13_STRUCTURE[this.data[0]];
                                    return _get(
                                        EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype),
                                        "leftEncode",
                                        this
                                    ).call(this, data, structure)
                                }
                            }, {
                                key: "rightText",
                                value: function rightText() {
                                    return _get(
                                        EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype),
                                        "rightText",
                                        this
                                    ).call(this, 7, 6)
                                }
                            }, {
                                key: "rightEncode",
                                value: function rightEncode() {
                                    var data = this
                                        .data
                                        .substr(7, 6);
                                    return _get(
                                        EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype),
                                        "rightEncode",
                                        this
                                    ).call(this, data, "RRRRRR")
                                }
                            }, {
                                key: "encodeGuarded",
                                value: function encodeGuarded() {
                                    var data = _get(
                                        EAN13.prototype.__proto__ || Object.getPrototypeOf(EAN13.prototype),
                                        "encodeGuarded",
                                        this
                                    ).call(this);
                                    return this.options.displayValue && (data.unshift({
                                        data: "000000000000",
                                        text: this
                                            .text
                                            .substr(0, 1),
                                        options: {
                                            textAlign: "left",
                                            fontSize: this.fontSize
                                        }
                                    }), this.options.lastChar && (data.push({data: "00"}), data.push({
                                        data: "00000",
                                        text: this.options.lastChar,
                                        options: {
                                            fontSize: this.fontSize
                                        }
                                    }))),
                                    data
                                }
                            }
                        ]),
                        EAN13
                    }(_EAN3.default);
                exports.default = EAN13
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _get = function get(object, property, receiver) {
                        null === object && (object = Function.prototype);
                        var desc = Object.getOwnPropertyDescriptor(object, property);
                        if (void 0 === desc) {
                            var parent = Object.getPrototypeOf(object);
                            return null === parent
                                ? void 0
                                : get(parent, property, receiver)
                        }
                        if ("value" in desc) 
                            return desc.value;
                        var getter = desc.get;
                        if (void 0 !== getter) 
                            return getter.call(receiver)
                    },
                    _EAN2 = __webpack_require__(278),
                    _EAN3 = _interopRequireDefault(_EAN2),
                    checksum = function checksum(number) {
                        return (10 - number.substr(0, 7).split("").map(function (n) {
                            return + n
                        }).reduce(function (sum, a, idx) {
                            return idx % 2
                                ? sum + a
                                : sum + 3 * a
                        }, 0) % 10) % 10
                    },
                    EAN8 = function (_EAN) {
                        function EAN8(data, options) {
                            return _classCallCheck(this, EAN8),
                            -1 !== data.search(/^[0-9]{7}$/) && (data += checksum(data)),
                            _possibleConstructorReturn(
                                this,
                                (EAN8.__proto__ || Object.getPrototypeOf(EAN8)).call(this, data, options)
                            )
                        }
                        return _inherits(EAN8, _EAN),
                        _createClass(EAN8, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return -1 !== this
                                        .data
                                        .search(/^[0-9]{8}$/) &&+ this
                                        .data[7] === checksum(this.data)
                                }
                            }, {
                                key: "leftText",
                                value: function leftText() {
                                    return _get(
                                        EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype),
                                        "leftText",
                                        this
                                    ).call(this, 0, 4)
                                }
                            }, {
                                key: "leftEncode",
                                value: function leftEncode() {
                                    var data = this
                                        .data
                                        .substr(0, 4);
                                    return _get(
                                        EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype),
                                        "leftEncode",
                                        this
                                    ).call(this, data, "LLLL")
                                }
                            }, {
                                key: "rightText",
                                value: function rightText() {
                                    return _get(
                                        EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype),
                                        "rightText",
                                        this
                                    ).call(this, 4, 4)
                                }
                            }, {
                                key: "rightEncode",
                                value: function rightEncode() {
                                    var data = this
                                        .data
                                        .substr(4, 4);
                                    return _get(
                                        EAN8.prototype.__proto__ || Object.getPrototypeOf(EAN8.prototype),
                                        "rightEncode",
                                        this
                                    ).call(this, data, "RRRR")
                                }
                            }
                        ]),
                        EAN8
                    }(_EAN3.default);
                exports.default = EAN8
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _constants = __webpack_require__(85),
                    _encoder = __webpack_require__(86),
                    _encoder2 = _interopRequireDefault(_encoder),
                    _Barcode2 = __webpack_require__(29),
                    _Barcode3 = _interopRequireDefault(_Barcode2),
                    checksum = function checksum(data) {
                        return data
                            .split("")
                            .map(function (n) {
                                return + n
                            })
                            .reduce(function (sum, a, idx) {
                                return idx % 2
                                    ? sum + 9 * a
                                    : sum + 3 * a
                            }, 0) % 10
                    },
                    EAN5 = function (_Barcode) {
                        function EAN5(data, options) {
                            return _classCallCheck(this, EAN5),
                            _possibleConstructorReturn(
                                this,
                                (EAN5.__proto__ || Object.getPrototypeOf(EAN5)).call(this, data, options)
                            )
                        }
                        return _inherits(EAN5, _Barcode),
                        _createClass(EAN5, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return -1 !== this
                                        .data
                                        .search(/^[0-9]{5}$/)
                                }
                            }, {
                                key: "encode",
                                value: function encode() {
                                    var structure = _constants.EAN5_STRUCTURE[checksum(this.data)];
                                    return {
                                        data: "1011" + (
                                            0,
                                            _encoder2.default
                                        )(this.data, structure, "01"),
                                        text: this.text
                                    }
                                }
                            }
                        ]),
                        EAN5
                    }(_Barcode3.default);
                exports.default = EAN5
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _constants = __webpack_require__(85),
                    _encoder = __webpack_require__(86),
                    _encoder2 = _interopRequireDefault(_encoder),
                    _Barcode2 = __webpack_require__(29),
                    _Barcode3 = _interopRequireDefault(_Barcode2),
                    EAN2 = function (_Barcode) {
                        function EAN2(data, options) {
                            return _classCallCheck(this, EAN2),
                            _possibleConstructorReturn(
                                this,
                                (EAN2.__proto__ || Object.getPrototypeOf(EAN2)).call(this, data, options)
                            )
                        }
                        return _inherits(EAN2, _Barcode),
                        _createClass(EAN2, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return -1 !== this
                                        .data
                                        .search(/^[0-9]{2}$/)
                                }
                            }, {
                                key: "encode",
                                value: function encode() {
                                    var structure = _constants.EAN2_STRUCTURE[parseInt(this.data) % 4];
                                    return {
                                        data: "1011" + (
                                            0,
                                            _encoder2.default
                                        )(this.data, structure, "01"),
                                        text: this.text
                                    }
                                }
                            }
                        ]),
                        EAN2
                    }(_Barcode3.default);
                exports.default = EAN2
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                function expandToUPCA(middleDigits, numberSystem) {
                    for (
                        var lastUpcE = parseInt(middleDigits[middleDigits.length - 1]),
                        expansion = EXPANSIONS[lastUpcE],
                        result = "",
                        digitIndex = 0,
                        i = 0;
                        i < expansion.length;
                        i++
                    ) {
                        var c = expansion[i];
                        result += "X" === c
                            ? middleDigits[digitIndex++]
                            : c
                    }
                    return "" + (
                        result = "" + numberSystem + result
                    ) + (0, _UPC.checksum)(result)
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _encoder = __webpack_require__(86),
                    _encoder2 = _interopRequireDefault(_encoder),
                    _Barcode2 = __webpack_require__(29),
                    _Barcode3 = _interopRequireDefault(_Barcode2),
                    _UPC = __webpack_require__(279),
                    EXPANSIONS = [
                        "XX00000XXX",
                        "XX10000XXX",
                        "XX20000XXX",
                        "XXX00000XX",
                        "XXXX00000X",
                        "XXXXX00005",
                        "XXXXX00006",
                        "XXXXX00007",
                        "XXXXX00008",
                        "XXXXX00009"
                    ],
                    PARITIES = [
                        [
                            "EEEOOO", "OOOEEE"
                        ],
                        [
                            "EEOEOO", "OOEOEE"
                        ],
                        [
                            "EEOOEO", "OOEEOE"
                        ],
                        [
                            "EEOOOE", "OOEEEO"
                        ],
                        [
                            "EOEEOO", "OEOOEE"
                        ],
                        [
                            "EOOEEO", "OEEOOE"
                        ],
                        [
                            "EOOOEE", "OEEEOO"
                        ],
                        [
                            "EOEOEO", "OEOEOE"
                        ],
                        [
                            "EOEOOE", "OEOEEO"
                        ],
                        [
                            "EOOEOE", "OEEOEO"
                        ]
                    ],
                    UPCE = function (_Barcode) {
                        function UPCE(data, options) {
                            _classCallCheck(this, UPCE);
                            var _this = _possibleConstructorReturn(
                                this,
                                (UPCE.__proto__ || Object.getPrototypeOf(UPCE)).call(this, data, options)
                            );
                            if (_this.isValid = !1, -1 !== data.search(/^[0-9]{6}$/)) 
                                _this.middleDigits = data,
                                _this.upcA = expandToUPCA(data, "0"),
                                _this.text = options.text || "" + _this.upcA[0] + data + _this.upcA[_this.upcA.length - 1],
                                _this.isValid = !0;
                            else {
                                if (-1 === data.search(/^[01][0-9]{7}$/)) 
                                    return _possibleConstructorReturn(_this);
                                if (
                                    _this.middleDigits = data.substring(1, data.length - 1),
                                    _this.upcA = expandToUPCA(_this.middleDigits, data[0]),
                                    _this.upcA[_this.upcA.length - 1] !== data[data.length - 1]
                                ) 
                                    return _possibleConstructorReturn(_this);
                                _this.isValid = !0
                            }
                            return _this.displayValue = options.displayValue,
                            options.fontSize > 10 * options.width
                                ? _this.fontSize = 10 * options.width
                                : _this.fontSize = options.fontSize,
                            _this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin,
                            _this
                        }
                        return _inherits(UPCE, _Barcode),
                        _createClass(UPCE, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return this.isValid
                                }
                            }, {
                                key: "encode",
                                value: function encode() {
                                    return this.options.flat
                                        ? this.flatEncoding()
                                        : this.guardedEncoding()
                                }
                            }, {
                                key: "flatEncoding",
                                value: function flatEncoding() {
                                    var result = "";
                                    return result += "101",
                                    result += this.encodeMiddleDigits(),
                                    result += "010101", {
                                        data: result,
                                        text: this.text
                                    }
                                }
                            }, {
                                key: "guardedEncoding",
                                value: function guardedEncoding() {
                                    var result = [];
                                    return this.displayValue && result.push({
                                        data: "00000000",
                                        text: this.text[0],
                                        options: {
                                            textAlign: "left",
                                            fontSize: this.fontSize
                                        }
                                    }),
                                    result.push({
                                        data: "101",
                                        options: {
                                            height: this.guardHeight
                                        }
                                    }),
                                    result.push({
                                        data: this.encodeMiddleDigits(),
                                        text: this
                                            .text
                                            .substring(1, 7),
                                        options: {
                                            fontSize: this.fontSize
                                        }
                                    }),
                                    result.push({
                                        data: "010101",
                                        options: {
                                            height: this.guardHeight
                                        }
                                    }),
                                    this.displayValue && result.push({
                                        data: "00000000",
                                        text: this.text[7],
                                        options: {
                                            textAlign: "right",
                                            fontSize: this.fontSize
                                        }
                                    }),
                                    result
                                }
                            }, {
                                key: "encodeMiddleDigits",
                                value: function encodeMiddleDigits() {
                                    var numberSystem = this.upcA[0],
                                        checkDigit = this.upcA[this.upcA.length - 1],
                                        parity = PARITIES[parseInt(checkDigit)][parseInt(numberSystem)];
                                    return (0, _encoder2.default)(this.middleDigits, parity)
                                }
                            }
                        ]),
                        UPCE
                    }(_Barcode3.default);
                exports.default = UPCE
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.ITF14 = exports.ITF = void 0;
                var _ITF = __webpack_require__(280),
                    _ITF2 = _interopRequireDefault(_ITF),
                    _ITF3 = __webpack_require__(676),
                    _ITF4 = _interopRequireDefault(_ITF3);
                exports.ITF = _ITF2.default,
                exports.ITF14 = _ITF4.default
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                exports.START_BIN = "1010",
                exports.END_BIN = "11101",
                exports.BINARIES = [
                    "00110",
                    "10001",
                    "01001",
                    "11000",
                    "00101",
                    "10100",
                    "01100",
                    "00011",
                    "10010",
                    "01010"
                ]
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _ITF2 = __webpack_require__(280),
                    _ITF3 = _interopRequireDefault(_ITF2),
                    checksum = function checksum(data) {
                        var res = data
                            .substr(0, 13)
                            .split("")
                            .map(function (num) {
                                return parseInt(num, 10)
                            })
                            .reduce(function (sum, n, idx) {
                                return sum + n * (3 - idx % 2 * 2)
                            }, 0);
                        return 10 * Math.ceil(res / 10) - res
                    },
                    ITF14 = function (_ITF) {
                        function ITF14(data, options) {
                            return _classCallCheck(this, ITF14),
                            -1 !== data.search(/^[0-9]{13}$/) && (data += checksum(data)),
                            _possibleConstructorReturn(
                                this,
                                (ITF14.__proto__ || Object.getPrototypeOf(ITF14)).call(this, data, options)
                            )
                        }
                        return _inherits(ITF14, _ITF),
                        _createClass(ITF14, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return -1 !== this
                                        .data
                                        .search(/^[0-9]{14}$/) &&+ this
                                        .data[13] === checksum(this.data)
                                }
                            }
                        ]),
                        ITF14
                    }(_ITF3.default);
                exports.default = ITF14
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.MSI1110 = exports.MSI1010 = exports.MSI11 = exports.MSI10 = exports.MSI = void 0;
                var _MSI = __webpack_require__(87),
                    _MSI2 = _interopRequireDefault(_MSI),
                    _MSI3 = __webpack_require__(678),
                    _MSI4 = _interopRequireDefault(_MSI3),
                    _MSI5 = __webpack_require__(679),
                    _MSI6 = _interopRequireDefault(_MSI5),
                    _MSI7 = __webpack_require__(680),
                    _MSI8 = _interopRequireDefault(_MSI7),
                    _MSI9 = __webpack_require__(681),
                    _MSI10 = _interopRequireDefault(_MSI9);
                exports.MSI = _MSI2.default,
                exports.MSI10 = _MSI4.default,
                exports.MSI11 = _MSI6.default,
                exports.MSI1010 = _MSI8.default,
                exports.MSI1110 = _MSI10.default
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _MSI2 = __webpack_require__(87),
                    _MSI3 = _interopRequireDefault(_MSI2),
                    _checksums = __webpack_require__(116),
                    MSI10 = function (_MSI) {
                        function MSI10(data, options) {
                            return _classCallCheck(this, MSI10),
                            _possibleConstructorReturn(
                                this,
                                (MSI10.__proto__ || Object.getPrototypeOf(MSI10)).call(this, data + (0, _checksums.mod10)(
                                    data
                                ), options)
                            )
                        }
                        return _inherits(MSI10, _MSI),
                        MSI10
                    }(_MSI3.default);
                exports.default = MSI10
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _MSI2 = __webpack_require__(87),
                    _MSI3 = _interopRequireDefault(_MSI2),
                    _checksums = __webpack_require__(116),
                    MSI11 = function (_MSI) {
                        function MSI11(data, options) {
                            return _classCallCheck(this, MSI11),
                            _possibleConstructorReturn(
                                this,
                                (MSI11.__proto__ || Object.getPrototypeOf(MSI11)).call(this, data + (0, _checksums.mod11)(
                                    data
                                ), options)
                            )
                        }
                        return _inherits(MSI11, _MSI),
                        MSI11
                    }(_MSI3.default);
                exports.default = MSI11
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _MSI2 = __webpack_require__(87),
                    _MSI3 = _interopRequireDefault(_MSI2),
                    _checksums = __webpack_require__(116),
                    MSI1010 = function (_MSI) {
                        function MSI1010(data, options) {
                            return _classCallCheck(this, MSI1010),
                            data += (0, _checksums.mod10)(data),
                            data += (0, _checksums.mod10)(data),
                            _possibleConstructorReturn(
                                this,
                                (MSI1010.__proto__ || Object.getPrototypeOf(MSI1010)).call(this, data, options)
                            )
                        }
                        return _inherits(MSI1010, _MSI),
                        MSI1010
                    }(_MSI3.default);
                exports.default = MSI1010
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _MSI2 = __webpack_require__(87),
                    _MSI3 = _interopRequireDefault(_MSI2),
                    _checksums = __webpack_require__(116),
                    MSI1110 = function (_MSI) {
                        function MSI1110(data, options) {
                            return _classCallCheck(this, MSI1110),
                            data += (0, _checksums.mod11)(data),
                            data += (0, _checksums.mod10)(data),
                            _possibleConstructorReturn(
                                this,
                                (MSI1110.__proto__ || Object.getPrototypeOf(MSI1110)).call(this, data, options)
                            )
                        }
                        return _inherits(MSI1110, _MSI),
                        MSI1110
                    }(_MSI3.default);
                exports.default = MSI1110
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.pharmacode = void 0;
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _Barcode2 = __webpack_require__(29),
                    _Barcode3 = _interopRequireDefault(_Barcode2),
                    pharmacode = function (_Barcode) {
                        function pharmacode(data, options) {
                            _classCallCheck(this, pharmacode);
                            var _this = _possibleConstructorReturn(
                                this,
                                (pharmacode.__proto__ || Object.getPrototypeOf(pharmacode)).call(this, data, options)
                            );
                            return _this.number = parseInt(data, 10),
                            _this
                        }
                        return _inherits(pharmacode, _Barcode),
                        _createClass(pharmacode, [
                            {
                                key: "encode",
                                value: function encode() {
                                    for (var z = this.number, result = ""; !isNaN(z) && 0 != z;) 
                                        z % 2 == 0
                                            ? (result = "11100" + result, z = (z - 2) / 2)
                                            : (result = "100" + result, z = (z - 1) / 2);
                                    return result = result.slice(0, -2), {
                                        data: result,
                                        text: this.text
                                    }
                                }
                            }, {
                                key: "valid",
                                value: function valid() {
                                    return this.number >= 3 && this.number <= 131070
                                }
                            }
                        ]),
                        pharmacode
                    }(_Barcode3.default);
                exports.pharmacode = pharmacode
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.codabar = void 0;
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _Barcode2 = __webpack_require__(29),
                    _Barcode3 = _interopRequireDefault(_Barcode2),
                    codabar = function (_Barcode) {
                        function codabar(data, options) {
                            _classCallCheck(this, codabar),
                            0 === data.search(/^[0-9\-\$\:\.\+\/]+$/) && (data = "A" + data + "A");
                            var _this = _possibleConstructorReturn(
                                this,
                                (codabar.__proto__ || Object.getPrototypeOf(codabar)).call(this, data.toUpperCase(), options)
                            );
                            return _this.text = _this.options.text || _this
                                .text
                                .replace(/[A-D]/g, ""),
                            _this
                        }
                        return _inherits(codabar, _Barcode),
                        _createClass(codabar, [
                            {
                                key: "valid",
                                value: function valid() {
                                    return -1 !== this
                                        .data
                                        .search(/^[A-D][0-9\-\$\:\.\+\/]+[A-D]$/)
                                }
                            }, {
                                key: "encode",
                                value: function encode() {
                                    for (
                                        var result = [],
                                        encodings = this.getEncodings(),
                                        i = 0;
                                        i < this.data.length;
                                        i++
                                    ) 
                                        result.push(encodings[
                                            this
                                                .data
                                                .charAt(i)
                                        ]),
                                        i !== this.data.length - 1 && result.push("0");
                                    return {text: this.text, data: result.join("")}
                                }
                            }, {
                                key: "getEncodings",
                                value: function getEncodings() {
                                    return {
                                        0: "101010011",
                                        1: "101011001",
                                        2: "101001011",
                                        3: "110010101",
                                        4: "101101001",
                                        5: "110101001",
                                        6: "100101011",
                                        7: "100101101",
                                        8: "100110101",
                                        9: "110100101",
                                        "-": "101001101",
                                        $: "101100101",
                                        ":": "1101011011",
                                        "/": "1101101011",
                                        ".": "1101101101",
                                        "+": "101100110011",
                                        A: "1011001001",
                                        B: "1001001011",
                                        C: "1010010011",
                                        D: "1010011001"
                                    }
                                }
                            }
                        ]),
                        codabar
                    }(_Barcode3.default);
                exports.codabar = codabar
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                function _possibleConstructorReturn(self, call) {
                    if (!self) 
                        throw new ReferenceError(
                            "this hasn't been initialised - super() hasn't been called"
                        );
                    return !call || "object" != typeof call && "function" != typeof call
                        ? self
                        : call
                }
                function _inherits(subClass, superClass) {
                    if ("function" != typeof superClass && null !== superClass) 
                        throw new TypeError(
                            "Super expression must either be null or a function, not " + typeof superClass
                        );
                    subClass.prototype = Object.create(superClass && superClass.prototype, {
                        constructor: {
                            value: subClass,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    superClass && (
                        Object.setPrototypeOf
                            ? Object.setPrototypeOf(subClass, superClass)
                            : subClass.__proto__ = superClass
                    )
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.GenericBarcode = void 0;
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _Barcode2 = __webpack_require__(29),
                    _Barcode3 = _interopRequireDefault(_Barcode2),
                    GenericBarcode = function (_Barcode) {
                        function GenericBarcode(data, options) {
                            return _classCallCheck(this, GenericBarcode),
                            _possibleConstructorReturn(
                                this,
                                (GenericBarcode.__proto__ || Object.getPrototypeOf(GenericBarcode)).call(this, data, options)
                            )
                        }
                        return _inherits(GenericBarcode, _Barcode),
                        _createClass(GenericBarcode, [
                            {
                                key: "encode",
                                value: function encode() {
                                    return {data: "10101010101010101010101010101010101010101", text: this.text}
                                }
                            }, {
                                key: "valid",
                                value: function valid() {
                                    return !0
                                }
                            }
                        ]),
                        GenericBarcode
                    }(_Barcode3.default);
                exports.GenericBarcode = GenericBarcode
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function linearizeEncodings(encodings) {
                    function nextLevel(encoded) {
                        if (Array.isArray(encoded)) 
                            for (var i = 0; i < encoded.length; i++) 
                                nextLevel(encoded[i]);
                    else 
                            encoded.text = encoded.text || "",
                            encoded.data = encoded.data || "",
                            linearEncodings.push(encoded)
                    }
                    var linearEncodings = [];
                    return nextLevel(encodings),
                    linearEncodings
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.default = linearizeEncodings
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function fixOptions(options) {
                    return options.marginTop = options.marginTop || options.margin,
                    options.marginBottom = options.marginBottom || options.margin,
                    options.marginRight = options.marginRight || options.margin,
                    options.marginLeft = options.marginLeft || options.margin,
                    options
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }),
                exports.default = fixOptions
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function getRenderProperties(element) {
                    if ("string" == typeof element) 
                        return querySelectedRenderProperties(element);
                    if (Array.isArray(element)) {
                        for (var returnArray = [], i = 0; i < element.length; i++) 
                            returnArray.push(getRenderProperties(element[i]));
                        return returnArray
                    }
                    if ("undefined" != typeof HTMLCanvasElement && element instanceof HTMLImageElement) 
                        return newCanvasRenderProperties(element);
                    if (element && "svg" === element.nodeName || "undefined" != typeof SVGElement && element instanceof SVGElement) 
                        return {
                            element: element,
                            options: (0, _getOptionsFromElement2.default)(element),
                            renderer: _renderers2.default.SVGRenderer
                        };
                    if ("undefined" != typeof HTMLCanvasElement && element instanceof HTMLCanvasElement) 
                        return {
                            element: element,
                            options: (0, _getOptionsFromElement2.default)(element),
                            renderer: _renderers2.default.CanvasRenderer
                        };
                    if (element && element.getContext) 
                        return {element: element, renderer: _renderers2.default.CanvasRenderer};
                    if (element && "object" === (
                        void 0 === element
                            ? "undefined"
                            : _typeof(element)
                    ) && !element.nodeName) 
                        return {element: element, renderer: _renderers2.default.ObjectRenderer};
                    throw new _exceptions.InvalidElementException
                }
                function querySelectedRenderProperties(string) {
                    var selector = document.querySelectorAll(string);
                    if (0 !== selector.length) {
                        for (var returnArray = [], i = 0; i < selector.length; i++) 
                            returnArray.push(getRenderProperties(selector[i]));
                        return returnArray
                    }
                }
                function newCanvasRenderProperties(imgElement) {
                    var canvas = document.createElement("canvas");
                    return {
                        element: canvas,
                        options: (0, _getOptionsFromElement2.default)(imgElement),
                        renderer: _renderers2.default.CanvasRenderer,
                        afterRender: function afterRender() {
                            imgElement.setAttribute("src", canvas.toDataURL())
                        }
                    }
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                        ? function (obj) {
                            return typeof obj
                        }
                        : function (obj) {
                            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype
                                ? "symbol"
                                : typeof obj
                        },
                    _getOptionsFromElement = __webpack_require__(688),
                    _getOptionsFromElement2 = _interopRequireDefault(_getOptionsFromElement),
                    _renderers = __webpack_require__(689),
                    _renderers2 = _interopRequireDefault(_renderers),
                    _exceptions = __webpack_require__(284);
                exports.default = getRenderProperties
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function getOptionsFromElement(element) {
                    var options = {};
                    for (var property in _defaults2.default) 
                        _defaults2
                            .default
                            .hasOwnProperty(property) && (
                                element.hasAttribute(
                                "jsbarcode-" + property.toLowerCase()
                            ) && (options[property] = element.getAttribute("jsbarcode-" + property.toLowerCase())),
                                element.hasAttribute(
                                "data-" + property.toLowerCase()
                            ) && (options[property] = element.getAttribute("data-" + property.toLowerCase()))
                            );
                    return options.value = element.getAttribute("jsbarcode-value") || element.getAttribute(
                        "data-value"
                    ),
                    options = (0, _optionsFromStrings2.default)(options)
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _optionsFromStrings = __webpack_require__(281),
                    _optionsFromStrings2 = _interopRequireDefault(_optionsFromStrings),
                    _defaults = __webpack_require__(282),
                    _defaults2 = _interopRequireDefault(_defaults);
                exports.default = getOptionsFromElement
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _canvas = __webpack_require__(690),
                    _canvas2 = _interopRequireDefault(_canvas),
                    _svg = __webpack_require__(691),
                    _svg2 = _interopRequireDefault(_svg),
                    _object = __webpack_require__(692),
                    _object2 = _interopRequireDefault(_object);
                exports.default = {
                    CanvasRenderer: _canvas2.default,
                    SVGRenderer: _svg2.default,
                    ObjectRenderer: _object2.default
                }
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _merge = __webpack_require__(117),
                    _merge2 = _interopRequireDefault(_merge),
                    _shared = __webpack_require__(283),
                    CanvasRenderer = function () {
                        function CanvasRenderer(canvas, encodings, options) {
                            _classCallCheck(this, CanvasRenderer),
                            this.canvas = canvas,
                            this.encodings = encodings,
                            this.options = options
                        }
                        return _createClass(CanvasRenderer, [
                            {
                                key: "render",
                                value: function render() {
                                    if (!this.canvas.getContext) 
                                        throw new Error("The browser does not support canvas.");
                                    this.prepareCanvas();
                                    for (var i = 0; i < this.encodings.length; i++) {
                                        var encodingOptions = (0, _merge2.default)(
                                            this.options,
                                            this.encodings[i].options
                                        );
                                        this.drawCanvasBarcode(encodingOptions, this.encodings[i]),
                                        this.drawCanvasText(encodingOptions, this.encodings[i]),
                                        this.moveCanvasDrawing(this.encodings[i])
                                    }
                                    this.restoreCanvas()
                                }
                            }, {
                                key: "prepareCanvas",
                                value: function prepareCanvas() {
                                    var ctx = this
                                        .canvas
                                        .getContext("2d");
                                    ctx.save(),
                                    (0, _shared.calculateEncodingAttributes)(this.encodings, this.options, ctx);
                                    var totalWidth = (0, _shared.getTotalWidthOfEncodings)(this.encodings),
                                        maxHeight = (0, _shared.getMaximumHeightOfEncodings)(this.encodings);
                                    this.canvas.width = totalWidth + this.options.marginLeft + this.options.marginRight,
                                    this.canvas.height = maxHeight,
                                    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height),
                                    this.options.background && (
                                        ctx.fillStyle = this.options.background,
                                        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)
                                    ),
                                    ctx.translate(this.options.marginLeft, 0)
                                }
                            }, {
                                key: "drawCanvasBarcode",
                                value: function drawCanvasBarcode(options, encoding) {
                                    var yFrom,
                                        ctx = this
                                            .canvas
                                            .getContext("2d"),
                                        binary = encoding.data;
                                    yFrom = "top" == options.textPosition
                                        ? options.marginTop + options.fontSize + options.textMargin
                                        : options.marginTop,
                                    ctx.fillStyle = options.lineColor;
                                    for (var b = 0; b < binary.length; b++) {
                                        var x = b * options.width + encoding.barcodePadding;
                                        "1" === binary[b]
                                            ? ctx.fillRect(x, yFrom, options.width, options.height)
                                            : binary[b] && ctx.fillRect(
                                                x,
                                                yFrom,
                                                options.width,
                                                options.height * binary[b]
                                            )
                                    }
                                }
                            }, {
                                key: "drawCanvasText",
                                value: function drawCanvasText(options, encoding) {
                                    var ctx = this
                                            .canvas
                                            .getContext("2d"),
                                        font = options.fontOptions + " " + options.fontSize + "px " + options.font;
                                    if (options.displayValue) {
                                        var x,
                                            y;
                                        y = "top" == options.textPosition
                                            ? options.marginTop + options.fontSize - options.textMargin
                                            : options.height + options.textMargin + options.marginTop + options.fontSize,
                                        ctx.font = font,
                                        "left" == options.textAlign || encoding.barcodePadding > 0
                                            ? (x = 0, ctx.textAlign = "left")
                                            : "right" == options.textAlign
                                                ? (x = encoding.width - 1, ctx.textAlign = "right")
                                                : (x = encoding.width / 2, ctx.textAlign = "center"),
                                        ctx.fillText(encoding.text, x, y)
                                    }
                                }
                            }, {
                                key: "moveCanvasDrawing",
                                value: function moveCanvasDrawing(encoding) {
                                    this
                                        .canvas
                                        .getContext("2d")
                                        .translate(encoding.width, 0)
                                }
                            }, {
                                key: "restoreCanvas",
                                value: function restoreCanvas() {
                                    this
                                        .canvas
                                        .getContext("2d")
                                        .restore()
                                }
                            }
                        ]),
                        CanvasRenderer
                    }();
                exports.default = CanvasRenderer
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule
                        ? obj
                        : {
                            default: obj
                        }
                }
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    _merge = __webpack_require__(117),
                    _merge2 = _interopRequireDefault(_merge),
                    _shared = __webpack_require__(283),
                    svgns = "http://www.w3.org/2000/svg",
                    SVGRenderer = function () {
                        function SVGRenderer(svg, encodings, options) {
                            _classCallCheck(this, SVGRenderer),
                            this.svg = svg,
                            this.encodings = encodings,
                            this.options = options,
                            this.document = options.xmlDocument || document
                        }
                        return _createClass(SVGRenderer, [
                            {
                                key: "render",
                                value: function render() {
                                    var currentX = this.options.marginLeft;
                                    this.prepareSVG();
                                    for (var i = 0; i < this.encodings.length; i++) {
                                        var encoding = this.encodings[i],
                                            encodingOptions = (0, _merge2.default)(this.options, encoding.options),
                                            group = this.createGroup(currentX, encodingOptions.marginTop, this.svg);
                                        this.setGroupOptions(group, encodingOptions),
                                        this.drawSvgBarcode(group, encodingOptions, encoding),
                                        this.drawSVGText(group, encodingOptions, encoding),
                                        currentX += encoding.width
                                    }
                                }
                            }, {
                                key: "prepareSVG",
                                value: function prepareSVG() {
                                    for (; this.svg.firstChild;) 
                                        this
                                            .svg
                                            .removeChild(this.svg.firstChild);
                                    
                                    (0, _shared.calculateEncodingAttributes)(this.encodings, this.options);
                                    var totalWidth = (0, _shared.getTotalWidthOfEncodings)(this.encodings),
                                        maxHeight = (0, _shared.getMaximumHeightOfEncodings)(this.encodings),
                                        width = totalWidth + this.options.marginLeft + this.options.marginRight;
                                    this.setSvgAttributes(width, maxHeight),
                                    this.options.background && this
                                        .drawRect(0, 0, width, maxHeight, this.svg)
                                        .setAttribute("style", "fill:" + this.options.background + ";")
                                }
                            }, {
                                key: "drawSvgBarcode",
                                value: function drawSvgBarcode(parent, options, encoding) {
                                    var yFrom,
                                        binary = encoding.data;
                                    yFrom = "top" == options.textPosition
                                        ? options.fontSize + options.textMargin
                                        : 0;
                                    for (var barWidth = 0, x = 0, b = 0; b < binary.length; b++) 
                                        x = b * options.width + encoding.barcodePadding,
                                        "1" === binary[b]
                                            ? barWidth++
                                            : barWidth > 0 && (this.drawRect(
                                                x - options.width * barWidth,
                                                yFrom,
                                                options.width * barWidth,
                                                options.height,
                                                parent
                                            ), barWidth = 0);
                                    barWidth > 0 && this.drawRect(
                                        x - options.width * (barWidth - 1),
                                        yFrom,
                                        options.width * barWidth,
                                        options.height,
                                        parent
                                    )
                                }
                            }, {
                                key: "drawSVGText",
                                value: function drawSVGText(parent, options, encoding) {
                                    var textElem = this
                                        .document
                                        .createElementNS(svgns, "text");
                                    if (options.displayValue) {
                                        var x,
                                            y;
                                        textElem.setAttribute(
                                            "style",
                                            "font:" + options.fontOptions + " " + options.fontSize + "px " + options.font
                                        ),
                                        y = "top" == options.textPosition
                                            ? options.fontSize - options.textMargin
                                            : options.height + options.textMargin + options.fontSize,
                                        "left" == options.textAlign || encoding.barcodePadding > 0
                                            ? (x = 0, textElem.setAttribute("text-anchor", "start"))
                                            : "right" == options.textAlign
                                                ? (x = encoding.width - 1, textElem.setAttribute("text-anchor", "end"))
                                                : (x = encoding.width / 2, textElem.setAttribute("text-anchor", "middle")),
                                        textElem.setAttribute("x", x),
                                        textElem.setAttribute("y", y),
                                        textElem.appendChild(this.document.createTextNode(encoding.text)),
                                        parent.appendChild(textElem)
                                    }
                                }
                            }, {
                                key: "setSvgAttributes",
                                value: function setSvgAttributes(width, height) {
                                    var svg = this.svg;
                                    svg.setAttribute("width", width + "px"),
                                    svg.setAttribute("height", height + "px"),
                                    svg.setAttribute("x", "0px"),
                                    svg.setAttribute("y", "0px"),
                                    svg.setAttribute("viewBox", "0 0 " + width + " " + height),
                                    svg.setAttribute("xmlns", svgns),
                                    svg.setAttribute("version", "1.1"),
                                    svg.setAttribute("style", "transform: translate(0,0)")
                                }
                            }, {
                                key: "createGroup",
                                value: function createGroup(x, y, parent) {
                                    var group = this
                                        .document
                                        .createElementNS(svgns, "g");
                                    return group.setAttribute("transform", "translate(" + x + ", " + y + ")"),
                                    parent.appendChild(group),
                                    group
                                }
                            }, {
                                key: "setGroupOptions",
                                value: function setGroupOptions(group, options) {
                                    group.setAttribute("style", "fill:" + options.lineColor + ";")
                                }
                            }, {
                                key: "drawRect",
                                value: function drawRect(x, y, width, height, parent) {
                                    var rect = this
                                        .document
                                        .createElementNS(svgns, "rect");
                                    return rect.setAttribute("x", x),
                                    rect.setAttribute("y", y),
                                    rect.setAttribute("width", width),
                                    rect.setAttribute("height", height),
                                    parent.appendChild(rect),
                                    rect
                                }
                            }
                        ]),
                        SVGRenderer
                    }();
                exports.default = SVGRenderer
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    ObjectRenderer = function () {
                        function ObjectRenderer(object, encodings, options) {
                            _classCallCheck(this, ObjectRenderer),
                            this.object = object,
                            this.encodings = encodings,
                            this.options = options
                        }
                        return _createClass(ObjectRenderer, [
                            {
                                key: "render",
                                value: function render() {
                                    this.object.encodings = this.encodings
                                }
                            }
                        ]),
                        ObjectRenderer
                    }();
                exports.default = ObjectRenderer
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                function _classCallCheck(instance, Constructor) {
                    if (!(instance instanceof Constructor)) 
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                });
                var _createClass = function () {
                        function defineProperties(target, props) {
                            for (var i = 0; i < props.length; i++) {
                                var descriptor = props[i];
                                descriptor.enumerable = descriptor.enumerable || !1,
                                descriptor.configurable = !0,
                                "value" in descriptor && (descriptor.writable = !0),
                                Object.defineProperty(target, descriptor.key, descriptor)
                            }
                        }
                        return function (Constructor, protoProps, staticProps) {
                            return protoProps && defineProperties(Constructor.prototype, protoProps),
                            staticProps && defineProperties(Constructor, staticProps),
                            Constructor
                        }
                    }(),
                    ErrorHandler = function () {
                        function ErrorHandler(api) {
                            _classCallCheck(this, ErrorHandler),
                            this.api = api
                        }
                        return _createClass(ErrorHandler, [
                            {
                                key: "handleCatch",
                                value: function handleCatch(e) {
                                    if ("InvalidInputException" !== e.name) 
                                        throw e;
                                    if (this.api._options.valid === this.api._defaults.valid) 
                                        throw e.message;
                                    this
                                        .api
                                        ._options
                                        .valid(!1),
                                    this.api.render = function () {}
                                }
                            }, {
                                key: "wrapBarcodeCall",
                                value: function wrapBarcodeCall(func) {
                                    try {
                                        var result = func.apply(void 0, arguments);
                                        return this
                                            .api
                                            ._options
                                            .valid(!0),
                                        result
                                    } catch (e) {
                                        return this.handleCatch(e),
                                        this.api
                                    }
                                }
                            }
                        ]),
                        ErrorHandler
                    }();
                exports.default = ErrorHandler
            },
            function (module, exports, __webpack_require__) {
                (module.exports = __webpack_require__(695))
                    .tz
                    .load(__webpack_require__(696))
            },
            function (module, exports, __webpack_require__) {
                var __WEBPACK_AMD_DEFINE_FACTORY__,
                    __WEBPACK_AMD_DEFINE_ARRAY__,
                    __WEBPACK_AMD_DEFINE_RESULT__;
                (function (root, factory) {
                    "use strict";
                    "object" == typeof module && module.exports
                        ? module.exports = factory(__webpack_require__(48))
                        : (
                            __WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(48)],
                            __WEBPACK_AMD_DEFINE_FACTORY__ = factory,
                            void 0 !== (
                                __WEBPACK_AMD_DEFINE_RESULT__ = "function" == typeof __WEBPACK_AMD_DEFINE_FACTORY__
                                    ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)
                                    : __WEBPACK_AMD_DEFINE_FACTORY__
                            ) && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)
                        )
                })(0, function (moment) {
                    "use strict";
                    function charCodeToInt(charCode) {
                        return charCode > 96
                            ? charCode - 87
                            : charCode > 64
                                ? charCode - 29
                                : charCode - 48
                    }
                    function unpackBase60(string) {
                        var num,
                            i = 0,
                            parts = string.split("."),
                            whole = parts[0],
                            fractional = parts[1] || "",
                            multiplier = 1,
                            out = 0,
                            sign = 1;
                        for (
                            45 === string.charCodeAt(0) && (i = 1, sign = -1),
                            i;
                            i < whole.length;
                            i++
                        ) 
                            num = charCodeToInt(whole.charCodeAt(i)),
                            out = 60 * out + num;
                        for (i = 0; i < fractional.length; i++) 
                            multiplier /= 60,
                            num = charCodeToInt(fractional.charCodeAt(i)),
                            out += num * multiplier;
                        return out * sign
                    }
                    function arrayToInt(array) {
                        for (var i = 0; i < array.length; i++) 
                            array[i] = unpackBase60(array[i])
                    }
                    function intToUntil(array, length) {
                        for (var i = 0; i < length; i++) 
                            array[i] = Math.round((array[i - 1] || 0) + 6e4 * array[i]);
                        array[length - 1] = 1 / 0
                    }
                    function mapIndices(source, indices) {
                        var i,
                            out = [];
                        for (i = 0; i < indices.length; i++) 
                            out[i] = source[indices[i]];
                        return out
                    }
                    function unpack(string) {
                        var data = string.split("|"),
                            offsets = data[2].split(" "),
                            indices = data[3].split(""),
                            untils = data[4].split(" ");
                        return arrayToInt(offsets),
                        arrayToInt(indices),
                        arrayToInt(untils),
                        intToUntil(untils, indices.length), {
                            name: data[0],
                            abbrs: mapIndices(data[1].split(" "), indices),
                            offsets: mapIndices(offsets, indices),
                            untils: untils,
                            population: 0 | data[5]
                        }
                    }
                    function Zone(packedString) {
                        packedString && this._set(unpack(packedString))
                    }
                    function Country(country_name, zone_names) {
                        this.name = country_name,
                        this.zones = zone_names
                    }
                    function OffsetAt(at) {
                        var timeString = at.toTimeString(),
                            abbr = timeString.match(/\([a-z ]+\)/i);
                        abbr && abbr[0]
                            ? (
                                abbr = abbr[0].match(/[A-Z]/g),
                                abbr = abbr
                                    ? abbr.join("")
                                    : void 0
                            )
                            : (
                                abbr = timeString.match(/[A-Z]{3,5}/g),
                                abbr = abbr
                                    ? abbr[0]
                                    : void 0
                            ),
                        "GMT" === abbr && (abbr = void 0),
                        this.at = +at,
                        this.abbr = abbr,
                        this.offset = at.getTimezoneOffset()
                    }
                    function ZoneScore(zone) {
                        this.zone = zone,
                        this.offsetScore = 0,
                        this.abbrScore = 0
                    }
                    function findChange(low, high) {
                        for (var mid, diff; diff = 6e4 * ((high.at - low.at) / 12e4 | 0);) 
                            mid = new OffsetAt(new Date(low.at + diff)),
                            mid.offset === low.offset
                                ? low = mid
                                : high = mid;
                        return low
                    }
                    function userOffsets() {
                        var change,
                            next,
                            i,
                            startYear = (new Date).getFullYear() - 2,
                            last = new OffsetAt(new Date(startYear, 0, 1)),
                            offsets = [last];
                        for (i = 1; i < 48; i++) 
                            next = new OffsetAt(new Date(startYear, i, 1)),
                            next.offset !== last.offset && (
                                change = findChange(last, next),
                                offsets.push(change),
                                offsets.push(new OffsetAt(new Date(
                                    change.at + 6e4
                                )))
                            ),
                            last = next;
                        for (i = 0; i < 4; i++) 
                            offsets.push(new OffsetAt(new Date(startYear + i, 0, 1))),
                            offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
                        return offsets
                    }
                    function sortZoneScores(a, b) {
                        return a.offsetScore !== b.offsetScore
                            ? a.offsetScore - b.offsetScore
                            : a.abbrScore !== b.abbrScore
                                ? a.abbrScore - b.abbrScore
                                : a.zone.population !== b.zone.population
                                    ? b.zone.population - a.zone.population
                                    : b
                                        .zone
                                        .name
                                        .localeCompare(a.zone.name)
                    }
                    function addToGuesses(name, offsets) {
                        var i,
                            offset;
                        for (arrayToInt(offsets), i = 0; i < offsets.length; i++) 
                            offset = offsets[i],
                            guesses[offset] = guesses[offset] || {}
                        ,
                        guesses[offset][name] = !0
                    }
                    function guessesForUserOffsets(offsets) {
                        var i,
                            j,
                            guessesOffset,
                            offsetsLength = offsets.length,
                            filteredGuesses = {},
                            out = [];
                        for (i = 0; i < offsetsLength; i++) {
                            guessesOffset = guesses[offsets[i].offset] || {};
                            for (j in guessesOffset) 
                                guessesOffset.hasOwnProperty(j) && (filteredGuesses[j] = !0)
                        }
                        for (i in filteredGuesses) 
                            filteredGuesses.hasOwnProperty(i) && out.push(names[i]);
                        return out
                    }
                    function rebuildGuess() {
                        try {
                            var intlName = Intl
                                .DateTimeFormat()
                                .resolvedOptions()
                                .timeZone;
                            if (intlName && intlName.length > 3) {
                                var name = names[normalizeName(intlName)];
                                if (name) 
                                    return name;
                                logError(
                                    "Moment Timezone found " + intlName + " from the Intl api, but did not have tha" +
                                "t data loaded."
                                )
                            }
                        } catch (e) {}
                        var zoneScore,
                            i,
                            j,
                            offsets = userOffsets(),
                            offsetsLength = offsets.length,
                            guesses = guessesForUserOffsets(offsets),
                            zoneScores = [];
                        for (i = 0; i < guesses.length; i++) {
                            for (
                                zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength),
                                j = 0;
                                j < offsetsLength;
                                j++
                            ) 
                                zoneScore.scoreOffsetAt(offsets[j]);
                            zoneScores.push(zoneScore)
                        }
                        return zoneScores.sort(sortZoneScores),
                        zoneScores.length > 0
                            ? zoneScores[0].zone.name
                            : void 0
                    }
                    function guess(ignoreCache) {
                        return cachedGuess && !ignoreCache || (cachedGuess = rebuildGuess()),
                        cachedGuess
                    }
                    function normalizeName(name) {
                        return (name || "")
                            .toLowerCase()
                            .replace(/\//g, "_")
                    }
                    function addZone(packed) {
                        var i,
                            name,
                            split,
                            normalized;
                        for (
                            "string" == typeof packed && (packed = [packed]),
                            i = 0;
                            i < packed.length;
                            i++
                        ) 
                            split = packed[i].split("|"),
                            name = split[0],
                            normalized = normalizeName(name),
                            zones[normalized] = packed[i],
                            names[normalized] = name,
                            addToGuesses(normalized, split[2].split(" "))
                    }
                    function getZone(name, caller) {
                        name = normalizeName(name);
                        var link,
                            zone = zones[name];
                        return zone instanceof Zone
                            ? zone
                            : "string" == typeof zone
                                ? (zone = new Zone(zone), zones[name] = zone, zone)
                                : links[name] && caller !== getZone && (link = getZone(links[name], getZone))
                                    ? (
                                        zone = zones[name] = new Zone,
                                        zone._set(link),
                                        zone.name = names[name],
                                        zone
                                    )
                                    : null
                    }
                    function getNames() {
                        var i,
                            out = [];
                        for (i in names) 
                            names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i] && out.push(
                                names[i]
                            );
                        return out.sort()
                    }
                    function getCountryNames() {
                        return Object.keys(countries)
                    }
                    function addLink(aliases) {
                        var i,
                            alias,
                            normal0,
                            normal1;
                        for (
                            "string" == typeof aliases && (aliases = [aliases]),
                            i = 0;
                            i < aliases.length;
                            i++
                        ) 
                            alias = aliases[i].split("|"),
                            normal0 = normalizeName(alias[0]),
                            normal1 = normalizeName(alias[1]),
                            links[normal0] = normal1,
                            names[normal0] = alias[0],
                            links[normal1] = normal0,
                            names[normal1] = alias[1]
                    }
                    function addCountries(data) {
                        var i,
                            country_code,
                            country_zones,
                            split;
                        if (data && data.length) 
                            for (i = 0; i < data.length; i++) 
                                split = data[i].split("|"),
                                country_code = split[0].toUpperCase(),
                                country_zones = split[1].split(" "),
                                countries[country_code] = new Country(country_code, country_zones)
                    }
                    function getCountry(name) {
                        return name = name.toUpperCase(),
                        countries[name] || null
                    }
                    function zonesForCountry(country, with_offset) {
                        if (!(country = getCountry(country))) 
                            return null;
                        var zones = country
                            .zones
                            .sort();
                        return with_offset
                            ? zones.map(function (zone_name) {
                                return {
                                    name: zone_name,
                                    offset: getZone(zone_name).utcOffset(new Date)
                                }
                            })
                            : zones
                    }
                    function loadData(data) {
                        addZone(data.zones),
                        addLink(data.links),
                        addCountries(data.countries),
                        tz.dataVersion = data.version
                    }
                    function zoneExists(name) {
                        return zoneExists.didShowError || (zoneExists.didShowError = !0, logError(
                            "moment.tz.zoneExists('" + name + "') has been deprecated in favor of !moment.t" +
                        "z.zone('" + name + "')"
                        )),
                        !!getZone(name)
                    }
                    function needsOffset(m) {
                        var isUnixTimestamp = "X" === m._f || "x" === m._f;
                        return !(!m._a || void 0 !== m._tzm || isUnixTimestamp)
                    }
                    function logError(message) {
                        "undefined" != typeof console && "function" == typeof console.error && console.error(
                            message
                        )
                    }
                    function tz(input) {
                        var args = Array
                                .prototype
                                .slice
                                .call(arguments, 0, -1),
                            name = arguments[arguments.length - 1],
                            zone = getZone(name),
                            out = moment
                                .utc
                                .apply(null, args);
                        return zone && !moment.isMoment(input) && needsOffset(out) && out.add(
                            zone.parse(out),
                            "minutes"
                        ),
                        out.tz(name),
                        out
                    }
                    function abbrWrap(old) {
                        return function () {
                            return this._z
                                ? this
                                    ._z
                                    .abbr(this)
                                : old.call(this)
                        }
                    }
                    function resetZoneWrap(old) {
                        return function () {
                            return this._z = null,
                            old.apply(this, arguments)
                        }
                    }
                    function resetZoneWrap2(old) {
                        return function () {
                            return arguments.length > 0 && (this._z = null),
                            old.apply(this, arguments)
                        }
                    }
                    void 0 === moment.version && moment.default && (moment = moment.default);
                    var cachedGuess,
                        VERSION = "0.5.31",
                        zones = {},
                        links = {},
                        countries = {},
                        names = {},
                        guesses = {};
                    moment && "string" == typeof moment.version || logError(
                        "Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/u" +
                    "se-it/browser/"
                    );
                    var momentVersion = moment
                            .version
                            .split("."),
                        major = +momentVersion[0],
                        minor = +momentVersion[1];
                    (major < 2 || 2 === major && minor < 6) && logError(
                        "Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js " +
                    moment.version + ". See momentjs.com"
                    ),
                    Zone.prototype = {
                        _set: function (unpacked) {
                            this.name = unpacked.name,
                            this.abbrs = unpacked.abbrs,
                            this.untils = unpacked.untils,
                            this.offsets = unpacked.offsets,
                            this.population = unpacked.population
                        },
                        _index: function (timestamp) {
                            var i,
                                target = +timestamp,
                                untils = this.untils;
                            for (i = 0; i < untils.length; i++) 
                                if (target < untils[i]) 
                                    return i
                        },
                        countries: function () {
                            var zone_name = this.name;
                            return Object
                                .keys(countries)
                                .filter(function (country_code) {
                                    return -1 !== countries[country_code]
                                        .zones
                                        .indexOf(zone_name)
                                })
                        },
                        parse: function (timestamp) {
                            var offset,
                                offsetNext,
                                offsetPrev,
                                i,
                                target = +timestamp,
                                offsets = this.offsets,
                                untils = this.untils,
                                max = untils.length - 1;
                            for (i = 0; i < max; i++) 
                                if (
                                    offset = offsets[i],
                                    offsetNext = offsets[i + 1],
                                    offsetPrev = offsets[
                                        i
                                            ? i - 1
                                            : i
                                    ],
                                    offset < offsetNext && tz.moveAmbiguousForward
                                        ? offset = offsetNext
                                        : offset > offsetPrev && tz.moveInvalidForward && (offset = offsetPrev),
                                    target < untils[i] - 6e4 * offset
                                ) 
                                    return offsets[i];
                        return offsets[max]
                        },
                        abbr: function (mom) {
                            return this.abbrs[this._index(mom)]
                        },
                        offset: function (mom) {
                            return logError("zone.offset has been deprecated in favor of zone.utcOffset"),
                            this.offsets[this._index(mom)]
                        },
                        utcOffset: function (mom) {
                            return this.offsets[this._index(mom)]
                        }
                    },
                    ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {
                        this.offsetScore += Math.abs(
                            this.zone.utcOffset(offsetAt.at) - offsetAt.offset
                        ),
                        this
                            .zone
                            .abbr(offsetAt.at)
                            .replace(/[^A-Z]/g, "") !== offsetAt.abbr && this.abbrScore++
                    },
                    tz.version = VERSION,
                    tz.dataVersion = "",
                    tz._zones = zones,
                    tz._links = links,
                    tz._names = names,
                    tz._countries = countries,
                    tz.add = addZone,
                    tz.link = addLink,
                    tz.load = loadData,
                    tz.zone = getZone,
                    tz.zoneExists = zoneExists,
                    tz.guess = guess,
                    tz.names = getNames,
                    tz.Zone = Zone,
                    tz.unpack = unpack,
                    tz.unpackBase60 = unpackBase60,
                    tz.needsOffset = needsOffset,
                    tz.moveInvalidForward = !0,
                    tz.moveAmbiguousForward = !1,
                    tz.countries = getCountryNames,
                    tz.zonesForCountry = zonesForCountry;
                    var fn = moment.fn;
                    moment.tz = tz,
                    moment.defaultZone = null,
                    moment.updateOffset = function (mom, keepTime) {
                        var offset,
                            zone = moment.defaultZone;
                        if (
                            void 0 === mom._z && (
                                zone && needsOffset(mom) && !mom._isUTC && (mom._d = moment.utc(mom._a)._d, mom.utc().add(zone.parse(mom), "minutes")),
                                mom._z = zone
                            ),
                            mom._z
                        ) 
                            if (
                                offset = mom._z.utcOffset(mom),
                                Math.abs(offset) < 16 && (offset /= 60),
                                void 0 !== mom.utcOffset
                            ) {
                                var z = mom._z;
                                mom.utcOffset(-offset, keepTime),
                                mom._z = z
                            } else 
                                mom.zone(offset, keepTime)
                    },
                    fn.tz = function (name, keepTime) {
                        if (name) {
                            if ("string" != typeof name) 
                                throw new Error(
                                    "Time zone name must be a string, got " + name + " [" + typeof name + "]"
                                );
                            return this._z = getZone(name),
                            this._z
                                ? moment.updateOffset(this, keepTime)
                                : logError(
                                    "Moment Timezone has no data for " + name + ". See http://momentjs.com/timezone" +
                                "/docs/#/data-loading/."
                                ),
                            this
                        }
                        if (this._z) 
                            return this._z.name
                    },
                    fn.zoneName = abbrWrap(fn.zoneName),
                    fn.zoneAbbr = abbrWrap(fn.zoneAbbr),
                    fn.utc = resetZoneWrap(fn.utc),
                    fn.local = resetZoneWrap(fn.local),
                    fn.utcOffset = resetZoneWrap2(fn.utcOffset),
                    moment.tz.setDefault = function (name) {
                        return (major < 2 || 2 === major && minor < 9) && logError(
                            "Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment" +
                        ".js " + moment.version + "."
                        ),
                        moment.defaultZone = name
                            ? getZone(name)
                            : null,
                        moment
                    };
                    var momentProperties = moment.momentProperties;
                    return "[object Array]" === Object
                        .prototype
                        .toString
                        .call(momentProperties)
                            ? (momentProperties.push("_z"), momentProperties.push("_a"))
                            : momentProperties && (momentProperties._z = null),
                    moment
                })
            },
            function (module, exports) {
                module.exports = {
                    version: "2020a",
                    zones: [
                        "Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5", "Africa/Accra|LMT GMT +0020|.Q 0 -k|0121212121212121212121212121212121212121212" +
                                "12121|-26BbX.8 6tzX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk Mn" +
                                "E 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk" +
                                " MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE|41e5",
                        "Africa/Nairobi|LMT EAT +0230 +0245|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okM" +
                                "u MFXJ|47e5",
                        "Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431" +
                                "312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0" +
                                " Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0" +
                                " 2Dy0 1cN0 1fB0 1cL0|26e5",
                        "Africa/Lagos|LMT WAT|-d.A -10|01|-22y0d.A|17e6",
                        "Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4",
                        "Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5",
                        "Africa/Cairo|EET EEST|-20 -30|010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "0|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 1" +
                                "1b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0" +
                                " 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1o" +
                                "L0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 " +
                                "1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1" +
                                "oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0" +
                                " 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11" +
                                "z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6",
                        "Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0" +
                                " Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0" +
                                " AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00" +
                                " y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 26" +
                                "00 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0" +
                                " 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 " +
                                "e00 2600 gM0|32e5",
                        "Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323" +
                                "232323232323232323232323232323232323232323232323232323232323232323232323232323" +
                                "232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 " +
                                "gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 " +
                                "1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1" +
                                "qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o0" +
                                "0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM" +
                                "0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 " +
                                "11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|8" +
                                "5e3",
                        "Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232" +
                                "323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1" +
                                "Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s0" +
                                "0 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 W" +
                                "M0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600" +
                                " e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2" +
                                "600 gM0 2600 gM0 2600 e00 2600 gM0|20e4",
                        "Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1" +
                                "cL0|84e5",
                        "Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|0121212121212121212121212121212" +
                                "1213|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1" +
                                "hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0" +
                                " 1iN0 17z0 1i10 17X0 yGd0|",
                        "Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212" +
                                "121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 1" +
                                "8n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0" +
                                " 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5",
                        "Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5",
                        "Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5",
                        "Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00|",
                        "Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|01212121312121212121212121312" +
                                "3123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 " +
                                "1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq" +
                                "0 TA0 1o00|11e5",
                        "Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nc" +
                                "o9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB" +
                                "0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0" +
                                " 1o00|20e5",
                        "Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|012134343434343434" +
                                "34343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B" +
                                "0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B" +
                                "0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 1" +
                                "1B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4",
                        "America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|01203434" +
                                "343434343434343434343434345676767676767676767676767676767676767676767676767676" +
                                "7676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb" +
                                "0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz" +
                                "0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10" +
                                "q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 " +
                                "14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX" +
                                "0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
                        "America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|" +
                                "012034343434343434343434343434343456767676767676767676767676767676767676767676" +
                                "767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0" +
                                " iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 " +
                                "1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz" +
                                "0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14" +
                                "p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 " +
                                "14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX" +
                                "0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
                        "America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3",
                        "America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212" +
                                "121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0" +
                                " zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1" +
                                "EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On" +
                                "0 1HB0 FX0 ny10 Lz0|14e4",
                        "America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212" +
                                "121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 L" +
                                "X0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0" +
                                " 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1c" +
                                "L0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL" +
                                "0|",
                        "America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121" +
                                "212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 " +
                                "1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4l" +
                                "X0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 " +
                                "1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
                        "America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121" +
                                "2121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C" +
                                "10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0" +
                                " u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1c" +
                                "N0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
                        "America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121" +
                                "212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 L" +
                                "X0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10" +
                                " 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 a" +
                                "sn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0|",
                        "America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212" +
                                "121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 " +
                                "1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4l" +
                                "X0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 " +
                                "1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 u" +
                                "L0|",
                        "America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121" +
                                "2121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C" +
                                "10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0" +
                                " u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1c" +
                                "N0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0|",
                        "America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212" +
                                "121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 L" +
                                "X0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0" +
                                " 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1c" +
                                "L0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL" +
                                "0|",
                        "America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121" +
                                "212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 L" +
                                "X0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10" +
                                " 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 a" +
                                "sn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0|",
                        "America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212" +
                                "121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 " +
                                "1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4l" +
                                "X0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 " +
                                "1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 u" +
                                "L0|",
                        "America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212" +
                                "121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 " +
                                "1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4l" +
                                "X0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 " +
                                "1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1q" +
                                "N0|",
                        "America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121" +
                                "212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 " +
                                "1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4l" +
                                "X0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 " +
                                "1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1" +
                                "qN0 WL0|",
                        "America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121" +
                                "2121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C" +
                                "10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0" +
                                " u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1c" +
                                "N0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0|",
                        "America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4",
                        "America/Asuncion|AMT -04 -03|3O.E 40 30|01212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "2121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1d" +
                                "d0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 " +
                                "1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1" +
                                "qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11" +
                                "B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 " +
                                "1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip" +
                                "0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1" +
                                "fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0" +
                                " 1ip0 17b0 1ip0 17b0 1ip0|28e5",
                        "America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3" +
                                "je0 8x30 iw0|28e2",
                        "America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414" +
                                "141414141414141414141414152525252525252525252525252525252525252525252525252525" +
                                "252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1" +
                                "lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 " +
                                "1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p" +
                                "0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 1" +
                                "1B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0" +
                                " 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1l" +
                                "b0|84e3",
                        "America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212" +
                                "121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML" +
                                "0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0" +
                                " FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1" +
                                "zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5",
                        "America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1OD" +
                                "C1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4",
                        "America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 H" +
                                "dKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C1" +
                                "0 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5",
                        "America/Belize|LMT CST -0530 CDT|5Q.M 60 5u 50|0121212121212121212121212121212" +
                                "1212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu " +
                                "Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1w" +
                                "ou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu" +
                                " 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0|57e3",
                        "America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 " +
                                "iu0|11e2",
                        "America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2" +
                                "glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0" +
                                " nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|6" +
                                "2e2",
                        "America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5",
                        "America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525" +
                                "252525252525252525252525252525252525252525252525252525252525252525252525252525" +
                                "252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10" +
                                " JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN" +
                                "0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 1" +
                                "1B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0" +
                                " 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4",
                        "America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60" +
                                " 50 50|01231415151515151515151515151515151515151515156786515151515151515151515" +
                                "15151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL" +
                                "0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1" +
                                "4p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0" +
                                " 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0" +
                                " 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0|15e2",
                        "America/Campo_Grande|LMT -04 -03|3C.s 40 30|0121212121212121212121212121212121" +
                                "2121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc" +
                                "0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C1" +
                                "0 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 " +
                                "1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 R" +
                                "b0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C1" +
                                "0 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 " +
                                "1HB0 FX0|77e4",
                        "America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|01232323414141414141414141" +
                                "41414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0" +
                                " 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p" +
                                "0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4",
                        "America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e" +
                                "5",
                        "America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3",
                        "America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5",
                        "America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|010101010101010101010101010" +
                                "101010101020101010101034010101010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "01010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1w" +
                                "p0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN" +
                                "0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11" +
                                "B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z" +
                                "0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11" +
                                "z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 " +
                                "1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN" +
                                "0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1" +
                                "cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0" +
                                " 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1n" +
                                "X0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 R" +
                                "d0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0|92e5",
                        "America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|01212123232414141414141" +
                                "41414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 de" +
                                "L0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0" +
                                " WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p" +
                                "0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 1" +
                                "1B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0" +
                                " 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4",
                        "America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp" +
                                "0 Db0 pRB0 15b0 1kp0 mL0|12e5",
                        "America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2",
                        "America/Cuiaba|LMT -04 -03|3I.k 40 30|0121212121212121212121212121212121212121" +
                                "21212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1" +
                                "bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C" +
                                "10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0" +
                                " 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 " +
                                "On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1z" +
                                "d0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4",
                        "America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|0121212121212121212121212121" +
                                "2121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 DC0|8",
                        "America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010" +
                                "101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 " +
                                "11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0" +
                                " 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1" +
                                "cN0 ML0|12e3",
                        "America/Dawson|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|010102" +
                                "304056565656565656565656565656565656565656565656565656565656565656565656565656" +
                                "56565657|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL" +
                                "0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1" +
                                "nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0" +
                                " 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11" +
                                "B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|13e2",
                        "America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 " +
                                "WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1" +
                                "cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1" +
                                "cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0" +
                                " 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11" +
                                "B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 " +
                                "14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 R" +
                                "d0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0|26e5",
                        "America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|012342525252525252" +
                                "525252525252525252525252525252525252525252525252525252525252525252525252525252" +
                                "5252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 " +
                                "6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 " +
                                "1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL" +
                                "0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1" +
                                "nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0" +
                                " 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0|37e5",
                        "America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|012121212121213412121212" +
                                "121212121212121212121212121212121212121212121212121212121212121212121212121212" +
                                "1212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz" +
                                "0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN" +
                                "0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1" +
                                "cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0" +
                                " 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1l" +
                                "b0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 " +
                                "1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5",
                        "America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2g" +
                                "lvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 " +
                                "nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|3" +
                                "1e3",
                        "America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL" +
                                "0|11e5",
                        "America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232" +
                                "323232323232323232323232323232323232323232323232323232323232323232323232323232" +
                                "323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 S" +
                                "N0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 1" +
                                "1A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0" +
                                " 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11" +
                                "B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 " +
                                "14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX" +
                                "0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5",
                        "America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0" +
                                " 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z" +
                                "0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1c" +
                                "L0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 " +
                                "1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN" +
                                "0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1" +
                                "4p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0" +
                                " 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1l" +
                                "b0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2",
                        "America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010102301010101" +
                                "010101010104045454545454545454545454545454545454545454545454545454545454545454" +
                                "5454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0" +
                                " 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb" +
                                "0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "America/Fortaleza|LMT -03 -02|2y 30 20|012121212121212121212121212121212121212" +
                                "1|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0" +
                                " nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 n" +
                                "sp0 WL0 1tB0 5z0 2mN0 On0|34e5",
                        "America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|01213412121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "2121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq" +
                                "10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 " +
                                "1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL" +
                                "0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1" +
                                "nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0" +
                                " 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0|19e3",
                        "America/Godthab|LMT -03 -02|3q.U 30 20|012121212121212121212121212121212121212" +
                                "121212121212121212121212121212121212121212121212121212121212121212121212121212" +
                                "1|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11" +
                                "A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A" +
                                "0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 " +
                                "1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 " +
                                "1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1q" +
                                "M0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3",
                        "America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 4" +
                                "0 30 20|0102323232323232452323232323232323232323232323232323232323267676767676" +
                                "767676767676767676767676767676767686767676767676767676767676767676767676767676" +
                                "76767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2H" +
                                "bX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1" +
                                "qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o1" +
                                "0 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1" +
                                "cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1" +
                                "cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0" +
                                " 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1c" +
                                "N0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 " +
                                "11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX" +
                                "0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0|76e2",
                        "America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|01212121212121212121212121212" +
                                "121212121212121212121212121212121212121212121232121212121212121212121212121212" +
                                "121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1" +
                                "cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0" +
                                " 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11" +
                                "B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0|37e2",
                        "America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 " +
                                "Nz0 ifB0 17b0 zDB0 11z0|13e5",
                        "America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5",
                        "America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4",
                        "America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212" +
                                "121212121212121212121212134121212121212121212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in" +
                                "0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10" +
                                " Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 " +
                                "1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 " +
                                "1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z" +
                                "0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1" +
                                "cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0" +
                                " 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a" +
                                "10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 " +
                                "14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb" +
                                "0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1" +
                                "nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
                        "America/Havana|HMT CST CDT|5t.A 50 40|0121212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "21212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1" +
                                "Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 " +
                                "1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB" +
                                "0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1" +
                                "1B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0" +
                                " 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o" +
                                "00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 " +
                                "U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1z" +
                                "c0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0" +
                                " 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|" +
                                "21e5",
                        "America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF" +
                                "0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4",
                        "America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010" +
                                "101010101010101040101010101010101010101010101010101010101010101010141010101010" +
                                "101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 S" +
                                "gN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 1" +
                                "1z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0" +
                                " 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1c" +
                                "N0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1c" +
                                "N0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 " +
                                "11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0|",
                        "America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102301010" +
                                "101010101010454545454541454545454545454545454545454545454545454545454545454545" +
                                "4545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z" +
                                "0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1" +
                                "cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102301" +
                                "010101010101010101040101010101010101010101410145454545454545454545454545454545" +
                                "45454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN" +
                                "0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1" +
                                "cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0" +
                                " 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 " +
                                "Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0" +
                                " 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010" +
                                "101010101010101040105454101010101010101010101010101010101010101010101010101010" +
                                "1010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o" +
                                "10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 " +
                                "1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230454545" +
                                "4545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX" +
                                "0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1" +
                                "nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010" +
                                "101010101010101010101045454101454545454545454545454545454545454545454545454545" +
                                "4545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z" +
                                "0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL" +
                                "0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0|",
                        "America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102301010" +
                                "101010101010101010101010104545410545454545454545454545454545454545454545454545" +
                                "45454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10" +
                                " 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN" +
                                "0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 " +
                                "1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434" +
                                "343434343434343434343434343434343434343434343434343434343434343434343434343434" +
                                "343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1" +
                                "cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0" +
                                " 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2",
                        "America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|012343" +
                                "535353535353535353535353535353535353535673535353535353535353535353535353535353" +
                                "53535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN" +
                                "0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 1" +
                                "1B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0" +
                                " 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2",
                        "America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O" +
                                " 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1fz0 1a10 1fz0|94e4",
                        "America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203" +
                                "030303030303030303030403030356767676767676767676767676767676767676767676767676" +
                                "767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 V" +
                                "o10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1" +
                                "a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 " +
                                "1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p" +
                                "0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 1" +
                                "1B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3",
                        "America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010101" +
                                "023010101010101010101010101014545454545454145454545454545454545454545454545454" +
                                "545454545454545454545454545454545454545454545454545454545454545454545454545454" +
                                "54545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X " +
                                "9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0" +
                                " 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz" +
                                "0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL" +
                                "0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1" +
                                "lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0" +
                                " 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14" +
                                "p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0|",
                        "America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230" +
                                "101010101010101010101010101010101010101010101010101010101010101014545454545454" +
                                "54545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B" +
                                "0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1c" +
                                "L0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1c" +
                                "L0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 " +
                                "1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p" +
                                "0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 1" +
                                "1B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5",
                        "America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0" +
                                " 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6",
                        "America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o" +
                                "00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0" +
                                " 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0" +
                                " 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1c" +
                                "L0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 " +
                                "1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B" +
                                "0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
                        "America/Maceio|LMT -03 -02|2m.Q 30 20|0121212121212121212121212121212121212121" +
                                "21|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0" +
                                " 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 " +
                                "Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4",
                        "America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe." +
                                "M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5",
                        "America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX." +
                                "U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 " +
                                "1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5",
                        "America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4",
                        "America/Matamoros|LMT CST CDT|6E 60 50|012121212121212121212121212121212121212" +
                                "1212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 " +
                                "14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0" +
                                " 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4",
                        "America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|012121213141414141414141" +
                                "4141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 " +
                                "deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1" +
                                "nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0" +
                                " 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11" +
                                "B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 " +
                                "14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4",
                        "America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|0101023010104101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "1010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1" +
                                "o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1" +
                                "cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0" +
                                " 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11" +
                                "B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 " +
                                "14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 R" +
                                "d0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0|85e2",
                        "America/Merida|LMT CST EST CDT|5W.s 60 50 50|012131313131313131313131313131313" +
                                "1313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30" +
                                " 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p" +
                                "0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1" +
                                "1B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0" +
                                " 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 " +
                                "1nX0 14p0 1lb0 14p0 1lb0|11e5",
                        "America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|012030303030303" +
                                "03030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 " +
                                "iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1" +
                                "fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU1" +
                                "0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
                        "America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232" +
                                "323232323232323232323232323232323232323232323232323232323232323232323232323232" +
                                "|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1l" +
                                "b0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1" +
                                "nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0" +
                                " 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14" +
                                "p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 " +
                                "11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX" +
                                "0 14p0 1lb0 14p0 1lb0|20e6",
                        "America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|0123232323232323232323232323232" +
                                "32323232323232323232323232323232323232323232323232323232323232323232323232|-2m" +
                                "Kkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0" +
                                " 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11" +
                                "B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
                        "America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 " +
                                "1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 " +
                                "1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0" +
                                " 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1c" +
                                "L0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 " +
                                "1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 1" +
                                "4p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0" +
                                " 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1l" +
                                "b0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z" +
                                "b0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|" +
                                "64e3",
                        "America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212" +
                                "121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb" +
                                "0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 " +
                                "1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p" +
                                "0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 1" +
                                "1B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0" +
                                " 14p0 1lb0 14p0 1lb0|41e5",
                        "America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u" +
                                " 20 1u|01234343434343434343434343535363635363637536363636363636363636363636363" +
                                "6363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u " +
                                "11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq" +
                                "0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c" +
                                "10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0" +
                                " 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n" +
                                "0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5",
                        "America/Toronto|EST EDT EWT EPT|50 40 40 40|0101010101010101010101010101010101" +
                                "010101010101230101010101010101010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "0101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr" +
                                "0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z" +
                                "0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11" +
                                "z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1q" +
                                "L0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 " +
                                "1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1" +
                                "cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0" +
                                " 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 " +
                                "1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p" +
                                "0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5",
                        "America/Nassau|LMT EST EDT|59.u 50 40|0121212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "21212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN" +
                                "0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1" +
                                "cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0" +
                                " 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1n" +
                                "X0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 " +
                                "1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B" +
                                "0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4",
                        "America/New_York|EST EDT EWT EPT|50 40 40 40|010101010101010101010101010101010" +
                                "101010101010101023010101010101010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "01010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL" +
                                "0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11" +
                                "z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 1" +
                                "1z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o" +
                                "10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1" +
                                "o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0" +
                                " 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1c" +
                                "L0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1c" +
                                "L0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 " +
                                "1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B" +
                                "0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 1" +
                                "4p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0|21e6",
                        "America/Nipigon|EST EDT EWT EPT|50 40 40 40|0101230101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "01010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1c" +
                                "N0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 " +
                                "1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb" +
                                "0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1" +
                                "nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 R" +
                                "d0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2",
                        "America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|0120343" +
                                "434343434343434343434343434567676767676767676767676767676767676767676767676767" +
                                "67676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Ql" +
                                "b0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1f" +
                                "z0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 1" +
                                "0q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0" +
                                " 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2",
                        "America/Noronha|LMT -02 -01|29.E 20 10|012121212121212121212121212121212121212" +
                                "1|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 " +
                                "2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 L" +
                                "z0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2",
                        "America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|01010230" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "1010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 1" +
                                "1B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 " +
                                "1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 " +
                                "1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p" +
                                "0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 1" +
                                "4p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0" +
                                " 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|01010230" +
                                "101010101010101010101010101010101010101010101010101454545454545454545454545454" +
                                "5454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 1" +
                                "1B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 " +
                                "1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 " +
                                "1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p" +
                                "0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 1" +
                                "4p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0" +
                                " 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|01010" +
                                "230101010101010101010101010101010101010101010101010101010101010101010101010145" +
                                "4545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX" +
                                "0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1c" +
                                "N0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1c" +
                                "N0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 " +
                                "14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX" +
                                "0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1" +
                                "lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                "|",
                        "America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141" +
                                "414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0" +
                                " 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 W" +
                                "L0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 " +
                                "1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0|23e3",
                        "America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 " +
                                "40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676" +
                                "767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0" +
                                " LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1c" +
                                "L0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 " +
                                "1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p" +
                                "0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb" +
                                "0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0|14e2",
                        "America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k W" +
                                "qo0.c qanX.I 1yVXN.o|24e4",
                        "America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4A" +
                                "l1 Ap0 1db0 SWqX 1cL0|42e5",
                        "America/Port-au-Prince|PPMT EST EDT|4N 50 40|012121212121212121212121212121212" +
                                "12121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1" +
                                "cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0" +
                                " 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d4" +
                                "30 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
                        "America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2g" +
                                "lvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 " +
                                "nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4",
                        "America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2gl" +
                                "vI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 n" +
                                "z0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4",
                        "America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5",
                        "America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212123232323" +
                                "232323232323232323232323232323232323232323232323232323232323232323232323232323" +
                                "2323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d" +
                                "0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 " +
                                "1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1q" +
                                "N0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o" +
                                "10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1q" +
                                "N0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o1" +
                                "0 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0" +
                                " 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|",
                        "America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL" +
                                "0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1" +
                                "fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0" +
                                " 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14" +
                                "p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 " +
                                "Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z" +
                                "b0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842",
                        "America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|0121313131313131313131" +
                                "313131313131313131313134313131313131313131313131313131313131313131313131313131" +
                                "31313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1" +
                                "cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0" +
                                " 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1n" +
                                "X0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2",
                        "America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121" +
                                "|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2" +
                                "ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz" +
                                "0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5",
                        "America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|0121212121212121212" +
                                "12121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1" +
                                "o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 " +
                                "M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 1" +
                                "1z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4",
                        "America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|01213131313131313131313131" +
                                "313131313131313131343131313131343131313131313131313131313131313131313131313131" +
                                "3131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 " +
                                "1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p" +
                                "0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 1" +
                                "1B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229",
                        "America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl" +
                                ".c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0" +
                                " 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4",
                        "America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212123212323232323" +
                                "232323232323232323232323232323232323232323232323232323232323232323232323232323" +
                                "23232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh" +
                                ".e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb" +
                                "0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1" +
                                "qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1" +
                                "o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1q" +
                                "N0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1" +
                                "fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN" +
                                "0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1" +
                                "Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1" +
                                "nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 " +
                                "1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5",
                        "America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|" +
                                "-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|2" +
                                "9e5",
                        "America/Sao_Paulo|LMT -03 -02|36.s 30 20|0121212121212121212121212121212121212" +
                                "1212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1" +
                                "e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 L" +
                                "X0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB" +
                                "0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 " +
                                "1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 O" +
                                "n0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB" +
                                "0 FX0|20e6",
                        "America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232" +
                                "323232323232323232323232323232323232323232323232323232323232323232323232323232" +
                                "323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11" +
                                "A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM" +
                                "0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0" +
                                " 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452",
                        "America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|0120303030303" +
                                "030303030303030303034565656565656565656565656565656565656565656565656565656565" +
                                "6565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0" +
                                " 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0" +
                                " 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN" +
                                "0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1" +
                                "4p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0" +
                                " 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2",
                        "America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|0101010" +
                                "101010101010101010101010101010232323232323232452323232323232323232323232323232" +
                                "323232323232323232323232323232323232323232323232323232623232323232323232323232" +
                                "3232323232323232323232323232323232323232323232323232323232323232323232323232|-" +
                                "28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 1" +
                                "9X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0" +
                                " 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 " +
                                "1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1" +
                                "ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0" +
                                " 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1f" +
                                "z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 " +
                                "1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 1" +
                                "1B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0" +
                                " 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1n" +
                                "X0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
                        "America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212" +
                                "121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 " +
                                "1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3",
                        "America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 " +
                                "WL0 GRd0 AL0|11e5",
                        "America/Thule|LMT AST ADT|4z.8 40 30|01212121212121212121212121212121212121212" +
                                "1212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 " +
                                "1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX" +
                                "0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656",
                        "America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|01231414141414141414141" +
                                "414141414141414141414141414141414141414141414141414141414141414141414141414141" +
                                "41414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1f" +
                                "z0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 " +
                                "1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p" +
                                "0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 1" +
                                "4p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0" +
                                " 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11" +
                                "e4",
                        "America/Vancouver|PST PDT PWT PPT|80 70 70 70|01023010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "10|-25TO0 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 " +
                                "1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z" +
                                "0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1f" +
                                "z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 " +
                                "1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1" +
                                "1B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0" +
                                " 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1n" +
                                "X0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
                        "America/Whitehorse|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|01" +
                                "010230405656565656565656565656565656565656565656565656565656565656565656565656" +
                                "565656565657|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0" +
                                " 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11" +
                                "B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 " +
                                "14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX" +
                                "0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|23e3",
                        "America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010|-2" +
                                "aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 1" +
                                "1z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10" +
                                " 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1" +
                                "a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1l" +
                                "c0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 " +
                                "1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4",
                        "America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|012030303030303030" +
                                "303030303030303045454545454545454545454545454545454545454545454545454545454545" +
                                "45454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0" +
                                " 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0" +
                                " 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL" +
                                "0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1" +
                                "nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0" +
                                " 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 O" +
                                "p0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb" +
                                "0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 " +
                                "1zb0 Op0 1zb0 Op0 1zb0|642",
                        "America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|0123141515151515" +
                                "151515151515151515151515151515151515151515151515151515151515151515151515151515" +
                                "15151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1c" +
                                "L0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 " +
                                "1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p" +
                                "0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 1" +
                                "1B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1" +
                                "zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op" +
                                "0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0" +
                                " Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
                        "Antarctica/Casey|-00 +08 +11|0 -80 -b0|01212121|-2q00 1DjS0 T90 40P0 KL0 blz0 " +
                                "3m10|10",
                        "Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0" +
                                " KN0|70",
                        "Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80",
                        "Antarctica/Macquarie|AEST AEDT -00 +11|-a0 -b0 0 -b0|0102010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0" +
                                " 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1z" +
                                "c0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM" +
                                "0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA" +
                                "0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1" +
                                "fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00" +
                                " 1io0 1cM0 1cM0 1cM0 1cM0 1cM0|1",
                        "Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60",
                        "Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|0102020202020202020202020" +
                                "202323232323232323232323232323232323232323232323232323232323232323232323232323" +
                                "2323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u" +
                                " 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11" +
                                "Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 " +
                                "1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 R" +
                                "c0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 1" +
                                "7c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0" +
                                " 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a" +
                                "00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 " +
                                "1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA" +
                                "0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1" +
                                "fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5",
                        "Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|012121212121312121212121212121212" +
                                "1212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0" +
                                " 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 " +
                                "1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0" +
                                " 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 " +
                                "1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 " +
                                "1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40",
                        "Antarctica/Rothera|-00 -03|0 30|01|gOo0|130",
                        "Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20",
                        "Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212" +
                                "121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o" +
                                "00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM" +
                                "0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00" +
                                " 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40",
                        "Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25",
                        "Europe/Oslo|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "10101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o0" +
                                "0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0" +
                                " WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 W" +
                                "M0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A" +
                                "0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4",
                        "Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5",
                        "Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|01232323232323232323232123232323" +
                                "2323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5",
                        "Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1" +
                                "db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0" +
                                " 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co" +
                                "0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 W" +
                                "M0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A" +
                                "0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM" +
                                "0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A" +
                                "0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5",
                        "Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|012321212121212121212141" +
                                "21212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1d" +
                                "b0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 " +
                                "IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3",
                        "Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121" +
                                "212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 " +
                                "1o00 11A0 1o00 11A0|15e4",
                        "Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|01232323232323232323212323232323" +
                                "23232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A" +
                                "0 1o00 11A0 1o00 11A0 1qM0|27e4",
                        "Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc" +
                                "3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4",
                        "Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|012323232323232323232423" +
                                "23232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11" +
                                "A0 1o00 11A0 1o00 11A0|",
                        "Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212" +
                                "121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc" +
                                "0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1" +
                                "dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5",
                        "Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4",
                        "Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|0123232323232323232323212323232323" +
                                "2323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0" +
                                " 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1c" +
                                "M0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o" +
                                "00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0" +
                                " WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5",
                        "Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6",
                        "Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|012323232323232323232321232323232" +
                                "1212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 " +
                                "1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0" +
                                " rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|",
                        "Asia/Beirut|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "10101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1" +
                                "oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 " +
                                "1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0" +
                                " 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1c" +
                                "L0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL" +
                                "0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 " +
                                "11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 " +
                                "WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11" +
                                "B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e" +
                                "5",
                        "Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|0123232323232323232323212121212" +
                                "12121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip" +
                                "0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN" +
                                "0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4",
                        "Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4",
                        "Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0" +
                                "|15e6",
                        "Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232" +
                                "323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1d" +
                                "b0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 " +
                                "IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4",
                        "Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343" +
                                "434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0" +
                                " 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1c" +
                                "N0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 " +
                                "1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3",
                        "Asia/Shanghai|CST CDT|-80 -90|01010101010101010101010101010|-23uw0 18n0 OjB0 R" +
                                "z0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z" +
                                "0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6",
                        "Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1" +
                                "zzu 7Apu 23dz0 11zu n3cu|22e5",
                        "Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn" +
                                ".k HB0 m6n0 2kxbu 1i00|16e6",
                        "Asia/Damascus|LMT EET EEST|-2p.c -20 -30|0121212121212121212121212121212121212" +
                                "121212121212121212121212121212121212121212121212121212121212121212121212121212" +
                                "1212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 " +
                                "1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11" +
                                "b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 " +
                                "11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1d" +
                                "z0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 " +
                                "1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN" +
                                "0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11" +
                                "B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN" +
                                "0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0" +
                                " 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 " +
                                "1qL0|26e5",
                        "Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4",
                        "Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5",
                        "Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4" +
                                "z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4",
                        "Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212312121212121212121212" +
                                "121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 " +
                                "1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1" +
                                "cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM" +
                                "0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o0" +
                                "0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM" +
                                "0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 1" +
                                "1A0 1o00 11A0 1o00|",
                        "Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|01010101010101010101010101010101232" +
                                "323232323232323232323232323201010101010101010101010101010101010101010101010101" +
                                "01010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 " +
                                "16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0" +
                                " 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1w" +
                                "M0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd" +
                                "0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0" +
                                " 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11" +
                                "z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1q" +
                                "L0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0" +
                                " 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc" +
                                "0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|18e5",
                        "Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101012" +
                                "323232323232323232323232323232010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1" +
                                "jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 " +
                                "10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM" +
                                "0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0" +
                                " 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 " +
                                "1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL" +
                                "0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 " +
                                "1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1o" +
                                "o0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1" +
                                "oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|25e4",
                        "Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC7" +
                                "6.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5",
                        "Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212" +
                                "121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu " +
                                "11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0" +
                                " U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1" +
                                "wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1" +
                                "cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5",
                        "Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|0123232323232323232323232323232323" +
                                "23232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN" +
                                "0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1" +
                                "cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0" +
                                " 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3",
                        "Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|0123232323232323232323212323232" +
                                "3232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1" +
                                "db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0" +
                                " IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0" +
                                " 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1q" +
                                "M0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
                        "Europe/Istanbul|IMT EET EEST +03 +04|-1U.U -20 -30 -30 -40|0121212121212121212" +
                                "121212121212121212121212121234312121212121212121212121212121212121212121212121" +
                                "212121212121212123|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0" +
                                " 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 " +
                                "1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11" +
                                "B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 " +
                                "1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1" +
                                "qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o0" +
                                "0 1200 1nA0 11A0 1tA0 U00 15w0|13e6",
                        "Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1" +
                                "Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6",
                        "Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26" +
                                "e4",
                        "Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|0121212121213212121212121212" +
                                "121212121212121212121212121212121212121212121212121212121212121212121212121212" +
                                "12121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 " +
                                "1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 " +
                                "1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 " +
                                "IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14" +
                                "n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 1" +
                                "9W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0" +
                                " 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10" +
                                "N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0" +
                                " 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0" +
                                " 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4",
                        "Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5",
                        "Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|01232323232323232323232123232" +
                                "3232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1" +
                                "db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0" +
                                " IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0" +
                                " 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1q" +
                                "M0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4",
                        "Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|0121345454" +
                                "54|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6",
                        "Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5",
                        "Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5",
                        "Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323" +
                                "212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 " +
                                "1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A" +
                                "0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2",
                        "Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|012323232323232323232321232" +
                                "32323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1c" +
                                "N0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 " +
                                "2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 " +
                                "11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5",
                        "Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|012343" +
                                "5|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5",
                        "Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242" +
                                "|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk An" +
                                "E pAk 8Fz0|13e4",
                        "Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|0123232141414141414141414" +
                                "14141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0" +
                                " 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o" +
                                "00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd" +
                                "0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0" +
                                " 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd" +
                                "0 14n0|57e4",
                        "Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|0123232323232323232323212323232" +
                                "32323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 " +
                                "1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB" +
                                "0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A" +
                                "0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1" +
                                "qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3",
                        "Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0" +
                                " myLV.A 8ML0|15e5",
                        "Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK" +
                                "10 1db0|24e6",
                        "Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0" +
                                " 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1c" +
                                "N0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 " +
                                "1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 " +
                                "11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A" +
                                "0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0" +
                                " 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1" +
                                "o00 11A0 1o00|32e4",
                        "Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|01232323232323232323232123" +
                                "2323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN" +
                                "0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2" +
                                "pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 1" +
                                "1A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0" +
                                " 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4",
                        "Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|012323232323232323232321232" +
                                "3212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 " +
                                "1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA" +
                                "0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 " +
                                "1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1q" +
                                "M0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5",
                        "Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|0123232323232323232323212323232323" +
                                "2323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0" +
                                " 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM" +
                                "0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1q" +
                                "M0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 " +
                                "11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5",
                        "Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424" +
                                "242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A" +
                                "0 1o00 11A0 1o00 11A0|27e4",
                        "Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|" +
                                "012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4",
                        "Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 " +
                                "6BA0|29e5",
                        "Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323" +
                                "232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11" +
                                "A0 1o00 11A0 1o00 11A0|",
                        "Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232" +
                                "323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 " +
                                "11A0 1o00 11A0 zQl0|73e4",
                        "Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5",
                        "Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|0123232323232323232323" +
                                "2423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1" +
                                "db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00" +
                                " 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4",
                        "Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4" +
                                "r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4",
                        "Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|01234343434315151" +
                                "5151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0" +
                                " 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11" +
                                "A0|23e6",
                        "Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|0123232323232323232323212" +
                                "3232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 " +
                                "1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA" +
                                "0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o0" +
                                "0 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2",
                        "Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|" +
                                "-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1B" +
                                "X0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 " +
                                "ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5",
                        "Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4" +
                                "B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5",
                        "Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|012323232323232323232321212123" +
                                "2323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0" +
                                " 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0" +
                                " 11B0 1nX0 11B0 An0 Os0 WM0|11e5",
                        "Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|0123432525" +
                                "252525252525252525252525252525252525252525252525252525252525252525252525252525" +
                                "2525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 " +
                                "1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz" +
                                "0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1" +
                                "dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0" +
                                " 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1c" +
                                "N0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 " +
                                "1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6",
                        "Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3",
                        "Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e" +
                                "6",
                        "Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|012323232323232323232321232323232" +
                                "3232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1" +
                                "db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0" +
                                " IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0" +
                                " 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5",
                        "Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232" +
                                "323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1" +
                                "cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0" +
                                " 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1c" +
                                "N0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5",
                        "Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|01234343434343" +
                                "4343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d9" +
                                "0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1" +
                                "o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1q" +
                                "M0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2",
                        "Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|012323232323232323232321232" +
                                "32323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1c" +
                                "N0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 " +
                                "2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 " +
                                "11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
                        "Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|0123232323232323232323212323232" +
                                "3232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1" +
                                "db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0" +
                                " IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0" +
                                " 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1q" +
                                "M0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4",
                        "Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434" +
                                "343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23C" +
                                "L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 " +
                                "11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 " +
                                "WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5",
                        "Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|012323232323232323232321212121232" +
                                "3232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1" +
                                "cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0" +
                                " 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0|13e5",
                        "Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|012121212121212121212121212" +
                                "121212121212121212321232123212321212121212121212121212121212121212121212323232" +
                                "323232323232323232323232343232323232323232323232323232323232323232323232323232" +
                                "32323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1" +
                                "vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 1" +
                                "7c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 " +
                                "1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd" +
                                "0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1c" +
                                "N0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA" +
                                "0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A" +
                                "0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1" +
                                "qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1" +
                                "o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1q" +
                                "M0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00" +
                                " 11A0 1o00|25e4",
                        "Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|01212121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "21212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1" +
                                "cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0" +
                                " 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1n" +
                                "X0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 " +
                                "1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 " +
                                "Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0|65e3",
                        "Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|0123232323232323232323232323232" +
                                "323232323232323232323232323232323232323232323232323232323232323232323232323232" +
                                "3232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1q" +
                                "M0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00" +
                                " 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0" +
                                " WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 W" +
                                "M0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
                        "Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4",
                        "Atlantic/Faroe|LMT WET WEST|r.4 0 -10|0121212121212121212121212121212121212121" +
                                "2121212121212121212121212121212121212121212121212121212121212121212121212121|-" +
                                "2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 " +
                                "1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1q" +
                                "M0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o0" +
                                "0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM" +
                                "0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 1" +
                                "1A0 1o00 11A0 1o00|49e3",
                        "Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|0121212121212121" +
                                "212121212121212121212121212123212321232123212121212121212121212121212121212121" +
                                "212145454545454545454545454545454545454545454545454545454545454545454545454545" +
                                "4545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0" +
                                " 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 " +
                                "17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io" +
                                "0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0" +
                                " gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1" +
                                "cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11" +
                                "A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0" +
                                " 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 " +
                                "1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 11A0 1o00 11A0 1o00|27e4",
                        "Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212" +
                                "121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C" +
                                "10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14" +
                                "o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 " +
                                "14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o0" +
                                "0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4",
                        "Atlantic/South_Georgia|-02|20|0||30",
                        "Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|0121212121212123232121212121212" +
                                "12121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19" +
                                "X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0" +
                                " WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1" +
                                "qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U1" +
                                "0 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2",
                        "Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 " +
                                "Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1z" +
                                "c0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo" +
                                "0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1" +
                                "o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1" +
                                "o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0" +
                                "|40e5",
                        "Australia/Adelaide|ACST ACDT|-9u -au|01010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "10101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C0" +
                                "0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 " +
                                "1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U" +
                                "00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 " +
                                "1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1" +
                                "o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0" +
                                "|11e5",
                        "Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1c" +
                                "N0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5",
                        "Australia/Broken_Hill|ACST ACDT|-9u -au|01010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "01010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 " +
                                "1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 O" +
                                "o0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1t" +
                                "A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 1" +
                                "1A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11" +
                                "A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1f" +
                                "A0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 " +
                                "1cM0|18e3",
                        "Australia/Currie|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00" +
                                " Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1" +
                                "zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U" +
                                "00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 " +
                                "1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA" +
                                "0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 " +
                                "1cM0 1cM0|746",
                        "Australia/Darwin|ACST ACDT|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1f" +
                                "B0 19X0|12e4",
                        "Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1" +
                                "cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368",
                        "Australia/Hobart|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "10101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1" +
                                "cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1z" +
                                "c0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo" +
                                "0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1" +
                                "fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00" +
                                " 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4",
                        "Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|012121212131313131313" +
                                "131313131313131313131313131313131313131313131313131313131313131313131313131313" +
                                "1313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1t" +
                                "Au WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11z" +
                                "u 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11" +
                                "zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1c" +
                                "Lu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu " +
                                "1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cM" +
                                "u 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1" +
                                "fAu 1cLu 1cMu 1cLu 1cMu|347",
                        "Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL" +
                                "0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|1" +
                                "0",
                        "Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C" +
                                "00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0" +
                                " 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0" +
                                " U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A" +
                                "0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A" +
                                "0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1" +
                                "cM0|39e5",
                        "Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN" +
                                "0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5",
                        "CET|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "10|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM" +
                                "0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM" +
                                "0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 " +
                                "11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 " +
                                "WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11" +
                                "A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM" +
                                "0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
                        "Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232" +
                                "323232323232323232323232323232323232323232323232323232323232323232323232323232" +
                                "323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 " +
                                "1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1q" +
                                "N0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11" +
                                "z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17" +
                                "b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z" +
                                "0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0" +
                                " Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11" +
                                "B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 1" +
                                "1B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2",
                        "CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1" +
                                "cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1" +
                                "cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0" +
                                " 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1l" +
                                "b0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 " +
                                "1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1" +
                                "fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1q" +
                                "M0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o0" +
                                "0 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0" +
                                " WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 " +
                                "11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
                        "Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|0123232323232424242424242" +
                                "424242424242424242424242424242424242424242424242424242424242424242424242424242" +
                                "424242424242424242424242424242424242424242424242424242424242424242424242424242" +
                                "4242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1" +
                                "g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 " +
                                "17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io" +
                                "0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17" +
                                "c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 " +
                                "1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00" +
                                " WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1" +
                                "tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00" +
                                " 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o0" +
                                "0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1" +
                                "qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0" +
                                " 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00" +
                                " 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 1" +
                                "1A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 1" +
                                "1A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                        "EST|EST|50|0||",
                        "EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1" +
                                "cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1" +
                                "cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0" +
                                " 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1l" +
                                "b0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 " +
                                "1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "Etc/GMT-0|GMT|0|0||",
                        "Etc/GMT-1|+01|-10|0||",
                        "Pacific/Port_Moresby|+10|-a0|0||25e4",
                        "Etc/GMT-11|+11|-b0|0||",
                        "Pacific/Tarawa|+12|-c0|0||29e3",
                        "Etc/GMT-13|+13|-d0|0||",
                        "Etc/GMT-14|+14|-e0|0||",
                        "Etc/GMT-2|+02|-20|0||",
                        "Etc/GMT-3|+03|-30|0||",
                        "Etc/GMT-4|+04|-40|0||",
                        "Etc/GMT-5|+05|-50|0||",
                        "Etc/GMT-6|+06|-60|0||",
                        "Indian/Christmas|+07|-70|0||21e2",
                        "Etc/GMT-8|+08|-80|0||",
                        "Pacific/Palau|+09|-90|0||21e3",
                        "Etc/GMT+1|-01|10|0||",
                        "Etc/GMT+10|-10|a0|0||",
                        "Etc/GMT+11|-11|b0|0||",
                        "Etc/GMT+12|-12|c0|0||",
                        "Etc/GMT+3|-03|30|0||",
                        "Etc/GMT+4|-04|40|0||",
                        "Etc/GMT+5|-05|50|0||",
                        "Etc/GMT+6|-06|60|0||",
                        "Etc/GMT+7|-07|70|0||",
                        "Etc/GMT+8|-08|80|0||",
                        "Etc/GMT+9|-09|90|0||",
                        "Etc/UTC|UTC|0|0||",
                        "Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101" +
                                "010101010101010101010101010101010101012323234545454545454545454545454545454545" +
                                "454545454545454545454545454545454545454545454545454545454545454545454545454545" +
                                "454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 " +
                                "1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0" +
                                " 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w" +
                                " 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0" +
                                " 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 " +
                                "1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1" +
                                "qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o0" +
                                "0 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00|16e5",
                        "Europe/Andorra|WET CET CEST|0 -10 -20|0121212121212121212121212121212121212121" +
                                "21212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xI" +
                                "N0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0" +
                                " WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 W" +
                                "M0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A" +
                                "0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0" +
                                " 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3",
                        "Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212" +
                                "121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0" +
                                " 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3C" +
                                "o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1" +
                                "qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o0" +
                                "0 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5",
                        "Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|01212343412121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "2121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0" +
                                " 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0" +
                                " 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 " +
                                "1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o0" +
                                "0 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0" +
                                " WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00|35e5",
                        "Europe/London|GMT BST BDST|0 -10 -20|01010101010101010101010101010101010101010" +
                                "101010101212121212101012101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "10101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1c" +
                                "o0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1" +
                                "fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0" +
                                " 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 " +
                                "Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 " +
                                "1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io" +
                                "0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 " +
                                "1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 W" +
                                "M0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11" +
                                "A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 1" +
                                "1A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 1" +
                                "1A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11" +
                                "A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0" +
                                " 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0" +
                                " 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1" +
                                "qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6",
                        "Europe/Belgrade|CET CEST|-10 -20|010101010101010101010101010101010101010101010" +
                                "10101010101010101010101010101010101010101010101010101010101010101010101010|-19" +
                                "RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o0" +
                                "0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0" +
                                " WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 1" +
                                "1A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 1" +
                                "1A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0" +
                                " 1qM0 11A0 1o00 11A0 1o00|12e5",
                        "Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0" +
                                " 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA" +
                                "0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00" +
                                " 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11" +
                                "A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM" +
                                "0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 " +
                                "1o00 11A0 1o00|41e5",
                        "Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1c" +
                                "M0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1f" +
                                "A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o0" +
                                "0 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 W" +
                                "M0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0" +
                                " 1o00 11A0 1o00|13e5",
                        "Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|012121210303030303030303030303" +
                                "030303030303030303030321212121212121212121212121212121212121212121212121212121" +
                                "2121212121212121212121212121212121212121212121212121212121212121212121212121|-" +
                                "2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1" +
                                "io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00" +
                                " 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1f" +
                                "A0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA" +
                                "0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0" +
                                " 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 " +
                                "11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11" +
                                "A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0" +
                                " 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5",
                        "Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0" +
                                " 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o" +
                                "00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0" +
                                " WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 " +
                                "11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11" +
                                "A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5",
                        "Europe/Budapest|CET CEST|-10 -20|010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "1010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 17b0 1op0 1tb0 Q2m0 3N" +
                                "e0 WM0 1fA0 1cM0 1cM0 1oJ0 1dc0 1030 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1" +
                                "fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0" +
                                " 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1q" +
                                "M0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o" +
                                "00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0" +
                                " 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00" +
                                " 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
                        "Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc" +
                                "0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o0" +
                                "0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0" +
                                " WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 1" +
                                "1A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 1" +
                                "1A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0" +
                                " 1qM0 11A0 1o00 11A0 1o00|38e4",
                        "Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -3" +
                                "0 -40|012323232323232323234545467676767676767676767323232323232323232323232323" +
                                "232323232323232323232323232323232323232323232323232323232323232323232|-26jdT w" +
                                "GMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 " +
                                "1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 " +
                                "1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM" +
                                "0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 1" +
                                "1A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 1" +
                                "1A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A" +
                                "0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A" +
                                "0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4",
                        "Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc" +
                                "0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0" +
                                " 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1q" +
                                "M0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o" +
                                "00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0" +
                                " WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                        "Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010" +
                                "101010101010101010101010101012121212121010121010101010101010101034343434343434" +
                                "343434343434343434343434343434343434343434343434343434343434343434343434343434" +
                                "343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 " +
                                "1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0" +
                                " 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1i" +
                                "o0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 " +
                                "xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA" +
                                "0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1q" +
                                "M0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00" +
                                " 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0" +
                                " WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 W" +
                                "M0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3",
                        "Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|01212121212121212121212121212121212" +
                                "121212121212121212121212121212121212121212121212121212121212121212121212121212" +
                                "12121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00" +
                                " 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 1" +
                                "1A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                        "Europe/Kaliningrad|CET CEST EET EEST MSK MSD +03|-10 -20 -20 -30 -30 -40 -30|0" +
                                "101010101010123245454545454545454323232323232323232323232323232323232323232326" +
                                "2|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1e" +
                                "n0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o" +
                                "00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0" +
                                "|44e4",
                        "Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|012343" +
                                "425252525252525252525616161616161616161616161616161616161616161616161616161616" +
                                "1616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1" +
                                "v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11" +
                                "A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM" +
                                "0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 " +
                                "1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1q" +
                                "M0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o0" +
                                "0|34e5",
                        "Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|0123232323232323232121212121212" +
                                "1212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd" +
                                "0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1" +
                                "qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o" +
                                "00 11A0 1qM0 WM0 8Hz0|48e4",
                        "Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212" +
                                "121212121212121212121212121212321232123212321212121212121212121212121212121212" +
                                "121214121212121212121212121212121212124545454212121212121212121212121212121212" +
                                "121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 T" +
                                "c0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io" +
                                "0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1" +
                                "io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 R" +
                                "c0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0" +
                                " 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 " +
                                "1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1" +
                                "qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o0" +
                                "0 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00|27e5",
                        "Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|01" +
                                "212121343434343434343434343434343434343434343434345656512121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "21212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0" +
                                " R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10" +
                                " 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1f" +
                                "A0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io" +
                                "0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o" +
                                "00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0" +
                                " WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 " +
                                "11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11" +
                                "A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
                        "Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|01010101010101010121034" +
                                "343434343434343434343434343434343434343434343434343434343434343434343434343434" +
                                "3434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0" +
                                " 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200" +
                                " 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a1" +
                                "0 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11" +
                                "A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0" +
                                " 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 " +
                                "1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1" +
                                "qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o" +
                                "00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5",
                        "Europe/Malta|CET CEST|-10 -20|010101010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010101" +
                                "0101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0" +
                                " 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0" +
                                " 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0" +
                                " 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0" +
                                " 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o" +
                                "00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1q" +
                                "M0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0" +
                                " 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|" +
                                "42e4",
                        "Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30" +
                                "|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O e" +
                                "UnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A" +
                                "0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0" +
                                " 1qM0 WM0|19e5",
                        "Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121" +
                                "212121212121212121212121212121212121232323232345454545454545454545454545454545" +
                                "454545454545454545454545454545454545454545454545454545454545454545454545454545" +
                                "454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 " +
                                "1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0" +
                                " 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1c" +
                                "M0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16" +
                                "M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 " +
                                "11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A" +
                                "0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 " +
                                "1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 " +
                                "1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3",
                        "Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v." +
                                "j -40 -30 -50 -20 -30 -40|0121323454645754545454545454545454587545454545454545" +
                                "45454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 d" +
                                "z0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 " +
                                "11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 1" +
                                "1A0 1qM0 WM0 8Hz0|16e6",
                        "Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|012121212121212" +
                                "121212121212121212121212121212121212343435254343434343434343434343434343434343" +
                                "434343434343434343434343434343434343434343434343434343434343434343434343434343" +
                                "4343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u" +
                                "00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 1" +
                                "7c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0" +
                                " 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1" +
                                "cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 " +
                                "WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A" +
                                "0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A" +
                                "0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 " +
                                "1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6",
                        "Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 " +
                                "-30|01010234545453636363636363636372727272727272727272727272727272727272727272" +
                                "7272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gW" +
                                "m0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0" +
                                " 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 " +
                                "3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 W" +
                                "M0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A" +
                                "0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0" +
                                " 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4",
                        "Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 " +
                                "1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 " +
                                "1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1" +
                                "zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 1" +
                                "1A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0" +
                                " 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 " +
                                "1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1" +
                                "o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5",
                        "Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|012323232323232323212123232323" +
                                "2323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd" +
                                "0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11" +
                                "A0 1o00 2sp0 WM0|12e5",
                        "Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|01232323232323232121212121212" +
                                "1212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 " +
                                "1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0" +
                                " 1o00 11A0 1qM0 WM0 8Hz0 5810|",
                        "Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -3" +
                                "0 -40|012343432525252525252525252161616525252616161616161616161616161616161616" +
                                "172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd" +
                                "0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1" +
                                "cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0" +
                                " 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4",
                        "Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|0121210303030303030303030303030" +
                                "303030303030303030303030303030303030303030303030303030303030303030303030303030" +
                                "3030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20" +
                                " 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 " +
                                "1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1" +
                                "qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o0" +
                                "0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM" +
                                "0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 " +
                                "11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|1" +
                                "2e5",
                        "Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101" +
                                "010101010101010101010101010101010101010101010101010101010101010101010101010|-2" +
                                "azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1" +
                                "o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1q" +
                                "M0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0" +
                                " 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00" +
                                " 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 11A0 1o00 11A0 1o00|15e5",
                        "Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|01210" +
                                "342121245454545454545454636363636363636363636363636363636363636363636363636363" +
                                "6363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2" +
                                "Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 " +
                                "11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM" +
                                "0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A" +
                                "0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0" +
                                " 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1" +
                                "o00 11A0 1o00|41e4",
                        "Europe/Tirane|LMT CET CEST|-1j.k -10 -20|0121212121212121212121212121212121212" +
                                "121212121212121212121212121212121212121212121212121212121212121212121212121212" +
                                "1212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11" +
                                "z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 " +
                                "1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o" +
                                "00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1q" +
                                "M0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00" +
                                " 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0" +
                                " WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
                        "Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|0123232323232323232" +
                                "1214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db" +
                                "0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2" +
                                "pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 1" +
                                "1A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0" +
                                " 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5",
                        "Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232" +
                                "323232323232320454545454545454545454545454545454545454545454545454545454545454" +
                                "545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 " +
                                "1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM" +
                                "0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1" +
                                "o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00" +
                                " 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4",
                        "Europe/Vienna|CET CEST|-10 -20|01010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "10101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1c" +
                                "M0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1" +
                                "o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00" +
                                " 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 " +
                                "WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
                        "Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40" +
                                " -30|0123245252546464646464646464737373737373737373525373737373737373737373737" +
                                "37373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 " +
                                "29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1c" +
                                "M0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 " +
                                "1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM" +
                                "0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o0" +
                                "0 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0" +
                                " WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 1" +
                                "1A0 1o00|54e4",
                        "Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|012323232323232321212121212" +
                                "121212121212121212121212121212121212|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0" +
                                " 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3C" +
                                "o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1" +
                                "qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o0" +
                                "0 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0|10e5",
                        "Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|0121212343121212121212" +
                                "121212121212121212121212121212121212121212121212121212121212121212121212121212" +
                                "12121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo " +
                                "11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0" +
                                " 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0" +
                                " 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0" +
                                " 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o" +
                                "00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1q" +
                                "M0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 " +
                                "11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 " +
                                "11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A" +
                                "0 1o00|17e5",
                        "Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|" +
                                "012343425252525252525252525261616161616161616161616161616161616161616161616161" +
                                "61616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m" +
                                "0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA" +
                                "0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A" +
                                "0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1" +
                                "qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1" +
                                "o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1q" +
                                "M0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00" +
                                " 11A0 1o00|77e4",
                        "HST|HST|a0|0||",
                        "Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2",
                        "Indian/Cocos|+0630|-6u|0||596",
                        "Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130",
                        "Indian/Mahe|LMT +04|-3F.M -40|01|-2yO3F.M|79e3",
                        "Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4",
                        "Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|1" +
                                "5e4",
                        "Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4",
                        "Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6U" +
                                "p0 12ry0 Wan0|14e3",
                        "MET|MET MEST|-10 -20|010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "10|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM" +
                                "0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM" +
                                "0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 " +
                                "11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 " +
                                "WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11" +
                                "A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM" +
                                "0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
                        "MST|MST|70|0||",
                        "MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1" +
                                "cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1" +
                                "cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0" +
                                " 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1l" +
                                "b0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 " +
                                "1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|01212121212121212121212121212121" +
                                "212121212121212121212121212121212121212121212121212121212121212121212121212121" +
                                "2121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 O" +
                                "o0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc" +
                                "0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1l" +
                                "c0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 " +
                                "1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA" +
                                "0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1" +
                                "fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00" +
                                " 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1c" +
                                "M0 1fA0 1a00 1fA0 1a00|600",
                        "Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454" +
                                "545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI" +
                                "0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a" +
                                "00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 " +
                                "1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA" +
                                "0 1cM0 1fA0 1a00 1fA0 1a00|37e3",
                        "Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4",
                        "Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3",
                        "Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd." +
                                "g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1" +
                                "fB0 Lz0 1Nd0 An0|66e3",
                        "Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1",
                        "Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483",
                        "Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|012121212121212121212121212121212121212" +
                                "1212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0" +
                                " Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 2" +
                                "0o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00 20o0 pc0 20o0 pc" +
                                "0 20o0 pc0 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0" +
                                " s00|88e4",
                        "Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3",
                        "Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125",
                        "Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4",
                        "Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0" +
                                " AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0" +
                                "|17e4",
                        "Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8w" +
                                "Wu iAu 46p0|37e4",
                        "Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2",
                        "Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 " +
                                "axd0 WOK0 1bdz0|66e2",
                        "Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6" +
                                "RB0 12um0|28e3",
                        "Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2",
                        "Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2",
                        "Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1" +
                                "lnbu|10e3",
                        "Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2",
                        "Pacific/Norfolk|+1112 +1130 +1230 +11 +12|-bc -bu -cu -b0 -c0|0121343434343434" +
                                "34343434343434343434343434|-Kgbc W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 " +
                                "1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM" +
                                "0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|2" +
                                "5e4",
                        "Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn" +
                                "0 HeP0 Ao0|98e3",
                        "Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56",
                        "Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3",
                        "Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL" +
                                "0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu" +
                                " Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3",
                        "Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4",
                        "Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 " +
                                "xz0 1Q10 xz0 zWN0 s00|75e3",
                        "PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010" +
                                "101010101010101010101010101010101010101010101010101010101010101010101010101010" +
                                "101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1" +
                                "cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1" +
                                "cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0" +
                                " 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1l" +
                                "b0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 " +
                                "1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 " +
                                "Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z" +
                                "b0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0" +
                                " 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
                        "WET|WET WEST|0 -10|01010101010101010101010101010101010101010101010101010101010" +
                                "1010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA" +
                                "0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1" +
                                "cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0" +
                                " 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0" +
                                " 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 " +
                                "11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 W" +
                                "M0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11" +
                                "A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0" +
                                " 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|"
                    ],
                    links: [
                        "Africa/Abidjan|Africa/Bamako",
                        "Africa/Abidjan|Africa/Banjul",
                        "Africa/Abidjan|Africa/Conakry",
                        "Africa/Abidjan|Africa/Dakar",
                        "Africa/Abidjan|Africa/Freetown",
                        "Africa/Abidjan|Africa/Lome",
                        "Africa/Abidjan|Africa/Nouakchott",
                        "Africa/Abidjan|Africa/Ouagadougou",
                        "Africa/Abidjan|Africa/Timbuktu",
                        "Africa/Abidjan|Atlantic/St_Helena",
                        "Africa/Cairo|Egypt",
                        "Africa/Johannesburg|Africa/Maseru",
                        "Africa/Johannesburg|Africa/Mbabane",
                        "Africa/Lagos|Africa/Bangui",
                        "Africa/Lagos|Africa/Brazzaville",
                        "Africa/Lagos|Africa/Douala",
                        "Africa/Lagos|Africa/Kinshasa",
                        "Africa/Lagos|Africa/Libreville",
                        "Africa/Lagos|Africa/Luanda",
                        "Africa/Lagos|Africa/Malabo",
                        "Africa/Lagos|Africa/Niamey",
                        "Africa/Lagos|Africa/Porto-Novo",
                        "Africa/Maputo|Africa/Blantyre",
                        "Africa/Maputo|Africa/Bujumbura",
                        "Africa/Maputo|Africa/Gaborone",
                        "Africa/Maputo|Africa/Harare",
                        "Africa/Maputo|Africa/Kigali",
                        "Africa/Maputo|Africa/Lubumbashi",
                        "Africa/Maputo|Africa/Lusaka",
                        "Africa/Nairobi|Africa/Addis_Ababa",
                        "Africa/Nairobi|Africa/Asmara",
                        "Africa/Nairobi|Africa/Asmera",
                        "Africa/Nairobi|Africa/Dar_es_Salaam",
                        "Africa/Nairobi|Africa/Djibouti",
                        "Africa/Nairobi|Africa/Kampala",
                        "Africa/Nairobi|Africa/Mogadishu",
                        "Africa/Nairobi|Indian/Antananarivo",
                        "Africa/Nairobi|Indian/Comoro",
                        "Africa/Nairobi|Indian/Mayotte",
                        "Africa/Tripoli|Libya",
                        "America/Adak|America/Atka",
                        "America/Adak|US/Aleutian",
                        "America/Anchorage|US/Alaska",
                        "America/Argentina/Buenos_Aires|America/Buenos_Aires",
                        "America/Argentina/Catamarca|America/Argentina/ComodRivadavia",
                        "America/Argentina/Catamarca|America/Catamarca",
                        "America/Argentina/Cordoba|America/Cordoba",
                        "America/Argentina/Cordoba|America/Rosario",
                        "America/Argentina/Jujuy|America/Jujuy",
                        "America/Argentina/Mendoza|America/Mendoza",
                        "America/Atikokan|America/Coral_Harbour",
                        "America/Chicago|US/Central",
                        "America/Curacao|America/Aruba",
                        "America/Curacao|America/Kralendijk",
                        "America/Curacao|America/Lower_Princes",
                        "America/Denver|America/Shiprock",
                        "America/Denver|Navajo",
                        "America/Denver|US/Mountain",
                        "America/Detroit|US/Michigan",
                        "America/Edmonton|Canada/Mountain",
                        "America/Fort_Wayne|America/Indiana/Indianapolis",
                        "America/Fort_Wayne|America/Indianapolis",
                        "America/Fort_Wayne|US/East-Indiana",
                        "America/Godthab|America/Nuuk",
                        "America/Halifax|Canada/Atlantic",
                        "America/Havana|Cuba",
                        "America/Indiana/Knox|America/Knox_IN",
                        "America/Indiana/Knox|US/Indiana-Starke",
                        "America/Jamaica|Jamaica",
                        "America/Kentucky/Louisville|America/Louisville",
                        "America/Los_Angeles|US/Pacific",
                        "America/Los_Angeles|US/Pacific-New",
                        "America/Manaus|Brazil/West",
                        "America/Mazatlan|Mexico/BajaSur",
                        "America/Mexico_City|Mexico/General",
                        "America/New_York|US/Eastern",
                        "America/Noronha|Brazil/DeNoronha",
                        "America/Panama|America/Cayman",
                        "America/Phoenix|US/Arizona",
                        "America/Port_of_Spain|America/Anguilla",
                        "America/Port_of_Spain|America/Antigua",
                        "America/Port_of_Spain|America/Dominica",
                        "America/Port_of_Spain|America/Grenada",
                        "America/Port_of_Spain|America/Guadeloupe",
                        "America/Port_of_Spain|America/Marigot",
                        "America/Port_of_Spain|America/Montserrat",
                        "America/Port_of_Spain|America/St_Barthelemy",
                        "America/Port_of_Spain|America/St_Kitts",
                        "America/Port_of_Spain|America/St_Lucia",
                        "America/Port_of_Spain|America/St_Thomas",
                        "America/Port_of_Spain|America/St_Vincent",
                        "America/Port_of_Spain|America/Tortola",
                        "America/Port_of_Spain|America/Virgin",
                        "America/Regina|Canada/Saskatchewan",
                        "America/Rio_Branco|America/Porto_Acre",
                        "America/Rio_Branco|Brazil/Acre",
                        "America/Santiago|Chile/Continental",
                        "America/Sao_Paulo|Brazil/East",
                        "America/St_Johns|Canada/Newfoundland",
                        "America/Tijuana|America/Ensenada",
                        "America/Tijuana|America/Santa_Isabel",
                        "America/Tijuana|Mexico/BajaNorte",
                        "America/Toronto|America/Montreal",
                        "America/Toronto|Canada/Eastern",
                        "America/Vancouver|Canada/Pacific",
                        "America/Whitehorse|Canada/Yukon",
                        "America/Winnipeg|Canada/Central",
                        "Asia/Ashgabat|Asia/Ashkhabad",
                        "Asia/Bangkok|Asia/Phnom_Penh",
                        "Asia/Bangkok|Asia/Vientiane",
                        "Asia/Dhaka|Asia/Dacca",
                        "Asia/Dubai|Asia/Muscat",
                        "Asia/Ho_Chi_Minh|Asia/Saigon",
                        "Asia/Hong_Kong|Hongkong",
                        "Asia/Jerusalem|Asia/Tel_Aviv",
                        "Asia/Jerusalem|Israel",
                        "Asia/Kathmandu|Asia/Katmandu",
                        "Asia/Kolkata|Asia/Calcutta",
                        "Asia/Kuala_Lumpur|Asia/Singapore",
                        "Asia/Kuala_Lumpur|Singapore",
                        "Asia/Macau|Asia/Macao",
                        "Asia/Makassar|Asia/Ujung_Pandang",
                        "Asia/Nicosia|Europe/Nicosia",
                        "Asia/Qatar|Asia/Bahrain",
                        "Asia/Rangoon|Asia/Yangon",
                        "Asia/Riyadh|Asia/Aden",
                        "Asia/Riyadh|Asia/Kuwait",
                        "Asia/Seoul|ROK",
                        "Asia/Shanghai|Asia/Chongqing",
                        "Asia/Shanghai|Asia/Chungking",
                        "Asia/Shanghai|Asia/Harbin",
                        "Asia/Shanghai|PRC",
                        "Asia/Taipei|ROC",
                        "Asia/Tehran|Iran",
                        "Asia/Thimphu|Asia/Thimbu",
                        "Asia/Tokyo|Japan",
                        "Asia/Ulaanbaatar|Asia/Ulan_Bator",
                        "Asia/Urumqi|Asia/Kashgar",
                        "Atlantic/Faroe|Atlantic/Faeroe",
                        "Atlantic/Reykjavik|Iceland",
                        "Atlantic/South_Georgia|Etc/GMT+2",
                        "Australia/Adelaide|Australia/South",
                        "Australia/Brisbane|Australia/Queensland",
                        "Australia/Broken_Hill|Australia/Yancowinna",
                        "Australia/Darwin|Australia/North",
                        "Australia/Hobart|Australia/Tasmania",
                        "Australia/Lord_Howe|Australia/LHI",
                        "Australia/Melbourne|Australia/Victoria",
                        "Australia/Perth|Australia/West",
                        "Australia/Sydney|Australia/ACT",
                        "Australia/Sydney|Australia/Canberra",
                        "Australia/Sydney|Australia/NSW",
                        "Etc/GMT-0|Etc/GMT",
                        "Etc/GMT-0|Etc/GMT+0",
                        "Etc/GMT-0|Etc/GMT0",
                        "Etc/GMT-0|Etc/Greenwich",
                        "Etc/GMT-0|GMT",
                        "Etc/GMT-0|GMT+0",
                        "Etc/GMT-0|GMT-0",
                        "Etc/GMT-0|GMT0",
                        "Etc/GMT-0|Greenwich",
                        "Etc/UTC|Etc/UCT",
                        "Etc/UTC|Etc/Universal",
                        "Etc/UTC|Etc/Zulu",
                        "Etc/UTC|UCT",
                        "Etc/UTC|UTC",
                        "Etc/UTC|Universal",
                        "Etc/UTC|Zulu",
                        "Europe/Belgrade|Europe/Ljubljana",
                        "Europe/Belgrade|Europe/Podgorica",
                        "Europe/Belgrade|Europe/Sarajevo",
                        "Europe/Belgrade|Europe/Skopje",
                        "Europe/Belgrade|Europe/Zagreb",
                        "Europe/Chisinau|Europe/Tiraspol",
                        "Europe/Dublin|Eire",
                        "Europe/Helsinki|Europe/Mariehamn",
                        "Europe/Istanbul|Asia/Istanbul",
                        "Europe/Istanbul|Turkey",
                        "Europe/Lisbon|Portugal",
                        "Europe/London|Europe/Belfast",
                        "Europe/London|Europe/Guernsey",
                        "Europe/London|Europe/Isle_of_Man",
                        "Europe/London|Europe/Jersey",
                        "Europe/London|GB",
                        "Europe/London|GB-Eire",
                        "Europe/Moscow|W-SU",
                        "Europe/Oslo|Arctic/Longyearbyen",
                        "Europe/Oslo|Atlantic/Jan_Mayen",
                        "Europe/Prague|Europe/Bratislava",
                        "Europe/Rome|Europe/San_Marino",
                        "Europe/Rome|Europe/Vatican",
                        "Europe/Warsaw|Poland",
                        "Europe/Zurich|Europe/Busingen",
                        "Europe/Zurich|Europe/Vaduz",
                        "Indian/Christmas|Etc/GMT-7",
                        "Pacific/Auckland|Antarctica/McMurdo",
                        "Pacific/Auckland|Antarctica/South_Pole",
                        "Pacific/Auckland|NZ",
                        "Pacific/Chatham|NZ-CHAT",
                        "Pacific/Chuuk|Pacific/Truk",
                        "Pacific/Chuuk|Pacific/Yap",
                        "Pacific/Easter|Chile/EasterIsland",
                        "Pacific/Guam|Pacific/Saipan",
                        "Pacific/Honolulu|Pacific/Johnston",
                        "Pacific/Honolulu|US/Hawaii",
                        "Pacific/Kwajalein|Kwajalein",
                        "Pacific/Pago_Pago|Pacific/Midway",
                        "Pacific/Pago_Pago|Pacific/Samoa",
                        "Pacific/Pago_Pago|US/Samoa",
                        "Pacific/Palau|Etc/GMT-9",
                        "Pacific/Pohnpei|Pacific/Ponape",
                        "Pacific/Port_Moresby|Etc/GMT-10",
                        "Pacific/Tarawa|Etc/GMT-12",
                        "Pacific/Tarawa|Pacific/Funafuti",
                        "Pacific/Tarawa|Pacific/Wake",
                        "Pacific/Tarawa|Pacific/Wallis"
                    ],
                    countries: [
                        "AD|Europe/Andorra",
                        "AE|Asia/Dubai",
                        "AF|Asia/Kabul",
                        "AG|America/Port_of_Spain America/Antigua",
                        "AI|America/Port_of_Spain America/Anguilla",
                        "AL|Europe/Tirane",
                        "AM|Asia/Yerevan",
                        "AO|Africa/Lagos Africa/Luanda",
                        "AQ|Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Maws" +
                                "on Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Anta" +
                                "rctica/Vostok Pacific/Auckland Antarctica/McMurdo",
                        "AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/" +
                                "Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Cata" +
                                "marca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/" +
                                "Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Arge" +
                                "ntina/Ushuaia",
                        "AS|Pacific/Pago_Pago",
                        "AT|Europe/Vienna",
                        "AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Currie " +
                                "Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane " +
                                "Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Austral" +
                                "ia/Eucla",
                        "AW|America/Curacao America/Aruba",
                        "AX|Europe/Helsinki Europe/Mariehamn",
                        "AZ|Asia/Baku",
                        "BA|Europe/Belgrade Europe/Sarajevo",
                        "BB|America/Barbados",
                        "BD|Asia/Dhaka",
                        "BE|Europe/Brussels",
                        "BF|Africa/Abidjan Africa/Ouagadougou",
                        "BG|Europe/Sofia",
                        "BH|Asia/Qatar Asia/Bahrain",
                        "BI|Africa/Maputo Africa/Bujumbura",
                        "BJ|Africa/Lagos Africa/Porto-Novo",
                        "BL|America/Port_of_Spain America/St_Barthelemy",
                        "BM|Atlantic/Bermuda",
                        "BN|Asia/Brunei",
                        "BO|America/La_Paz",
                        "BQ|America/Curacao America/Kralendijk",
                        "BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Arag" +
                                "uaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande Amer" +
                                "ica/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Mana" +
                                "us America/Eirunepe America/Rio_Branco",
                        "BS|America/Nassau",
                        "BT|Asia/Thimphu",
                        "BW|Africa/Maputo Africa/Gaborone",
                        "BY|Europe/Minsk",
                        "BZ|America/Belize",
                        "CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/" +
                                "Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder" +
                                "_Bay America/Iqaluit America/Pangnirtung America/Atikokan America/Winnipeg Ame" +
                                "rica/Rainy_River America/Resolute America/Rankin_Inlet America/Regina America/" +
                                "Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife Ameri" +
                                "ca/Inuvik America/Creston America/Dawson_Creek America/Fort_Nelson America/Van" +
                                "couver America/Whitehorse America/Dawson",
                        "CC|Indian/Cocos",
                        "CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi",
                        "CF|Africa/Lagos Africa/Bangui",
                        "CG|Africa/Lagos Africa/Brazzaville",
                        "CH|Europe/Zurich",
                        "CI|Africa/Abidjan",
                        "CK|Pacific/Rarotonga",
                        "CL|America/Santiago America/Punta_Arenas Pacific/Easter",
                        "CM|Africa/Lagos Africa/Douala",
                        "CN|Asia/Shanghai Asia/Urumqi",
                        "CO|America/Bogota",
                        "CR|America/Costa_Rica",
                        "CU|America/Havana",
                        "CV|Atlantic/Cape_Verde",
                        "CW|America/Curacao",
                        "CX|Indian/Christmas",
                        "CY|Asia/Nicosia Asia/Famagusta",
                        "CZ|Europe/Prague",
                        "DE|Europe/Zurich Europe/Berlin Europe/Busingen",
                        "DJ|Africa/Nairobi Africa/Djibouti",
                        "DK|Europe/Copenhagen",
                        "DM|America/Port_of_Spain America/Dominica",
                        "DO|America/Santo_Domingo",
                        "DZ|Africa/Algiers",
                        "EC|America/Guayaquil Pacific/Galapagos",
                        "EE|Europe/Tallinn",
                        "EG|Africa/Cairo",
                        "EH|Africa/El_Aaiun",
                        "ER|Africa/Nairobi Africa/Asmara",
                        "ES|Europe/Madrid Africa/Ceuta Atlantic/Canary",
                        "ET|Africa/Nairobi Africa/Addis_Ababa",
                        "FI|Europe/Helsinki",
                        "FJ|Pacific/Fiji",
                        "FK|Atlantic/Stanley",
                        "FM|Pacific/Chuuk Pacific/Pohnpei Pacific/Kosrae",
                        "FO|Atlantic/Faroe",
                        "FR|Europe/Paris",
                        "GA|Africa/Lagos Africa/Libreville",
                        "GB|Europe/London",
                        "GD|America/Port_of_Spain America/Grenada",
                        "GE|Asia/Tbilisi",
                        "GF|America/Cayenne",
                        "GG|Europe/London Europe/Guernsey",
                        "GH|Africa/Accra",
                        "GI|Europe/Gibraltar",
                        "GL|America/Nuuk America/Danmarkshavn America/Scoresbysund America/Thule",
                        "GM|Africa/Abidjan Africa/Banjul",
                        "GN|Africa/Abidjan Africa/Conakry",
                        "GP|America/Port_of_Spain America/Guadeloupe",
                        "GQ|Africa/Lagos Africa/Malabo",
                        "GR|Europe/Athens",
                        "GS|Atlantic/South_Georgia",
                        "GT|America/Guatemala",
                        "GU|Pacific/Guam",
                        "GW|Africa/Bissau",
                        "GY|America/Guyana",
                        "HK|Asia/Hong_Kong",
                        "HN|America/Tegucigalpa",
                        "HR|Europe/Belgrade Europe/Zagreb",
                        "HT|America/Port-au-Prince",
                        "HU|Europe/Budapest",
                        "ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura",
                        "IE|Europe/Dublin",
                        "IL|Asia/Jerusalem",
                        "IM|Europe/London Europe/Isle_of_Man",
                        "IN|Asia/Kolkata",
                        "IO|Indian/Chagos",
                        "IQ|Asia/Baghdad",
                        "IR|Asia/Tehran",
                        "IS|Atlantic/Reykjavik",
                        "IT|Europe/Rome",
                        "JE|Europe/London Europe/Jersey",
                        "JM|America/Jamaica",
                        "JO|Asia/Amman",
                        "JP|Asia/Tokyo",
                        "KE|Africa/Nairobi",
                        "KG|Asia/Bishkek",
                        "KH|Asia/Bangkok Asia/Phnom_Penh",
                        "KI|Pacific/Tarawa Pacific/Enderbury Pacific/Kiritimati",
                        "KM|Africa/Nairobi Indian/Comoro",
                        "KN|America/Port_of_Spain America/St_Kitts",
                        "KP|Asia/Pyongyang",
                        "KR|Asia/Seoul",
                        "KW|Asia/Riyadh Asia/Kuwait",
                        "KY|America/Panama America/Cayman",
                        "KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau" +
                                " Asia/Oral",
                        "LA|Asia/Bangkok Asia/Vientiane",
                        "LB|Asia/Beirut",
                        "LC|America/Port_of_Spain America/St_Lucia",
                        "LI|Europe/Zurich Europe/Vaduz",
                        "LK|Asia/Colombo",
                        "LR|Africa/Monrovia",
                        "LS|Africa/Johannesburg Africa/Maseru",
                        "LT|Europe/Vilnius",
                        "LU|Europe/Luxembourg",
                        "LV|Europe/Riga",
                        "LY|Africa/Tripoli",
                        "MA|Africa/Casablanca",
                        "MC|Europe/Monaco",
                        "MD|Europe/Chisinau",
                        "ME|Europe/Belgrade Europe/Podgorica",
                        "MF|America/Port_of_Spain America/Marigot",
                        "MG|Africa/Nairobi Indian/Antananarivo",
                        "MH|Pacific/Majuro Pacific/Kwajalein",
                        "MK|Europe/Belgrade Europe/Skopje",
                        "ML|Africa/Abidjan Africa/Bamako",
                        "MM|Asia/Yangon",
                        "MN|Asia/Ulaanbaatar Asia/Hovd Asia/Choibalsan",
                        "MO|Asia/Macau",
                        "MP|Pacific/Guam Pacific/Saipan",
                        "MQ|America/Martinique",
                        "MR|Africa/Abidjan Africa/Nouakchott",
                        "MS|America/Port_of_Spain America/Montserrat",
                        "MT|Europe/Malta",
                        "MU|Indian/Mauritius",
                        "MV|Indian/Maldives",
                        "MW|Africa/Maputo Africa/Blantyre",
                        "MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America" +
                                "/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosil" +
                                "lo America/Tijuana America/Bahia_Banderas",
                        "MY|Asia/Kuala_Lumpur Asia/Kuching",
                        "MZ|Africa/Maputo",
                        "NA|Africa/Windhoek",
                        "NC|Pacific/Noumea",
                        "NE|Africa/Lagos Africa/Niamey",
                        "NF|Pacific/Norfolk",
                        "NG|Africa/Lagos",
                        "NI|America/Managua",
                        "NL|Europe/Amsterdam",
                        "NO|Europe/Oslo",
                        "NP|Asia/Kathmandu",
                        "NR|Pacific/Nauru",
                        "NU|Pacific/Niue",
                        "NZ|Pacific/Auckland Pacific/Chatham",
                        "OM|Asia/Dubai Asia/Muscat",
                        "PA|America/Panama",
                        "PE|America/Lima",
                        "PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier",
                        "PG|Pacific/Port_Moresby Pacific/Bougainville",
                        "PH|Asia/Manila",
                        "PK|Asia/Karachi",
                        "PL|Europe/Warsaw",
                        "PM|America/Miquelon",
                        "PN|Pacific/Pitcairn",
                        "PR|America/Puerto_Rico",
                        "PS|Asia/Gaza Asia/Hebron",
                        "PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores",
                        "PW|Pacific/Palau",
                        "PY|America/Asuncion",
                        "QA|Asia/Qatar",
                        "RE|Indian/Reunion",
                        "RO|Europe/Bucharest",
                        "RS|Europe/Belgrade",
                        "RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Astr" +
                                "akhan Europe/Volgograd Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yeka" +
                                "terinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk" +
                                " Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vlad" +
                                "ivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamch" +
                                "atka Asia/Anadyr",
                        "RW|Africa/Maputo Africa/Kigali",
                        "SA|Asia/Riyadh",
                        "SB|Pacific/Guadalcanal",
                        "SC|Indian/Mahe",
                        "SD|Africa/Khartoum",
                        "SE|Europe/Stockholm",
                        "SG|Asia/Singapore",
                        "SH|Africa/Abidjan Atlantic/St_Helena",
                        "SI|Europe/Belgrade Europe/Ljubljana",
                        "SJ|Europe/Oslo Arctic/Longyearbyen",
                        "SK|Europe/Prague Europe/Bratislava",
                        "SL|Africa/Abidjan Africa/Freetown",
                        "SM|Europe/Rome Europe/San_Marino",
                        "SN|Africa/Abidjan Africa/Dakar",
                        "SO|Africa/Nairobi Africa/Mogadishu",
                        "SR|America/Paramaribo",
                        "SS|Africa/Juba",
                        "ST|Africa/Sao_Tome",
                        "SV|America/El_Salvador",
                        "SX|America/Curacao America/Lower_Princes",
                        "SY|Asia/Damascus",
                        "SZ|Africa/Johannesburg Africa/Mbabane",
                        "TC|America/Grand_Turk",
                        "TD|Africa/Ndjamena",
                        "TF|Indian/Reunion Indian/Kerguelen",
                        "TG|Africa/Abidjan Africa/Lome",
                        "TH|Asia/Bangkok",
                        "TJ|Asia/Dushanbe",
                        "TK|Pacific/Fakaofo",
                        "TL|Asia/Dili",
                        "TM|Asia/Ashgabat",
                        "TN|Africa/Tunis",
                        "TO|Pacific/Tongatapu",
                        "TR|Europe/Istanbul",
                        "TT|America/Port_of_Spain",
                        "TV|Pacific/Funafuti",
                        "TW|Asia/Taipei",
                        "TZ|Africa/Nairobi Africa/Dar_es_Salaam",
                        "UA|Europe/Simferopol Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye",
                        "UG|Africa/Nairobi Africa/Kampala",
                        "UM|Pacific/Pago_Pago Pacific/Wake Pacific/Honolulu Pacific/Midway",
                        "US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentuc" +
                                "ky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/I" +
                                "ndiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indi" +
                                "ana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox Ameri" +
                                "ca/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem Americ" +
                                "a/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los" +
                                "_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla Ame" +
                                "rica/Yakutat America/Nome America/Adak Pacific/Honolulu",
                        "UY|America/Montevideo",
                        "UZ|Asia/Samarkand Asia/Tashkent",
                        "VA|Europe/Rome Europe/Vatican",
                        "VC|America/Port_of_Spain America/St_Vincent",
                        "VE|America/Caracas",
                        "VG|America/Port_of_Spain America/Tortola",
                        "VI|America/Port_of_Spain America/St_Thomas",
                        "VN|Asia/Bangkok Asia/Ho_Chi_Minh",
                        "VU|Pacific/Efate",
                        "WF|Pacific/Wallis",
                        "WS|Pacific/Apia",
                        "YE|Asia/Riyadh Asia/Aden",
                        "YT|Africa/Nairobi Indian/Mayotte",
                        "ZA|Africa/Johannesburg",
                        "ZM|Africa/Maputo Africa/Lusaka",
                        "ZW|Africa/Maputo Africa/Harare"
                    ]
                }
            },
            function (module, exports, __webpack_require__) {
                var __WEBPACK_AMD_DEFINE_RESULT__;
                (function (window, document, Math) {
                    function IScroll(el, options) {
                        this.wrapper = "string" == typeof el
                            ? document.querySelector(el)
                            : el,
                        this.scroller = this
                            .wrapper
                            .children[0],
                        this.scrollerStyle = this.scroller.style,
                        this.options = {
                            resizeScrollbars: !0,
                            mouseWheelSpeed: 20,
                            snapThreshold: .334,
                            disablePointer: !utils.hasPointer,
                            disableTouch: utils.hasPointer || !utils.hasTouch,
                            disableMouse: utils.hasPointer || utils.hasTouch,
                            startX: 0,
                            startY: 0,
                            scrollY: !0,
                            directionLockThreshold: 5,
                            momentum: !0,
                            bounce: !0,
                            bounceTime: 600,
                            bounceEasing: "",
                            preventDefault: !0,
                            preventDefaultException: {
                                tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/
                            },
                            HWCompositing: !0,
                            useTransition: !0,
                            useTransform: !0,
                            bindToWrapper: void 0 === window.onmousedown
                        };
                        for (var i in options) 
                            this.options[i] = options[i];
                        this.translateZ = this.options.HWCompositing && utils.hasPerspective
                            ? " translateZ(0)"
                            : "",
                        this.options.useTransition = utils.hasTransition && this.options.useTransition,
                        this.options.useTransform = utils.hasTransform && this.options.useTransform,
                        this.options.eventPassthrough = !0 === this.options.eventPassthrough
                            ? "vertical"
                            : this.options.eventPassthrough,
                        this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault,
                        this.options.scrollY = "vertical" != this.options.eventPassthrough && this.options.scrollY,
                        this.options.scrollX = "horizontal" != this.options.eventPassthrough && this.options.scrollX,
                        this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough,
                        this.options.directionLockThreshold = this.options.eventPassthrough
                            ? 0
                            : this.options.directionLockThreshold,
                        this.options.bounceEasing = "string" == typeof this.options.bounceEasing
                            ? utils.ease[this.options.bounceEasing] || utils.ease.circular
                            : this.options.bounceEasing,
                        this.options.resizePolling = void 0 === this.options.resizePolling
                            ? 60
                            : this.options.resizePolling,
                        !0 === this.options.tap && (this.options.tap = "tap"),
                        "scale" == this.options.shrinkScrollbars && (this.options.useTransition = !1),
                        this.options.invertWheelDirection = this.options.invertWheelDirection
                            ? -1
                            : 1,
                        3 == this.options.probeType && (this.options.useTransition = !1),
                        this.x = 0,
                        this.y = 0,
                        this.directionX = 0,
                        this.directionY = 0,
                        this._events = {},
                        this._init(),
                        this.refresh(),
                        this.scrollTo(this.options.startX, this.options.startY),
                        this.enable()
                    }
                    function createDefaultScrollbar(direction, interactive, type) {
                        var scrollbar = document.createElement("div"),
                            indicator = document.createElement("div");
                        return !0 === type && (
                            scrollbar.style.cssText = "position:absolute;z-index:9999",
                            indicator.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box" +
                                ";position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,25" +
                                "5,0.9);border-radius:3px"
                        ),
                        indicator.className = "iScrollIndicator",
                        "h" == direction
                            ? (!0 === type && (
                                scrollbar.style.cssText += ";height:7px;left:2px;right:2px;bottom:0",
                                indicator.style.height = "100%"
                            ), scrollbar.className = "iScrollHorizontalScrollbar")
                            : (!0 === type && (
                                scrollbar.style.cssText += ";width:7px;bottom:2px;top:2px;right:1px",
                                indicator.style.width = "100%"
                            ), scrollbar.className = "iScrollVerticalScrollbar"),
                        scrollbar.style.cssText += ";overflow:hidden",
                        interactive || (scrollbar.style.pointerEvents = "none"),
                        scrollbar.appendChild(indicator),
                        scrollbar
                    }
                    function Indicator(scroller, options) {
                        this.wrapper = "string" == typeof options.el
                            ? document.querySelector(options.el)
                            : options.el,
                        this.wrapperStyle = this.wrapper.style,
                        this.indicator = this
                            .wrapper
                            .children[0],
                        this.indicatorStyle = this.indicator.style,
                        this.scroller = scroller,
                        this.options = {
                            listenX: !0,
                            listenY: !0,
                            interactive: !1,
                            resize: !0,
                            defaultScrollbars: !1,
                            shrink: !1,
                            fade: !1,
                            speedRatioX: 0,
                            speedRatioY: 0
                        };
                        for (var i in options) 
                            this.options[i] = options[i];
                        if (
                            this.sizeRatioX = 1,
                            this.sizeRatioY = 1,
                            this.maxPosX = 0,
                            this.maxPosY = 0,
                            this.options.interactive && (this.options.disableTouch || (
                                utils.addEvent(this.indicator, "touchstart", this),
                                utils.addEvent(window, "touchend", this)
                            ), this.options.disablePointer || (
                                utils.addEvent(this.indicator, utils.prefixPointerEvent("pointerdown"), this),
                                utils.addEvent(window, utils.prefixPointerEvent("pointerup"), this)
                            ), this.options.disableMouse || (
                                utils.addEvent(this.indicator, "mousedown", this),
                                utils.addEvent(window, "mouseup", this)
                            )),
                            this.options.fade
                        ) {
                            this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;
                            var durationProp = utils.style.transitionDuration;
                            this.wrapperStyle[durationProp] = utils.isBadAndroid
                                ? "0.0001ms"
                                : "0ms";
                            var self = this;
                            utils.isBadAndroid && rAF(function () {
                                "0.0001ms" === self.wrapperStyle[durationProp] && (
                                    self.wrapperStyle[durationProp] = "0s"
                                )
                            }),
                            this.wrapperStyle.opacity = "0"
                        }
                    }
                    var rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (
                            callback
                        ) {
                            window.setTimeout(callback, 1e3 / 60)
                        },
                        utils = function () {
                            function _prefixStyle(style) {
                                return !1 !== _vendor && (
                                    "" === _vendor
                                        ? style
                                        : _vendor + style.charAt(0).toUpperCase() + style.substr(1)
                                )
                            }
                            var me = {},
                                _elementStyle = document
                                    .createElement("div")
                                    .style,
                                _vendor = function () {
                                    for (var vendors = [
                                        "t", "webkitT", "MozT", "msT", "OT"
                                    ], i = 0, l = vendors.length; i < l; i++) 
                                        if (vendors[i] + "ransform" in _elementStyle) 
                                            return vendors[i].substr(0, vendors[i].length - 1);
                                return !1
                                }();
                            me.getTime = Date.now || function getTime() {
                                return (new Date).getTime()
                            },
                            me.extend = function (target, obj) {
                                for (var i in obj) 
                                    target[i] = obj[i]
                            },
                            me.addEvent = function (el, type, fn, capture) {
                                el.addEventListener(type, fn, !!capture)
                            },
                            me.removeEvent = function (el, type, fn, capture) {
                                el.removeEventListener(type, fn, !!capture)
                            },
                            me.prefixPointerEvent = function (pointerEvent) {
                                return window.MSPointerEvent
                                    ? "MSPointer" + pointerEvent
                                        .charAt(7)
                                        .toUpperCase() + pointerEvent.substr(8)
                                    : pointerEvent
                            },
                            me.momentum = function (
                                current,
                                start,
                                time,
                                lowerMargin,
                                wrapperSize,
                                deceleration
                            ) {
                                var destination,
                                    duration,
                                    distance = current - start,
                                    speed = Math.abs(distance) / time;
                                return deceleration = void 0 === deceleration
                                    ? 6e-4
                                    : deceleration,
                                destination = current + speed * speed / (2 * deceleration) * (
                                    distance < 0
                                        ? -1
                                        : 1
                                ),
                                duration = speed / deceleration,
                                destination < lowerMargin
                                    ? (
                                        destination = wrapperSize
                                            ? lowerMargin - wrapperSize / 2.5 * (speed / 8)
                                            : lowerMargin,
                                        distance = Math.abs(destination - current),
                                        duration = distance / speed
                                    )
                                    : destination > 0 && (
                                        destination = wrapperSize
                                            ? wrapperSize / 2.5 * (speed / 8)
                                            : 0,
                                        distance = Math.abs(current) + destination,
                                        duration = distance / speed
                                    ), {
                                    destination: Math.round(destination),
                                    duration: duration
                                }
                            };
                            var _transform = _prefixStyle("transform");
                            return me.extend(me, {
                                hasTransform: !1 !== _transform,
                                hasPerspective: _prefixStyle("perspective") in _elementStyle, hasTouch: "ontouchstart" in window, hasPointer: !(
                                    !window.PointerEvent && !window.MSPointerEvent
                                ), hasTransition: _prefixStyle("transition") in _elementStyle
                            }),
                            me.isBadAndroid = function () {
                                var appVersion = window.navigator.appVersion;
                                if (/Android/.test(appVersion) && !/Chrome\/\d/.test(appVersion)) {
                                    var safariVersion = appVersion.match(/Safari\/(\d+.\d)/);
                                    return !(
                                        safariVersion && "object" == typeof safariVersion && safariVersion.length >= 2
                                    ) || parseFloat(safariVersion[1]) < 535.19
                                }
                                return !1
                            }(),
                            me.extend(me.style = {}, {
                                transform: _transform,
                                transitionTimingFunction: _prefixStyle("transitionTimingFunction"),
                                transitionDuration: _prefixStyle("transitionDuration"),
                                transitionDelay: _prefixStyle("transitionDelay"),
                                transformOrigin: _prefixStyle("transformOrigin")
                            }),
                            me.hasClass = function (e, c) {
                                return new RegExp("(^|\\s)" + c + "(\\s|$)").test(e.className)
                            },
                            me.addClass = function (e, c) {
                                if (!me.hasClass(e, c)) {
                                    var newclass = e
                                        .className
                                        .split(" ");
                                    newclass.push(c),
                                    e.className = newclass.join(" ")
                                }
                            },
                            me.removeClass = function (e, c) {
                                if (me.hasClass(e, c)) {
                                    var re = new RegExp("(^|\\s)" + c + "(\\s|$)", "g");
                                    e.className = e
                                        .className
                                        .replace(re, " ")
                                }
                            },
                            me.offset = function (el) {
                                for (var left = -el.offsetLeft, top = -el.offsetTop; el = el.offsetParent;) 
                                    left -= el.offsetLeft,
                                    top -= el.offsetTop;
                                return {left: left, top: top}
                            },
                            me.preventDefaultException = function (el, exceptions) {
                                for (var i in exceptions) 
                                    if (exceptions[i].test(el[i])) 
                                        return !0;
                            return !1
                            },
                            me.extend(me.eventType = {}, {
                                touchstart: 1,
                                touchmove: 1,
                                touchend: 1,
                                mousedown: 2,
                                mousemove: 2,
                                mouseup: 2,
                                pointerdown: 3,
                                pointermove: 3,
                                pointerup: 3,
                                MSPointerDown: 3,
                                MSPointerMove: 3,
                                MSPointerUp: 3
                            }),
                            me.extend(me.ease = {}, {
                                quadratic: {
                                    style: "cubic-bezier(0.25, 0.46, 0.45, 0.94)",
                                    fn: function (k) {
                                        return k * (2 - k)
                                    }
                                },
                                circular: {
                                    style: "cubic-bezier(0.1, 0.57, 0.1, 1)",
                                    fn: function (k) {
                                        return Math.sqrt(1 - --k * k)
                                    }
                                },
                                back: {
                                    style: "cubic-bezier(0.175, 0.885, 0.32, 1.275)",
                                    fn: function (k) {
                                        var b = 4;
                                        return (k -= 1) * k * ((b + 1) * k + b) + 1
                                    }
                                },
                                bounce: {
                                    style: "",
                                    fn: function (k) {
                                        return (k /= 1) < 1 / 2.75
                                            ? 7.5625 * k * k
                                            : k < 2 / 2.75
                                                ? 7.5625 * (k -= 1.5 / 2.75) * k + .75
                                                : k < 2.5 / 2.75
                                                    ? 7.5625 * (k -= 2.25 / 2.75) * k + .9375
                                                    : 7.5625 * (k -= 2.625 / 2.75) * k + .984375
                                    }
                                },
                                elastic: {
                                    style: "",
                                    fn: function (k) {
                                        var f = .22;
                                        return 0 === k
                                            ? 0
                                            : 1 == k
                                                ? 1
                                                : .4 * Math.pow(2, -10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1
                                    }
                                }
                            }),
                            me.tap = function (e, eventName) {
                                var ev = document.createEvent("Event");
                                ev.initEvent(eventName, !0, !0),
                                ev.pageX = e.pageX,
                                ev.pageY = e.pageY,
                                e
                                    .target
                                    .dispatchEvent(ev)
                            },
                            me.click = function (e) {
                                var ev,
                                    target = e.target;
                                /(SELECT|INPUT|TEXTAREA)/i.test(target.tagName) || (
                                    ev = document.createEvent("MouseEvents"),
                                    ev.initMouseEvent(
                                        "click",
                                        !0,
                                        !0,
                                        e.view,
                                        1,
                                        target.screenX,
                                        target.screenY,
                                        target.clientX,
                                        target.clientY,
                                        e.ctrlKey,
                                        e.altKey,
                                        e.shiftKey,
                                        e.metaKey,
                                        0,
                                        null
                                    ),
                                    ev._constructed = !0,
                                    target.dispatchEvent(ev)
                                )
                            },
                            me
                        }();
                    IScroll.prototype = {
                        version: "5.2.0",
                        _init: function () {
                            this._initEvents(),
                            (this.options.scrollbars || this.options.indicators) && this._initIndicators(),
                            this.options.mouseWheel && this._initWheel(),
                            this.options.snap && this._initSnap(),
                            this.options.keyBindings && this._initKeys()
                        },
                        destroy: function () {
                            this._initEvents(!0),
                            clearTimeout(this.resizeTimeout),
                            this.resizeTimeout = null,
                            this._execEvent("destroy")
                        },
                        _transitionEnd: function (e) {
                            e.target == this.scroller && this.isInTransition && (
                                this._transitionTime(),
                                this.resetPosition(this.options.bounceTime) || (this.isInTransition = !1, this._execEvent("scrollEnd"))
                            )
                        },
                        _start: function (e) {
                            if (1 != utils.eventType[e.type]) {
                                if (0 !== (
                                    e.which
                                        ? e.button
                                        : e.button < 2
                                            ? 0
                                            : 4 == e.button
                                                ? 1
                                                : 2
                                )) 
                                    return
                            }
                            if (this.enabled && (!this.initiated || utils.eventType[e.type] === this.initiated)) {
                                !this.options.preventDefault || utils.isBadAndroid || utils.preventDefaultException(
                                    e.target,
                                    this.options.preventDefaultException
                                ) || e.preventDefault();
                                var pos,
                                    point = e.touches
                                        ? e.touches[0]
                                        : e;
                                this.initiated = utils.eventType[e.type],
                                this.moved = !1,
                                this.distX = 0,
                                this.distY = 0,
                                this.directionX = 0,
                                this.directionY = 0,
                                this.directionLocked = 0,
                                this.startTime = utils.getTime(),
                                this.options.useTransition && this.isInTransition
                                    ? (
                                        this._transitionTime(),
                                        this.isInTransition = !1,
                                        pos = this.getComputedPosition(),
                                        this._translate(Math.round(pos.x), Math.round(pos.y)),
                                        this._execEvent("scrollEnd")
                                    )
                                    : !this.options.useTransition && this.isAnimating && (
                                        this.isAnimating = !1,
                                        this._execEvent("scrollEnd")
                                    ),
                                this.startX = this.x,
                                this.startY = this.y,
                                this.absStartX = this.x,
                                this.absStartY = this.y,
                                this.pointX = point.pageX,
                                this.pointY = point.pageY,
                                this._execEvent("beforeScrollStart")
                            }
                        },
                        _move: function (e) {
                            if (this.enabled && utils.eventType[e.type] === this.initiated) {
                                this.options.preventDefault && e.preventDefault();
                                var newX,
                                    newY,
                                    absDistX,
                                    absDistY,
                                    point = e.touches
                                        ? e.touches[0]
                                        : e,
                                    deltaX = point.pageX - this.pointX,
                                    deltaY = point.pageY - this.pointY,
                                    timestamp = utils.getTime();
                                if (
                                    this.pointX = point.pageX,
                                    this.pointY = point.pageY,
                                    this.distX += deltaX,
                                    this.distY += deltaY,
                                    absDistX = Math.abs(this.distX),
                                    absDistY = Math.abs(this.distY),
                                    !(timestamp - this.endTime > 300 && absDistX < 10 && absDistY < 10)
                                ) {
                                    if (this.directionLocked || this.options.freeScroll || (
                                        absDistX > absDistY + this.options.directionLockThreshold
                                            ? this.directionLocked = "h"
                                            : absDistY >= absDistX + this.options.directionLockThreshold
                                                ? this.directionLocked = "v"
                                                : this.directionLocked = "n"
                                    ), "h" == this.directionLocked) {
                                        if ("vertical" == this.options.eventPassthrough) 
                                            e.preventDefault();
                                        else if ("horizontal" == this.options.eventPassthrough) 
                                            return void(this.initiated = !1);
                                        deltaY = 0
                                    } else if ("v" == this.directionLocked) {
                                        if ("horizontal" == this.options.eventPassthrough) 
                                            e.preventDefault();
                                        else if ("vertical" == this.options.eventPassthrough) 
                                            return void(this.initiated = !1);
                                        deltaX = 0
                                    }
                                    deltaX = this.hasHorizontalScroll
                                        ? deltaX
                                        : 0,
                                    deltaY = this.hasVerticalScroll
                                        ? deltaY
                                        : 0,
                                    newX = this.x + deltaX,
                                    newY = this.y + deltaY,
                                    (newX > 0 || newX < this.maxScrollX) && (
                                        newX = this.options.bounce
                                            ? this.x + deltaX / 3
                                            : newX > 0
                                                ? 0
                                                : this.maxScrollX
                                    ),
                                    (newY > 0 || newY < this.maxScrollY) && (
                                        newY = this.options.bounce
                                            ? this.y + deltaY / 3
                                            : newY > 0
                                                ? 0
                                                : this.maxScrollY
                                    ),
                                    this.directionX = deltaX > 0
                                        ? -1
                                        : deltaX < 0
                                            ? 1
                                            : 0,
                                    this.directionY = deltaY > 0
                                        ? -1
                                        : deltaY < 0
                                            ? 1
                                            : 0,
                                    this.moved || this._execEvent("scrollStart"),
                                    this.moved = !0,
                                    this._translate(newX, newY),
                                    timestamp - this.startTime > 300 && (
                                        this.startTime = timestamp,
                                        this.startX = this.x,
                                        this.startY = this.y,
                                        1 == this.options.probeType && this._execEvent("scroll")
                                    ),
                                    this.options.probeType > 1 && this._execEvent("scroll")
                                }
                            }
                        },
                        _end: function (e) {
                            if (this.enabled && utils.eventType[e.type] === this.initiated) {
                                this.options.preventDefault && !utils.preventDefaultException(
                                    e.target,
                                    this.options.preventDefaultException
                                ) && e.preventDefault();
                                var momentumX,
                                    momentumY,
                                    duration = (
                                        e.changedTouches && e.changedTouches[0],
                                        utils.getTime() - this.startTime
                                    ),
                                    newX = Math.round(this.x),
                                    newY = Math.round(this.y),
                                    distanceX = Math.abs(newX - this.startX),
                                    distanceY = Math.abs(newY - this.startY),
                                    time = 0,
                                    easing = "";
                                if (
                                    this.isInTransition = 0,
                                    this.initiated = 0,
                                    this.endTime = utils.getTime(),
                                    !this.resetPosition(this.options.bounceTime)
                                ) {
                                    if (this.scrollTo(newX, newY), !this.moved) 
                                        return this.options.tap && utils.tap(e, this.options.tap),
                                        this.options.click && utils.click(e),
                                        void this._execEvent("scrollCancel");
                                    if (this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100) 
                                        return void this._execEvent("flick");
                                    if (this.options.momentum && duration < 300 && (
                                        momentumX = this.hasHorizontalScroll
                                            ? utils.momentum(
                                                this.x,
                                                this.startX,
                                                duration,
                                                this.maxScrollX,
                                                this.options.bounce
                                                    ? this.wrapperWidth
                                                    : 0,
                                                this.options.deceleration
                                            )
                                            : {
                                                destination: newX,
                                                duration: 0
                                            },
                                        momentumY = this.hasVerticalScroll
                                            ? utils.momentum(
                                                this.y,
                                                this.startY,
                                                duration,
                                                this.maxScrollY,
                                                this.options.bounce
                                                    ? this.wrapperHeight
                                                    : 0,
                                                this.options.deceleration
                                            )
                                            : {
                                                destination: newY,
                                                duration: 0
                                            },
                                        newX = momentumX.destination,
                                        newY = momentumY.destination,
                                        time = Math.max(momentumX.duration, momentumY.duration),
                                        this.isInTransition = 1
                                    ), this.options.snap) {
                                        var snap = this._nearestSnap(newX, newY);
                                        this.currentPage = snap,
                                        time = this.options.snapSpeed || Math.max(
                                            Math.max(Math.min(Math.abs(newX - snap.x), 1e3), Math.min(Math.abs(newY - snap.y), 1e3)),
                                            300
                                        ),
                                        newX = snap.x,
                                        newY = snap.y,
                                        this.directionX = 0,
                                        this.directionY = 0,
                                        easing = this.options.bounceEasing
                                    }
                                    if (newX != this.x || newY != this.y) 
                                        return (
                                            newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY
                                        ) && (easing = utils.ease.quadratic),
                                        void this.scrollTo(newX, newY, time, easing);
                                    this._execEvent("scrollEnd")
                                }
                            }
                        },
                        _resize: function () {
                            var that = this;
                            clearTimeout(this.resizeTimeout),
                            this.resizeTimeout = setTimeout(function () {
                                that.refresh()
                            }, this.options.resizePolling)
                        },
                        resetPosition: function (time) {
                            var x = this.x,
                                y = this.y;
                            return time = time || 0,
                            !this.hasHorizontalScroll || this.x > 0
                                ? x = 0
                                : this.x < this.maxScrollX && (x = this.maxScrollX),
                            !this.hasVerticalScroll || this.y > 0
                                ? y = 0
                                : this.y < this.maxScrollY && (y = this.maxScrollY),
                            (x != this.x || y != this.y) && (
                                this.scrollTo(x, y, time, this.options.bounceEasing),
                                !0
                            )
                        },
                        disable: function () {
                            this.enabled = !1
                        },
                        enable: function () {
                            this.enabled = !0
                        },
                        refresh: function () {
                            this.wrapper.offsetHeight;
                            this.wrapperWidth = this.wrapper.clientWidth,
                            this.wrapperHeight = this.wrapper.clientHeight,
                            this.scrollerWidth = this.scroller.offsetWidth,
                            this.scrollerHeight = this.scroller.offsetHeight,
                            this.maxScrollX = this.wrapperWidth - this.scrollerWidth,
                            this.maxScrollY = this.wrapperHeight - this.scrollerHeight,
                            this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0,
                            this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0,
                            this.hasHorizontalScroll || (
                                this.maxScrollX = 0,
                                this.scrollerWidth = this.wrapperWidth
                            ),
                            this.hasVerticalScroll || (
                                this.maxScrollY = 0,
                                this.scrollerHeight = this.wrapperHeight
                            ),
                            this.endTime = 0,
                            this.directionX = 0,
                            this.directionY = 0,
                            this.wrapperOffset = utils.offset(this.wrapper),
                            this._execEvent("refresh"),
                            this.resetPosition()
                        },
                        on: function (type, fn) {
                            this._events[type] || (this._events[type] = []),
                            this
                                ._events[type]
                                .push(fn)
                        },
                        off: function (type, fn) {
                            if (this._events[type]) {
                                var index = this
                                    ._events[type]
                                    .indexOf(fn);
                                index > -1 && this
                                    ._events[type]
                                    .splice(index, 1)
                            }
                        },
                        _execEvent: function (type) {
                            if (this._events[type]) {
                                var i = 0,
                                    l = this
                                        ._events[type]
                                        .length;
                                if (l) 
                                    for (; i < l; i++) 
                                        this
                                            ._events[type][i]
                                            .apply(this, [].slice.call(arguments, 1))
                                }
                        },
                        scrollBy: function (x, y, time, easing) {
                            x = this.x + x,
                            y = this.y + y,
                            time = time || 0,
                            this.scrollTo(x, y, time, easing)
                        },
                        scrollTo: function (x, y, time, easing) {
                            easing = easing || utils.ease.circular,
                            this.isInTransition = this.options.useTransition && time > 0;
                            var transitionType = this.options.useTransition && easing.style;
                            !time || transitionType
                                ? (
                                    transitionType && (this._transitionTimingFunction(easing.style), this._transitionTime(time)),
                                    this._translate(x, y)
                                )
                                : this._animate(x, y, time, easing.fn)
                        },
                        scrollToElement: function (el, time, offsetX, offsetY, easing) {
                            if (
                                el = el.nodeType
                                    ? el
                                    : this.scroller.querySelector(el)
                            ) {
                                var pos = utils.offset(el);
                                pos.left -= this.wrapperOffset.left,
                                pos.top -= this.wrapperOffset.top,
                                !0 === offsetX && (
                                    offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2)
                                ),
                                !0 === offsetY && (
                                    offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2)
                                ),
                                pos.left -= offsetX || 0,
                                pos.top -= offsetY || 0,
                                pos.left = pos.left > 0
                                    ? 0
                                    : pos.left < this.maxScrollX
                                        ? this.maxScrollX
                                        : pos.left,
                                pos.top = pos.top > 0
                                    ? 0
                                    : pos.top < this.maxScrollY
                                        ? this.maxScrollY
                                        : pos.top,
                                time = void 0 === time || null === time || "auto" === time
                                    ? Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top))
                                    : time,
                                this.scrollTo(pos.left, pos.top, time, easing)
                            }
                        },
                        _transitionTime: function (time) {
                            time = time || 0;
                            var durationProp = utils.style.transitionDuration;
                            if (
                                this.scrollerStyle[durationProp] = time + "ms",
                                !time && utils.isBadAndroid
                            ) {
                                this.scrollerStyle[durationProp] = "0.0001ms";
                                var self = this;
                                rAF(function () {
                                    "0.0001ms" === self.scrollerStyle[durationProp] && (
                                        self.scrollerStyle[durationProp] = "0s"
                                    )
                                })
                            }
                            if (this.indicators) 
                                for (var i = this.indicators.length; i--;) 
                                    this
                                        .indicators[i]
                                        .transitionTime(time)
                            },
                        _transitionTimingFunction: function (easing) {
                            if (
                                this.scrollerStyle[utils.style.transitionTimingFunction] = easing,
                                this.indicators
                            ) 
                                for (var i = this.indicators.length; i--;) 
                                    this
                                        .indicators[i]
                                        .transitionTimingFunction(easing)
                            },
                        _translate: function (x, y) {
                            if (
                                this.options.useTransform
                                    ? this.scrollerStyle[utils.style.transform] = "translate(" + x + "px," + y +
                                                "px)" + this.translateZ
                                    : (
                                        x = Math.round(x),
                                        y = Math.round(y),
                                        this.scrollerStyle.left = x + "px",
                                        this.scrollerStyle.top = y + "px"
                                    ),
                                this.x = x,
                                this.y = y,
                                this.indicators
                            ) 
                                for (var i = this.indicators.length; i--;) 
                                    this
                                        .indicators[i]
                                        .updatePosition()
                            },
                        _initEvents: function (remove) {
                            var eventType = remove
                                    ? utils.removeEvent
                                    : utils.addEvent,
                                target = this.options.bindToWrapper
                                    ? this.wrapper
                                    : window;
                            eventType(window, "orientationchange", this),
                            eventType(window, "resize", this),
                            this.options.click && eventType(this.wrapper, "click", this, !0),
                            this.options.disableMouse || (
                                eventType(this.wrapper, "mousedown", this),
                                eventType(target, "mousemove", this),
                                eventType(target, "mousecancel", this),
                                eventType(target, "mouseup", this)
                            ),
                            utils.hasPointer && !this.options.disablePointer && (
                                eventType(this.wrapper, utils.prefixPointerEvent("pointerdown"), this),
                                eventType(target, utils.prefixPointerEvent("pointermove"), this),
                                eventType(target, utils.prefixPointerEvent("pointercancel"), this),
                                eventType(target, utils.prefixPointerEvent("pointerup"), this)
                            ),
                            utils.hasTouch && !this.options.disableTouch && (
                                eventType(this.wrapper, "touchstart", this),
                                eventType(target, "touchmove", this),
                                eventType(target, "touchcancel", this),
                                eventType(target, "touchend", this)
                            ),
                            eventType(this.scroller, "transitionend", this),
                            eventType(this.scroller, "webkitTransitionEnd", this),
                            eventType(this.scroller, "oTransitionEnd", this),
                            eventType(this.scroller, "MSTransitionEnd", this)
                        },
                        getComputedPosition: function () {
                            var x,
                                y,
                                matrix = window.getComputedStyle(this.scroller, null);
                            return this.options.useTransform
                                ? (matrix = matrix[utils.style.transform].split(")")[0].split(", "), x = + (
                                    matrix[12] || matrix[4]
                                ), y = +(matrix[13] || matrix[5]))
                                : (
                                    x = +matrix.left.replace(/[^-\d.]/g, ""),
                                    y = +matrix.top.replace(/[^-\d.]/g, "")
                                ), {
                                x: x,
                                y: y
                            }
                        },
                        _initIndicators: function () {
                            function _indicatorsMap(fn) {
                                if (that.indicators) 
                                    for (var i = that.indicators.length; i--;) 
                                        fn.call(that.indicators[i])
                            }
                            var indicator,
                                interactive = this.options.interactiveScrollbars,
                                customStyle = "string" != typeof this.options.scrollbars,
                                indicators = [],
                                that = this;
                            this.indicators = [],
                            this.options.scrollbars && (
                                this.options.scrollY && (indicator = {
                                    el: createDefaultScrollbar("v", interactive, this.options.scrollbars),
                                    interactive: interactive,
                                    defaultScrollbars: !0,
                                    customStyle: customStyle,
                                    resize: this.options.resizeScrollbars,
                                    shrink: this.options.shrinkScrollbars,
                                    fade: this.options.fadeScrollbars,
                                    listenX: !1
                                }, this.wrapper.appendChild(indicator.el), indicators.push(indicator)),
                                this.options.scrollX && (indicator = {
                                    el: createDefaultScrollbar("h", interactive, this.options.scrollbars),
                                    interactive: interactive,
                                    defaultScrollbars: !0,
                                    customStyle: customStyle,
                                    resize: this.options.resizeScrollbars,
                                    shrink: this.options.shrinkScrollbars,
                                    fade: this.options.fadeScrollbars,
                                    listenY: !1
                                }, this.wrapper.appendChild(indicator.el), indicators.push(indicator))
                            ),
                            this.options.indicators && (
                                indicators = indicators.concat(this.options.indicators)
                            );
                            for (var i = indicators.length; i--;) 
                                this
                                    .indicators
                                    .push(new Indicator(this, indicators[i]));
                            this.options.fadeScrollbars && (
                                this.on("scrollEnd", function () {
                                    _indicatorsMap(function () {
                                        this.fade()
                                    })
                                }),
                                this.on("scrollCancel", function () {
                                    _indicatorsMap(function () {
                                        this.fade()
                                    })
                                }),
                                this.on("scrollStart", function () {
                                    _indicatorsMap(function () {
                                        this.fade(1)
                                    })
                                }),
                                this.on("beforeScrollStart", function () {
                                    _indicatorsMap(function () {
                                        this.fade(1, !0)
                                    })
                                })
                            ),
                            this.on("refresh", function () {
                                _indicatorsMap(function () {
                                    this.refresh()
                                })
                            }),
                            this.on("destroy", function () {
                                _indicatorsMap(function () {
                                    this.destroy()
                                }),
                                delete this.indicators
                            })
                        },
                        _initWheel: function () {
                            utils.addEvent(this.wrapper, "wheel", this),
                            utils.addEvent(this.wrapper, "mousewheel", this),
                            utils.addEvent(this.wrapper, "DOMMouseScroll", this),
                            this.on("destroy", function () {
                                clearTimeout(this.wheelTimeout),
                                this.wheelTimeout = null,
                                utils.removeEvent(this.wrapper, "wheel", this),
                                utils.removeEvent(this.wrapper, "mousewheel", this),
                                utils.removeEvent(this.wrapper, "DOMMouseScroll", this)
                            })
                        },
                        _wheel: function (e) {
                            if (this.enabled) {
                                e.preventDefault();
                                var wheelDeltaX,
                                    wheelDeltaY,
                                    newX,
                                    newY,
                                    that = this;
                                if (
                                    void 0 === this.wheelTimeout && that._execEvent("scrollStart"),
                                    clearTimeout(this.wheelTimeout),
                                    this.wheelTimeout = setTimeout(function () {
                                        that.options.snap || that._execEvent("scrollEnd"),
                                        that.wheelTimeout = void 0
                                    }, 400),
                                    "deltaX" in e
                                ) 
                                    1 === e.deltaMode
                                        ? (
                                            wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed,
                                            wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed
                                        )
                                        : (wheelDeltaX = -e.deltaX, wheelDeltaY = -e.deltaY);
                                else if ("wheelDeltaX" in e) 
                                    wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed,
                                    wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;
                                else if ("wheelDelta" in e) 
                                    wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;
                                else {
                                    if (!("detail" in e)) 
                                        return;
                                    wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed
                                }
                                if (
                                    wheelDeltaX *= this.options.invertWheelDirection,
                                    wheelDeltaY *= this.options.invertWheelDirection,
                                    this.hasVerticalScroll || (wheelDeltaX = wheelDeltaY, wheelDeltaY = 0),
                                    this.options.snap
                                ) 
                                    return newX = this.currentPage.pageX,
                                    newY = this.currentPage.pageY,
                                    wheelDeltaX > 0
                                        ? newX--
                                        : wheelDeltaX < 0 && newX++,
                                    wheelDeltaY > 0
                                        ? newY--
                                        : wheelDeltaY < 0 && newY++,
                                    void this.goToPage(newX, newY);
                                newX = this.x + Math.round(
                                    this.hasHorizontalScroll
                                        ? wheelDeltaX
                                        : 0
                                ),
                                newY = this.y + Math.round(
                                    this.hasVerticalScroll
                                        ? wheelDeltaY
                                        : 0
                                ),
                                this.directionX = wheelDeltaX > 0
                                    ? -1
                                    : wheelDeltaX < 0
                                        ? 1
                                        : 0,
                                this.directionY = wheelDeltaY > 0
                                    ? -1
                                    : wheelDeltaY < 0
                                        ? 1
                                        : 0,
                                newX > 0
                                    ? newX = 0
                                    : newX < this.maxScrollX && (newX = this.maxScrollX),
                                newY > 0
                                    ? newY = 0
                                    : newY < this.maxScrollY && (newY = this.maxScrollY),
                                this.scrollTo(newX, newY, 0),
                                this.options.probeType > 1 && this._execEvent("scroll")
                            }
                        },
                        _initSnap: function () {
                            this.currentPage = {},
                            "string" == typeof this.options.snap && (
                                this.options.snap = this.scroller.querySelectorAll(this.options.snap)
                            ),
                            this.on("refresh", function () {
                                var l,
                                    n,
                                    cx,
                                    cy,
                                    y,
                                    el,
                                    i = 0,
                                    m = 0,
                                    x = 0,
                                    stepX = this.options.snapStepX || this.wrapperWidth,
                                    stepY = this.options.snapStepY || this.wrapperHeight;
                                if (
                                    this.pages = [],
                                    this.wrapperWidth && this.wrapperHeight && this.scrollerWidth && this.scrollerHeight
                                ) {
                                    if (!0 === this.options.snap) 
                                        for (
                                            cx = Math.round(stepX / 2),
                                            cy = Math.round(stepY / 2);
                                            x > -this.scrollerWidth;
                                        ) {
                                            for (this.pages[i] = [], l = 0, y = 0; y > -this.scrollerHeight;) 
                                                this.pages[i][l] = {
                                                    x: Math.max(x, this.maxScrollX),
                                                    y: Math.max(y, this.maxScrollY),
                                                    width: stepX,
                                                    height: stepY,
                                                    cx: x - cx,
                                                    cy: y - cy
                                                }
                                            ,
                                            y -= stepY,
                                            l++;
                                            x -= stepX,
                                            i++
                                        }
                                    else 
                                        for (el = this.options.snap, l = el.length, n = -1; i < l; i++) 
                                            (0 === i || el[i].offsetLeft <= el[i - 1].offsetLeft) && (m = 0, n++),
                                            this.pages[m] || (this.pages[m] = []),
                                            x = Math.max(-el[i].offsetLeft, this.maxScrollX),
                                            y = Math.max(-el[i].offsetTop, this.maxScrollY),
                                            cx = x - Math.round(el[i].offsetWidth / 2),
                                            cy = y - Math.round(el[i].offsetHeight / 2),
                                            this.pages[m][n] = {
                                                x: x,
                                                y: y,
                                                width: el[i].offsetWidth,
                                                height: el[i].offsetHeight,
                                                cx: cx,
                                                cy: cy
                                            }
                                        ,
                                    x > this.maxScrollX && m++;
                                    this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0),
                                    this.options.snapThreshold % 1 == 0
                                        ? (
                                            this.snapThresholdX = this.options.snapThreshold,
                                            this.snapThresholdY = this.options.snapThreshold
                                        )
                                        : (
                                            this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold),
                                            this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold)
                                        )
                                }
                            }),
                            this.on("flick", function () {
                                var time = this.options.snapSpeed || Math.max(Math.max(
                                    Math.min(Math.abs(this.x - this.startX), 1e3),
                                    Math.min(Math.abs(this.y - this.startY), 1e3)
                                ), 300);
                                this.goToPage(
                                    this.currentPage.pageX + this.directionX,
                                    this.currentPage.pageY + this.directionY,
                                    time
                                )
                            })
                        },
                        _nearestSnap: function (x, y) {
                            if (!this.pages.length) 
                                return {x: 0, y: 0, pageX: 0, pageY: 0};
                            var i = 0,
                                l = this.pages.length,
                                m = 0;
                            if (Math.abs(x - this.absStartX) < this.snapThresholdX && Math.abs(y - this.absStartY) < this.snapThresholdY) 
                                return this.currentPage;
                            for (
                                x > 0
                                    ? x = 0
                                    : x < this.maxScrollX && (x = this.maxScrollX),
                                y > 0
                                    ? y = 0
                                    : y < this.maxScrollY && (y = this.maxScrollY); i < l; i++
                            ) 
                                if (x >= this.pages[i][0].cx) {
                                    x = this
                                        .pages[i][0]
                                        .x;
                                    break
                                }
                            for (l = this.pages[i].length; m < l; m++) 
                                if (y >= this.pages[0][m].cy) {
                                    y = this
                                        .pages[0][m]
                                        .y;
                                    break
                                }
                            return i == this.currentPage.pageX && (
                                i += this.directionX,
                                i < 0
                                    ? i = 0
                                    : i >= this.pages.length && (i = this.pages.length - 1),
                                x = this.pages[i][0].x
                            ),
                            m == this.currentPage.pageY && (
                                m += this.directionY,
                                m < 0
                                    ? m = 0
                                    : m >= this.pages[0].length && (m = this.pages[0].length - 1),
                                y = this.pages[0][m].y
                            ), {
                                x: x,
                                y: y,
                                pageX: i,
                                pageY: m
                            }
                        },
                        goToPage: function (x, y, time, easing) {
                            easing = easing || this.options.bounceEasing,
                            x >= this.pages.length
                                ? x = this.pages.length - 1
                                : x < 0 && (x = 0),
                            y >= this
                                .pages[x]
                                .length
                                    ? y = this
                                        .pages[x]
                                        .length - 1
                                    : y < 0 && (y = 0);
                            var posX = this
                                    .pages[x][y]
                                    .x,
                                posY = this
                                    .pages[x][y]
                                    .y;
                            time = void 0 === time
                                ? this.options.snapSpeed || Math.max(
                                    Math.max(Math.min(Math.abs(posX - this.x), 1e3), Math.min(Math.abs(posY - this.y), 1e3)),
                                    300
                                )
                                : time,
                            this.currentPage = {
                                x: posX,
                                y: posY,
                                pageX: x,
                                pageY: y
                            },
                            this.scrollTo(posX, posY, time, easing)
                        },
                        next: function (time, easing) {
                            var x = this.currentPage.pageX,
                                y = this.currentPage.pageY;
                            x++,
                            x >= this.pages.length && this.hasVerticalScroll && (x = 0, y++),
                            this.goToPage(x, y, time, easing)
                        },
                        prev: function (time, easing) {
                            var x = this.currentPage.pageX,
                                y = this.currentPage.pageY;
                            x--,
                            x < 0 && this.hasVerticalScroll && (x = 0, y--),
                            this.goToPage(x, y, time, easing)
                        },
                        _initKeys: function (e) {
                            var i,
                                keys = {
                                    pageUp: 33,
                                    pageDown: 34,
                                    end: 35,
                                    home: 36,
                                    left: 37,
                                    up: 38,
                                    right: 39,
                                    down: 40
                                };
                            if ("object" == typeof this.options.keyBindings) 
                                for (i in this.options.keyBindings) 
                                    "string" == typeof this
                                        .options
                                        .keyBindings[i] && (
                                            this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0)
                                        );
                            else 
                                this.options.keyBindings = {};
                            for (i in keys) 
                                this
                                    .options
                                    .keyBindings[i] = this
                                    .options
                                    .keyBindings[i] || keys[i];
                            utils.addEvent(window, "keydown", this),
                            this.on("destroy", function () {
                                utils.removeEvent(window, "keydown", this)
                            })
                        },
                        _key: function (e) {
                            if (this.enabled) {
                                var pos,
                                    snap = this.options.snap,
                                    newX = snap
                                        ? this.currentPage.pageX
                                        : this.x,
                                    newY = snap
                                        ? this.currentPage.pageY
                                        : this.y,
                                    now = utils.getTime(),
                                    prevTime = this.keyTime || 0,
                                    acceleration = .25;
                                switch (
                                    this.options.useTransition && this.isInTransition && (
                                        pos = this.getComputedPosition(),
                                        this._translate(Math.round(pos.x), Math.round(pos.y)),
                                        this.isInTransition = !1
                                    ),
                                    this.keyAcceleration = now - prevTime < 200
                                        ? Math.min(this.keyAcceleration + acceleration, 50)
                                        : 0,
                                    e.keyCode
                                ) {
                                    case this.options.keyBindings.pageUp:
                                        this.hasHorizontalScroll && !this.hasVerticalScroll
                                            ? newX += snap
                                                ? 1
                                                : this.wrapperWidth
                                            : newY += snap
                                                ? 1
                                                : this.wrapperHeight;
                                        break;
                                    case this.options.keyBindings.pageDown:
                                        this.hasHorizontalScroll && !this.hasVerticalScroll
                                            ? newX -= snap
                                                ? 1
                                                : this.wrapperWidth
                                            : newY -= snap
                                                ? 1
                                                : this.wrapperHeight;
                                        break;
                                    case this.options.keyBindings.end:
                                        newX = snap
                                            ? this.pages.length - 1
                                            : this.maxScrollX,
                                        newY = snap
                                            ? this
                                                .pages[0]
                                                .length - 1
                                            : this.maxScrollY;
                                        break;
                                    case this.options.keyBindings.home:
                                        newX = 0,
                                        newY = 0;
                                        break;
                                    case this.options.keyBindings.left:
                                        newX += snap
                                            ? -1
                                            : 5 + this.keyAcceleration >> 0;
                                        break;
                                    case this.options.keyBindings.up:
                                        newY += snap
                                            ? 1
                                            : 5 + this.keyAcceleration >> 0;
                                        break;
                                    case this.options.keyBindings.right:
                                        newX -= snap
                                            ? -1
                                            : 5 + this.keyAcceleration >> 0;
                                        break;
                                    case this.options.keyBindings.down:
                                        newY -= snap
                                            ? 1
                                            : 5 + this.keyAcceleration >> 0;
                                        break;
                                    default:
                                        return
                                }
                                if (snap) 
                                    return void this.goToPage(newX, newY);
                                newX > 0
                                    ? (newX = 0, this.keyAcceleration = 0)
                                    : newX < this.maxScrollX && (newX = this.maxScrollX, this.keyAcceleration = 0),
                                newY > 0
                                    ? (newY = 0, this.keyAcceleration = 0)
                                    : newY < this.maxScrollY && (newY = this.maxScrollY, this.keyAcceleration = 0),
                                this.scrollTo(newX, newY, 0),
                                this.keyTime = now
                            }
                        },
                        _animate: function (destX, destY, duration, easingFn) {
                            function step() {
                                var newX,
                                    newY,
                                    easing,
                                    now = utils.getTime();
                                if (now >= destTime) 
                                    return that.isAnimating = !1,
                                    that._translate(destX, destY),
                                    void(
                                        that.resetPosition(that.options.bounceTime) || that._execEvent("scrollEnd")
                                    );
                                now = (now - startTime) / duration,
                                easing = easingFn(now),
                                newX = (destX - startX) * easing + startX,
                                newY = (destY - startY) * easing + startY,
                                that._translate(newX, newY),
                                that.isAnimating && rAF(step),
                                3 == that.options.probeType && that._execEvent("scroll")
                            }
                            var that = this,
                                startX = this.x,
                                startY = this.y,
                                startTime = utils.getTime(),
                                destTime = startTime + duration;
                            this.isAnimating = !0,
                            step()
                        },
                        handleEvent: function (e) {
                            switch (e.type) {
                                case "touchstart":
                                case "pointerdown":
                                case "MSPointerDown":
                                case "mousedown":
                                    this._start(e);
                                    break;
                                case "touchmove":
                                case "pointermove":
                                case "MSPointerMove":
                                case "mousemove":
                                    this._move(e);
                                    break;
                                case "touchend":
                                case "pointerup":
                                case "MSPointerUp":
                                case "mouseup":
                                case "touchcancel":
                                case "pointercancel":
                                case "MSPointerCancel":
                                case "mousecancel":
                                    this._end(e);
                                    break;
                                case "orientationchange":
                                case "resize":
                                    this._resize();
                                    break;
                                case "transitionend":
                                case "webkitTransitionEnd":
                                case "oTransitionEnd":
                                case "MSTransitionEnd":
                                    this._transitionEnd(e);
                                    break;
                                case "wheel":
                                case "DOMMouseScroll":
                                case "mousewheel":
                                    this._wheel(e);
                                    break;
                                case "keydown":
                                    this._key(e);
                                    break;
                                case "click":
                                    this.enabled && !e._constructed && (e.preventDefault(), e.stopPropagation())
                            }
                        }
                    },
                    Indicator.prototype = {
                        handleEvent: function (e) {
                            switch (e.type) {
                                case "touchstart":
                                case "pointerdown":
                                case "MSPointerDown":
                                case "mousedown":
                                    this._start(e);
                                    break;
                                case "touchmove":
                                case "pointermove":
                                case "MSPointerMove":
                                case "mousemove":
                                    this._move(e);
                                    break;
                                case "touchend":
                                case "pointerup":
                                case "MSPointerUp":
                                case "mouseup":
                                case "touchcancel":
                                case "pointercancel":
                                case "MSPointerCancel":
                                case "mousecancel":
                                    this._end(e)
                            }
                        },
                        destroy: function () {
                            this.options.fadeScrollbars && (
                                clearTimeout(this.fadeTimeout),
                                this.fadeTimeout = null
                            ),
                            this.options.interactive && (
                                utils.removeEvent(this.indicator, "touchstart", this),
                                utils.removeEvent(this.indicator, utils.prefixPointerEvent("pointerdown"), this),
                                utils.removeEvent(this.indicator, "mousedown", this),
                                utils.removeEvent(window, "touchmove", this),
                                utils.removeEvent(window, utils.prefixPointerEvent("pointermove"), this),
                                utils.removeEvent(window, "mousemove", this),
                                utils.removeEvent(window, "touchend", this),
                                utils.removeEvent(window, utils.prefixPointerEvent("pointerup"), this),
                                utils.removeEvent(window, "mouseup", this)
                            ),
                            this.options.defaultScrollbars && this
                                .wrapper
                                .parentNode
                                .removeChild(this.wrapper)
                        },
                        _start: function (e) {
                            var point = e.touches
                                ? e.touches[0]
                                : e;
                            e.preventDefault(),
                            e.stopPropagation(),
                            this.transitionTime(),
                            this.initiated = !0,
                            this.moved = !1,
                            this.lastPointX = point.pageX,
                            this.lastPointY = point.pageY,
                            this.startTime = utils.getTime(),
                            this.options.disableTouch || utils.addEvent(window, "touchmove", this),
                            this.options.disablePointer || utils.addEvent(
                                window,
                                utils.prefixPointerEvent("pointermove"),
                                this
                            ),
                            this.options.disableMouse || utils.addEvent(window, "mousemove", this),
                            this
                                .scroller
                                ._execEvent("beforeScrollStart")
                        },
                        _move: function (e) {
                            var deltaX,
                                deltaY,
                                newX,
                                newY,
                                point = e.touches
                                    ? e.touches[0]
                                    : e,
                                timestamp = utils.getTime();
                            this.moved || this
                                .scroller
                                ._execEvent("scrollStart"),
                            this.moved = !0,
                            deltaX = point.pageX - this.lastPointX,
                            this.lastPointX = point.pageX,
                            deltaY = point.pageY - this.lastPointY,
                            this.lastPointY = point.pageY,
                            newX = this.x + deltaX,
                            newY = this.y + deltaY,
                            this._pos(newX, newY),
                            1 == this.scroller.options.probeType && timestamp - this.startTime > 300
                                ? (this.startTime = timestamp, this.scroller._execEvent("scroll"))
                                : this.scroller.options.probeType > 1 && this
                                    .scroller
                                    ._execEvent("scroll"),
                            e.preventDefault(),
                            e.stopPropagation()
                        },
                        _end: function (e) {
                            if (this.initiated) {
                                if (
                                    this.initiated = !1,
                                    e.preventDefault(),
                                    e.stopPropagation(),
                                    utils.removeEvent(window, "touchmove", this),
                                    utils.removeEvent(window, utils.prefixPointerEvent("pointermove"), this),
                                    utils.removeEvent(window, "mousemove", this),
                                    this.scroller.options.snap
                                ) {
                                    var snap = this
                                            .scroller
                                            ._nearestSnap(this.scroller.x, this.scroller.y),
                                        time = this.options.snapSpeed || Math.max(Math.max(
                                            Math.min(Math.abs(this.scroller.x - snap.x), 1e3),
                                            Math.min(Math.abs(this.scroller.y - snap.y), 1e3)
                                        ), 300);
                                    this.scroller.x == snap.x && this.scroller.y == snap.y || (
                                        this.scroller.directionX = 0,
                                        this.scroller.directionY = 0,
                                        this.scroller.currentPage = snap,
                                        this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing)
                                    )
                                }
                                this.moved && this
                                    .scroller
                                    ._execEvent("scrollEnd")
                            }
                        },
                        transitionTime: function (time) {
                            time = time || 0;
                            var durationProp = utils.style.transitionDuration;
                            if (
                                this.indicatorStyle[durationProp] = time + "ms",
                                !time && utils.isBadAndroid
                            ) {
                                this.indicatorStyle[durationProp] = "0.0001ms";
                                var self = this;
                                rAF(function () {
                                    "0.0001ms" === self.indicatorStyle[durationProp] && (
                                        self.indicatorStyle[durationProp] = "0s"
                                    )
                                })
                            }
                        },
                        transitionTimingFunction: function (easing) {
                            this.indicatorStyle[utils.style.transitionTimingFunction] = easing
                        },
                        refresh: function () {
                            this.transitionTime(),
                            this.options.listenX && !this.options.listenY
                                ? this.indicatorStyle.display = this.scroller.hasHorizontalScroll
                                    ? "block"
                                    : "none"
                                : this.options.listenY && !this.options.listenX
                                    ? this.indicatorStyle.display = this.scroller.hasVerticalScroll
                                        ? "block"
                                        : "none"
                                    : this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll
                                        ? "block"
                                        : "none",
                            this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll
                                ? (
                                    utils.addClass(this.wrapper, "iScrollBothScrollbars"),
                                    utils.removeClass(this.wrapper, "iScrollLoneScrollbar"),
                                    this.options.defaultScrollbars && this.options.customStyle && (
                                        this.options.listenX
                                            ? this.wrapper.style.right = "8px"
                                            : this.wrapper.style.bottom = "8px"
                                    )
                                )
                                : (
                                    utils.removeClass(this.wrapper, "iScrollBothScrollbars"),
                                    utils.addClass(this.wrapper, "iScrollLoneScrollbar"),
                                    this.options.defaultScrollbars && this.options.customStyle && (
                                        this.options.listenX
                                            ? this.wrapper.style.right = "2px"
                                            : this.wrapper.style.bottom = "2px"
                                    )
                                );
                            this.wrapper.offsetHeight;
                            this.options.listenX && (
                                this.wrapperWidth = this.wrapper.clientWidth,
                                this.options.resize
                                    ? (
                                        this.indicatorWidth = Math.max(
                                            Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)),
                                            8
                                        ),
                                        this.indicatorStyle.width = this.indicatorWidth + "px"
                                    )
                                    : this.indicatorWidth = this.indicator.clientWidth,
                                this.maxPosX = this.wrapperWidth - this.indicatorWidth,
                                "clip" == this.options.shrink
                                    ? (
                                        this.minBoundaryX = 8 - this.indicatorWidth,
                                        this.maxBoundaryX = this.wrapperWidth - 8
                                    )
                                    : (this.minBoundaryX = 0, this.maxBoundaryX = this.maxPosX),
                                this.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX
                            ),
                            this.options.listenY && (
                                this.wrapperHeight = this.wrapper.clientHeight,
                                this.options.resize
                                    ? (
                                        this.indicatorHeight = Math.max(
                                            Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)),
                                            8
                                        ),
                                        this.indicatorStyle.height = this.indicatorHeight + "px"
                                    )
                                    : this.indicatorHeight = this.indicator.clientHeight,
                                this.maxPosY = this.wrapperHeight - this.indicatorHeight,
                                "clip" == this.options.shrink
                                    ? (
                                        this.minBoundaryY = 8 - this.indicatorHeight,
                                        this.maxBoundaryY = this.wrapperHeight - 8
                                    )
                                    : (this.minBoundaryY = 0, this.maxBoundaryY = this.maxPosY),
                                this.maxPosY = this.wrapperHeight - this.indicatorHeight,
                                this.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY
                            ),
                            this.updatePosition()
                        },
                        updatePosition: function () {
                            var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,
                                y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;
                            this.options.ignoreBoundaries || (
                                x < this.minBoundaryX
                                    ? ("scale" == this.options.shrink && (this.width = Math.max(
                                        this.indicatorWidth + x,
                                        8
                                    ), this.indicatorStyle.width = this.width + "px"), x = this.minBoundaryX)
                                    : x > this.maxBoundaryX
                                        ? "scale" == this.options.shrink
                                            ? (
                                                this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8),
                                                this.indicatorStyle.width = this.width + "px",
                                                x = this.maxPosX + this.indicatorWidth - this.width
                                            )
                                            : x = this.maxBoundaryX
                                        : "scale" == this.options.shrink && this.width != this.indicatorWidth && (
                                            this.width = this.indicatorWidth,
                                            this.indicatorStyle.width = this.width + "px"
                                        ),
                                y < this.minBoundaryY
                                    ? ("scale" == this.options.shrink && (this.height = Math.max(
                                        this.indicatorHeight + 3 * y,
                                        8
                                    ), this.indicatorStyle.height = this.height + "px"), y = this.minBoundaryY)
                                    : y > this.maxBoundaryY
                                        ? "scale" == this.options.shrink
                                            ? (
                                                this.height = Math.max(this.indicatorHeight - 3 * (y - this.maxPosY), 8),
                                                this.indicatorStyle.height = this.height + "px",
                                                y = this.maxPosY + this.indicatorHeight - this.height
                                            )
                                            : y = this.maxBoundaryY
                                        : "scale" == this.options.shrink && this.height != this.indicatorHeight && (
                                            this.height = this.indicatorHeight,
                                            this.indicatorStyle.height = this.height + "px"
                                        )
                            ),
                            this.x = x,
                            this.y = y,
                            this.scroller.options.useTransform
                                ? this.indicatorStyle[utils.style.transform] = "translate(" + x + "px," + y +
                                    "px)" + this.scroller.translateZ
                                : (this.indicatorStyle.left = x + "px", this.indicatorStyle.top = y + "px")
                        },
                        _pos: function (x, y) {
                            x < 0
                                ? x = 0
                                : x > this.maxPosX && (x = this.maxPosX),
                            y < 0
                                ? y = 0
                                : y > this.maxPosY && (y = this.maxPosY),
                            x = this.options.listenX
                                ? Math.round(x / this.sizeRatioX)
                                : this.scroller.x,
                            y = this.options.listenY
                                ? Math.round(y / this.sizeRatioY)
                                : this.scroller.y,
                            this
                                .scroller
                                .scrollTo(x, y)
                        },
                        fade: function (val, hold) {
                            if (!hold || this.visible) {
                                clearTimeout(this.fadeTimeout),
                                this.fadeTimeout = null;
                                var time = val
                                        ? 250
                                        : 500,
                                    delay = val
                                        ? 0
                                        : 300;
                                val = val
                                    ? "1"
                                    : "0",
                                this.wrapperStyle[utils.style.transitionDuration] = time + "ms",
                                this.fadeTimeout = setTimeout(function (val) {
                                    this.wrapperStyle.opacity = val,
                                    this.visible = +val
                                }.bind(this, val), delay)
                            }
                        }
                    },
                    IScroll.utils = utils,
                    void 0 !== module && module.exports
                        ? module.exports = IScroll
                        : void 0 !== (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                            return IScroll
                        }.call(exports, __webpack_require__, exports, module)) && (
                            module.exports = __WEBPACK_AMD_DEFINE_RESULT__
                        )
                })(window, document, Math)
            },
            function (module, exports, __webpack_require__) {
                "use strict";
                (function (nclkExports) {
                        function nclk_proxy(o, a, i, r, opt, g) {
                            var g_nclk_proxy = nclkExports.g_nclk_proxy || "";
                            return g_nclk_proxy && o.href && (o.href = g_nclk_proxy + nclk.ec(o.href)),
                            nclk(o, a, i, r, opt, g)
                        }
                        function nclk_v2(e, a, i, r, g, pid) {
                            var l,
                                tU,
                                sc,
                                evt = e,
                                o = e;
                            if ("nodeType" in e && e.nodeType >= 1) 
                                evt = window.event || e;
                            else if (e) {
                                var target = e.srcElement || e.currentTarget || e.target;
                                target && (o = nclk.findLink(target))
                            }
                            return g || (g = ""),
                            sc = nclk.gcp(o, evt),
                            tU = nclk.gl(a, i, r, sc, "", 0, nclk.st, g, pid),
                            l = nclk.l(o, tU),
                            nclk.sd(l),
                            !0
                        }
                        var nclk = function nclk(e, a, i, r, opt, g, pid) {
                                nclk_v2(e, a, i, r, g, pid)
                            },
                        ccsrv = nclkExports.ccsrv || "cc.naver.com",
                        nsc = nclkExports.nsc || "decide.me";
                        nclk.vs = "0.4.5",
                        nclk.md = "cc",
                        nclk.pt = "https:" == window.location.protocol
                            ? "https:"
                            : "http:",
                        nclk.ct = 0,
                        nclk.ec = encodeURIComponent,
                        nclk.st = 1,
                        nclk.findLink = function (_el) {
                            for (
                                var el = _el;
                                el && "BODY" !== el.tagName && "HTML" !== el.tagName && "A" !== el.tagName;
                            ) 
                                el = el.parentNode;
                            return "A" !== el.tagName && (el = _el),
                            el
                        },
                        nclk.l = function (o, tU) {
                            var l,
                                tN,
                                tH;
                            return o && o.href && o.getAttribute("href")
                                ? (
                                    tN = o.tagName.toLowerCase(),
                                    tH = o.href.toLowerCase(),
                                    tH && 0 == tH.indexOf(
                                            nclk.pt + "//" + ccsrv
                                        )
                                        ? l = o.href
                                        : tH && 0 != tH.indexOf(nclk.pt + "//" + ccsrv) && tN && "img" != tN && (
                                            l = tU + "&u=" + nclk.ec(o.href)
                                        ),
                                    l
                                )
                                : tU + "&u=about%3Ablank"
                        },
                        nclk.sd = function (l, func) {
                            var timer,
                                f = 0;
                            if (nclk.ct > 0) {
                                l += "&nt=" + (
                                    new Date
                                ).getTime()
                            }
                            "function" == typeof func && (f = 1);
                            var o = new Image;
                            o.src = l,
                            o.onload = function () {
                                timer && clearTimeout(timer),
                                f && func(),
                                o.onload = null
                            },
                            o.onerror = function () {
                                timer && clearTimeout(timer),
                                f && func(),
                                o.onerror = null
                            },
                            f && (timer = setTimeout(function () {
                                func()
                            }, 5e3)),
                            nclk.ct++
                        },
                        nclk.gl = function (a, i, r, sc, u, m, s, g, pid) {
                            var g_ssc = nclkExports.g_ssc || "",
                                g_query = nclkExports.g_query || "",
                                lcs_get_lpid = nclkExports.lcs_get_lpid || null,
                                g_pid = nclkExports.g_pid || "",
                                g_sid = nclkExports.g_sid || "";
                            void 0 == m && (m = 1),
                            void 0 == s && (s = 1);
                            var l = nclk.pt + "//" + ccsrv + "/" + nclk.md + "?a=" + a + "&r=" + r +
                                "&i=" + i + "&m=" + m;
                            return 1 == s
                                ? (
                                    g_ssc && (l += "&ssc=" + g_ssc),
                                    g_query && (l += "&q=" + nclk.ec(g_query)),
                                    g_sid && (l += "&s=" + g_sid),
                                    pid
                                        ? l += "&p=" + pid
                                        : g_pid
                                            ? l += "&p=" + g_pid
                                            : lcs_get_lpid
                                                ? l += "&p=" + lcs_get_lpid()
                                                : console.warn("'g_pid / lcs_get_lpid' is not exist.")
                                )
                                : (l += "&nsc=" + nsc, console.warn("[DEPRECATED] NSC mode")),
                            g && (l += "&g=" + g),
                            u && (l += "&u=" + nclk.ec(u)),
                            sc && (l += sc),
                            l
                        },
                        nclk.al = function (sType, fn) {
                            var w = window;
                            w.addEventListener
                                ? w.addEventListener(sType, fn, !1)
                                : w.attachEvent && w.attachEvent("on" + sType, fn)
                        },
                        nclk.gsbw = function () {
                            var inner = document.createElement("p");
                            inner.style.width = "200px",
                            inner.style.height = "200px";
                            var outer = document.createElement("div");
                            outer.style.position = "absolute",
                            outer.style.top = "0px",
                            outer.style.left = "0px",
                            outer.style.visibility = "hidden",
                            outer.style.width = "200px",
                            outer.style.height = "150px",
                            outer.style.overflow = "hidden",
                            outer.appendChild(inner),
                            document
                                .body
                                .appendChild(outer);
                            var w1 = inner.offsetWidth;
                            outer.style.overflow = "scroll";
                            var w2 = inner.offsetWidth;
                            return w1 == w2 && (w2 = outer.clientWidth),
                            document
                                .body
                                .removeChild(outer),
                            w1 - w2
                        },
                        nclk.fp = function (obj) {
                            var curleft = curtop = 0;
                            try {
                                if (obj.offsetParent) 
                                    do {
                                        curleft += obj.offsetLeft,
                                        curtop += obj.offsetTop
                                    } while (obj = obj.offsetParent);
                                else 
                                    (obj.x || obj.y) && (obj.x && (curleft += obj.x), obj.y && (curtop += obj.y))
                                } catch (e) {}
                                return [curleft, curtop]
                            },
                            nclk.ws = function (win) {
                                win || (win = window);
                                var winWidth = 0;
                                if (win.innerWidth) {
                                    if (winWidth = win.innerWidth, "number" == typeof win.innerWidth) {
                                        var scrollbarWidth = nclk.gsbw();
                                        winWidth = win.innerWidth - scrollbarWidth
                                    }
                                } else 
                                    document.documentElement && document.documentElement.clientWidth
                                        ? winWidth = document.documentElement.clientWidth
                                        : document.body && (document.body.clientWidth || document.body.clientHeight) && (
                                            winWidth = document.body.clientWidth
                                        );
                                return winWidth
                            },
                            nclk.ci = function (obj) {
                                var docObj,
                                    p = (document.URL, obj.parentNode);
                                if (null == p || void 0 == p) 
                                    return !1;
                                for (;;) 
                                    if ("#document" == p.nodeName.toLowerCase()) {
                                        docObj = p.parentWindow
                                            ? p.parentWindow
                                            : p.defaultView;
                                        try {
                                            return null != docObj.frameElement && void 0 != docObj.frameElement && (
                                                "iframe" == docObj.frameElement.nodeName.toLowerCase() && (docObj.frameElement.id || !1)
                                            )
                                        } catch (e) {
                                            return !1
                                        }
                                    }
                                else if (null == (p = p.parentNode) || void 0 == p) 
                                    return !1
                            },
                            nclk.gcp = function (obj, e) {
                                var dBody,
                                    dElement,
                                    ifrId,
                                    sx = -1,
                                    sy = -1,
                                    px = -1,
                                    py = -1,
                                    l = "",
                                    theEvent = window.event
                                        ? window.event
                                        : obj;
                                e && (theEvent = e || window.event);
                                try {
                                    if (bw = nclk.ws(window), ifrId = nclk.ci(obj)) {
                                        var ifrOffset = nclk.fp(document.getElementById(ifrId));
                                        theEvent.clientX && void 0 != theEvent.clientX && (
                                            dBody = document.body,
                                            dBody.clientLeft && dBody.clientTop
                                                ? (
                                                    ifrSx = theEvent.clientX - dBody.clientLeft,
                                                    ifrSy = theEvent.clientY - dBody.clientTop
                                                )
                                                : (ifrSx = theEvent.clientX, ifrSy = theEvent.clientY)
                                        ),
                                        px = ifrOffset[0] + ifrSx,
                                        py = ifrOffset[1] + ifrSy,
                                        document.body && (document.body.scrollTop || document.body.scrollLeft)
                                            ? (
                                                dBody = document.body,
                                                sx = px - dBody.scrollLeft,
                                                sy = py - dBody.scrollTop
                                            )
                                            : document.documentElement && (
                                                document.documentElement.scrollTop || document.documentElement.scrollLeft
                                            )
                                                ? (
                                                    dElement = document.documentElement,
                                                    sx = px - dElement.scrollLeft,
                                                    sy = py - dElement.scrollTop
                                                )
                                                : (sx = px, sy = py)
                                    } else 
                                        theEvent.clientX && void 0 != theEvent.clientX && (
                                            dBody = document.body,
                                            dBody.clientLeft && dBody.clientTop
                                                ? (
                                                    sx = theEvent.clientX - dBody.clientLeft,
                                                    sy = theEvent.clientY - dBody.clientTop
                                                )
                                                : (sx = theEvent.clientX, sy = theEvent.clientY)
                                        ),
                                        document.body && (document.body.scrollTop || document.body.scrollLeft)
                                            ? (px = document.body.scrollLeft + (
                                                sx < 0
                                                    ? 0
                                                    : sx
                                            ), py = document.body.scrollTop + (
                                                sy < 0
                                                    ? 0
                                                    : sy
                                            ))
                                            : document.documentElement && (
                                                document.documentElement.scrollTop || document.documentElement.scrollLeft
                                            )
                                                ? (
                                                    dElement = document.documentElement,
                                                    void 0 != dElement.scrollLeft && (px = dElement.scrollLeft + (
                                                        sx < 0
                                                            ? 0
                                                            : sx
                                                    )),
                                                    void 0 != dElement.scrollTop && (py = dElement.scrollTop + (
                                                        sy < 0
                                                            ? 0
                                                            : sy
                                                    ))
                                                )
                                                : (
                                                    px = sx < 0
                                                        ? 0
                                                        : sx,
                                                    py = sy < 0
                                                        ? 0
                                                        : sy
                                                ),
                                        theEvent.pageX && (px = theEvent.pageX),
                                        theEvent.pageY && (py = theEvent.pageY)
                                } catch (e) {}
                                return -1 != px && -1 != py && (l += "&px=" + px + "&py=" + py),
                                -1 != sx && -1 != sy && (l += "&sx=" + sx + "&sy=" + sy),
                                l
                            },
                            nclkExports.nclk_proxy = nclk_proxy,
                            nclkExports.nclk = nclk,
                            nclkExports.nclk_v2 = nclk_v2
                        }
                    )(window)
                },
                function (module, exports, __webpack_require__) {
                    "use strict"
                },
                function (module, exports, __webpack_require__) {
                    "use strict";
                    angular.module("ngLocale", [], [
                        "$provide",
                        function ($provide) {
                            var PLURAL_CATEGORY = {
                                ZERO: "zero",
                                ONE: "one",
                                TWO: "two",
                                FEW: "few",
                                MANY: "many",
                                OTHER: "other"
                            };
                            $provide.value("$locale", {
                                DATETIME_FORMATS: {
                                    AMPMS: [
                                        "오전", "오후"
                                    ],
                                    DAY: [
                                        "일요일",
                                        "월요일",
                                        "화요일",
                                        "수요일",
                                        "목요일",
                                        "금요일",
                                        "토요일"
                                    ],
                                    ERANAMES: [
                                        "기원전", "서기"
                                    ],
                                    ERAS: [
                                        "기원전", "서기"
                                    ],
                                    FIRSTDAYOFWEEK: 6,
                                    MONTH: [
                                        "1월",
                                        "2월",
                                        "3월",
                                        "4월",
                                        "5월",
                                        "6월",
                                        "7월",
                                        "8월",
                                        "9월",
                                        "10월",
                                        "11월",
                                        "12월"
                                    ],
                                    SHORTDAY: [
                                        "일",
                                        "월",
                                        "화",
                                        "수",
                                        "목",
                                        "금",
                                        "토"
                                    ],
                                    SHORTMONTH: [
                                        "1월",
                                        "2월",
                                        "3월",
                                        "4월",
                                        "5월",
                                        "6월",
                                        "7월",
                                        "8월",
                                        "9월",
                                        "10월",
                                        "11월",
                                        "12월"
                                    ],
                                    STANDALONEMONTH: [
                                        "1월",
                                        "2월",
                                        "3월",
                                        "4월",
                                        "5월",
                                        "6월",
                                        "7월",
                                        "8월",
                                        "9월",
                                        "10월",
                                        "11월",
                                        "12월"
                                    ],
                                    WEEKENDRANGE: [
                                        5, 6
                                    ],
                                    fullDate: "y년 M월 d일 EEEE",
                                    longDate: "y년 M월 d일",
                                    medium: "y. M. d. a h:mm:ss",
                                    mediumDate: "y. M. d.",
                                    mediumTime: "a h:mm:ss",
                                    short: "yy. M. d. a h:mm",
                                    shortDate: "yy. M. d.",
                                    shortTime: "a h:mm"
                                },
                                NUMBER_FORMATS: {
                                    CURRENCY_SYM: "₩",
                                    DECIMAL_SEP: ".",
                                    GROUP_SEP: ",",
                                    PATTERNS: [
                                        {
                                            gSize: 3,
                                            lgSize: 3,
                                            maxFrac: 3,
                                            minFrac: 0,
                                            minInt: 1,
                                            negPre: "-",
                                            negSuf: "",
                                            posPre: "",
                                            posSuf: ""
                                        }, {
                                            gSize: 3,
                                            lgSize: 3,
                                            maxFrac: 2,
                                            minFrac: 2,
                                            minInt: 1,
                                            negPre: "-¤",
                                            negSuf: "",
                                            posPre: "¤",
                                            posSuf: ""
                                        }
                                    ]
                                },
                                id: "ko-kr",
                                localeID: "ko_KR",
                                pluralCat: function pluralCat(n, opt_precision) {
                                    return PLURAL_CATEGORY.OTHER
                                }
                            })
                        }
                    ])
                },
                function (module, exports, __webpack_require__) {
                    "use strict";
                    var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                        ? function (obj) {
                            return typeof obj
                        }
                        : function (obj) {
                            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype
                                ? "symbol"
                                : typeof obj
                        };
                    (function (global, factory) {
                        factory(
                            "object" === _typeof(exports) && void 0 !== module
                                ? __webpack_require__(48)
                                : global.moment
                        )
                    })(void 0, function (moment) {
                        return moment.defineLocale("ko", {
                            months: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
                            monthsShort: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
                            weekdays: "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),
                            weekdaysShort: "일_월_화_수_목_금_토".split("_"),
                            weekdaysMin: "일_월_화_수_목_금_토".split("_"),
                            longDateFormat: {
                                LT: "A h시 m분",
                                LTS: "A h시 m분 s초",
                                L: "YYYY.MM.DD",
                                LL: "YYYY년 MMMM D일",
                                LLL: "YYYY년 MMMM D일 A h시 m분",
                                LLLL: "YYYY년 MMMM D일 dddd A h시 m분"
                            },
                            calendar: {
                                sameDay: "오늘 LT",
                                nextDay: "내일 LT",
                                nextWeek: "dddd LT",
                                lastDay: "어제 LT",
                                lastWeek: "지난주 dddd LT",
                                sameElse: "L"
                            },
                            relativeTime: {
                                future: "%s 후",
                                past: "%s 전",
                                s: "몇초",
                                ss: "%d초",
                                m: "일분",
                                mm: "%d분",
                                h: "한시간",
                                hh: "%d시간",
                                d: "하루",
                                dd: "%d일",
                                M: "한달",
                                MM: "%d달",
                                y: "일년",
                                yy: "%d년"
                            },
                            ordinalParse: /\d{1,2}일/,
                            ordinal: "%d일",
                            meridiemParse: /오전|오후/,
                            isPM: function isPM(token) {
                                return "오후" === token
                            },
                            meridiem: function meridiem(hour, minute, isUpper) {
                                return 0 === hour && 0 === minute
                                    ? "자정"
                                    : 12 === hour && 0 === minute
                                        ? "정오"
                                        : hour < 12
                                            ? "오전"
                                            : "오후"
                            }
                        })
                    })
                },
                function (module, exports, __webpack_require__) {
                    "use strict";
                    var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                        ? function (obj) {
                            return typeof obj
                        }
                        : function (obj) {
                            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype
                                ? "symbol"
                                : typeof obj
                        };
                    (function (global, factory) {
                        factory(
                            "object" === _typeof(exports) && void 0 !== module
                                ? __webpack_require__(48)
                                : global.moment
                        )
                    })(void 0, function (moment) {
                        return moment.defineLocale("en", {
                            months: (
                                "January_February_March_April_May_June_July_August_September_October_November_D" +
                            "ecember"
                            ).split("_"),
                            monthsShort: "Jan_Feb_Mar_Apr_May_June_July_Aug_Sept_Oct_Nov_Dec".split("_"),
                            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                            weekdaysShort: "Sun_Mon_Tues_Wed_Thurs_Fri_Sat".split("_"),
                            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                            longDateFormat: {
                                LT: "HH:mm",
                                LTS: "HH:mm:ss",
                                L: "DD/MM/YYYY",
                                LL: "D MMMM YYYY",
                                LLL: "D MMMM YYYY HH:mm",
                                LLLL: "dddd, D MMMM YYYY HH:mm"
                            },
                            calendar: {
                                sameDay: "[Today at] LT",
                                nextDay: "[Tomorrow at] LT",
                                nextWeek: "dddd [at] LT",
                                lastDay: "[Yesterday at] LT",
                                lastWeek: "[Last] dddd [at] LT",
                                sameElse: "L"
                            },
                            relativeTime: {
                                future: "in %s",
                                past: "%s ago",
                                s: "a few seconds",
                                m: "a minute",
                                mm: "%d minutes",
                                h: "an hour",
                                hh: "%d hours",
                                d: "a day",
                                dd: "%d days",
                                M: "a month",
                                MM: "%d months",
                                y: "a year",
                                yy: "%d years"
                            },
                            ordinalParse: /\d{1,2}(st|nd|rd|th)/,
                            ordinal: function ordinal(number) {
                                var b = number % 10;
                                return number + (
                                    1 ==~~ (number % 100 / 10)
                                        ? "th"
                                        : 1 === b
                                            ? "st"
                                            : 2 === b
                                                ? "nd"
                                                : 3 === b
                                                    ? "rd"
                                                    : "th"
                                )
                            },
                            week: {
                                dow: 1,
                                doy: 4
                            },
                            meridiemParse: /[ap]\.?m?\.?/i,
                            isPM: function isPM(token) {
                                return "p" === (token + "").toLowerCase()[0]
                            }
                        })
                    })
                },
                function (module, exports, __webpack_require__) {
                    "use strict";
                    var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                        ? function (obj) {
                            return typeof obj
                        }
                        : function (obj) {
                            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype
                                ? "symbol"
                                : typeof obj
                        };
                    (function (global, factory) {
                        factory(
                            "object" === _typeof(exports) && void 0 !== module
                                ? __webpack_require__(48)
                                : global.moment
                        )
                    })(void 0, function (moment) {
                        return moment.defineLocale("ja", {
                            months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
                            monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                            weekdays: "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),
                            weekdaysShort: "日_月_火_水_木_金_土".split("_"),
                            weekdaysMin: "日_月_火_水_木_金_土".split("_"),
                            longDateFormat: {
                                LT: "HH:mm",
                                LTS: "HH:mm:ss",
                                L: "YYYY/MM/DD",
                                LL: "YYYY年M月D日",
                                LLL: "YYYY年M月D日 HH:mm",
                                LLLL: "YYYY年M月D日 dddd HH:mm",
                                l: "YYYY/MM/DD",
                                ll: "YYYY年M月D日",
                                lll: "YYYY年M月D日 HH:mm",
                                llll: "YYYY年M月D日(ddd) HH:mm"
                            },
                            meridiemParse: /午前|午後/i,
                            isPM: function isPM(input) {
                                return "午後" === input
                            },
                            meridiem: function meridiem(hour, minute, isLower) {
                                return hour < 12
                                    ? "午前"
                                    : "午後"
                            },
                            calendar: {
                                sameDay: "[今日] LT",
                                nextDay: "[明日] LT",
                                nextWeek: function nextWeek(now) {
                                    return now.week() < this.week()
                                        ? "[来週]dddd LT"
                                        : "dddd LT"
                                },
                                lastDay: "[昨日] LT",
                                lastWeek: function lastWeek(now) {
                                    return this.week() < now.week()
                                        ? "[先週]dddd LT"
                                        : "dddd LT"
                                },
                                sameElse: "L"
                            },
                            dayOfMonthOrdinalParse: /\d{1,2}日/,
                            ordinal: function ordinal(number, period) {
                                switch (period) {
                                    case "d":
                                    case "D":
                                    case "DDD":
                                        return number + "日";
                                    default:
                                        return number
                                }
                            },
                            relativeTime: {
                                future: "%s後",
                                past: "%s前",
                                s: "数秒",
                                ss: "%d秒",
                                m: "1分",
                                mm: "%d分",
                                h: "1時間",
                                hh: "%d時間",
                                d: "1日",
                                dd: "%d日",
                                M: "1ヶ月",
                                MM: "%dヶ月",
                                y: "1年",
                                yy: "%d年"
                            }
                        })
                    })
                },
                function (module, __webpack_exports__, __webpack_require__) {
                    "use strict";
                    Object.defineProperty(__webpack_exports__, "__esModule", {
                        value: !0
                    }),
                    function (process) {
                        function register(swUrl) {
                            var isLocalhost = Boolean(
                                "localhost" === window.location.hostname || "[::1]" === window.location.hostname || window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/) || window.location.hostname.match(/^local-.*/)
                            );
                            if ("serviceWorker" in navigator) {
                                if (new URL(process.env.PUBLIC_URL, window.location.toString()).origin !== window.location.origin) 
                                    return;
                                window.addEventListener("load", function () {
                                    isLocalhost
                                        ? checkValidServiceWorker(swUrl)
                                        : registerValidSW(swUrl)
                                })
                            }
                        }
                        function registerValidSW(swUrl) {
                            navigator
                                .serviceWorker
                                .register(swUrl, {scope: "/"})
                                .then(function (registration) {
                                    window.swRegistration = registration,
                                    registration.onupdatefound = function () {
                                        var installingWorker = registration.installing;
                                        installingWorker && (installingWorker.onstatechange = function () {
                                            "installed" === installingWorker.state && (
                                                navigator.serviceWorker.controller
                                                    ? console.log("New content is available please refresh.")
                                                    : console.log("Content is cached for offline use.")
                                            )
                                        })
                                    }
                                })
                                .catch(function (error) {
                                    console.error("Error during service worker registration:", error)
                                })
                            }
                        function checkValidServiceWorker(swUrl) {
                            fetch(swUrl)
                                .then(function (response) {
                                    404 === response.status || -1 === response
                                        .headers
                                        .get("content-type")
                                        .indexOf("javascript")
                                            ? navigator
                                                .serviceWorker
                                                .ready
                                                .then(function (registration) {
                                                    registration
                                                        .unregister()
                                                        .then(function () {
                                                            window
                                                                .location
                                                                .reload()
                                                        })
                                                })
                                            : registerValidSW(swUrl)
                                })
                                .catch(function () {
                                    console.log("No internet connection found. App is running in offline mode.")
                                })
                            }
                        function unregister() {
                            "serviceWorker" in navigator && navigator
                                .serviceWorker
                                .ready
                                .then(function (registration) {
                                    registration.unregister()
                                })
                        }
                        __webpack_exports__.default = register,
                        __webpack_exports__.unregister = unregister
                    }.call(__webpack_exports__, __webpack_require__(170))
                }
            ],
            [614]
        );
        //# sourceMappingURL=vendor.588e845eb5873878b51b.js.ma
        
//# sourceMappingURL=vendor.588e845eb5873878b51b.js.ma